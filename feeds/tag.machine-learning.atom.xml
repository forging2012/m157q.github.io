<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Just for noting</title><link href="https://blog.m157q.tw/" rel="alternate"></link><link href="https://blog.m157q.tw/feeds/tag.machine-learning.atom.xml" rel="self"></link><id>https://blog.m157q.tw/</id><updated>2017-10-17T20:20:09+08:00</updated><entry><title>台灣資料科學年會之系列活動：深入淺出深度學習 (Dive into Deep Learning)</title><link href="https://blog.m157q.tw/posts/2017/08/12/dive-into-deep-learning-datasci-tw/" rel="alternate"></link><published>2017-08-12T17:02:14+08:00</published><updated>2017-08-12T17:02:14+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-08-12:posts/2017/08/12/dive-into-deep-learning-datasci-tw/</id><summary type="html">&lt;ul&gt;
&lt;li&gt;Links  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://foundation.datasci.tw/dive-deep-learning-170812/"&gt;http://foundation.datasci.tw/dive-deep-learning-170812/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://dsc.kktix.cc/events/series-events-081213"&gt;https://dsc.kktix.cc/events/series-events-081213&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Slides  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/0B9cCeTKOkfWIVF9CeXpXaC1lUVk/view?usp=sharing"&gt;DiveDL_0326_v1.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Regression&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;適用場景  &lt;ul&gt;
&lt;li&gt;股票預測  &lt;/li&gt;
&lt;li&gt;無人車方向調整  &lt;/li&gt;
&lt;li&gt;推薦系統  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;步驟  &lt;ul&gt;
&lt;li&gt;決定 Model  &lt;/li&gt;
&lt;li&gt;評估所使用的函數夠不夠好  &lt;ul&gt;
&lt;li&gt;Loss Funciton  &lt;ul&gt;
&lt;li&gt;output 分數低，代表 loss 少，所以比較好。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;找出表現最好的 Loss Function  &lt;ul&gt;
&lt;li&gt;利用 Gradient Descent 來找  &lt;ul&gt;
&lt;li&gt;縱軸為 L 的 output，橫軸為 w  &lt;/li&gt;
&lt;li&gt;L 對 w 偏微分，取得其切線斜率  &lt;/li&gt;
&lt;li&gt;切線斜率為負時，增加 w，來取得較低的 L output  &lt;/li&gt;
&lt;li&gt;切線斜率為正時，減少 w，來取得較低的 L output  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非 Linear 的話，會出現 Local optimal 和 Global optimal 的狀況  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;得到 Model  &lt;/li&gt;
&lt;li&gt;Model Generalization  &lt;ul&gt;
&lt;li&gt;嘗試不同的 Model  &lt;/li&gt;
&lt;li&gt;太過複雜的 Model 會出現 Overfitting 的狀況  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Classification&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;分類  &lt;ul&gt;
&lt;li&gt;Binary Classification  &lt;ul&gt;
&lt;li&gt;Yes/No  &lt;/li&gt;
&lt;li&gt;Example  &lt;ul&gt;
&lt;li&gt;Spam Filtering  &lt;ul&gt;
&lt;li&gt;把 email 裡面的詞都當作一個 feature，透過 trained model 來得到 Boolean 的結果。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Multi-Class Classification  &lt;ul&gt;
&lt;li&gt;判斷是哪個種類  &lt;/li&gt;
&lt;li&gt;Example  &lt;ul&gt;
&lt;li&gt;餵入圖片，判斷是哪種動物  &lt;/li&gt;
&lt;li&gt;判斷新聞是屬於哪一種主題  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;Introduction to ML &amp;amp; DL&lt;/h1&gt;
&lt;h2&gt;Basic Deep Learning&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stacked function learned by machine  &lt;/li&gt;
&lt;li&gt;Deep Learning 三步驟  &lt;ul&gt;
&lt;li&gt;Define a set of function  &lt;/li&gt;
&lt;li&gt;Godness of function  &lt;/li&gt;
&lt;li&gt;pick the best function  &lt;/li&gt;
&lt;li&gt;(和 ML 很像）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Step 1: Define a set of function&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Neural Network  &lt;ul&gt;
&lt;li&gt;Neuron: input, weights, bias, Activation function  &lt;/li&gt;
&lt;li&gt;將多個 Neuron 組合在一起，形成 Neuron Network  &lt;/li&gt;
&lt;li&gt;愈多層的話需要調整的參數越多  &lt;/li&gt;
&lt;li&gt;不同的 Connections 可以形成不同的 Neural Network  &lt;ul&gt;
&lt;li&gt;Fully-Connected Feedforward Network  &lt;ul&gt;
&lt;li&gt;每一個 Neuron 都跟前一個相連，會一直把數值傳下去。  &lt;/li&gt;
&lt;li&gt;Input Layer + Hidden Layers + Output Layer  &lt;/li&gt;
&lt;li&gt;"Deep" means multiple hidden layers  &lt;ul&gt;
&lt;li&gt;DNN 的 hidden layers 至少要大於 2  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Why Deep?  &lt;ul&gt;
&lt;li&gt;Fat + Shallow vs Thin + Deep  &lt;ul&gt;
&lt;li&gt;在數學上被證明是可以用一層很寬的 layer 來取代多層的 layers，但為什麼不用？  &lt;/li&gt;
&lt;li&gt;因為只用一層的話會需要使用到更多的 Neurons。（可以用類似 Logic Gates 簡化的方式來想）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Examples  &lt;ul&gt;
&lt;li&gt;AlexNet (2012): 8 layers, 16.4%  &lt;/li&gt;
&lt;li&gt;VGG (2014): 19 layers, 7.3%  &lt;/li&gt;
&lt;li&gt;GoogleNet (2014): 22 layers, 6.7%  &lt;/li&gt;
&lt;li&gt;Residual Net (2015): 152 layers, 3.57%  &lt;ul&gt;
&lt;li&gt;人類自己把所有的 training data 看完後下去做測試，error rate 大概是 4~5%  &lt;/li&gt;
&lt;li&gt;首度超越人類  &lt;/li&gt;
&lt;li&gt;因為疊了很多層，所以可能有些資訊會在傳遞中遺失，所以使用了 Special structure，會把一些一開始就學到的很重要 information 直接保留下來，確保不會在傳遞過程中遺失。  &lt;/li&gt;
&lt;li&gt;使用 Softmax layer 來當 Output layer  &lt;ul&gt;
&lt;li&gt;可以對 output 的數值做 normalize，直接以機率的方式呈現結果。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example  &lt;ul&gt;
&lt;li&gt;Handwriting Digit Recognition  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Input =&amp;gt; Neuron Network =&amp;gt; Output  &lt;/li&gt;
&lt;li&gt;Neuron Network =&amp;gt; A function set containing the candidates  &lt;/li&gt;
&lt;li&gt;FAQ  &lt;ul&gt;
&lt;li&gt;要用幾層？每層要用多少 Neuron？  &lt;ul&gt;
&lt;li&gt;試誤 + 直覺  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;我們可以自己設計 neuron network structure 嗎？  &lt;ul&gt;
&lt;li&gt;有很多不同的結構可以選擇  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有辦法讓程式自動幫我們決定要使用哪種 structure  &lt;ul&gt;
&lt;li&gt;有，但還沒有被研究的非常透徹。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Step 2: goodness of function&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Loss  &lt;ul&gt;
&lt;li&gt;A good function should make the loss of all examples as small as possible.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Total Loss  &lt;ul&gt;
&lt;li&gt;As small as possible  &lt;/li&gt;
&lt;li&gt;Find a function in function set that minimizes total loss  &lt;/li&gt;
&lt;li&gt;Find the network parameter &lt;code&gt;θ*&lt;/code&gt; that minimize total loss  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Step 3: pick the best function&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Gradient Descent  &lt;ul&gt;
&lt;li&gt;Local minima  &lt;ul&gt;
&lt;li&gt;Very slow at the plateau  &lt;/li&gt;
&lt;li&gt;Stuck at saddle point  &lt;/li&gt;
&lt;li&gt;Stuck at local minima  &lt;/li&gt;
&lt;li&gt;Gradient descent never guarantee global minima  &lt;ul&gt;
&lt;li&gt;Use different &amp;amp; random initial point to reach different minima  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Even AlphaGo using this approach  &lt;ul&gt;
&lt;li&gt;其實 AI 並沒有那麼厲害，他們也是像探索戰爭迷霧那樣，一步一步去探索和嘗試的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Deep Learning Toolkit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Backpropagation  &lt;ul&gt;
&lt;li&gt;An efficient way to compute &lt;code&gt;∂L/∂w&lt;/code&gt; in neural network  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frameworks  &lt;ul&gt;
&lt;li&gt;TensorFlow  &lt;ul&gt;
&lt;li&gt;比較多人在用且資料比較多  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Torch  &lt;/li&gt;
&lt;li&gt;Pytorch  &lt;ul&gt;
&lt;li&gt;比較多人在用且資料比較多  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Theano  &lt;ul&gt;
&lt;li&gt;AlexNet 的作者  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Microsoft CNTK  &lt;/li&gt;
&lt;li&gt;Caffe  &lt;/li&gt;
&lt;li&gt;DSSTNE  &lt;/li&gt;
&lt;li&gt;mxnet  &lt;/li&gt;
&lt;li&gt;Chainer  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有 input 和 output，就可以使用這些工具幫你找尋合適的 Function Set  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Keras&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;TensorFlow 和 Theano 的 Wrapper  &lt;/li&gt;
&lt;li&gt;非常容易寫  &lt;/li&gt;
&lt;li&gt;雖然可以細部調整的地方沒有直接使用 TensorFlow 和 Theano 來的多，但有足夠的彈性做一些調整。  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Learning Recipe&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在 Training Data 上的表現好嗎？  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不好  &lt;ul&gt;
&lt;li&gt;重新 train  &lt;/li&gt;
&lt;li&gt;可能原因  &lt;ul&gt;
&lt;li&gt;no good function exists: bad hypothesis function set =&amp;gt; reconstruct the model architecture  &lt;/li&gt;
&lt;li&gt;cannot find a good function: local optima =&amp;gt; change the training strategy  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Testing Data 上的表現好嗎？  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不好的話就是 Overfitting，要重新 train model  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Overfitting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;High variance  &lt;/li&gt;
&lt;li&gt;可能的解法  &lt;ul&gt;
&lt;li&gt;more training samples  &lt;/li&gt;
&lt;li&gt;dropout  &lt;ul&gt;
&lt;li&gt;每次 random 讓數個 node 不工作  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;降維  &lt;ul&gt;
&lt;li&gt;PCA  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Concluding Remarks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;3 steps of Basic Machine Learning 很重要  &lt;/li&gt;
&lt;li&gt;Stacked functions  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;Part II: Variants of Neural Nets&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Convolutional Neural Network (CNN)  &lt;/li&gt;
&lt;li&gt;Recurrent Neural Network (RNN)  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Convolutional Neural Network (CNN)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;在影像處理上被廣泛使用  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Why CNN for Image?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Some patterns are much smaller than the whole image.  &lt;ul&gt;
&lt;li&gt;A neuron does not have to see the whole image to discover pattern.  &lt;/li&gt;
&lt;li&gt;Connecting to small region with less parameters.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The same patterns appear in different regions.  &lt;/li&gt;
&lt;li&gt;Subsampling the pixels will not change the object.  &lt;ul&gt;
&lt;li&gt;算是處理 image 上獨有的特性  &lt;/li&gt;
&lt;li&gt;We can subsmaple the pixel to make image smaller  &lt;ul&gt;
&lt;li&gt;Less parameters for the network to process the image  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The Whole CNN&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Image =&amp;gt; &lt;code&gt;{Convolution =&amp;gt; Max Pooling}*N&lt;/code&gt; =&amp;gt; Flatten =&amp;gt; Fully Connected Feedforward Network  &lt;/li&gt;
&lt;li&gt;特性  &lt;ul&gt;
&lt;li&gt;和 Convolution 有關  &lt;ul&gt;
&lt;li&gt;Some patterns are much smaller than the whole image.  &lt;/li&gt;
&lt;li&gt;The same patterns appear in different regions.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;和 Max Pooling 有關  &lt;ul&gt;
&lt;li&gt;Subsampling the pixels will not change the object  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Image Recognition&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Local Connectivity  &lt;ul&gt;
&lt;li&gt;Neurons connected to a small region  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Parameter Sharing  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The same feature in different positions  &lt;ul&gt;
&lt;li&gt;Neurons share the same weights  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Different features in the same position  &lt;ul&gt;
&lt;li&gt;Neurons have different weights  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Convolutional Layers  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Hyper-parameters of CNN  &lt;ul&gt;
&lt;li&gt;Stride  &lt;ul&gt;
&lt;li&gt;要隔多少去算下一個 information  &lt;/li&gt;
&lt;li&gt;如果覺得這張圖上的 information 是非常鬆散的，那 stride 就可以設高一點，讓他多隔幾層再去找 pattern  &lt;/li&gt;
&lt;li&gt;如果覺得這張圖上的 information 是非常緊密的，那 stride 就只能設低一點。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Padding  &lt;ul&gt;
&lt;li&gt;讓每一層的數值不要減少的太快  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pooling Layer  &lt;ul&gt;
&lt;li&gt;Max Pooling  &lt;ul&gt;
&lt;li&gt;把最大的值保存下來  &lt;/li&gt;
&lt;li&gt;Image processing 比較常使用 Max Pooling  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Average Pooling  &lt;ul&gt;
&lt;li&gt;把平均的數值保存下來  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;壓縮資訊，減少下一層需要參數的量，使其更有效率。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Why Deep Learing works for image recogniton?  &lt;ul&gt;
&lt;li&gt;每個 node 會學習一些簡單的筆劃，組合起來後才會變成一個字。  &lt;/li&gt;
&lt;li&gt;愈前面的結果會愈簡單和基本，可能只是些筆劃，經過 Convolution 和 Max Pooling 後，可以用被壓縮後的較少資訊學習比較抽象的組合。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fully-Connected Layer  &lt;ul&gt;
&lt;li&gt;Global feature extraction  &lt;/li&gt;
&lt;li&gt;Softmax Layer: Classifier  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What CNN Learned  &lt;ul&gt;
&lt;li&gt;[AlexNet]  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DNN are easily fooled  &lt;ul&gt;
&lt;li&gt;可以捏造一些奇怪的 input，看起來只是一些 noise，因為 DNN 會特別著重某些 pattern，所以會將這些圖誤判為目標物。  &lt;/li&gt;
&lt;li&gt;滿多資安的論文現在在探討攻擊 DNN 的手法。  &lt;/li&gt;
&lt;li&gt;Visualizing CNN  &lt;ul&gt;
&lt;li&gt;調整 noise 的 input，使其 filter response 更接近目標物的 filter response，有點像是反過來的 training  &lt;/li&gt;
&lt;li&gt;透過 Gradient Ascent 去微調  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://deepdreamgenerator.com/"&gt;https://deepdreamgenerator.com/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Deep Style  &lt;ul&gt;
&lt;li&gt;一張圖保留 Content  &lt;/li&gt;
&lt;li&gt;另一張圖保留 Style  &lt;/li&gt;
&lt;li&gt;然後去調整保留 Content 的那張圖，並使用另一張圖的 Style  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Go Playing （下圍棋）  &lt;ul&gt;
&lt;li&gt;Conditions  &lt;ul&gt;
&lt;li&gt;Input: 目前棋盤的狀況  &lt;/li&gt;
&lt;li&gt;Output: 下一步應該下哪裡？  &lt;/li&gt;
&lt;li&gt;19x19 vector  &lt;/li&gt;
&lt;li&gt;black = 1, white = -1, none = 0  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fully-Connected Feedforward Network could be used, but why CNN?  &lt;ul&gt;
&lt;li&gt;Some patterns are much smaller than the whole image  &lt;ul&gt;
&lt;li&gt;棋譜會有一些固定的 pattern  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The same patterns appear in different regions  &lt;ul&gt;
&lt;li&gt;同樣的 pattern 有可能出現在棋盤上不同的地方  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Subsampling the pixels will not change the object  &lt;ul&gt;
&lt;li&gt;把棋譜作 subsampling 會讓整個棋譜的結果失真  &lt;/li&gt;
&lt;li&gt;因為 Subsampling 只和 Max Pooling Layer 有關，所以在 AlphaGo 的論文中有提到只有使用 Convolutional Layer，把 Max Pooling Layer 拿掉了。  &lt;/li&gt;
&lt;li&gt;如果不是很熟悉下圍棋以及 DNN 的 domain knowledge 的話，直接拿 CNN 去做是訓練不出什麼結果的，這也是為什麼 Alpha Go 會需要像黃士傑博士這樣會下圍棋又懂 Machine Learning 的人。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Recurrent Neural Network (RNN)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Example Application  &lt;ul&gt;
&lt;li&gt;Slot Filling  &lt;ul&gt;
&lt;li&gt;Solved by Feedforward Network?  &lt;ul&gt;
&lt;li&gt;Input: a word  &lt;/li&gt;
&lt;li&gt;Output: probability distribution that the input word belonging to the slots  &lt;/li&gt;
&lt;li&gt;Problem  &lt;ul&gt;
&lt;li&gt;Arrive Taipei on November 2nd  &lt;ul&gt;
&lt;li&gt;Taipei 是目的地  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Leave Taipei on November 2nd  &lt;ul&gt;
&lt;li&gt;Taipei 是出發地  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用 RNN 來解決  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;One-Hot Vector  &lt;ul&gt;
&lt;li&gt;1-of-N Encoding  &lt;/li&gt;
&lt;li&gt;有 N 個詞就用 N 維的矩陣來表示，如果該字有出現的話值就是 1，其他值就會是 0。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RNN  &lt;ul&gt;
&lt;li&gt;The output of hidden layer are stored in the memory  &lt;/li&gt;
&lt;li&gt;Memory can be considered as another input  &lt;/li&gt;
&lt;li&gt;每一層都是拿現在看到的資訊和上一層的 memory 當成 input  &lt;/li&gt;
&lt;li&gt;不會因為層數比較多（語句比較長）就導致參數變多，參數的數量都是一樣的。  &lt;/li&gt;
&lt;li&gt;存在 memory 的 value 會影響最終的 prediction  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deep RNN: 多層  &lt;/li&gt;
&lt;li&gt;Why use RNN in language processing?  &lt;ul&gt;
&lt;li&gt;因為語言是有時間順序的  &lt;/li&gt;
&lt;li&gt;如果 input 是時間順序非常重要的話，就可以考慮用 RNN 來做。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bidirectional RNN  &lt;ul&gt;
&lt;li&gt;將 input 反向來作並加入 memory  &lt;/li&gt;
&lt;li&gt;缺點是會比較費時  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Learning Target  &lt;ul&gt;
&lt;li&gt;會比較複雜一些  &lt;/li&gt;
&lt;li&gt;一句話有五個詞，訓練一句話等於要拿到 5 個 targets  &lt;ul&gt;
&lt;li&gt;因為要判斷每個詞的 label  &lt;/li&gt;
&lt;li&gt;因為彼此是有順序相依性的，所以 loss 會是每層 layer 相加  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Training Difficulty - Rough Error Surface  &lt;ul&gt;
&lt;li&gt;The error surface is either very flat or very steep  &lt;ul&gt;
&lt;li&gt;非常難學習  &lt;/li&gt;
&lt;li&gt;所以會有一些各式各樣的小技巧出現在 RNN 裏面  &lt;ul&gt;
&lt;li&gt;Clipping  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Large &lt;code&gt;δL/δw&lt;/code&gt; =&amp;gt; Large Learning rate  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Many-to-One  &lt;ul&gt;
&lt;li&gt;Input is a vector sequence, but output is only one vector  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Many-to-Many (Output is shorter)  &lt;ul&gt;
&lt;li&gt;Both input and output are sequences, but the output is shorter  &lt;/li&gt;
&lt;li&gt;E.g. Speech Recognition  &lt;ul&gt;
&lt;li&gt;Input: vector sequence  &lt;/li&gt;
&lt;li&gt;Output: character sequence  &lt;/li&gt;
&lt;li&gt;Connectionist Temporal Classification (CTC)  &lt;ul&gt;
&lt;li&gt;加了一個額外的 symble &lt;code&gt;ϕ&lt;/code&gt; 來代表 Null  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;好好好棒棒棒棒&lt;/code&gt; vs &lt;code&gt;好ϕϕ棒ϕϕ棒&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;這樣就可以知道到底是一個棒還是兩個棒  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Many-to-Many (Output is no limitation)  &lt;ul&gt;
&lt;li&gt;Both input and output are sequences with different lengths  &lt;ul&gt;
&lt;li&gt;Sequence to sequence learning  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;E.g. Machine Translation  &lt;ul&gt;
&lt;li&gt;"Machine Learning" =&amp;gt; "機器學習"  &lt;/li&gt;
&lt;li&gt;Problem: Don't know when to stop  &lt;ul&gt;
&lt;li&gt;加上一個代表斷句或結尾的符號  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Image Caption Generation  &lt;ul&gt;
&lt;li&gt;給一張圖，描述出圖裏面有什麼  &lt;/li&gt;
&lt;li&gt;將圖餵給 CNN 後，會產出一個代表整章圖的 vector  &lt;/li&gt;
&lt;li&gt;將 vector 餵給 RNN  &lt;/li&gt;
&lt;li&gt;Example  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.captionbot.ai/"&gt;http://www.captionbot.ai/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Video Caption Generation  &lt;ul&gt;
&lt;li&gt;每一個 Video 用 CNN  &lt;/li&gt;
&lt;li&gt;Video 裡面的每一張 Image 用 RNN  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chit-Chat Bot  &lt;ul&gt;
&lt;li&gt;拿對話中其中一方的話當 input，另一方的話當 output 去訓練。  &lt;/li&gt;
&lt;li&gt;比較常用到 &lt;a href="https://en.wikipedia.org/wiki/Long_short-term_memory"&gt;LSTM&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://colah.github.io/posts/2015-08-Understanding-LSTMs/"&gt;http://colah.github.io/posts/2015-08-Understanding-LSTMs/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sci-Fi Short Film generated by AI - SUNSPRING  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LY7x2lhqj"&gt;https://www.youtube.com/watch?v=LY7x2lhqj&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Attention and Memory  &lt;ul&gt;
&lt;li&gt;Question =&amp;gt; Organize =&amp;gt; Answer  &lt;ul&gt;
&lt;li&gt;被稱做 Attention  &lt;/li&gt;
&lt;li&gt;只會拿有用的資訊出來回答  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Attention on Sensory Info  &lt;ul&gt;
&lt;li&gt;Info from the sensors =&amp;gt; Sensory Memory == Attention ==&amp;gt; Working Memeory == Encode ==&amp;gt; Long-term Memory  &lt;/li&gt;
&lt;li&gt;Logn-term Memory == Retrieval ==&amp;gt; Working Memory  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Machine Translation with Attention  &lt;ul&gt;
&lt;li&gt;Keyword: "Attentional sequence to sequence model"  &lt;/li&gt;
&lt;li&gt;先用 match 判斷跟哪一塊的相似程度最高  &lt;/li&gt;
&lt;li&gt;目前 Google Translation 就是用這個 model 實現的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Speech Recognition with Attention  &lt;ul&gt;
&lt;li&gt;比較深色的地方就是 Attention 比較高的部份  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Image Captioning with Attention  &lt;ul&gt;
&lt;li&gt;從錯誤的 prediction 中去瞭解判斷錯誤的可能原因  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Video Captioning with Attention  &lt;/li&gt;
&lt;li&gt;Reading Comprehension  &lt;ul&gt;
&lt;li&gt;Document =&amp;gt; 被切分成不同的詞被當作 feature  &lt;/li&gt;
&lt;li&gt;Question == RNN ==&amp;gt; q vector  &lt;/li&gt;
&lt;li&gt;根據 q vector 去決定哪一個句子最相關，再放入 DNN 裡頭去回答  &lt;/li&gt;
&lt;li&gt;Hopping  &lt;ul&gt;
&lt;li&gt;Memory Network  &lt;ul&gt;
&lt;li&gt;有可能第一次得到的結果不夠準確  &lt;/li&gt;
&lt;li&gt;用抽取出來資訊再做一次 Attention，再得到新的 information 並把它抽取出來。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;When the input is a very long sequence or an image  &lt;ul&gt;
&lt;li&gt;Pay attention on partial of the input object each time  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;In RNN/LSTM, larger memory implies more parameters  &lt;ul&gt;
&lt;li&gt;Increasing memory size will not increasing parameters  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Neural Turing Machine  &lt;ul&gt;
&lt;li&gt;an advanced RNN/LSTM  &lt;/li&gt;
&lt;li&gt;把 Long-term Memory 裡頭的資訊 retrieve 出來  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;Part III: Beyond Supervised Learning &amp;amp; Recent Trends (Unsupervised Learning)&lt;/h1&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Big data != Big annotated data  &lt;ul&gt;
&lt;li&gt;What can we do if there is no sufficient labelled training data?  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Machine learning techniques include:  &lt;ul&gt;
&lt;li&gt;Supervised learning (if we have labelled data)  &lt;/li&gt;
&lt;li&gt;Reinforcement learning (if we have an environment for reward)  &lt;/li&gt;
&lt;li&gt;Unsupervised learning (if we do not have labelled data)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Semi-Supervised Learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;應用環境  &lt;ul&gt;
&lt;li&gt;沒有全部的 input data 都有 label 時  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;概念  &lt;ul&gt;
&lt;li&gt;The distribution of the unlabeled data provides some cues  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Transfer Learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;應用環境  &lt;ul&gt;
&lt;li&gt;Input data 中沒有 output 想要的 class label  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;概念  &lt;ul&gt;
&lt;li&gt;Using sufficient labeled data to learn a CNN  &lt;/li&gt;
&lt;li&gt;Using this CNN as feature extractor  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;舉例  &lt;ul&gt;
&lt;li&gt;研究生 vs 漫畫家  &lt;ul&gt;
&lt;li&gt;研究生 == 漫畫家  &lt;/li&gt;
&lt;li&gt;指導教授 == 責任編輯  &lt;/li&gt;
&lt;li&gt;跑實驗 == 畫分鏡  &lt;/li&gt;
&lt;li&gt;投稿期刊 == 投稿 Jump  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Unsupervised Learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;概念  &lt;ul&gt;
&lt;li&gt;Representation Learning: 化繁為簡  &lt;/li&gt;
&lt;li&gt;Generative Model: 無中生有  &lt;/li&gt;
&lt;li&gt;化繁為簡和無中生有的過程是相反的  &lt;ul&gt;
&lt;li&gt;化繁為簡：拿到很多跟樹有關的圖片，簡化得出一個代表樹的 output，學習到的是這些圖片共同的特徵  &lt;/li&gt;
&lt;li&gt;無中生有：code 經過 function 之後就生成很多跟樹很像的圖片  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Latent Factors  &lt;ul&gt;
&lt;li&gt;共同特徵  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;化繁為簡 Representation Learning  &lt;ul&gt;
&lt;li&gt;Autoencoder  &lt;ul&gt;
&lt;li&gt;希望能把比較重要的資訊壓縮到比較小的 pattern 裏面  &lt;/li&gt;
&lt;li&gt;represent the images of digits in a more compact way  &lt;/li&gt;
&lt;li&gt;Output of the hidden layer is the code  &lt;/li&gt;
&lt;li&gt;Deep autoencoder  &lt;/li&gt;
&lt;li&gt;Similar Image Retrieval  &lt;/li&gt;
&lt;li&gt;可以把 image 最重要的 feature 保留起來  &lt;/li&gt;
&lt;li&gt;For DNN Pre-Training  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Word Vector/Embedding  &lt;ul&gt;
&lt;li&gt;Machine learn the meaning of words from reading a lot of documents without supervision  &lt;/li&gt;
&lt;li&gt;A word can be understood by its context  &lt;/li&gt;
&lt;li&gt;類似的句型中，同樣位置的不相同詞可能有高度相關性  &lt;/li&gt;
&lt;li&gt;Prediction-Based  &lt;ul&gt;
&lt;li&gt;給前面的字 predict 下一個字 (Linear Model)  &lt;ul&gt;
&lt;li&gt;前面的字當 input，後面的字當 output，一直這樣接下去。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Various Architecture  &lt;ul&gt;
&lt;li&gt;Continuous bag of word (CBOW) model  &lt;ul&gt;
&lt;li&gt;給兩邊的字 predict 中間的字  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Skip-gram  &lt;ul&gt;
&lt;li&gt;給中間的字 predict 兩邊的字  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;完全不需要 label data，程式可以自己去學習這些詞之間的關係  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;無中生有 Generative model  &lt;ul&gt;
&lt;li&gt;概念  &lt;ul&gt;
&lt;li&gt;想讓程式自動幫我們生不同的 training data  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.openai.com/generative-models/"&gt;https://blog.openai.com/generative-models/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PixelRNN  &lt;ul&gt;
&lt;li&gt;To create an image, generating a pixel each time  &lt;/li&gt;
&lt;li&gt;Can be trained just with a large collection of images without any annotation  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Generative Adversarial Network (GAN)  &lt;ul&gt;
&lt;li&gt;Discriminative vs Generative Models  &lt;ul&gt;
&lt;li&gt;Discriminative  &lt;ul&gt;
&lt;li&gt;learns a function that maps the input data (x) to some desired output class label (y)  &lt;ul&gt;
&lt;li&gt;directly learn the conditional distribution P(y|x)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Generative  &lt;ul&gt;
&lt;li&gt;tries to learn the joint probability of the input data and labels simultaneously, i.e. P(x,y)  &lt;ul&gt;
&lt;li&gt;can be converted to P(y|x) for classification via Bayes rule  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;generative models have the potential to understand and explain&lt;br /&gt;
the underlying structure of the input data even when there are no labels  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;跟演化的感覺有點類似  &lt;ul&gt;
&lt;li&gt;Generator  &lt;ul&gt;
&lt;li&gt;Hidden Layer (code) ===decode===&amp;gt; output layer =&amp;gt; output  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;概念  &lt;ul&gt;
&lt;li&gt;Two competing neural networks: generator &amp;amp; discriminator  &lt;/li&gt;
&lt;li&gt;noise ==generator==&amp;gt; generator sample =&amp;gt; discriminator ==yes/no==&amp;gt; data sample  &lt;/li&gt;
&lt;li&gt;generator 生出圖片，discriminator 判斷這張產生出來的圖片是不是真的  &lt;/li&gt;
&lt;li&gt;彼此之間會互相競爭學習  &lt;/li&gt;
&lt;li&gt;Training two networks jointly =&amp;gt; the generator knows how to adapt its parameters in order to produce output data that can fool the discriminator  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Examples  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://openai.com/blog/generative-models"&gt;Cifar-10&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Generated Bedrooms  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattya/chainer-DCGAN"&gt;Comics Drawing&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Pokémon Creation  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Reinforcement Learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;概念  &lt;ul&gt;
&lt;li&gt;Agent, Environment 之間彼此是可以互動的  &lt;/li&gt;
&lt;li&gt;Environment 會給 Agent 一個 Observation  &lt;/li&gt;
&lt;li&gt;Agent 會對這個 Observation 做出 Action  &lt;/li&gt;
&lt;li&gt;Environment 會根據 Action 的不同給予 Agent 不同的 Reward  &lt;/li&gt;
&lt;li&gt;根據 Reward 來學習要做或不做哪些行為  &lt;/li&gt;
&lt;li&gt;Agent learns to take actions to maximize expected reward.  &lt;/li&gt;
&lt;li&gt;困難點  &lt;ul&gt;
&lt;li&gt;可能的 sequence 是非常龐大的  &lt;/li&gt;
&lt;li&gt;很難調整，因為只拿得到一連串的 Actions 之後的 Reward，無法確定到底是錯在哪一個 Action  &lt;/li&gt;
&lt;li&gt;Reward may be delayed  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Supervised vs Reinforcement  &lt;ul&gt;
&lt;li&gt;Supervised  &lt;ul&gt;
&lt;li&gt;就像在學校裏面，每一步都有老師會帶領你，告訴你每一步是對是錯  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Reinforcement  &lt;ul&gt;
&lt;li&gt;做了一連串的動作以後，到一個正面或負面的回饋，不確定到底問題出錯在哪一個地方。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;範例  &lt;ul&gt;
&lt;li&gt;走迷宮  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Reinforcement Learning Approach  &lt;ul&gt;
&lt;li&gt;Policy-based RL  &lt;ul&gt;
&lt;li&gt;Search directly for optimal policy  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Value-based RL  &lt;ul&gt;
&lt;li&gt;Estimate the optimal value function  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Model-based RL  &lt;ul&gt;
&lt;li&gt;Build a model of the environment  &lt;/li&gt;
&lt;li&gt;Plan (e.g. by lookahead) using model  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deep Reinforcement Learning  &lt;ul&gt;
&lt;li&gt;Idea: deep learning for reinforcement learning  &lt;ul&gt;
&lt;li&gt;Use deep neural networks to represent  &lt;/li&gt;
&lt;li&gt;Optimize loss function by SGD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Value Function Approximation  &lt;/li&gt;
&lt;li&gt;Q-Networks  &lt;ul&gt;
&lt;li&gt;Q-networks represent value functions with weights  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q-Learning  &lt;ul&gt;
&lt;li&gt;Goal: estimate optimal Q-values  &lt;ul&gt;
&lt;li&gt;Optimal Q-values obey a Bellman equation  &lt;/li&gt;
&lt;li&gt;Value iteration algorithms solve the Bellman equation  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deep Q-Networks (DQN)  &lt;/li&gt;
&lt;li&gt;Stability Issues with Deep RL  &lt;ul&gt;
&lt;li&gt;Naive Q-learning oscillates or diverges with neural nets  &lt;ul&gt;
&lt;li&gt;Data is sequential  &lt;ul&gt;
&lt;li&gt;Successive samples are correlated, non-iid (independent and&lt;br /&gt;
identically distributed)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Policy changes rapidly with slight changes to Q-values  &lt;ul&gt;
&lt;li&gt;Policy may oscillate  &lt;/li&gt;
&lt;li&gt;Distribution of data can swing from one extreme to another  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Scale of rewards and Q-values is unknown  &lt;ul&gt;
&lt;li&gt;Naive Q-learning gradients can be unstable when backpropagated  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Stable Solutions for DQN  &lt;ul&gt;
&lt;li&gt;DQN provides a stable solutions to deep value-based RL  &lt;ul&gt;
&lt;li&gt;Use experience replay  &lt;ul&gt;
&lt;li&gt;Break correlations in data, bring us back to iid setting  &lt;/li&gt;
&lt;li&gt;Learn from all past policies  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Freeze target Q-network  &lt;ul&gt;
&lt;li&gt;Avoid oscillation  &lt;/li&gt;
&lt;li&gt;Break correlations between Q-network and target  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clip rewards or normalize network adaptively to sensible range  &lt;ul&gt;
&lt;li&gt;Robust gradients  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DQN in Atari  &lt;ul&gt;
&lt;li&gt;Goal: end-to-end learning of values Q(s, a) from pixels  &lt;ul&gt;
&lt;li&gt;Input: state is stack of raw pixels from last 4 frames  &lt;/li&gt;
&lt;li&gt;Output: Q(s, a) for all joystick/button positions a  &lt;/li&gt;
&lt;li&gt;Reward is the score change for that step  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DQN in E2E Task-Completion Bot  &lt;ul&gt;
&lt;li&gt;Simulated User  &lt;ul&gt;
&lt;li&gt;Generate interactions based on a predefined fake goal  &lt;/li&gt;
&lt;li&gt;Automatically learn strategy by training on the simulated data  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Model-Based Deep RL  &lt;ul&gt;
&lt;li&gt;Goal: learn a transition model of the environment and plan based on the transition model  &lt;/li&gt;
&lt;li&gt;Model-based deep RL is challenging, and so far has failed in Atari  &lt;/li&gt;
&lt;li&gt;Model-Based Deep RL in AlphaGo  &lt;ul&gt;
&lt;li&gt;Monte-Carlo tree search (MCTS)  &lt;ul&gt;
&lt;li&gt;MCTS simulates future trajectories  &lt;/li&gt;
&lt;li&gt;Builds large lookahead search tree with millions of positions  &lt;/li&gt;
&lt;li&gt;State-of-the-art Go programs use MCTS  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Convolutional Networks  &lt;ul&gt;
&lt;li&gt;12-layer CNN trained to predict expert moves  &lt;/li&gt;
&lt;li&gt;Raw CNN (looking at 1 position, no search at all) equals performance of MoGo with 105 position search tree  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;More Applications  &lt;ul&gt;
&lt;li&gt;AlphaGo  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0JL04JJjocc"&gt;Flying Helicoptor&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0xo1Ldx3L5Q"&gt;Driving&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bloomberg.com/news/articles/2016-07-19/google-cuts-its-giant-electricity-bill-with-deepmind-powered-ai"&gt;Google Cuts Its Giant Electricity Bill With DeepMind-Powered AI&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://universe.openai.com/"&gt;OpenAI Universe&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Software platform for measuring and training an AI's general&lt;br /&gt;
intelligence via the &lt;a href="https://gym.openai.com/"&gt;OpenAI gym&lt;/a&gt; environment  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Machine Learning &amp;amp; Deep Learning 需要  &lt;ul&gt;
&lt;li&gt;足夠的運算資源  &lt;/li&gt;
&lt;li&gt;各種經驗及技巧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;FAQ&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Deep Learning 的 model 會是 non-linear 的  &lt;/li&gt;
&lt;li&gt;機器翻譯目前在台灣的狀況如何？要如何著手？  &lt;ul&gt;
&lt;li&gt;機器翻譯的話，目前在國外算是滿成熟的，目前會使用 RNN 來做。  &lt;/li&gt;
&lt;li&gt;如果是台語的部份，目前好像比較少看到，會是個還有發展空間的方向。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;為什麼需要 Activation Function？他在 Deep Learning 中扮演的角色是什麼？  &lt;ul&gt;
&lt;li&gt;處理 non-linear 的部份，如果沒有 Actication Function 的話，多層的結果用一層就可以去表示。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;為什麼會選擇 Sigmoid 作為 Activation Function?  &lt;ul&gt;
&lt;li&gt;其實有很多種 Activation Function，拿 Sigmoid 來講是因為他比較簡單，把 output 壓在 -1~1 之間  &lt;/li&gt;
&lt;li&gt;另外一個比較常見的是 Relu 這個 Activation Function  &lt;ul&gt;
&lt;li&gt;0 以下的就刪除掉  &lt;/li&gt;
&lt;li&gt;避免 information 被壓縮的太小，用來解決經過太多層之後 information 被壓得太小。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deep Learning 的最佳化要具備哪些能力  &lt;ul&gt;
&lt;li&gt;如果是純理論的部份會跟數學方面相關。  &lt;/li&gt;
&lt;li&gt;但如果是實務上的 task，會跟該 task 的 domain knowledge 比較相關。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CNN 對於影像旋轉是否也有夠好的識別度？  &lt;ul&gt;
&lt;li&gt;第一個作法就是把你的 training data 也旋轉過再丟進去訓練  &lt;/li&gt;
&lt;li&gt;另外一個作法是使用會考慮旋轉相關的 model 放進去 train，input data 不需要特別旋轉過  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;學 Machine Learning 需要學習微積分、統計和線性代數嗎？  &lt;ul&gt;
&lt;li&gt;基本的微積分概念是要的，但沒有很複雜，如果完全不會微分的話要學一下。  &lt;/li&gt;
&lt;li&gt;統計的話基本概念要有，但不會太多。&lt;br /&gt;
 線性代數是最重要的，會看到很多 vector, matrix 以及 space 上的處理，有很多假設是必須要知道的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Deep Learning"></category><category term="DNN"></category><category term="CNN"></category><category term="RNN"></category><category term="Machine Learning"></category></entry><entry><title>Y2017W30</title><link href="https://blog.m157q.tw/posts/2017/07/31/y2017w30/" rel="alternate"></link><published>2017-10-17T20:20:09+08:00</published><updated>2017-10-17T20:20:09+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-07-31:posts/2017/07/31/y2017w30/</id><summary type="html">&lt;h3&gt;devops&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/technology-learning/how-we-solved-authentication-and-authorization-in-our-microservice-architecture-994539d1b6e6"&gt;How We Solved Authentication and Authorization in Our Microservice Architecture&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;firefox&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/13158083/take-a-full-page-screenshot-with-firefox"&gt;shell - Take a full page screenshot with Firefox - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;才知道原來 Firefox 內建網頁截圖工具  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/blog/2400-support-file-support"&gt;SUPPORT file support · GitHub&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;繼 CONTRIBUTING 之後，#GitHub 也把 SUPPORT 的部分從 Readme 獨立出來了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;k8s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/thesandlord/kubernetes-best-practices"&gt;Kubernetes Best Practices // Speaker Deck&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/07/linux-network-interface-dn-server-query-status-2017/amp/"&gt;Linux 各網路界面對 DNS Server 查詢的狀態 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;systemd-resolve --status&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mp.weixin.qq.com/s/hMcJtB3Lss1NBalXRTGZlQ"&gt;如何用 Python 从海量文本抽取主题？&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://machinelearning.apple.com/2017/07/07/GAN.html"&gt;Improving the Realism of Synthetic Images - Apple&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Most successful examples of neural nets today are trained with supervision. However, to achieve high accuracy, the training sets need to be large, diverse, and accurately annotated, which is costly. An alternative to labelling huge amounts of data is to use synthetic images from a simulator.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;nosql&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/fehguy/data-modeling-for-nosql"&gt;Data Modeling for NoSQL&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Upcoming SlideShare Loading in …5 × Data Modeling for NoSQL 1. Data Modeling for NoSQL Tony Tam @fehguy 2. Data Modeling? Smart Modeling makesNoSQL work 3.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/Dataversity/nosql-now-nosql-architecture-patterns-23589170?next_slideshow=1"&gt;NoSQL Now! NoSQL Architecture Patterns&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The NoSQL movement has introduced four new database architectural patterns that complement, but not replace, traditional relational and analytical databases. This presentation will introduce these ...  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://softwareengineering.stackexchange.com/questions/158790/best-practices-for-nosql-database-design"&gt;best practices for NoSQL database design - Software Engineering Stack Exchange&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Normalization in RDBMS allows you to leverage the strengths of the relational paradigm.  Denormalization in NoSQL allows you to leverage the strengths of the NoSQL paradigm.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;之前就覺得 SQL 的正規化在 NoSQL 會有問題。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/07/26/%e4%bd%a0%e6%89%80%e4%b8%8d%e7%9f%a5%e9%81%93%e7%9a%84-python-%e6%a8%99%e6%ba%96%e5%87%bd%e5%bc%8f%e5%ba%ab%e7%94%a8%e6%b3%95-01-sys/"&gt;你所不知道的 Python 標準函式庫用法 01 — sys | louie_lu's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Python of the week 不夠看了  &lt;/li&gt;
&lt;li&gt;現在有 Python of the day 而且還是繁體中文版  &lt;/li&gt;
&lt;li&gt;寫得也挺詳細的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/07/security-ios-android-wifi-broadpwn-2017/amp/"&gt;iOS、Android 遇到 Wifi 晶片漏洞 Broadpwn 需盡快更新 - Tsung's Blog&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/CindyLinz/Chrome-GreenifyFacebook"&gt;GitHub - CindyLinz/Chrome-GreenifyFacebook: 綠化 Facebook 畫面的 Chrome extenison&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;因應中國時報的綠色恐怖寫了這個 Chrome 套件  &lt;/li&gt;
&lt;li&gt;笑死我 XDD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apan1121/powerInfo"&gt;apan1121/powerInfo&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;powerInfo  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apan1121.github.io/powerInfo/"&gt;台灣電廠即時機組發電量&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/%E8%BE%BE%E5%85%8B%E6%95%88%E5%BA%94"&gt;達克效應 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;達克效應（英語：D-K effect），全稱為鄧寧-克魯格效應（英語：Dunning–Kruger effect），是一種認知偏差，能力欠缺的人有一種虛幻的自我優越感，錯誤地認為自己比真實情況更加優秀。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;孔子：「知之為知之，不知為不知，是知也。」  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;查爾斯 · 達爾文：「無知比知識更容易招致自信」  &lt;/li&gt;
&lt;li&gt;莎士比亞：「愚蠢的人總認為自己很聰明，而智者卻知道自己的無知。」  &lt;/li&gt;
&lt;li&gt;警惕自己啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;joke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.destroyallsoftware.com/talks/wat"&gt;Wat&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The sarcasm in this talk does not represent anyone's actual opinion. For a more serious take on software, try Destroy All Software Screencasts: 10 to 15 minutes every other week, dense with information on advanced topics like Unix, TDD, OO Design, Vim, Ruby, and Git.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;短短五分鐘的 lightning talk 但真的講的很好笑。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="devops"></category><category term="firefox"></category><category term="github"></category><category term="joke"></category><category term="k8s"></category><category term="linux"></category><category term="machine learning"></category><category term="nosql"></category><category term="python"></category><category term="security"></category><category term="taiwan"></category><category term="trivia"></category></entry><entry><title>Y2017W29</title><link href="https://blog.m157q.tw/posts/2017/07/25/y2017w29/" rel="alternate"></link><published>2017-10-17T20:09:40+08:00</published><updated>2017-10-17T20:09:40+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-07-25:posts/2017/07/25/y2017w29/</id><summary type="html">&lt;h3&gt;ai&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/mmc-writes/the-fourth-industrial-revolution-a-primer-on-artificial-intelligence-ai-ff5e7fffcae1"&gt;The fourth industrial revolution: a primer on Artificial Intelligence (AI)&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@dennyku/%E5%9C%A8-%E6%B1%82%E8%81%B7%E5%A4%A9%E7%9C%BC%E9%80%9A-%E5%B7%A5%E4%BD%9C%E4%B8%80%E5%B9%B4%E6%98%AF%E5%80%8B%E6%80%8E%E6%A8%A3%E7%9A%84%E9%AB%94%E9%A9%97-ecf07be1a0b0"&gt;在「求職天眼通」工作一年是個怎樣的體驗 – Denny Ku – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;digital currency&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mingderwang/%E4%BA%82%E6%95%B8%E5%A4%A0%E4%B8%8D%E5%A4%A0%E4%BA%82-d7db0003d363"&gt;亂數夠不夠亂 – mingderwang – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;原本是想在台大駭客松期間, 找出虛擬幣電子錢包是否能產生夠亂的 seed 來生成新帳號. 但這個題目並沒得到團隊內部的認同, 只好把它寫成文章跟大家一起探討.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/go-python/gopy"&gt;GitHub - go-python/gopy: gopy generates a CPython extension module from a go package.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;WARNING gopy is currently not compatible with Go&amp;gt;=1.6 and its improved CGo rules as documented in cmd/cgo.  You will need Go &amp;gt;= 1.5.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/07/19/machine-learning"&gt;監督式學習？增強學習？聽不懂的話，一定要看這篇入門的機器學習名詞解釋！ - INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/dylanbeattie/status/887650814696804352"&gt;Dylan Beattie 🇪🇺 on Twitter: "One of the biggest challenges with centralized logging is establishing consensus about what log levels actually mean. Here's a quick primer. https://t.co/5UeFnfiq1h"&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the biggest challenges with centralized logging is establishing consensus about what log levels actually mean. Here's a quick primer.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;img alt="logging level" src="/files/y2017w29/logging-level.jpg" /&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mlouielu/raises-stackoverflow"&gt;GitHub - mlouielu/raises-stackoverflow: Raises' in the source code, all's right with the Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Raises Stack Overflow Raises' in your source code, all's right with the Stack Overflow Install Please use pip to install raises  $ pip install raises   How to use? Is easy to use raises in your daily work, to help you find out raises error's answer on Stack Overflow, simply import raises to your cod  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/takluyver/flit"&gt;takluyver/flit: Simplified packaging of Python modules&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Flit is a simple way to put Python packages and modules on PyPI.  Say you're writing a module foobar—either as a single file foobar.py, or as a directory—and you want to distribute it.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pybee/ouroboros"&gt;GitHub - pybee/ouroboros: A standalone, pure Python implementation of the Python Standard Library.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Documentation for Ouroboros can be found on Read The Docs.  Ouroboros is part of the BeeWare suite. You can talk to the community through:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/11092511/python-list-of-unique-dictionaries/11092590"&gt;dictionary - Python - List of unique dictionaries - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Can anyone help me with the most efficient way to achieve this in Python?  So make a temporary dict with the key being the id. This filters out the duplicates. The values() of the dict will be the list  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/11174745/avoiding-nested-for-loops"&gt;python - Avoiding nested for loops - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;I am trying to do some parameter testing on another code using python. I need to test 6 independent parameters, but I need all of the possible combinations of them. Each parameter has a minimum, a maximum, and a step value that needs to be passed to it.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.zeroplex.tw/2017/07/blog-post_2.html"&gt;天興搬家公司 與 崔媽媽基金會 - Zeroplex 生活隨筆&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來崔媽媽基金會有做這麼多事呀  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://musou.watchout.tw/role-play/terror-30/"&gt;沃草→你是戒嚴時代的誰呢？←&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個個都是冤死的人啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;看 Mythbusters S05E01 才知道原來日本機關王比賽那種裝置在英文有個專有的名稱叫做 Rube Goldberg Machine  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/RSVP_(invitations)"&gt;RSVP (invitations) - Wikipedia&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來 RSVP 是法文來的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="ai"></category><category term="blog"></category><category term="digital currency"></category><category term="golang"></category><category term="machine learning"></category><category term="programming"></category><category term="python"></category><category term="taiwan"></category><category term="trivia"></category></entry><entry><title>Y2017W28</title><link href="https://blog.m157q.tw/posts/2017/07/17/y2017w28/" rel="alternate"></link><published>2017-10-17T06:51:23+08:00</published><updated>2017-10-17T06:51:23+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-07-17:posts/2017/07/17/y2017w28/</id><summary type="html">&lt;h3&gt;cs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/07/10/ai-history"&gt;從人工智慧、機器學習到深度學習，你不容錯過的人工智慧簡史 - INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;複習一下人工智慧簡史  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AliasIO/Wappalyzer"&gt;GitHub - AliasIO/Wappalyzer: Cross-platform utility that uncovers the technologies used on websites.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Wappalyzer is a cross-platform utility that uncovers the technologies used on websites. It detects content management systems, eCommerce platforms, web servers, JavaScript frameworks, analytics tools and many more.  Refer to the wiki for screenshots, information on how to contribute and more.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jvns.ca/blog/2017/07/05/linux-tracing-systems/"&gt;Linux tracing systems &amp;amp; how they fit together - Julia Evans&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇介紹的工具也太多了吧...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://data.leafwind.tw/rules-of-machine-learning-traditional-chinese-da0afe0991d6"&gt;《機器學習法則》繁中版（一） – all about data&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://martin.zinkevich.org/rules_of_ml/rules_of_ml.pdf"&gt;rules_of_ml.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/21295010"&gt;机器学习系统丛林迷路指南 - 知乎专栏&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@kstseng/kkbox-data-game-17-06-1st-place-solution-2baa14aee5f4"&gt;KKBOX Data Game - 17.06 1st place Solution – KS Tseng – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.r2d3.us/%E5%9C%96%E8%A7%A3%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92%E7%AC%AC%E4%B8%80%E7%AB%A0/"&gt;圖解機器學習&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@honglong/codetengu-%E5%90%84%E6%9C%9F%E7%9A%84-title-4d4812cfad15"&gt;CodeTengu 各期的 title – Chris Yuan, 袁昇禾 – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://hellolynn.hpd.io/2017/06/09/%e5%a6%82%e4%bd%95%e5%af%ab%e5%87%ba%e4%b8%80%e7%af%87%e5%a5%bd%e6%87%82%e7%9a%84%e6%96%87%e7%ab%a0%e4%bb%a5%e5%88%a9%e6%ba%9d%e9%80%9a%ef%bc%9f%e5%85%ad%e5%a4%a7%e6%8a%80%e5%b7%a7%e5%88%86%e4%ba%ab/"&gt;如何寫出一篇好懂的文章以利溝通？六大技巧分享 – 寫點科普，請給指教。&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://data.leafwind.tw/engineering-culture-in-appier-21c6604f776a"&gt;Appier 的工程師文化 – all about data&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/07/09/7435/%e5%9c%a8%e7%a8%8b%e5%bc%8f%e7%ab%b6%e8%b3%bd%e5%be%97%e7%8d%8e%e8%b2%a0%e9%9d%a2%e7%9b%b8%e9%97%9c%e6%96%bc%e5%b7%a5%e4%bd%9c%e7%9a%84%e5%93%81%e8%b3%aa/"&gt;在程式競賽得獎負面相關於工作的品質 | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Quick but dirty.  &lt;/li&gt;
&lt;li&gt;Slow but clean.  &lt;/li&gt;
&lt;li&gt;Which one?  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/07/video-et3-chinese-input-tutorial-2017/amp/"&gt;影片：倚天中文系統 的宣傳教學影片 - Tsung's Blog&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://itaigi.tw/k/%E7%95%AA%E7%9F%B3%E6%A6%B4"&gt;iTaigi 愛台語&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://shell.twbbs.org/forums/forum/forum_posts.asp?TID=9654&amp;amp;PN=41&amp;amp;FID=6&amp;amp;PR=3"&gt;台灣貝類圖鑑討論區 (http://shells.tw/forums/forum): 「芭樂」一詞的由來&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;我們市場常見的「芭樂」品種很多, 原產地在南美洲, 後經由歐洲人傳至世界各地栽種, 數百年來又經人工配種選育, 種類已多不可數, 「芭樂」華語稱為番石榴, 取其像石榴之意, 但台語的「芭樂」一詞又是怎麼來的呢?  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="cs"></category><category term="github"></category><category term="linux"></category><category term="machine learning"></category><category term="misc"></category><category term="programmer"></category><category term="programming"></category><category term="taiwan"></category></entry><entry><title>Y2017W22</title><link href="https://blog.m157q.tw/posts/2017/06/05/y2017w22/" rel="alternate"></link><published>2017-08-28T21:27:00+08:00</published><updated>2017-08-28T21:27:00+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-06-05:posts/2017/06/05/y2017w22/</id><summary type="html">&lt;h3&gt;alphago&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pingyeh.blogspot.tw/2017/05/alphago.html"&gt;ping不見路:  懂規則不懂規矩的 AlphaGo&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來那張五個人哭笑不得的照片是因為這樣啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;bitcoin&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@andylinee/%E6%AF%94%E7%89%B9%E5%B9%A3-%E7%AB%AF%E5%B0%8D%E7%AB%AF%E9%9B%BB%E5%AD%90%E7%8F%BE%E9%87%91%E7%B3%BB%E7%B5%B1-bitcoin-a-peer-to-peer-electronic-cash-system-i-8a52de003c9"&gt;《比特幣：端對端電子現金系統》（Bitcoin: A Peer-to-Peer Electronic Cash System）I&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;隨著比特幣今年暴漲，開始看到有更多人對用區塊鏈技術實現的加密貨幣產生興趣，所以就趁著連假把之前整理到一半的比特幣論文重新翻譯，提供給大家參考！此篇為論文的前半部分，下半部分將會在下一篇。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/06/01/%E5%85%A8%E9%9D%A2%E7%AB%84%E6%94%B9-git-commit-%E6%AD%B7%E5%8F%B2%E8%A8%98%E9%8C%84/amp/"&gt;全面竄改 git commit 歷史記錄 | louie_lu's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;想到以前打某個 CTF 好像玩過更有趣的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/blog/2370-introducing-temporary-interaction-limits"&gt;Introducing temporary interaction limits · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://szlin.me/2017/05/28/linux-kernel-perf-openvpn/"&gt;以 Linux kernel 效能工具 – perf 來分析探討硬體加密之瓶頸 – SZ Lin  &amp;amp; Embedded Linux&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linuxquestions.org/questions/linux-newbie-8/fedora-11-sudo-has-a-20-second-start-delay-732291/#post3575840"&gt;Fedora 11 sudo has a 20 second start delay&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;沒把自己電腦的 hostname 加到 &lt;code&gt;/etc/hosts&lt;/code&gt; 的話可能會遇到 &lt;code&gt;sudo&lt;/code&gt; hang 住的狀況  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kazunori279/TensorFlow-for-absolute-beginners"&gt;GitHub - kazunori279/TensorFlow-for-absolute-beginners: TensorFlow for absolute beginners: a 3-hour codelab for self-learning neural network basics without hard math.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/05/28/7352/%e9%80%8f%e9%81%8e-nn-%e9%a1%9e%e7%a5%9e%e7%b6%93%e7%b6%b2%e8%b7%af-%e8%a8%93%e7%b7%b4%e5%a5%bd%e7%9a%84%e7%b3%bb%e7%b5%b1%ef%bc%8c%e7%9b%b4%e6%8e%a5%e6%8a%8a%e5%9c%96%e7%89%87%e8%bd%89%e6%88%90/"&gt;透過 NN (類神經網路) 訓練好的系統，直接把圖片轉成程式碼 | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這好像有點神  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;miracast&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.2cm.com.tw/technologyshow_content.asp?sn=1304260008"&gt;以鏡射與Wi-Fi技術為基礎　Miracast實現多螢影音串流 - 技術前瞻 - 新通訊元件雜誌&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Miracast是Wi-Fi聯盟的認證名稱，原來的技術規格名稱為Wi-Fi Display，是Wi-Fi聯盟為鞏固其在無線應用的龍頭地位，基於既有無線通訊技術提出的殺手級應用。該技術與認證項目由Wi-Fi聯盟中的行動與消費性電子設備製造商及晶片廠商  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/derekdai/miraclecast"&gt;GitHub - derekdai/miraclecast: Connect external monitors to your system via Wifi-Display specification also known as Miracast&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;The MiracleCast project provides software to connect external monitors to your system via Wi-Fi. It is compatible to the Wifi-Display specification also known as Miracast. MiracleCast implements the Display-Source as well as Display-Sink side.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/01org/wds"&gt;01org/wds: Wireless Display Software For Linux OS (WDS)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;WDS is a set of libraries for developers who want to build Wi-Fi Display applications on linux.  More information can be found on the mailing list and the wiki.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://teddy-chen-tw.blogspot.tw/2017/06/scrum.html"&gt;搞笑談軟工: 高效率Scrum團隊的九個模式&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotblogs.com.tw/hatelove/2017/05/30/my-opinions-of-code-coverage-and-tdd"&gt;[Comments] 測試覆蓋率與 TDD 的正確心態 | In 91 - 點部落&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個心態挺不錯的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://about.gitlab.com/2017/05/02/inside-gitlabs-code-review-flow/"&gt;Inside GitLab's Code Review Flow | GitLab&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Code review, or engineers manually reviewing code as it is being developed, is one of several tools that organizations have to maintain code quality.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.freebuf.com/vuls/135610.html"&gt;看我如何發現Twitter任意賬戶發送推文漏洞並獲得7560美元賞金 - FreeBuf.COM | 關注黑客與極客&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;在参与Twitter漏洞赏金项目的过程中，我通过一些安全测试发现了Twitter存在的重大漏洞：攻击者不需要获取他人账户权限，就能以任意账户发布推文。我于2017年2月26日发现了该漏洞，Twitter方面于2017年2月28日及时对其进行了修  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;ptt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/SYSOP/M.1496571808.A.608.html"&gt;[公告] 即日起實驗性開放 Websocket 連線 - 看板 SYSOP - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;潮！  &lt;/li&gt;
&lt;li&gt;看了才發現是之前有看過的 PttChrome  &lt;/li&gt;
&lt;li&gt;不過因為是走 telnet 沒加密 所以就沒用  &lt;/li&gt;
&lt;li&gt;現在用 ws 就有加密啦  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/SYSOP/M.1496571808.A.608.html"&gt;[公告] 即日起實驗性開放 Websocket 連線 - 看板 SYSOP - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;時間Sun Jun 4 18:23:26 2017 PTT 目前實驗性的加入 Websocket 連線方式. 連線的位置為 wss://ws.ptt.cc/bbs 為 ssh 之外提供另一個加密連線的方式, 加密連線也將會是 Websocket 唯一支援的連線方式.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ksFXEY6P_ec&amp;amp;feature=share"&gt;Apple Pay 是怎麼運作的? | 一探啾竟 第1集 | 啾啾鞋 - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;新的系列好像都跟電腦資訊比較有關  &lt;/li&gt;
&lt;li&gt;而且介紹得雖然不深但頗清楚的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://disp.cc/b/163-a4zW"&gt;Re: [問卦] 葛瑪蘭威士忌是化工？ - Gossiping板 - Disp BBS&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;酒色是一個錯誤觀念，但這個錯誤觀念從外國延續到台灣  目前國外有很多酒廠極力澄清這個說法，不過華人世界還是都很看色澤這一套  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.byvoid.com/zht/blog/switzerland-dwelling-notes-5-paradise-on-earth"&gt;瑞士旅居記（五）：人間天堂 - BYVoid&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/05/31/why-do-you-keep-articles-and-books-and-never-read"&gt;收藏者悖論：收藏了大量文章卻又不看，「囤書癮」該怎麼解？ - INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;收藏者悖論：收藏了大量文章卻又不看，「囤書癮」該怎麼解？ 日語中有一個單詞叫做 tsundoku (積ん読)，意為「買了大量的書堆在家裡但卻又不看」。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="alphago"></category><category term="bitcoin"></category><category term="git"></category><category term="github"></category><category term="life"></category><category term="linux"></category><category term="machine learning"></category><category term="miracast"></category><category term="misc"></category><category term="programming"></category><category term="ptt"></category><category term="security"></category></entry><entry><title>Y2017W16</title><link href="https://blog.m157q.tw/posts/2017/04/24/y2017w16/" rel="alternate"></link><published>2017-07-10T03:54:06+08:00</published><updated>2017-07-10T03:54:06+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-04-24:posts/2017/04/24/y2017w16/</id><summary type="html">&lt;h3&gt;docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.docker.com/2017/04/introducing-linuxkit-container-os-toolkit/"&gt;Announcing LinuxKit: A Toolkit for building Secure, Lean and Portable Linux Subsystems - Docker Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/linuxkit/linuxkit"&gt;GitHub - linuxkit/linuxkit: A toolkit for building secure, portable and lean operating systems for containers&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;facebook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://caffe2.ai/blog/2017/04/18/caffe2-open-source-announcement.html"&gt;Caffe2 Open Source Brings Cross Platform Machine Learning Tools to Developers | Caffe2&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Training and deploying AI models is often associated with massive data centers or super computers, with good reason. The ability to continually process, create, and improve models from all kinds of information: images, video, text, and voice, at massive scale, is no small computing feat.  &lt;/li&gt;
&lt;li&gt;感覺有機會的話可以拿來用用看  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.facebook.com/blog/post/2017/04/18/messenger-platform-2.0/"&gt;Messenger Platform 2.0 Debuts at F8 - Facebook for Developers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Today at F8, we introduced Messenger Platform 2.0, a new suite of tools that gives you the ability to build richer experiences, get discovered, and extend the conversational, visual and social capabilities of your bots. With more than 1.  &lt;/li&gt;
&lt;li&gt;真的更新的有夠快，一個月前才 1.4，現在已經 2.0 了，最大的改變大概是多了 extensions 吧，不過天知道台灣到底哪時候才能用 Payments  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/FacebookforDevelopers/videos/10154613896183553/"&gt;Live at our annual F8 developer conference. - Facebook for Developers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;今年 F8 的影片  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gcpug-tw.gitbooks.io/google-cloud-platform-in-practice/content/"&gt;簡介 ‧ Google Cloud Platform In Practice&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GCPUG.TW 出了一本關於 GCP 的書  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/managing-notification-emails-for-organizations/"&gt;Managing notification emails for organizations - User Documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來我想要的功能早就有了，不同組織的通知可以綁定不同信箱，這樣工作跟個人的就不會混在一起了，竟然現在才知道，趕緊設定。  &lt;/li&gt;
&lt;li&gt;不過後來用了一下發現，有時候還是會因為不明原因，在個人的信箱收到公司 GitHub repo 的通知，然後 Travis 的通知好像沒地方可以設定，統一會寄信到 GitHub 的 primary email 的樣子。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@hoffa/the-top-github-projects-per-country-92c275e19409"&gt;The top GitHub projects per country – Felipe Hoffa – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個統計有點有趣，是拿 GCP 上的 GitHub Public dataset 用 BigQuery 來計算的，台灣也有在裏面，第 1 名的是求職天眼通。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/poga/fuzz-testing-and-go-fuzz"&gt;Fuzz Testing and go-fuzz // Speaker Deck&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;iphone&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;最近買了 iPhone SE，所以看了一堆跟 iPhone 有關的有的沒的  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.51feibao.com/article-view-3784.html"&gt;利用iphone手機自帶包裝盒做支架 - 廢物利用手工DIY小製作 - 51費寶網&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很多朋友把苹果手机买回家之后第一时间就是到配件市场上重新买手机支架，殊不知iphone自带的出厂包装本身就为我们提供了一个绝佳的diy手机支架方案。如果你之前没有留意到这种手机新玩法，那么一起来跟随51费宝这期的手  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://read01.com/GPaLex.html"&gt;繼續使用iphone原裝包裝盒教你如何收納earpods耳機 - 壹讀&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;iphone買回家以後千萬不要急著把拆開的包裝盒扔掉，在以往教程當中我們已經學會了怎麼使用手機原裝包裝盒做diy手機架。可是盒子裡還有很多包材我們依然沒有用到的，例如裝earpod的耳機小盒子。我想各位跟我一樣，在打開i  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://appleuser.com/2014/05/16/wrap-iphone-earphones-without-tangles/"&gt;iPhone 耳機繞 8 字不打結收線法 | AppleUser&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;幾年前還在 Apple 店打工的時候，當時的前輩 Max 曾經傳授給我一個讓 iPhone 耳機線絕對不打結的收納方法，這起源於他當兵時擔任通信兵的線材收納法：繞 8 字。  &lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;後來收耳機線都用這個方法，幾乎不太打結，很棒。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Oversea_Job/M.1382073074.A.C85.html"&gt;[歐洲] ARM Norway AS 面試經驗分享 - 看板 Oversea_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很詳細的面試經歷，而且竟然是在挪威，應該不算常見，挺有趣的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ablagoev.github.io/linux/adventures/commands/2017/02/19/adventures-in-usr-bin.html"&gt;Adventures in /usr/bin and the likes - Dormammu's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;I just love Linux! For me it makes interacting with your computer fun and educational. I think if someone needs to learn about the core principles underlying an operating system and hardware, Linux is a great place to start.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dpdk.org/"&gt;DPDK&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;DPDK is a Linux Foundation Project, developed by hundreds of contributors, supported by strong leading members, and used in a growing ecosystem.  DPDK is a set of libraries and drivers for fast packet processing.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://chuansong.me/n/1720679451638"&gt;【論文解讀】Facebook 何凱明 Mask R-CNN 狙擊目標實例分割_人工智能頭條_傳送門&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;导读：自从将卷积神经网络引入了目标检测领域后，从rcnn到fast-rcnn，然后到end-to-end的faster-rcnn,除了yolo一枝独秀外，基本垄断了整个目标检测领域；而何凯明的resnet基本成了整个图像分类算法的巅峰。这一次，他们强强联手准  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;mastodon&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@poga/%E6%9E%B6%E8%A8%AD%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84-mastodon-instance-858a658e9494"&gt;架設你自己的 mastodon instance – Poga Po – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;mastodon 概念上類似 mail server：每個人都能架設他自己的 instance，每個 instance 之間都能互相溝通，使用者可以跨 instance follow、reply、reblog… 等等。  &lt;/li&gt;
&lt;li&gt;這篇描述了 &lt;a href="https://g0v.social"&gt;https://g0v.social&lt;/a&gt; 架設 Mastodon 的筆記，根據自己架設的友人表示，RoR 好肥（戰  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bslatkin/effectivepython"&gt;GitHub - bslatkin/effectivepython: Effective Python: Source Code and Errata for the Book&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Hello! You've reached the official source code repository for Effective Python. To learn more about the book or contact the author, please visit the official website.  In this repository you can browse all of the source code included in the book.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software engineering&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@rdsubhas/10-modern-software-engineering-mistakes-bc67fbef4fc8"&gt;Modern Software Over-Engineering Mistakes – RDX – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Few things are guaranteed to increase all the time: Distance between stars, Entropy in the visible universe, and Fucking business requirements . Many articles say Dont over-engineer but don’t say why or how. Here are 10 clear examples.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.inboundjournals.com/3-free-monitoring-tools-to-compare-your-facebook-page-with-the-competition/"&gt;與競品比較粉絲專頁的3個免費監測工具&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;社群經營是一個不斷優化的過程。經常為自己的社群經營作評估非常重要，而透過數據指標的分析，可以幫助品牌在社群的經營上逐步精進。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;深圳華強北真的是個神奇的地方，大概所有用過的 iPhone 都回流到這裡了吧。  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://forum.xda-developers.com/nexus-5x/general/4gb-ram-upgraded-nexus-5x-t3588743"&gt;4GB RAM upgraded of my Nexus 5X | LG Nexus 5X&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnbeta.com/articles/tech/603095.htm"&gt;老外Nexus 5X成磚寄去深圳：修好且升級到4G RAM_Google Android_cnBeta.COM&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Gossiping/M.1492426304.A.892.html"&gt;Re: [新聞] 八田安葬烏山頭 愛台灣超越種族&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;比課本上還詳細的八田羽一歷史  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pansci.asia/archives/110479"&gt;這個九九乘法表你小學沒背過！吠陀方形的千年奧秘 - PanSci 泛科學&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;古印度的奧妙  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E6%B0%B4%E7%85%99"&gt;水煙 - 维基百科，自由的百科全书&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來水煙起源於波斯啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E9%BC%BB%E7%83%9F"&gt;鼻烟 - 维基百科，自由的百科全书&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來鼻煙起源於美洲印地安人  &lt;/li&gt;
&lt;li&gt;十六世紀初西班牙人  &lt;/li&gt;
&lt;li&gt;帶回歐洲後於十七世紀流行起來  &lt;/li&gt;
&lt;li&gt;清朝時傳入中國  &lt;/li&gt;
&lt;li&gt;一時蔚為風潮  &lt;/li&gt;
&lt;li&gt;後被旱菸、水煙、紙煙取代  &lt;/li&gt;
&lt;li&gt;於蒙古大為流行  &lt;/li&gt;
&lt;li&gt;至今仍有吸食鼻煙的習慣  &lt;/li&gt;
&lt;li&gt;甚至和社交禮儀有關  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="docker"></category><category term="facebook"></category><category term="gcp"></category><category term="github"></category><category term="golang"></category><category term="iphone"></category><category term="job"></category><category term="linux"></category><category term="machine learning"></category><category term="mastodon"></category><category term="misc"></category><category term="python"></category><category term="software engineering"></category><category term="taiwan"></category><category term="trivia"></category></entry><entry><title>Y2017W06</title><link href="https://blog.m157q.tw/posts/2017/02/13/y2017w06/" rel="alternate"></link><published>2017-02-13T01:40:56+08:00</published><updated>2017-02-13T01:40:56+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-02-13:posts/2017/02/13/y2017w06/</id><summary type="html">&lt;h3&gt;app&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@zonble/our-mac-app-was-rejected-because-we-are-using-swift-3-9f574529945"&gt;Our Mac app was rejected because we are using Swift 3 – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 Swift 3 寫 Mac App 會過不了官方 App store 的審核而不能上架，原因是使用了 Private API，但作者確定自己沒有使用任何 Private API，結果作者去追了 source code 以後發現，是 Swift 3 的 library 裏面用到的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@rudychin/ph-d-admission-uiuc-cornell-cmu-347827b5af00#.112b14qkm"&gt;[Ph.D. Admission] UIUC / Cornell / CMU – 金廷武 – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;人生勝利組的大學同學發了篇美國名校資工博士申請的心得文  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django"&gt;Django Web Framework (Python) - Learn web development | MDN&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Mozilla 竟然有 Django 的 Tutorial XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;editor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hungys.xyz/why-i-switched-from-sublime-to-vscode/"&gt;為什麼我從 Sublime Text 跳槽 Visual Studio Code？&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;之前有試用過一下 VS code，覺得算是 GUI editor 裏面我目前用到覺得最好用的吧，光是內建整合 Git 以及 integrated terminal 對我來說就贏很多其他的 GUI editor 了。  &lt;/li&gt;
&lt;li&gt;看了這篇才知道原來 integrated terminal 的點子是台灣人去開 issue 的 XD。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gitlab&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://about.gitlab.com/2017/02/10/postmortem-of-database-outage-of-january-31/"&gt;Postmortem of database outage of January 31 | GitLab&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Gitlab 針對 2017/01/31 誤刪 production db 以及後續的處理和反省做了詳細的紀錄。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/google-cloud/using-single-docker-repository-with-multiple-gke-projects-1672689f780c"&gt;Using single Docker repository with multiple GKE projects&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;透過把另外一個 GCP project 的 GKE default service account 加入另外一個 GCP project 的 IAM 中，並給予相對應的權限，就能讓後者直接使用前者的 Docker repository，不用每開一個 GCP project 都要重新 build 一次。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;interview&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lnishan.github.io/2017/interview-preparation-101/"&gt;Interview Preparation 101&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;成功面試進入美國 Google Intern 的人的準備心得  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.techug.com/post/first-two-years-i-work-in-huawei.html"&gt;一位在华为工作2年员工的心路历程 | 程序师&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;華為有這麼操喔？上次在飛機上跟一個華為的工程師聊感覺沒這麼慘耶，還是是因為這篇是上海，但跟我聊天的沒記錯好像是北京？而且他才第1年就四處出差都公司出錢。還是學碩士差別？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hackaday.com/2016/09/04/convert-any-usb-keyboard-to-bluetooth/"&gt;Convert Any USB Keyboard to Bluetooth | Hackaday&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好酷啊，竟然可以自幹個把 USB 轉成 Bluetooth 的裝置，不過去看了教學影片以後其實還挺麻煩的就是了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/learning-new-stuff/machine-learning-in-a-year-cdb0b0ebd29c"&gt;Machine Learning in a Year – Learning New Stuff – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者花了一年的時間自學 Machine Learning。開頭就說不一定需要懂數學理論才能開始學。  &lt;/li&gt;
&lt;li&gt;簡體中文版：&lt;a href="http://www.techug.com/post/how-i-learn-machine-learning-in-a-year.html"&gt;我是如何花了一年時間來學機器學習的 | 程序師&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terryum/awesome-deep-learning-papers"&gt;terryum/awesome-deep-learning-papers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個收集跟 Deep Learning 相關論文的 Repo.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.wired.com/2017/02/programming-is-the-new-blue-collar-job/"&gt;The Next Big Blue-Collar Job Is Coding | WIRED&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;When I ask people to picture a coder, they usually imagine someone like Mark Zuckerberg: a hoodied college dropout who builds an app in a feverish 72-hour programming jag—with the goal of getting insanely rich and, as they say, “changing the world.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;寫程式的門檻愈降愈低，很多時候不用懂相關理論甚至只要複製貼上再修修改改就能夠寫出一個應用程式，等到人人都會寫程式，像現在勞力付出的藍領階級工作一樣普及的時候，那些純勞力付出的工作可能都已經被機器取代。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/python/cpython"&gt;python/cpython: The Python programming language&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;CPython 的 source code 丟到 GitHub 上哩  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/playpauseandstop/python-3-dot-6-and-performance-a-love-story"&gt;Python 3.6 &amp;amp; Performance. A Love Story&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;關於 Python 3.6 一些新特性的介紹，紀錄一些比較顯著的：  &lt;ul&gt;
&lt;li&gt;PEP 498: f-strings  &lt;/li&gt;
&lt;li&gt;PEP 525: Async generator  &lt;/li&gt;
&lt;li&gt;PEP 530: Async comprehension  &lt;/li&gt;
&lt;li&gt;PEP 526: Variable annotations  &lt;/li&gt;
&lt;li&gt;new &lt;code&gt;dict&lt;/code&gt; implementation  &lt;ul&gt;
&lt;li&gt;參考了 PyPy 的實作，為 dict 的 memory entry 加上 index  &lt;/li&gt;
&lt;li&gt;memory usage 20% ~ 25% smaller comparted to Python 3.5  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;以及比較了執行速度： Python 2.7 &amp;gt; Python 3.6 &amp;gt; Python 3.5，而 Python 3.7 會比 Python 3.6 再快些。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitheis/alog"&gt;keitheis/alog: Python logging for Humans.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Python logging for Humans. Your goto logging module without panic on context swtich.  Warning: No more logger = logging.getLogger(&lt;strong&gt;name&lt;/strong&gt;) in your every file.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;resume&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nickwarm.logdown.com/posts/1402232"&gt;撰寫履歷：如何吸引賞識你的人 « NickWarm's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇是以中文履歷為主  &lt;/li&gt;
&lt;li&gt;同一個人丟了兩種不同版本的履歷，一個收到感謝函，一個收到面試通知，足見履歷重要性。  &lt;/li&gt;
&lt;li&gt;除了照片、姓名解構、自傳以外我都算認同  &lt;/li&gt;
&lt;li&gt;CakeResume 感覺不錯用  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;p&gt;看了第一個 RAT 的工具以後，就把其他相關的也看了一下了。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nathanlopez/Stitch"&gt;nathanlopez/Stitch: Python Remote Administration Tool (RAT)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Stitch is for education/research purposes only. The author takes NO responsibility and/or liability for how you choose to use any of the tools/source code/any files provided.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sweetsoftware/Ares"&gt;sweetsoftware/Ares: Python botnet and backdoor&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Ares is a Python Remote Access Tool.  Warning: Only use this software according to your current legislation. Misuse of this software can raise legal and ethical issues which I don't support nor can be held responsible for.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ahhh/Reverse_DNS_Shell"&gt;GitHub - ahhh/Reverse_DNS_Shell: A python reverse shell that uses DNS as the c2 channel&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;DNShell v1.7 Description: A Python Reverse Shell that uses DNS as the C2 channel. Requires: dnslib dnspython pycrypto Gotchyas: don't forget to change your HOST don't forget to change your SECRET key run server first Moar Info: &lt;a href="http://lockboxx.blogspot.com/2015/01/python-reverse-dns-shell"&gt;http://lockboxx.blogspot.com/2015/01/python-reverse-dns-shell&lt;/a&gt;.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vesche/basicRAT"&gt;vesche/basicRAT: python remote access trojan&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a Python RAT (Remote Access Trojan), basicRAT was created to maintain a clean design full-featured Python RAT. Currently a work in progress and still being hacked on.  Disclaimer: This RAT is for research purposes only, and should only be used on authorized systems.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/n1nj4sec/pupy"&gt;GitHub - n1nj4sec/pupy: Pupy is an opensource, cross-platform (Windows, Linux, OSX, Android) remote administration and post-exploitation tool mainly written in python&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Pupy is an opensource, multi-platform (Windows, Linux, OSX, Android), multi function RAT (Remote Administration Tool) and post-exploitation tool mainly written in python. It features a all-in-memory execution guideline and leaves very low footprint.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software engineering&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://arxiv.org/abs/1702.01715"&gt;[1702.01715] Software Engineering at Google&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/pdf/1702.01715.pdf"&gt;1702.01715.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.bbc.com/zhongwen/trad/38859981"&gt;你知道英語可以寫成這樣嗎？ - BBC 中文網&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來英文有速記寫法，根本就是蝌蚪文 XD。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://disp.cc/b/163-9SEx"&gt;Re: [問卦] 那些說吻仔魚是各種魚類幼苗的人在想什麼 - Gossiping板 - Disp BBS&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;吻仔魚是沙丁魚魚苗，不好養殖，只能用補抓野生的，因為魚苗很小，所以要用網眼特別小的魚網，捕撈時會連同其他魚的魚苗也一起抓上來，也不可能每個魚苗慢慢挑，進而導致漁業資源枯竭。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ds3d2x8n3szkj73oe8n0.lh.pdis.nat.gov.tw/"&gt;2016/10 立院公聽會 | 電競政策產銷履歷 | hackfoldr&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來電競替代役從去年 10 月就開始計劃了啊  &lt;/li&gt;
&lt;li&gt;而且 hackfolder 竟然被引進政府裏面用了嗎？  &lt;/li&gt;
&lt;li&gt;真的是完全公開透明的會議記錄啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.storm.mg/lifestyle/220782"&gt;不考幹嘛念？偏鄉免費教程式多年，成大教授：4個錯觀念，害台灣一代比一代笨-教育｜台灣｜偏鄉教育｜教授｜學習｜做孩子的重要他人｜蘇文鈺｜成大資工系｜程式教育-風傳媒-蘇文鈺&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;只學「有用」的學問  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;不唸不會賺錢的科系  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;不培養無法測量的能力  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;考試至上，什麼都要打分數。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;製造相互排擠的世代  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;成績好的人不肯教成績不好的人，怕自己被超越。  &lt;/li&gt;
&lt;li&gt;芬蘭的教育則是從小就讓孩子學會互助合作。  &lt;/li&gt;
&lt;li&gt;成功是靠互助合作，而不是踩著別人的屍骨往上爬。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;教育不該為教育以外的目的服務  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;很多企業開的私立大學都是為了直接培養員工，不太教其他的事。  &lt;/li&gt;
&lt;li&gt;反而很多台灣家長覺得這樣很棒，一畢業就有工作。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Gosu"&gt;Gosu - Wikipedia&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Gosu (고수) is a Korean term used to refer to a highly skilled person. In computer gaming the term is usually used to refer to a person highly skilled in multiplayer games like StarCraft, Warcraft III (RTS/RPG - DotA), Diablo II (RPG), Counter-Strike (FPS) and others.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;原來 Gosu 在韓文是高手的意思...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="app"></category><category term="blog"></category><category term="django"></category><category term="editor"></category><category term="gitlab"></category><category term="gke"></category><category term="interview"></category><category term="job"></category><category term="keyboard"></category><category term="machine learning"></category><category term="misc"></category><category term="programmer"></category><category term="pupy"></category><category term="python"></category><category term="resume"></category><category term="security"></category><category term="software engineering"></category><category term="taiwan"></category><category term="trivia"></category></entry><entry><title>Y2016W46</title><link href="https://blog.m157q.tw/posts/2016/11/21/y2016w46/" rel="alternate"></link><published>2017-01-25T21:29:06+08:00</published><updated>2017-01-25T21:29:06+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2016-11-21:posts/2016/11/21/y2016w46/</id><summary type="html">&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.tecmint.com/20-funny-commands-of-linux-or-linux-is-fun-in-terminal/"&gt;20 Funny Commands of Linux or Linux is Fun in Terminal&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一些有趣的指令，無聊可以裝來玩玩。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;csnews&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;應該是這週最大的兩個新聞吧，微軟成為 Linux 基金會白金級會員，Google 加入微軟的 .NET 基金會，2016 年實在是太多變化了。  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linuxfoundation.org/announcements/microsoft-fortifies-commitment-to-open-source-becomes-linux-foundation-platinum"&gt;Microsoft Fortifies Commitment to Open Source, Becomes Linux Foundation Platinum Member&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://techcrunch.com/2016/11/16/google-signs-on-to-the-net-foundation-and-samsung-brings-net-support-to-tizen/"&gt;Google signs on to the .NET Foundation as Samsung brings .NET support to Tizen&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;data recovery&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.freebuf.com/sectool/119574.html"&gt;漲姿勢：手把手教你恢復Linux中的誤刪文件 - FreeBuf.COM | 關注黑客與極客&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;紀錄一下，最好是以後不需要用到，之前救過一次是用 &lt;code&gt;foremost&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/junyiacademy/dauGA"&gt;junyiacademy/dauGA: dump raw log data from google analytics&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;把 Google Analytics 的資料灌入 BigQuery 的 script，用 Python 寫的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/symless/synergy"&gt;symless/synergy: Share one mouse and keyboard between multiple computers on your desk. http://symless.com&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一套 Open Source 且跨作業系統，可以讓你用一組鍵盤滑鼠同時操作多個電腦的軟體。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;k8s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/GoogleCloudPlatform/kubernetes-workshops/tree/master/bundles/kubernetes-101"&gt;kubernetes-workshops/bundles/kubernetes-101 at master · GoogleCloudPlatform&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;k8s 的簡單教學範例  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://man7.org/linux/man-pages/man5/attr.5.html"&gt;xattr(7) - Linux manual page&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.techug.com/machine-learning-top10-algorithms"&gt;十大機器學習算法 | 程序師&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cs.uvm.edu/~icdm/algorithms/CandidateList.shtml"&gt;www.cs.uvm.edu/~icdm/algorithms/CandidateList.shtml&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codeanywhere.com"&gt;Codeanywhere&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;又是一個  Cloud IDE，感覺好像挺不錯的，但沒用過。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3.5/library/abc.html"&gt;29.7. abc — Abstract Base Classes — Python 3.5.2 documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://dbader.org/blog/abstract-base-classes-in-python"&gt;Abstract Base Classes in Python – dbader.org&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;再次復習一下 ABC 的用法  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.python.org/3/library/multiprocessing.html"&gt;17.2. multiprocessing — Process-based parallelism — Python 3.5.2 documentat&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;每次都會忘記 python 的 multiprocessing 怎麼寫，乾脆一次收集起來。  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/20887555/dead-simple-example-of-using-multiprocessing-queue-pool-and-locking"&gt;python - Dead simple example of using Multiprocessing Queue, Pool and Locki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://timothyawiseman.wordpress.com/2012/12/21/a-really-simple-multiprocessing-python-example/"&gt;A really simple Multiprocessing Python Example | TimothyAWiseman – SQLWise&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quantstart.com/articles/parallelising-python-with-threading-and-multiprocessing"&gt;Parallelising Python with Threading and Multiprocessing - QuantStart&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://pymotw.com/2/multiprocessing/basics.html"&gt;multiprocessing Basics - Python Module of the Week&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.davekuhlman.org/python_multiprocessing_01.html"&gt;Multiprocessing in Python: a guided tour with examples&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.giantflyingsaucer.com/blog/?p=4450"&gt;Getting started with Multiprocessing in Python | Giant Flying Saucer&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/3044580/multiprocessing-vs-threading-python"&gt;multithreading - Multiprocessing vs Threading Python - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/instamojo-matters/become-a-pdb-power-user-e3fc4e2774b2"&gt;Become a pdb power-user – Instamojo Matters – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇 pdb 的教學文章真的滿不錯的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/10/httpstat-log-dns-lookup-to-download-time-2016/"&gt;httpstat 分析 從 DNS查詢 到 下載完成 各個階段的處理時間&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這 CLI 工具挺棒的，可以幫你清楚的標出 HTTP request 在 DNS Lookup, TCP Connection, Server Processing, Content Transfer 花的時間。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/budou"&gt;google/budou: Automatic Japanese line breaking tool&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/2016/10/budou-automatic-japanese-line-breaking.html"&gt;Budou: Automatic Japanese line breaking tool&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://doc.pytest.org/en/latest/example/pythoncollection.html"&gt;Changing standard (Python) test discovery — pytest documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;因為公司的 project 有用到 pytest，然後需要改預設的 test discovery  &lt;/li&gt;
&lt;li&gt;但後來還是試不出來，所以直接從 coverage 的部份下手。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;sql&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/10/alibaba-mysql-branch-open-source-alisql-2016/"&gt;阿里巴巴(淘寶) Open Source 的 MySQL：AliSQL&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;阿里巴巴 fork 出來改的 MySQL，針對秒殺時間有特別處理的 MySQL。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;webdav&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;因為豐原計劃而看了些 webdav 的東西  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://tools.ietf.org/html/rfc4918"&gt;RFC 4918 - HTTP Extensions for Web Distributed Authoring and Versioning (We&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tolsen/litmus"&gt;tolsen/litmus: WebDAV test suite&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fruux/sabre-dav"&gt;fruux/sabre-dav: sabre/dav is a CalDAV, CardDAV and WebDAV framework for PH&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.plurk.com/m/p/ly0vkj"&gt;江戶川莫紅★緋色柯推廣協會 #台灣小常識台灣有個兔兒神廟，在中和。兔兒神胡天保大爺：清朝人，因戀慕同性巡撫而被處死。「今天陰官封我為兔兒神，專門管理人&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;完全不知道竟然有專門管同性戀情的兔兒神  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fZXyRsbkLz0&amp;amp;list=PLwItru4bLdHyn4asw3Bu0hNfgyP6H-XUN&amp;amp;index=7"&gt;『想找茶？來天龍國找我吧！』- 臺灣世界史 第7集&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;shopping&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.flightlineshop.com/%E5%95%86%E5%93%81/%e3%80%90flightline%e3%80%91%e8%8b%b1%e5%9c%8b-code-10-%e5%b8%a5%e6%b0%a3%e5%9e%8b%e6%a0%bc%e9%98%b2%e7%9b%9c%e9%98%b2%e6%b0%b4%e5%a4%9a%e5%8a%9f%e8%83%bd%e5%8d%b7%e8%93%8b%e5%bc%8f%e8%83%8c-2/"&gt;英國 CODE 10 帥氣型格防盜防水多功能卷蓋式背包 | Flightline Shop - Fashion Never Ends&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看起來挺棒的，但價格好貴啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://searchingc.com/baubax/"&gt;美國 BAUBAX 全球最強 旅行外套 15種功能 【獨家預購】 | SearchingC&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這件好像很不錯耶，出國感覺超方便的，可是價錢有點貴。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="cli"></category><category term="csnews"></category><category term="data recovery"></category><category term="gcp"></category><category term="github"></category><category term="javascript"></category><category term="k8s"></category><category term="linux"></category><category term="machine learning"></category><category term="programming"></category><category term="python"></category><category term="shopping"></category><category term="sql"></category><category term="taiwan"></category><category term="webdav"></category></entry><entry><title>Y2016W43</title><link href="https://blog.m157q.tw/posts/2016/10/31/y2016w43/" rel="alternate"></link><published>2016-11-13T04:15:20+08:00</published><updated>2016-11-13T04:15:20+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2016-10-31:posts/2016/10/31/y2016w43/</id><summary type="html">&lt;h3&gt;bsd&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pacbsd.org/"&gt;PacBSD&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;神奇的東西...  &lt;/li&gt;
&lt;li&gt;後來才發現原來它就是之前有看過的 ArchBSD，不知道為什麼改名字了，官方網站上 2014/09/14 的文章還寫著 ArchBSD 兩歲了，但下一篇文章卻是將近兩年後的 2016/07/21 然後已經改叫 PacBSD 哩  &lt;/li&gt;
&lt;li&gt;總之就是個用 Pacman 當 package management system 的 BSD Distribution，看來一開始裝起來也跟 Arch Linux 一樣乾淨，所以標榜 "A simple, lightweight distribution"  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.wu-boy.com/2016/10/ssh-agent-forwarding-tutorial/"&gt;SSH agent forwarding 教學&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來跳板機可以這樣設定比較安全呀  &lt;/li&gt;
&lt;li&gt;結果分享這篇以後就有人跟我說用 SSH &lt;code&gt;ForwardAgent&lt;/code&gt; 是不安全，要使用 SSH &lt;code&gt;ProxyCommand&lt;/code&gt;。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.wu-boy.com/2016/10/ssh-agent-forwarding-tutorial/#comment-2998999934"&gt;順便跑去這篇文章底下回覆跟作者告知一下 SSH ForwardAgent 不安全的問題&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;紀錄一下相關文章  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://heipei.github.io/2015/02/26/SSH-Agent-Forwarding-considered-harmful/"&gt;SSH Agent Forwarding considered harmful&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://kkcliu.blogspot.tw/2015/06/ssh-proxycommand-to-tunnel-connections.html"&gt;SSH ProxyCommand to tunnel connections ~ Kashi's Place&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cloudplatform.googleblog.com/2016/09/using-BigQuery-and-Firebase-Analytics-to-understand-your-mobile-app.html"&gt;Using BigQuery and Firebase Analytics to understand your mobile app&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;直接把 Firebase 的資料接入 BigQuery，然後再運用 BigQuery 去撈出想要統計的資料，之後再用 &lt;a href="https://www.google.com/analytics/data-studio/"&gt;Data Studio&lt;/a&gt; 做資料視覺化，感覺挺方便的。  &lt;/li&gt;
&lt;li&gt;想到應該也可以用 GCP 的 Datalab 把 BigQuery 的資料拿來視覺化。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://szlin.me/2016/09/29/debian-%e5%af%a6%e7%94%a8%e5%b0%8f%e6%8f%90%e7%a4%ba-2016-%e5%b9%b4%e7%89%88/"&gt;Debian 實用小提示 – 2016 年版&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是文章作者使用 Debian 多年以來的經驗彙整，應該可以算是 Debian 使用上的 Cheat Sheet 吧。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ihower.tw/blog/archives/8574"&gt;台灣資料科學愛好者年會: 一天搞懂深度學習 心得筆記&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;紀錄的滿詳細的一篇筆記。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://morepypy.blogspot.tw/2016/10/pypy3-550-released.html"&gt;PyPy3 5.5.0 released&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;針對 Python 3.3.5 的支援性做了一些改善  &lt;/li&gt;
&lt;li&gt;還有一些 JIT 相關的改善  &lt;/li&gt;
&lt;li&gt;著手開始進行 Python 3.5 的支援  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Psycojoker/pyfmt"&gt;Psycojoker/pyfmt: automatic code formatter for python following pep8 using baron FST, like gofmt&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有試用了一下，但我覺得沒有到很理想，所以沒有拿來用。  &lt;ul&gt;
&lt;li&gt;不會幫你把 unused import 拿掉  &lt;/li&gt;
&lt;li&gt;不會幫你超過一定的字數就換行  &lt;/li&gt;
&lt;li&gt;Python 2 only, 無法用 Python 3 執行  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.techbang.com/posts/47013-united-states-largest-internet-event-ever-knowing-that-hackers-attack-why-are-still-at-a-loss"&gt;美國史上最大斷網事件：明明知道駭客的攻擊方法，為何依然手足無措？&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;萬物皆可駭，駭完就變僵屍哩。  &lt;/li&gt;
&lt;li&gt;出了一堆安全性極低的 Web Camera，一被打下來，就被拿來當 DDoS 的 client 之一了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;serverless&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/technology-coding/%E7%94%A8-serverless-%E4%BB%8B%E6%8E%A5-line-bot-api-e46f172e8028#.7ia9rvkdv"&gt;用 Serverless 介接 LINE bot API&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;圖文並茂的一篇介紹文章。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software engineering&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feed.wordcorp.net/blog/post/dont-waste-dev-time"&gt;【一元翻譯作家】不要浪費開發時間：給新創公司的6個軟體開發建議&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看完覺得心有戚戚焉，跟目前在公司工作的狀況非常相似，可以拿來參考。  &lt;/li&gt;
&lt;li&gt;因為新創團隊往往人少，然後又必須快速開發，所以一定得有所取捨，無法盡善盡美。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;一、別在一開始就想要流程全自動&lt;br /&gt;
二、信任你的內部人員&lt;br /&gt;
三、把功能拆分成階段上線&lt;br /&gt;
四、盡量去追蹤網站的使用情況&lt;br /&gt;
五、工程師做做看客服，做做看業務&lt;br /&gt;
六、先讓介面簡單易用  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://Wix.com"&gt;It All Starts with Your Stunning Website&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看 Youtube 的時候看到這家的廣告點進去看到的，感覺可以很快且很方便生成漂亮的網站。  &lt;/li&gt;
&lt;li&gt;(2016/11/13 update) 不過最近陷入了用了 WordPress 的程式碼卻沒有遵守 GPL 而跟著公開 Wix 程式碼的爭議  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://ma.tt/2016/10/wix-and-the-gpl/"&gt;The Wix Mobile App, a WordPress Joint | Matt Mullenweg&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.theregister.co.uk/2016/10/31/wordpress_daddy_matt_mullenweg_says_wixcom_explicitly_contravenes_the_gpl/"&gt;WordPress daddy Matt Mullenweg says Wix.com 'explicitly contravenes the GPL' • The Register&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;批踢踢&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Gossiping/M.1477334602.A.5B8.html"&gt;Re: [問卦] 怎麼跟剛學程式的人解釋指標？ - 看板 Gossiping - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;指標竟然也可以講的如此煽情，只好收錄一下了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/C_Chat/M.1477243544.A.0E9.html"&gt;Re: [討論] 如何看出一個動漫腳色或作品,過氣與否?&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇超級認真的啊，根本已經是小論文的等級了啊啊啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;bbs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://spectrum.ieee.org/computing/networks/social-medias-dialup-ancestor-the-bulletin-board-system#.WBoy-tfJ4wY.twitter"&gt;Social Media’s Dial-Up Ancestor: The Bulletin Board System&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;BBS 的歷史，身為一個 BBS User，瞭解一下應該的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.businessinsider.com/george-hotz-comma-ai-shuts-down-driverless-car-project-2016-10"&gt;A famous hacker has terminated his self-driving car project after a government warning&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;唔，因為被政府說需要申請一堆文件才能上路，geohot 覺得太浪費生命所以不弄自動車，要去弄別的東西了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="bbs"></category><category term="bsd"></category><category term="cli"></category><category term="gcp"></category><category term="linux"></category><category term="machine learning"></category><category term="misc"></category><category term="python"></category><category term="security"></category><category term="serverless"></category><category term="software engineering"></category><category term="web"></category><category term="批踢踢"></category></entry><entry><title>Y2016W41</title><link href="https://blog.m157q.tw/posts/2016/10/17/y2016w41/" rel="alternate"></link><published>2016-10-29T01:18:18+08:00</published><updated>2016-10-29T01:18:18+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2016-10-17:posts/2016/10/17/y2016w41/</id><summary type="html">&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@fchern/%E9%97%9C%E6%96%BC%E8%AE%8A%E5%BC%B7%E9%80%99%E6%AA%94%E4%BA%8B-%E4%B8%83-3c80453eea2b#.61twki31m"&gt;關於變強這檔事（七）&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「我想微笑的地方，不是週末的小出遊，而是在世界的舞台上。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://djangopackages.org/"&gt;Django Packages&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個網站把 Django Apps 分門別類的整理  &lt;/li&gt;
&lt;li&gt;好像有點猛啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpadilla/django-project-template/"&gt;jpadilla/django-project-template: Project template layout for Django 1.10 &lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近新開的一個 django 專案有用到這個，感覺還不錯用，最明顯的應該是 django 的 setting.py 裡頭的 secret key 不會洩漏啦，已經用 django-configuration 幫忙設定好了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hyper.sh/"&gt;Hyper.sh - Effortless Docker Hosting&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看了一下 demo 好像有點猛啊，三兩下就可以使用 remote 的 docker 了？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/esrlabs/git-repo"&gt;esrlabs/git-repo: repo - The multiple repository tool (also works on MS Win&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;忘了為什麼會看到這個東西了...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pre-commit/pre-commit"&gt;pre-commit/pre-commit: A framework for managing and maintaining multi-langu&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;git 的 pre-commit 的複雜程度已經到有人需要一個 framework 來管理的程度了  &lt;/li&gt;
&lt;li&gt;這 framework 還有些預設的 pre-commit hooks 可以用  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pre-commit/pre-commit-hooks/tree/master/pre_commit_hooks"&gt;pre-commit-hooks/pre_commit_hooks at master ‧ pre-commit/pre-commit-hooks&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Blazemeter/taurus"&gt;Automation-friendly framework for Continuous Testing by&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以寫個 &lt;code&gt;yaml&lt;/code&gt; 設定檔來跑測試  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tldr-pages/tldr"&gt;tldr-pages/tldr: Simplified and community-driven man pages&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;簡化版的 man page，有 web, cli 還有許多語言的版本，號稱涵蓋 UNIX / Linux / OSX / SunOS , 雖然我稍微看了一下是少了滿多東西就是了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;google&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://analytics.googleblog.com/2016/10/improvements-coming-to-google-analytics.html"&gt;Improvements coming to the Google Analytics desktop UI&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Google Analytics 的桌面版介面要改版了呀  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.inside.com.tw/2016/10/16/google-is-splitting-its-search-index-prioritizing-mobile-over-desktop"&gt;Google 搜尋重大調整：打造獨立行動搜尋索引，與桌機版分開運行&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以搜尋到 App 的內容再加上使用 deep link 也太歡樂了吧  &lt;/li&gt;
&lt;li&gt;感覺重點應該是之後可以拿來投放廣告  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;k8s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ithome.com.tw/news/108748"&gt;【大規模容器叢集實例】雷亞遊戲借助Kubernetes，3人搞定百萬玩家App底層維運&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;k8s 業配文 （誤  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.longwin.com.tw/2016/09/linux-tail-follow-file-rotate-2016/"&gt;Linux tail 遇到 file rotate 要如何持續追蹤讀取&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看來要從 &lt;code&gt;tail -f&lt;/code&gt; 改成用 &lt;code&gt;tail -F&lt;/code&gt; 啦  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://keras.io/"&gt;Keras Documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;幫忙把 Theano 跟 TensorFlow 包起來一起用的 framework  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://denny.qollie.com/2016/09/21/corp-gov-shit/"&gt;創業的第零步：公司設立&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;開公司真的很多有的沒的得注意啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.theearthawaits.com/"&gt;The Earth Awaits - Find Cities in Your Budget&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;幫你找邊旅遊邊工作的理想地點（？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2016/10/04/6901/%e6%8a%8a-csc-%e5%8d%a1%e7%89%87%e8%83%8c%e9%9d%a2%e7%9a%84%e4%b8%89%e7%a2%bc-%e8%ae%8a%e6%88%90-otp-%e5%8b%95%e6%85%8b%e5%af%86%e7%a2%bc/"&gt;把 CSC (卡片背面的三碼) 變成 OTP (動態密碼)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;感覺就是加入了 2FA 的信用卡跟金融卡  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.aaronsw.com/weblog/hatethenews"&gt;I Hate the News (Aaron Swartz's Raw Thought)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看新聞很浪費時間，因為看與不看都對我們的生活沒多大的影響，不如專注在自己真正該做的事。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@shemag8/fuck-you-startup-world-ab6cc72fad0e#.6crscnb5z"&gt;Fuck You Startup World&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;又是一篇怨念很深的文章  &lt;/li&gt;
&lt;li&gt;超時工作、吃垃圾食物、鋪張浪費的活動、追不完的科技新聞、各種縮寫、說看電視浪費時間但都在討論網飛  &lt;/li&gt;
&lt;li&gt;算是高等級的靠北工程師文章吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@c9s/%E8%AB%87%E6%9E%B6%E6%A7%8B%E4%B9%8B%E7%9C%BC%E9%AB%98%E6%89%8B%E4%BD%8E-2f4e0c65faee"&gt;談架構之必要 — Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一年後再看一次  &lt;/li&gt;
&lt;li&gt;自己好像就是那種眼高手低的工程師啊  &lt;/li&gt;
&lt;li&gt;引以為戒  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://outofmemory.cn/code-snippet/4092/python-json-charset-type"&gt;为程序员服务&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;json.dumps()&lt;/code&gt; 要顯示中文的話記得要加上 &lt;code&gt;ensure_ascii=False&lt;/code&gt; 這個 option。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/11093236/use-logging-print-the-output-of-pprint"&gt;python - Use logging print the output of pprint - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 &lt;code&gt;pprint.pformat&lt;/code&gt; 可以在 &lt;code&gt;logging&lt;/code&gt; 中達到一般 &lt;code&gt;pprint&lt;/code&gt; 的效果，讓 &lt;code&gt;logging&lt;/code&gt; 的輸出更好看。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sylnsfar/qrcode/"&gt;sylnsfar/qrcode: artistic QR Code in Python （Animated GIF qr code）- Python &lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;竟然可以用 Python 做出這麼酷的 QR Code  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2016/09/24/6865/%e7%94%a8-rust-%e5%af%ab%e7%9a%84-ripgrep/"&gt;用 Rust 寫的 ripgrep&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「ripgrep 是用 Rust 寫的強化版 grep 工具，也就是類似於 ag 或是 ack 的工具，但想辦法讓執行的速度更快，盡可能接近於原始 grep 的速度。」  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BurntSushi/ripgrep"&gt;BurntSushi/ripgrep: ripgrep combines the usability of The Silver Searcher w&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.burntsushi.net/ripgrep/"&gt;ripgrep is faster than {grep, ag, git grep, ucg, pt, sift} - Andrew Gallant&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/orangetw/My-CTF-Web-Challenges"&gt;orangetw/My-CTF-Web-Challenges: Collection of CTF Web challenges I made&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Orange 出過的題目  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2016/09/csp.html"&gt;Content Security Policy 入门教程&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;網頁如果要載入其他 domain 的資源，就需要注意一下這個東西。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2016/08/migrate-from-http-to-https.html"&gt;HTTPS 升级指南&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;就是個如何設定 HTTPS 的簡易教學  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wix.com/"&gt;It All Starts with Your Stunning Website&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一直看到 youtube 投這個廣告  &lt;/li&gt;
&lt;li&gt;好像可以很快做出很潮的網站  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rowkey.me/blog/2016/08/30/recommend-sys/"&gt;推荐系统杂谈&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近 messenger bot 和各種 bot 崛起，公司想弄個推薦商品的 bot 直接投給使用者，剛好看到這篇，可以參考一下。  &lt;/li&gt;
&lt;li&gt;裡頭提到基本上 80% 都還是使用最多人看的商品、最多人買的商品以及買了這個商品的人還買了哪些商品，這類的推薦最有用。  &lt;/li&gt;
&lt;li&gt;然後還有一些時事性質的活動必須由人工下去推薦，例如：金州勇士隊連勝的話，就可以推薦一下今州勇士隊球衣之類的。  &lt;/li&gt;
&lt;li&gt;而剩下 20% 則是用 Machine Learning，通常這類的效果沒那麼好，如果要達到夠好的程度必須要花非常多的時間去調整。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;work&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jvns.ca/blog/2016/08/16/how-do-you-work-on-something-important/"&gt;How do you decide what to work on?&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者講述自己如何決定要從事哪方面的工作  &lt;ul&gt;
&lt;li&gt;要清楚知道自己的目標  &lt;/li&gt;
&lt;li&gt;工作以後會有很多瑣事，能夠專心在某一件事情上的時間很難得也很可貴。  &lt;/li&gt;
&lt;li&gt;沒有所謂「一定得去做的事」  &lt;/li&gt;
&lt;li&gt;要相信自己想做的事是有可能達成的  &lt;/li&gt;
&lt;li&gt;還有很多事是無法確定或未知的，只有遇到了才能知曉，但可以先做好一些準備。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;javascript, npm&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yarnpkg/yarn"&gt;yarnpkg/yarn: ?? Fast, reliable, and secure dependency management for JavaS&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;新的 JavaScript package manager，由 Facebook, Google 等大公司聯手推出，強調比 npm 快、比 npm 安全，才短短三天，在 GitHub 上的 star 數量就超過了 npm，看來又要長江後浪推前浪啦。  &lt;/li&gt;
&lt;li&gt;簡直就是為上禮拜才出爐的 &lt;a href="https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f?gi=7a4f7274c1de"&gt;How it feels to learn Javascript in 2016&lt;/a&gt; 做了最好的例證。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ihower/status/786767972127809537"&gt;發現 yarn 的 github star 星星數比 npm 還多了&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.zhihu.com/question/33634376/answer/125936478"&gt;有哪些看起來很高端的技術其實原理很暴力很初級？ - windleavez 的回答 - 知乎&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來魔獸世界殺了這麼多隱形的兔子啊  &lt;/li&gt;
&lt;li&gt;原來隱形的兔子這麼好用啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;youtube&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=Rpco93LTOPk"&gt;這我一定吉！反思饒舌《獻給現代教育體制的訴狀》(中文字幕) - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;真的是很棒的一部影片啊，對現代教育體制批評得鞭辟入裡。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;批踢踢&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1475806271.A.4EE.html"&gt;[公司] 竹間智能科技工作心得 (轉錄) - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;直接列入黑名單啦，這間太誇張了。  &lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;5.老闆和你約開會的時間 經常都約晚上七八九點 或超過十點都有&lt;br /&gt;
而且老闆的行程常delay或更動 可能最後實際開會的時間已到十一點  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;6.據說有同事因為要求加班費 而被約談  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;7.有一次 老闆星期六在微信上說 我們的APP應該要能唱歌/播放歌曲&lt;br /&gt;
到了星期天 老闆說 為什麼還不能播歌 這功能 我今天就要看到一版上線  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;8.曾有同事 因為在假日的晚上十點半被老闆要求立刻實作新功能 本來他們組的PM想安撫&lt;br /&gt;
一下老闆 明天早上再做&lt;br /&gt;
結果老闆在群組裡說 "不是明天 是現在!!"&lt;br /&gt;
於是PM只好晚上11點找工程師來公司寫code 不知道寫到幾點&lt;br /&gt;
沒多久後那位工程師同事離職了」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;9.之前辦公室有一位做machine learning的同事&lt;br /&gt;
被老闆在微信要求 machine learning 正確率必須要做到 100%&lt;br /&gt;
後來那位同事也離職了  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="blog"></category><category term="django"></category><category term="docker"></category><category term="gae"></category><category term="gcp"></category><category term="git"></category><category term="github"></category><category term="google"></category><category term="https"></category><category term="interview"></category><category term="k8s"></category><category term="linux"></category><category term="machine learning"></category><category term="misc"></category><category term="npm"></category><category term="programmer"></category><category term="programming"></category><category term="ptt"></category><category term="python"></category><category term="qrcode"></category><category term="rust"></category><category term="security"></category><category term="taiwan"></category><category term="trivia"></category><category term="web"></category><category term="work"></category><category term="javascript"></category><category term="youtube"></category><category term="批踢踢"></category></entry><entry><title>Y2016W37</title><link href="https://blog.m157q.tw/posts/2016/09/18/y2016w37/" rel="alternate"></link><published>2016-09-18T23:44:38+08:00</published><updated>2016-09-18T23:44:38+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2016-09-18:posts/2016/09/18/y2016w37/</id><summary type="html">&lt;h3&gt;Coscup&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://breezymove.blogspot.tw/2016/09/coscup-2016.html"&gt;風吹草動: 觀 COSCUP 2016 有感&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;也是一篇還不錯的 COSCUP 2016 的心得文，我覺得值得思考一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Devops&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devopstw.github.io/fb_post_list/#!index.md"&gt;DevOps Taiwan FB 社團貼文整理&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;先收藏起來，裏面看起來滿多不錯的好文的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.weiguda.com/blog/18/"&gt;Django-Rest-Framework 教程: 快速入门 | 上海味股达信息科技有限公司&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;就是個官網 Tutorial 的翻譯 (?)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.evanlin.com/til-docker-remote-api/"&gt;[TIL] 關於 Docker Remote API 的學習&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好奇這東西的安全性  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.s10g.tw/posts/2016/09/13/docker-jenkins-update/"&gt;Solomon's Notebook – docker 更新 jenkins&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這樣好像挺方便的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2016/08/Stackdriver-Error-Reporting-theres-a-mobile-app-for-that.html"&gt;Google Cloud Platform Blog: Stackdriver Error Reporting: there’s a mobile app for that&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;所以看 GCP 的 Error 可以用手機開 App 直接看了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ChristosChristofidis/awesome-deep-learning"&gt;GitHub - ChristosChristofidis/awesome-deep-learning: A curated list of awesome Deep Learning tutorials, projects and communities.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一樣也是個先收藏的概念，還沒有仔細看。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lengstrom/falcon"&gt;GitHub - lengstrom/falcon: Chrome extension for full text history search!&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;拿來找查過什麼東西好像挺方便的，不過我比較擔心的是它紀錄了哪些東西。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Javascript&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ju5td0m7m1nd/NTHU_FORCE_ENROLLMENT"&gt;GitHub - ju5td0m7m1nd/NTHU_FORCE_ENROLLMENT&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;時不時會出現的拿選課系統來練功的同學？這次是清大的 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@vzkuma/4-steps-for-learning-deep-learning-86f11fcee54#.a7k7yf5rh"&gt;4 Steps for Learning Deep Learning – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是 Deep Learning 101 吧？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jvns.ca/blog/2016/09/12/how-i-got-a-cs-degree-without-learning-what-a-system-call-is/"&gt;How I got a CS degree without learning what a system call is - Julia Evans&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;覺得值得思考一下，畢竟資工涵蓋的太廣了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.leiphone.com/news/201609/9kQ3T4nyzFbINyDS.html"&gt;大疆工程师教你如何成为一名机器人工程师（上） | 雷锋网&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好詳細的經驗分享啊 而且還有三部曲  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Reactjs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kdchang/reactjs101/tree/master/Ch01"&gt;reactjs101/Ch01 at master · kdchang/reactjs101 · GitHub&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好像滿紅的，雖然我沒寫 ReactJS，但也是收藏一下，畢竟是臺灣人寫的，值得多多支持。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://legalhackers.com/advisories/MySQL-Exploit-Remote-Root-Code-Execution-Privesc-CVE-2016-6662.html"&gt;MySQL-Exploit-Remote-Root-Code-Execution-Privesc-CVE-2016-6662.html&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是這週也是今年最重大的資安事件吧，MySQL 全版本加上其衍生出來的 MariaDB 和 PerconaDB 全部中獎，雖然因為必須重新啟動 MySQL sever 後 exploit 才會生效大大降低了其侵略性，但還是有一定的威脅性。反而不更新不重開的系統不會中獎。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.trendmicro.com.tw/?p=15932"&gt;2015 重大資安新聞回顧 | 資安趨勢&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;因為上面那個事件，所以回顧了一下去年的重大資安事件。看來就 Adobe Flash Player 幾個 zero-day，然後比較多新聞的 Hacking Team 外洩。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ithome.com.tw/voice/93355"&gt;2014 IT大事回顧 | iThome&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;上半年就 OpenSSH 的 HeartBleed，下半年就 Bash 的 ShellShock。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/photo.php?fbid=10207281283730583&amp;amp;set=gm.1068839919859080&amp;amp;type=3&amp;amp;theater"&gt;柯維然 - 大家好，我目前服務於新竹市警察局&lt;br /&gt;
常聽到很多民眾詢問&lt;br /&gt;
我要怎麼申請？派出所在哪裡？罰單怎麼繳？... | Facebook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;柯官又有新作品了，用 Line API 開發了一個給民眾的 Q&amp;amp;A 機器人。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Tech&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://techfeed.today/2016/09/06/%E9%9B%99%E9%8F%A1%E9%A0%AD%E6%8A%80%E8%A1%93%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90/"&gt;雙鏡頭技術深入剖析 - TechFeed科技讀報&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;感覺好像一堆電腦視覺課的內容都可以玩了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gushi.tw/archives/34451"&gt;那些年，我們說的契丹話&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來跳躍、角色等等詞會有破音字的讀法是因為這樣嗎？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Vim&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2016/09/13/6833/vim-8-0/"&gt;Vim 8.0... | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;竟然有 Packages 了？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://linuxtoy.org/archives/vim-80-released.html"&gt;Vim 8.0 发布 · LinuxTOY&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是 release note 的中文翻譯版？底下留言也有提到有人已經轉去用 neovim 很久了，身邊也有認識的改用 neovim 哩，但我自己是還在用 Vim 就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.brucefeng.info/post/high-qps-service"&gt;当服务QPS增高时我们做什么&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;寫的沒有很多，但我覺得都有點到重點，剛好在公司的工作內容也有碰到這部份。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Machine learning"></category><category term="Programming"></category><category term="Tech"></category><category term="Docker"></category><category term="Gcp"></category><category term="Vim"></category><category term="Javascript"></category><category term="Coscup"></category><category term="Reactjs"></category><category term="Security"></category><category term="Web"></category><category term="Github"></category><category term="Taiwan"></category><category term="Devops"></category><category term="Trivia"></category><category term="Django"></category></entry><entry><title>《科學的極致：漫談人工智能》</title><link href="https://blog.m157q.tw/posts/2016/07/12/%E7%A7%91%E5%AD%B8%E7%9A%84%E6%A5%B5%E8%87%B4-%E6%BC%AB%E8%AB%87%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/" rel="alternate"></link><published>2016-07-12T15:08:48+08:00</published><updated>2016-07-12T15:08:48+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2016-07-12:posts/2016/07/12/科學的極致-漫談人工智能/</id><summary type="html">&lt;p&gt;&lt;img alt="封面" src="/files/科學的極致-漫談人工智能/cover.jpg" /&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;又是一篇拖了很久的讀書紀錄，&lt;br /&gt;
這本書在今年的 5 月 22 日就讀完了，&lt;br /&gt;
可是因為我的拖延症，&lt;br /&gt;
一直到現在才寫這篇紀錄，&lt;br /&gt;
所以不意外的，&lt;br /&gt;
記憶可能會稍嫌模糊。  &lt;/p&gt;
&lt;p&gt;該還的文章債還是得還，&lt;br /&gt;
欠的不是別人，債主正是自己，&lt;br /&gt;
不寫點什麼紀錄一下的話，&lt;br /&gt;
我還真的會忘了自己做了這件事，&lt;br /&gt;
花點時間紀錄自己讀了書的感覺，&lt;br /&gt;
我覺得還是挺值得的。  &lt;/p&gt;
&lt;p&gt;這本書應該是今年農曆過年的時候，&lt;br /&gt;
跑去新竹清華大學對面的若水堂逛的時候買的其中一本，&lt;br /&gt;
我已經忘了自己為何那時候會跑去新竹了。&lt;br /&gt;
會買這本書是因為大學修人工智慧概論的狀況很差，&lt;br /&gt;
然後 Alpha Go 的 Deep Learning 又正夯，&lt;br /&gt;
覺得應該從頭把人工智慧好好瞭解一遍，&lt;br /&gt;
畢竟當初也不是沒興趣，&lt;br /&gt;
只是遇到了頗呵的教授然後自己又不長進。&lt;br /&gt;
看到這本書封面寫著科普，&lt;br /&gt;
就拿起來看了一下目錄和稍微翻閱了一下，&lt;br /&gt;
覺得範圍頗廣而且介紹也還算詳細，&lt;br /&gt;
而且沒記錯的話是 2015 年的書，&lt;br /&gt;
內容也還算新，就買了。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;讀後感&lt;/h2&gt;
&lt;p&gt;讀了之後發現除了第一章以外，其他一點都不科普，不然就是我的知識水平太低。&lt;br /&gt;
我甚至有一頁是全部用螢光筆畫起來的，因為整頁我都看不懂。 Orz  &lt;/p&gt;
&lt;p&gt;這本書真的是從頭開始講起，一直講到現代的發展，而且介紹的範圍也還算廣。&lt;br /&gt;
但我現在的記憶程度大概只能把一些關鍵字列出來：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;圖靈機、Halting problem  &lt;/li&gt;
&lt;li&gt;符號學派、行為學派、聯結學派  &lt;/li&gt;
&lt;li&gt;SVM, 湧現, 電腦視覺，認數字  &lt;/li&gt;
&lt;li&gt;氣象預報、Captha  &lt;/li&gt;
&lt;li&gt;深度學習  &lt;/li&gt;
&lt;li&gt;人工智慧這三十年在理論方面基本上沒有太大的進展，大部份都還是用早期那些被提出來的理論做延伸的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每一章的主題都還蠻明確的，&lt;br /&gt;
基本上可以把每章當作個小論文來看待，&lt;br /&gt;
因為每章的最後都會附上 Reference，&lt;br /&gt;
不愁沒有延伸閱讀的材料。  &lt;/p&gt;
&lt;p&gt;我想有機會的話應該會再把這本書反覆讀個幾遍，&lt;br /&gt;
畢竟牽涉的範圍實在太廣，讀了一遍我也只能記了個大概，&lt;br /&gt;
有些太過理論與太過數學的地方我是跳過沒看的，&lt;br /&gt;
但我自己也知道，真的要看懂的話，這些被我跳過的地方才是關鍵啊。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Related Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.books.com.tw/products/CN11262408"&gt;博客來-科學的極致：漫談人工智能&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://ist.csu.edu.cn/ai/Ai/chapter1/13.htm"&gt;http://ist.csu.edu.cn/ai/Ai/chapter1/13.htm&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Computer Science"></category><category term="Artificial Intellegance"></category><category term="AI"></category><category term="Machine Learning"></category></entry></feed>