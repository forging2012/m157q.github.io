<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Just for noting</title><link>https://blog.m157q.tw/</link><description></description><lastBuildDate>Sun, 26 Jun 2016 14:55:00 +0800</lastBuildDate><item><title>《認識虛擬化技術的第一本書》</title><link>https://blog.m157q.tw/posts/2016/06/23/%E8%AA%8D%E8%AD%98%E8%99%9B%E6%93%AC%E5%8C%96%E6%8A%80%E8%A1%93%E7%9A%84%E7%AC%AC%E4%B8%80%E6%9C%AC%E6%9B%B8/</link><description>&lt;p&gt;&lt;img alt="cover" src="/files/認識虛擬化技術的第一本書/cover.jpg" /&gt;  &lt;/p&gt;
&lt;h2&gt;心得&lt;/h2&gt;
&lt;p&gt;因為大學的時候並沒有修過虛擬化技術相關的課程，&lt;br /&gt;
然後工作上又有用到，&lt;br /&gt;
剛好看到在書架上就拿來翻了。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;沒想到也是一個多月前的事了，現在才寫這篇文章，真的是拖延症患者的日常。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這本書的封面講起來似乎很好懂，&lt;br /&gt;
但看完之後我覺得還是得要有資工相關領域的知識背景才比較看得懂，&lt;br /&gt;
非資訊相關科系的人看這本書可能還是會有點吃力。  &lt;/p&gt;
&lt;p&gt;因為是微軟的日本 Evangelist 寫的書，&lt;br /&gt;
所以都以 Azure 作為範例，&lt;br /&gt;
AWS 跟 GCP 的部份著墨不多，&lt;br /&gt;
但大部份是講些基本觀念，&lt;br /&gt;
所以即便我把跟 Azure 實作範例相關的部份都跳掉，&lt;br /&gt;
還是有學到一些不知道的東西，&lt;br /&gt;
稍微紀錄在底下，&lt;br /&gt;
給自己之後復習用。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;筆記&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Overlay_(programming)"&gt;Overlay&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;當主記憶體必須執行難以負荷的應用程式時，先將該應用程式分割成固定的大小，再依需求逐一載入主記憶體的功能。  &lt;/li&gt;
&lt;li&gt;在硬體還十分昂貴的年代，這是個非常重要的功能。  &lt;/li&gt;
&lt;li&gt;必須先掌握主記憶體與輔助記憶體之間的資料交換才能使用，在虛擬記憶體出現之後，這個功能就愈來愈少被使用了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Logical_partition"&gt;LPAR (Logical Partition)&lt;/a&gt; &amp;amp; &lt;a href="https://en.wikipedia.org/wiki/PR/SM"&gt;PR/SM (Processor Resource/System Manager)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;於 1987 年左右問世  &lt;/li&gt;
&lt;li&gt;LPAR  &lt;ul&gt;
&lt;li&gt;在系統裡建立多個邏輯分區，讓一台電腦看起來擁有兩套系統的技術  &lt;/li&gt;
&lt;li&gt;只要有親自安裝過 Linux、FreeBSD 或是灌過雙系統的人應該都不陌生。  &lt;blockquote&gt;
&lt;p&gt;我是看了這本書才知道可以縮寫成 LPAR ...  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PR/SM  &lt;ul&gt;
&lt;li&gt;能以「將 CPU 的資源劃分給主環境」的概念進行定義，是一種管理系統與資源的技術。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Hyper-V"&gt;Hyper-V&lt;/a&gt; 的歷史  &lt;ul&gt;
&lt;li&gt;原本是美國 Connectix 公司開發的 Macintosh 專用虛擬化軟體 &lt;a href="https://en.wikipedia.org/wiki/Windows_Virtual_PC#Virtual_PC_by_Connectix"&gt;Virtual PC&lt;/a&gt;，是一套為了在 Macintosh 執行 Windows 應用程式而開發的軟體，後來被 Microsoft 併購。  &lt;/li&gt;
&lt;li&gt;在 Windows 7 以前被稱之為 Windows Virtual PC  &lt;/li&gt;
&lt;li&gt;Windows 8 之後又重新以 Hyper-V 的名字出現  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/X86_virtualization#Intel_virtualization_.28VT-x.29"&gt;Intel VT-x&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原本叫作 Vanderpool  &lt;/li&gt;
&lt;li&gt;將 Intel x86 虛擬化的功能  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/X86_virtualization#I.2FO_MMU_virtualization_.28AMD-Vi_and_Intel_VT-d.29"&gt;Intel VT-d&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;I/O MMU virtualization  &lt;/li&gt;
&lt;li&gt;An input/output memory management unit (IOMMU) allows guest virtual machines to directly use peripheral devices, such as Ethernet, accelerated graphics cards, and hard-drive controllers, through DMA and interrupt remapping. This is sometimes called PCI passthrough.  &lt;/li&gt;
&lt;li&gt;以支援 I/O 處理的虛擬化所開發的功能  &lt;/li&gt;
&lt;li&gt;使用 DMA 記憶體空間的 map/remap 功能的程式，在其他 guest OS 使用到 Hypervisor 裡正被 guest OS 使用的記憶體空間時，就會導致資料毀損。為了避免這種問題發生，guest OS 或 Hypervisor 會管理硬體的哪個位址指定了什麼內容，或是進行排他處理，但這會對效能產生極大的影響。若將這類問題直接交由硬體負責，就可以在不犧牲效能的情況下安全得使用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Second_Level_Address_Translation"&gt;SLAT&lt;/a&gt; aka nested paging  &lt;ul&gt;
&lt;li&gt;Second Level Address Translation  &lt;/li&gt;
&lt;li&gt;讓硬體擔起多個 guest OS 與 host OS 之間的位址處理，也就是更安全得提供高效能的虛擬化支援功能。  &lt;/li&gt;
&lt;li&gt;Intel 的 CPU 將這項功能稱為 EPT (Extended Page Table)  &lt;/li&gt;
&lt;li&gt;AMD 的 CPU 將這項功能稱為 NPT (Nested Page Table)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Physical-to-Virtual"&gt;P2V&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Physical to Virtual  &lt;/li&gt;
&lt;li&gt;"Involves the process of decoupling and migrating a physical server's operating system (OS), applications, and data from that physical server to a virtual-machine guest hosted on a virtualized platform."  &lt;/li&gt;
&lt;li&gt;類似用語：V2V (Virtual to Virtual), V2C (Virtual to Cloud), P2C (Physical to Cloud)  &lt;blockquote&gt;
&lt;p&gt;Buzzwords !!!  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;書籍連結&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tenlong.com.tw/items/9863478431?item_id=1010879"&gt;天瓏網路書店 | 認識虛擬化技術的第一本書（超圖解，學習無負擔）&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.books.com.tw/products/0010704880"&gt;博客來-認識虛擬化技術的第一本書（超圖解，學習無負擔）&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Sun, 26 Jun 2016 14:55:00 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-06-23:posts/2016/06/23/認識虛擬化技術的第一本書/</guid><category>virtualization</category></item></channel></rss>