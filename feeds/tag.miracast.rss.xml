<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Just for noting</title><link>https://blog.m157q.tw/</link><description></description><lastBuildDate>Mon, 15 Jan 2018 15:49:47 +0800</lastBuildDate><item><title>如何在 Linux 上使用 Miracast</title><link>https://blog.m157q.tw/posts/2018/01/08/miracast-on-linux/</link><description>&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;先說結論，試了以下兩個專案：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/albfan/miraclecast"&gt;GitHub - albfan/miraclecast: Connect external monitors to your system via Wifi-Display specification also known as Miracast&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/derekdai/miraclecast"&gt;GitHub - derekdai/miraclecast: Connect external monitors to your system via Wifi-Display specification also known as Miracast&lt;/a&gt; 這個 fork 出去修改的版本解決了比較多的問題，但最後嘗試了一番還是沒辦法順利使用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intel/wds"&gt;GitHub - intel/wds: Wireless Display Software For Linux OS (WDS)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;嗯，沒錯，是那個 Intel。  &lt;/li&gt;
&lt;li&gt;這個算是試到後來可以動的，但結果不盡理想，畫面非常卡，聲音也沒有出來，猜測是還得去調整其他 &lt;code&gt;gstreamer&lt;/code&gt; 的參數，這篇會以紀錄 &lt;code&gt;wds&lt;/code&gt; 為主。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;2017 年 5 月換租屋處後，客廳有台螢幕，雖然不大，但至少比筆電的螢幕還大。想說有時候筆電或手機可以把畫面投到上面用大螢幕看比較爽，然後又懶的接有線的 VGA 或 HDMI，就想說來買個無線投影裝置。  &lt;/p&gt;
&lt;p&gt;於是就在 6 月初左右就上網買了便宜的無線投影裝置，該裝置對於 iOS 裝置的支援是使用 &lt;a href="https://en.wikipedia.org/wiki/Digital_Living_Network_Alliance"&gt;DLNA&lt;/a&gt;，對於 Android 裝置的支援則是使用 &lt;a href="https://en.wikipedia.org/wiki/Miracast"&gt;Miracast&lt;/a&gt;，當時是我第一次知道 Miracast。  &lt;/p&gt;
&lt;p&gt;想說筆電是跑 Arch Linux，和 Android 一樣都是 based on Linux，所以應該也可以使用 Miracast 吧？才發現可以用的東西少的可憐，也不一定會動。在 GitHub 上找到了 2 看起來比較有希望的專案，花了好幾個小時，看程式碼、查閱相關文件，終於成功把筆電的畫面透過 Miracast 無線投影到螢幕上。  &lt;/p&gt;
&lt;p&gt;後來因為室友買了個攜帶型投影機送了 Chromecast 之後就沒有使用 Miracast 了，所以這篇算是個半殘文，但還是想紀錄一下，畢竟花了不少時間研究。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;關於 Miracast&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可以把它想像成用 Wi-Fi 來傳輸 HDMI 訊號，所以可以不用接線就能把畫面投影到其他有支援 Miracast 的裝置上。  &lt;/li&gt;
&lt;li&gt;除了不用接線外，也不需要有其他的裝置或是要連接到某個 Wi-Fi Access Point。  &lt;ul&gt;
&lt;li&gt;這點真的很方便啊，不用買其他裝置就能支援無線投影。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2012 底，由 Wi-Fi Alliance 推出，也是 Android 4.2 的重要新功能之一，但在 2015 年推出的 Android 6.0 卻消失了。  &lt;/li&gt;
&lt;li&gt;Miracast 不知道為啥一直沒有成為標準。  &lt;/li&gt;
&lt;li&gt;Google 後來推出了 Chromecast，基本上這裝置的功能完全和 Miracast 衝突，而且我覺得沒有比較好，除了得額外多接一個 Chromecast 以外，Chromecast 還需要一個額外的 Wi-Fi Access Point，更別說 Chromecast 實際使用上的體驗真的是頗差的。  &lt;/li&gt;
&lt;li&gt;關於 Miracast 詳細介紹，可以參考這篇繁體中文的文章：&lt;a href="http://www.2cm.com.tw/technologyshow_content.asp?sn=1304260008"&gt;以鏡射與Wi-Fi技術為基礎　Miracast實現多螢影音串流 - 技術前瞻 - 新通訊元件雜誌&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;紀錄&lt;/h2&gt;
&lt;p&gt;因為 &lt;a href="https://github.com/derekdai/miraclecast"&gt;MiracleCast&lt;/a&gt; 沒試成功，所以只會以紀錄 &lt;a href="https://github.com/intel/wds"&gt;WDS&lt;/a&gt; 為主。&lt;br /&gt;
其實還有找到一個 &lt;a href="https://cgit.freedesktop.org/~dvdhrm/openwfd/"&gt;openwfd&lt;/a&gt;，不過因為看起來已經年久失修了，所以就沒去試了。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;WDS 的裝置分類&lt;/h3&gt;
&lt;p&gt;首先，WDS 把使用 Miracast 的裝置區分為以下兩種：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sink: 要呈現畫面的裝置。  &lt;/li&gt;
&lt;li&gt;Source: 要把畫面投影出去的裝置。  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;我使用 WDS 時遇到的問題&lt;/h3&gt;
&lt;p&gt;然後把當時遇到的問題相關連結都先列出來一下：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lists.01.org/pipermail/wysiwidi-dev/2015-April/000012.html"&gt;[wysiwidi-dev] desktop_source and mirroring display&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intel/wds/issues/147"&gt;Working with Linux as Source and Miracast Dongle · Issue #147 · intel/wds · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intel/wds/issues/87"&gt;source video params should be tweaked for desktop mirroring use case · Issue #87 · intel/wds · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intel/wds/issues/133"&gt;Black/frozen screen · Issue #133 · intel/wds · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;WDS 安裝與使用步驟&lt;/h3&gt;
&lt;p&gt;WDS 會用到以下幾個程式，必須預先安裝：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wpa_supplicant&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;2.4 以後的版本，且必須要在 build 的時候開啟 &lt;code&gt;CONFIG_P2P=y&lt;/code&gt;, &lt;code&gt;CONFIG_WIFI_DISPLAY=y&lt;/code&gt;, &lt;code&gt;CONFIG_CTRL_IFACE_DBUS_NEW=y&lt;/code&gt; 這 3 個參數  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connman&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;必須是 1.28 以後的版本  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gstreamer&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下來就可以照著以下步驟來嘗試：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/intel/wds.git&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd wds&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;修改程式碼  &lt;ul&gt;
&lt;li&gt;根據 &lt;a href="https://github.com/intel/wds/issues/87"&gt;source video params should be tweaked for desktop mirroring use case · Issue #87 · intel/wds · GitHub&lt;/a&gt; 和 &lt;a href="https://github.com/intel/wds/issues/133"&gt;Black/frozen screen · Issue #133 · intel/wds · GitHub&lt;/a&gt; 這兩個 issues 裡頭提到的解法，我們得修改程式碼裡頭用到 &lt;code&gt;gstreamer&lt;/code&gt; 的參數，不然只會出現黑的畫面，這部份可能因人而異，我只就我遇到的部份描述，附上 git diff，這個參數還有調整的空間就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;diff --git a/mirac_network/mirac-gst-test-source.cpp b/mirac_network/mirac-gst-test-source.cpp  &lt;/span&gt;
&lt;span class="gh"&gt;index 12c2623..821e38a 100644  &lt;/span&gt;
&lt;span class="gd"&gt;--- a/mirac_network/mirac-gst-test-source.cpp  &lt;/span&gt;
&lt;span class="gi"&gt;+++ b/mirac_network/mirac-gst-test-source.cpp  &lt;/span&gt;
&lt;span class="gu"&gt;@@ -42,7 +42,9 @@ MiracGstTestSource::MiracGstTestSource (wfd_test_stream_t wfd_stream_type, std::  &lt;/span&gt;
     } else if (wfd_stream_type == WFD_TEST_VIDEO) {  
         gst_pipeline = &amp;quot;videotestsrc ! videoconvert ! video/x-raw,format=I420 ! x264enc ! mpegtsmux ! rtpmp2tpay ! udpsink name=sink &amp;quot; + hostname_port;  
     } else if (wfd_stream_type == WFD_DESKTOP) {  
&lt;span class="gd"&gt;-        gst_pipeline = &amp;quot;ximagesrc ! videoconvert ! video/x-raw,format=I420 ! x264enc tune=zerolatency ! mpegtsmux ! rtpmp2tpay ! udpsink name=sink &amp;quot; + hostname_port;  &lt;/span&gt;
&lt;span class="gi"&gt;+        gst_pipeline = &amp;quot;ximagesrc use-damage=0 ! videoscale ! videoconvert ! video/x-raw,format=I420,width=1440,height=900,framerate=50/1 ! x264enc aud=false bitrate=2048 dct8x8=true vbv-buf-capacity=1000 tune=stillimage+zerolatency byte-stream=true ! video/x-h264,profile=high ! muxer. pulsesrc device=alsa_output.pci-0000_00_1b.0.analog-stereo.monitor ! audioconvert ! audio/x-raw,channels=2,rate=44100 ! faac ! audio/mpeg,mpegversion=4 ! muxer. mpegtsmux name=muxer alignment=0 ! rtpmp2tpay pt=33 ! udpsink name=sink sync=false &amp;quot; + hostname_port;  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cmake .&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo wpa_supplicant -i wlp0s20u1 -ddt -u&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;wlp0s20u1&lt;/code&gt; 請換成你的無線網卡裝置名稱  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ddt&lt;/code&gt;: 用來開啟比較詳細的 debug 訊息，且在訊息加上 timestamp  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; : 用來開啟 DBus control interface  &lt;ul&gt;
&lt;li&gt;如果 &lt;code&gt;wpa_supplicant&lt;/code&gt; 在編譯的時候沒有加入上面提到的 &lt;code&gt;CONFIG_CTRL_IFACE_DBUS_NEW=y&lt;/code&gt; 的話，這個選項就不會有用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;執行這行指令的時候最好是先把原本有在用的 network manager 關掉，避免衝突。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo connmand -r -n -d -i wlp0s20u1&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;wlp0s20u1&lt;/code&gt; 請換成你的無線網卡裝置名稱  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 不要開啟 DNS proxy  &lt;ul&gt;
&lt;li&gt;官方的 README 上沒有加這個選項，是我自己加上去的，我記得當時可以解掉一些問題，但現在忘了是什麼問題了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 不要在背景執行，方便看到 debug 訊息  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 開啟 debug 模式  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo connmanctl&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;開啟 connman 的互動式介面  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; enable wifi&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; enable p2p&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; scan p2p&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; peers&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;檢查 p2p 功能是否正常  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; agent on&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果以上都正常的話，應該就會像&lt;a href="https://github.com/intel/wds/wiki"&gt;官方在其 GitHub repo 的 wiki 所列出的截圖&lt;/a&gt;一樣：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android 手機要無線投影到電腦 (Sink mode)  &lt;ul&gt;
&lt;li&gt;打開 Miracast 選單應該就可以看到電腦裝置  &lt;/li&gt;
&lt;li&gt;選擇投影到電腦上  &lt;/li&gt;
&lt;li&gt;許可連線  &lt;/li&gt;
&lt;li&gt;沒問題的話應該就可以在電腦上跳出一個視窗顯示手機的畫面了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;電腦要無線投影到其他裝置 (Source mode)  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; scan&lt;/code&gt; 可以重新掃描附近的裝置  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; peers&lt;/code&gt; 列出可以連線的裝置  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; connect N&lt;/code&gt; 連線到該裝置  &lt;/li&gt;
&lt;li&gt;許可連線  &lt;/li&gt;
&lt;li&gt;正常的話其他裝置應該就會顯示電腦上的畫面了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;還沒到完全能動，畫面有點卡，而且沒有聲音，猜測是還得去調整 &lt;code&gt;gstreamer&lt;/code&gt; 的參數。  &lt;/p&gt;
&lt;p&gt;但就紀錄下來，也給可能有遇到這個問題想要解決的人參考，如果有幫助到你的話很歡迎留言跟我說一下，如果試出了更好的結果當然更棒就是。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Digital_Living_Network_Alliance"&gt;Digital Living Network Alliance - Wikipedia&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Miracast"&gt;Miracast - Wikipedia&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.computerworld.com/article/3239864/android/android-nostalgia-old-features.html"&gt;Android nostalgia: 13 once-trumpeted features that quietly faded away | Computerworld&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.2cm.com.tw/technologyshow_content.asp?sn=1304260008"&gt;以鏡射與Wi-Fi技術為基礎　Miracast實現多螢影音串流 - 技術前瞻 - 新通訊元件雜誌&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Mon, 15 Jan 2018 15:49:47 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2018-01-08:posts/2018/01/08/miracast-on-linux/</guid><category>Linux</category><category>Miracast</category><category>2018 iT 邦幫忙鐵人賽</category></item><item><title>Y2017W22</title><link>https://blog.m157q.tw/posts/2017/06/05/y2017w22/</link><description>&lt;h3&gt;alphago&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pingyeh.blogspot.tw/2017/05/alphago.html"&gt;ping不見路:  懂規則不懂規矩的 AlphaGo&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來那張五個人哭笑不得的照片是因為這樣啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;bitcoin&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@andylinee/%E6%AF%94%E7%89%B9%E5%B9%A3-%E7%AB%AF%E5%B0%8D%E7%AB%AF%E9%9B%BB%E5%AD%90%E7%8F%BE%E9%87%91%E7%B3%BB%E7%B5%B1-bitcoin-a-peer-to-peer-electronic-cash-system-i-8a52de003c9"&gt;《比特幣：端對端電子現金系統》（Bitcoin: A Peer-to-Peer Electronic Cash System）I&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;隨著比特幣今年暴漲，開始看到有更多人對用區塊鏈技術實現的加密貨幣產生興趣，所以就趁著連假把之前整理到一半的比特幣論文重新翻譯，提供給大家參考！此篇為論文的前半部分，下半部分將會在下一篇。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/06/01/%E5%85%A8%E9%9D%A2%E7%AB%84%E6%94%B9-git-commit-%E6%AD%B7%E5%8F%B2%E8%A8%98%E9%8C%84/amp/"&gt;全面竄改 git commit 歷史記錄 | louie_lu's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;想到以前打某個 CTF 好像玩過更有趣的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/blog/2370-introducing-temporary-interaction-limits"&gt;Introducing temporary interaction limits · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://szlin.me/2017/05/28/linux-kernel-perf-openvpn/"&gt;以 Linux kernel 效能工具 – perf 來分析探討硬體加密之瓶頸 – SZ Lin  &amp;amp; Embedded Linux&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linuxquestions.org/questions/linux-newbie-8/fedora-11-sudo-has-a-20-second-start-delay-732291/#post3575840"&gt;Fedora 11 sudo has a 20 second start delay&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;沒把自己電腦的 hostname 加到 &lt;code&gt;/etc/hosts&lt;/code&gt; 的話可能會遇到 &lt;code&gt;sudo&lt;/code&gt; hang 住的狀況  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kazunori279/TensorFlow-for-absolute-beginners"&gt;GitHub - kazunori279/TensorFlow-for-absolute-beginners: TensorFlow for absolute beginners: a 3-hour codelab for self-learning neural network basics without hard math.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/05/28/7352/%e9%80%8f%e9%81%8e-nn-%e9%a1%9e%e7%a5%9e%e7%b6%93%e7%b6%b2%e8%b7%af-%e8%a8%93%e7%b7%b4%e5%a5%bd%e7%9a%84%e7%b3%bb%e7%b5%b1%ef%bc%8c%e7%9b%b4%e6%8e%a5%e6%8a%8a%e5%9c%96%e7%89%87%e8%bd%89%e6%88%90/"&gt;透過 NN (類神經網路) 訓練好的系統，直接把圖片轉成程式碼 | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這好像有點神  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;miracast&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.2cm.com.tw/technologyshow_content.asp?sn=1304260008"&gt;以鏡射與Wi-Fi技術為基礎　Miracast實現多螢影音串流 - 技術前瞻 - 新通訊元件雜誌&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Miracast是Wi-Fi聯盟的認證名稱，原來的技術規格名稱為Wi-Fi Display，是Wi-Fi聯盟為鞏固其在無線應用的龍頭地位，基於既有無線通訊技術提出的殺手級應用。該技術與認證項目由Wi-Fi聯盟中的行動與消費性電子設備製造商及晶片廠商  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/derekdai/miraclecast"&gt;GitHub - derekdai/miraclecast: Connect external monitors to your system via Wifi-Display specification also known as Miracast&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;The MiracleCast project provides software to connect external monitors to your system via Wi-Fi. It is compatible to the Wifi-Display specification also known as Miracast. MiracleCast implements the Display-Source as well as Display-Sink side.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/01org/wds"&gt;01org/wds: Wireless Display Software For Linux OS (WDS)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;WDS is a set of libraries for developers who want to build Wi-Fi Display applications on linux.  More information can be found on the mailing list and the wiki.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://teddy-chen-tw.blogspot.tw/2017/06/scrum.html"&gt;搞笑談軟工: 高效率Scrum團隊的九個模式&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotblogs.com.tw/hatelove/2017/05/30/my-opinions-of-code-coverage-and-tdd"&gt;[Comments] 測試覆蓋率與 TDD 的正確心態 | In 91 - 點部落&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個心態挺不錯的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://about.gitlab.com/2017/05/02/inside-gitlabs-code-review-flow/"&gt;Inside GitLab's Code Review Flow | GitLab&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Code review, or engineers manually reviewing code as it is being developed, is one of several tools that organizations have to maintain code quality.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.freebuf.com/vuls/135610.html"&gt;看我如何發現Twitter任意賬戶發送推文漏洞並獲得7560美元賞金 - FreeBuf.COM | 關注黑客與極客&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;在参与Twitter漏洞赏金项目的过程中，我通过一些安全测试发现了Twitter存在的重大漏洞：攻击者不需要获取他人账户权限，就能以任意账户发布推文。我于2017年2月26日发现了该漏洞，Twitter方面于2017年2月28日及时对其进行了修  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;ptt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/SYSOP/M.1496571808.A.608.html"&gt;[公告] 即日起實驗性開放 Websocket 連線 - 看板 SYSOP - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;潮！  &lt;/li&gt;
&lt;li&gt;看了才發現是之前有看過的 PttChrome  &lt;/li&gt;
&lt;li&gt;不過因為是走 telnet 沒加密 所以就沒用  &lt;/li&gt;
&lt;li&gt;現在用 ws 就有加密啦  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/SYSOP/M.1496571808.A.608.html"&gt;[公告] 即日起實驗性開放 Websocket 連線 - 看板 SYSOP - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;時間Sun Jun 4 18:23:26 2017 PTT 目前實驗性的加入 Websocket 連線方式. 連線的位置為 wss://ws.ptt.cc/bbs 為 ssh 之外提供另一個加密連線的方式, 加密連線也將會是 Websocket 唯一支援的連線方式.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ksFXEY6P_ec&amp;amp;feature=share"&gt;Apple Pay 是怎麼運作的? | 一探啾竟 第1集 | 啾啾鞋 - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;新的系列好像都跟電腦資訊比較有關  &lt;/li&gt;
&lt;li&gt;而且介紹得雖然不深但頗清楚的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://disp.cc/b/163-a4zW"&gt;Re: [問卦] 葛瑪蘭威士忌是化工？ - Gossiping板 - Disp BBS&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;酒色是一個錯誤觀念，但這個錯誤觀念從外國延續到台灣  目前國外有很多酒廠極力澄清這個說法，不過華人世界還是都很看色澤這一套  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.byvoid.com/zht/blog/switzerland-dwelling-notes-5-paradise-on-earth"&gt;瑞士旅居記（五）：人間天堂 - BYVoid&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/05/31/why-do-you-keep-articles-and-books-and-never-read"&gt;收藏者悖論：收藏了大量文章卻又不看，「囤書癮」該怎麼解？ - INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;收藏者悖論：收藏了大量文章卻又不看，「囤書癮」該怎麼解？ 日語中有一個單詞叫做 tsundoku (積ん読)，意為「買了大量的書堆在家裡但卻又不看」。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 28 Aug 2017 21:27:00 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-06-05:posts/2017/06/05/y2017w22/</guid><category>alphago</category><category>bitcoin</category><category>git</category><category>github</category><category>life</category><category>linux</category><category>machine learning</category><category>miracast</category><category>misc</category><category>programming</category><category>ptt</category><category>security</category></item></channel></rss>