<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Just for noting</title><link>https://blog.m157q.tw/</link><description></description><lastBuildDate>Thu, 18 Jan 2018 03:11:54 +0800</lastBuildDate><item><title>嘗試在 Python 中做到 Golang fmt 的效果</title><link>https://blog.m157q.tw/posts/2018/01/03/try-to-do-gofmt-in-python/</link><description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;去年開始學 Golang，但早在這之前就已經聽過很多 Gopher 說過 &lt;code&gt;gofmt&lt;/code&gt; 有多麼方便，當 Pythonista 還在靠 syntax checker 和自制力來遵守 &lt;a href="https://www.python.org/dev/peps/pep-0008/"&gt;PEP8&lt;/a&gt; 的時候，Gopher 根本都不用管什麼 coding style，不管你是怎麼寫的，只要寫好之後用 &lt;code&gt;gofmt&lt;/code&gt; 執行一下，就可以自動幫你把程式碼排版排好，還可以順便幫你檢查錯誤。  &lt;/p&gt;
&lt;p&gt;故事起源於 2016 底，和平常不是寫 Python 的朋友一起弄了一個用 Python 寫的 side project，因為朋友平常不是寫 Python 的，然後那陣子他又剛好在寫 Golang，覺得要遵守 PEP8 很麻煩，所以問我 Python 有沒有類似 &lt;code&gt;go fmt&lt;/code&gt; 的工具。  &lt;/p&gt;
&lt;p&gt;當下想了一下好像還真的沒有，頂多就是像 &lt;code&gt;pep8&lt;/code&gt;, &lt;code&gt;flake8&lt;/code&gt;, &lt;code&gt;pyflakes&lt;/code&gt; 這類的 syntax checker 而已，好像沒聽聞過什麼好用的 code formatter，也因為這樣，所以開始想辦法做到這件事。  &lt;/p&gt;
&lt;p&gt;當然真的去查了之後發現還是有的，但使用起來不盡理想。於是找了些現成的程式兜一兜，再加上 git pre-commit hook 後，最後算是勉強做到了，當下有做個凌亂的紀錄，但一直沒有整理成一篇文章，利用最近離職後比較閒的時間，把它整理紀錄一下。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;紀錄&lt;/h2&gt;
&lt;p&gt;當時一開始是直接找到 GitHub 上的這個 repo: &lt;a href="https://github.com/Psycojoker/pyfmt"&gt;GitHub - Psycojoker/pyfmt: automatic code formatter for python following pep8 using baron FST, like gofmt&lt;/a&gt;。  &lt;/p&gt;
&lt;p&gt;看起來好像不錯，但實際上使用起來有滿多問題的，而且作者又用了另外一個自己寫的 Python Full Syntax Tree library: &lt;a href="https://github.com/PyCQA/baron"&gt;GitHub - PyCQA/baron: IDE allow you to refactor code, Baron allows you to write refactoring code.&lt;/a&gt;，當時因為急著找現成的工具來用，所以就沒有多花時間研究。但後來才發現 PyCQA 裡頭的工具都滿不錯的: &lt;a href="https://github.com/PyCQA"&gt;Python Code Quality Authority · GitHub&lt;/a&gt;，基本上都是用來提升 Python 程式碼品質的工具，滿推薦寫 Python 的人看一下的。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;之後試了幾個工具以後，最後變成 &lt;code&gt;autoflake&lt;/code&gt; + &lt;code&gt;isort&lt;/code&gt; + &lt;code&gt;autopep8&lt;/code&gt; + git pre-commit hook 來做到這件事，老實說真的有點繁瑣，但我找不到更好的方法，如果有人知道的話還請不吝告知。  &lt;/p&gt;
&lt;p&gt;總之，接下來稍微介紹一下這幾個工具分別做了哪些事：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;autoflake&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/myint/autoflake"&gt;GitHub - myint/autoflake: Removes unused imports and unused variables as reported by pyflakes&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;就如同其 GitHub 的敘述，可以把沒有用到的 &lt;code&gt;import&lt;/code&gt; 和變數移除。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isort&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/timothycrosley/isort"&gt;GitHub - timothycrosley/isort: A Python utility / library to sort imports.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;可以針對 Python 的 imports 做符合 PEP8 的字母序排序。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;autopep8&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hhatto/autopep8"&gt;GitHub - hhatto/autopep8: A tool that automatically formats Python code to conform to the PEP 8 style guide.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;可以將 Python 程式碼自動以符合 PEP8 的方式排版。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;git pre-commit hook  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"&gt;Git - Git Hooks&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;pre-commit hook 的觸發時間是在使用者下 &lt;code&gt;git commit&lt;/code&gt; 後，編寫 commit message 之前。  &lt;/li&gt;
&lt;li&gt;這裡是用來確保使用者每次 commit 的 Python 程式碼會被以上這三種程式處理過。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;後來發現 Google 也出了一個 Python formatter: &lt;a href="https://github.com/google/yapf"&gt;GitHub - google/yapf: A formatter for Python files&lt;/a&gt;，用了以後覺得比 &lt;code&gt;autopep8&lt;/code&gt; 好用，所以就把 &lt;code&gt;autopep8&lt;/code&gt; 換成 &lt;code&gt;yapf&lt;/code&gt; 了：&lt;a href="https://github.com/pellaeon/fengyuan/commit/abc9fc995a9c49fa208716954c2bc262fe6b783e"&gt;Use yapf instead of autopep8 as python code formatter. · pellaeon/fengyuan@abc9fc9 · GitHub&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;結果&lt;/h2&gt;
&lt;p&gt;最後的結果就是整合到一個 git pre-commit hook 裡頭，麻煩的是 clone 下來以後，得用這個指令初始化 git pre-commit hook：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ln -sf ../../pre-commit.sh .git/hooks/pre-commit  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其實還是很麻煩，之後應該會再繼續尋找有沒有更方便的方法，不排除自己寫一個就是。  &lt;/p&gt;
&lt;p&gt;最後的結果就是一個 git pre-commit hook：&lt;a href="https://github.com/pellaeon/fengyuan/blob/master/pre-commit.sh"&gt;fengyuan/pre-commit.sh at master · pellaeon/fengyuan · GitHub&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;以下直接複製貼上原程式碼留個紀錄，以防哪天 GitHub 掛了。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh  &lt;/span&gt;
&lt;span class="c1"&gt;#  &lt;/span&gt;
&lt;span class="c1"&gt;# An example hook script to verify what is about to be committed.  &lt;/span&gt;
&lt;span class="c1"&gt;# Called by &amp;quot;git commit&amp;quot; with no arguments.  The hook should  &lt;/span&gt;
&lt;span class="c1"&gt;# exit with non-zero status after issuing an appropriate message if  &lt;/span&gt;
&lt;span class="c1"&gt;# it wants to stop the commit.  &lt;/span&gt;
&lt;span class="c1"&gt;#  &lt;/span&gt;
&lt;span class="c1"&gt;# To enable this hook, rename this file to &amp;quot;pre-commit&amp;quot;.  &lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; git rev-parse --verify HEAD &amp;gt;/dev/null &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;  
&lt;span class="k"&gt;then&lt;/span&gt;  
    &lt;span class="nv"&gt;against&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;HEAD  
&lt;span class="k"&gt;else&lt;/span&gt;  
    &lt;span class="c1"&gt;# Initial commit: diff against an empty tree object  &lt;/span&gt;
    &lt;span class="nv"&gt;against&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4b825dc642cb6eb9a060e54bf8d69288fbee4904  
&lt;span class="k"&gt;fi&lt;/span&gt;  

&lt;span class="c1"&gt;# If you want to allow non-ASCII filenames set this variable to true.  &lt;/span&gt;
&lt;span class="nv"&gt;allownonascii&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git config --bool hooks.allownonascii&lt;span class="k"&gt;)&lt;/span&gt;  

&lt;span class="c1"&gt;# Redirect output to stderr.  &lt;/span&gt;
&lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;  

&lt;span class="c1"&gt;# Cross platform projects tend to avoid non-ASCII filenames; prevent  &lt;/span&gt;
&lt;span class="c1"&gt;# them from being added to the repository. We exploit the fact that the  &lt;/span&gt;
&lt;span class="c1"&gt;# printable range starts at the space character and ends with tilde.  &lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$allownonascii&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;  
    &lt;span class="c1"&gt;# Note that the use of brackets around a tr range is ok here, (it&amp;#39;s  &lt;/span&gt;
    &lt;span class="c1"&gt;# even required, for portability to Solaris 10&amp;#39;s /usr/bin/tr), since  &lt;/span&gt;
    &lt;span class="c1"&gt;# the square bracket bytes happen to fall in the designated range.  &lt;/span&gt;
    &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;git diff --cached --name-only --diff-filter&lt;span class="o"&gt;=&lt;/span&gt;A -z &lt;span class="nv"&gt;$against&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;  
      &lt;span class="nv"&gt;LC_ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;C tr -d &lt;span class="s1"&gt;&amp;#39;[ -~]\0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; wc -c&lt;span class="k"&gt;)&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;  
&lt;span class="k"&gt;then&lt;/span&gt;  
    cat &lt;span class="s"&gt;&amp;lt;&amp;lt;\EOF  &lt;/span&gt;
&lt;span class="s"&gt;Error: Attempt to add a non-ASCII file name.  &lt;/span&gt;

&lt;span class="s"&gt;This can cause problems if you want to work with people on other platforms.  &lt;/span&gt;

&lt;span class="s"&gt;To be portable it is advisable to rename the file.  &lt;/span&gt;

&lt;span class="s"&gt;If you know what you are doing you can disable this check using:  &lt;/span&gt;

&lt;span class="s"&gt;  git config hooks.allownonascii true  &lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;  
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;  
&lt;span class="k"&gt;fi&lt;/span&gt;  

&lt;span class="c1"&gt;# Run syntax checker and formatter for Python files.  &lt;/span&gt;
&lt;span class="nv"&gt;STAGED_PYTHON_FILES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git diff --cached --name-only HEAD &lt;span class="s2"&gt;&amp;quot;*.py&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;  

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$STAGED_PYTHON_FILES&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;  
&lt;span class="k"&gt;then&lt;/span&gt;  
    autoflake -i --remove-all-unused-imports --remove-unused-variables &lt;span class="nv"&gt;$STAGED_PYTHON_FILES&lt;/span&gt;  
    isort -y &lt;span class="nv"&gt;$STAGED_PYTHON_FILES&lt;/span&gt;  
    yapf -i &lt;span class="nv"&gt;$STAGED_PYTHON_FILES&lt;/span&gt;  
    git add &lt;span class="nv"&gt;$STAGED_PYTHON_FILES&lt;/span&gt;  
&lt;span class="k"&gt;fi&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Psycojoker/pyfmt"&gt;GitHub - Psycojoker/pyfmt: automatic code formatter for python following pep8 using baron FST, like gofmt&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PyCQA/baron"&gt;GitHub - PyCQA/baron: IDE allow you to refactor code, Baron allows you to write refactoring code.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/myint/autoflake"&gt;GitHub - myint/autoflake: Removes unused imports and unused variables as reported by pyflakes&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timothycrosley/isort"&gt;GitHub - timothycrosley/isort: A Python utility / library to sort imports.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hhatto/autopep8"&gt;GitHub - hhatto/autopep8: A tool that automatically formats Python code to conform to the PEP 8 style guide.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"&gt;Git - Git Hooks&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/yapf"&gt;GitHub - google/yapf: A formatter for Python files&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pellaeon/fengyuan/commit/abc9fc995a9c49fa208716954c2bc262fe6b783e"&gt;Use yapf instead of autopep8 as python code formatter. · pellaeon/fengyuan@abc9fc9 · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pellaeon/fengyuan/commit/2de3e199f2193ea25f4cd5bbb7f89673879862c6"&gt;Add git pre-commit hook for python files. · pellaeon/fengyuan@2de3e19 · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pellaeon/fengyuan/blob/master/pre-commit.sh"&gt;fengyuan/pre-commit.sh at master · pellaeon/fengyuan · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Thu, 18 Jan 2018 03:11:54 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2018-01-03:posts/2018/01/03/try-to-do-gofmt-in-python/</guid><category>Python</category><category>formatter</category><category>Golang</category><category>gofmt</category><category>2018 iT 邦幫忙鐵人賽</category></item><item><title>Y2017W34</title><link>https://blog.m157q.tw/posts/2017/08/28/y2017w34/</link><description>&lt;h3&gt;ai&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/25928551"&gt;用深度学习（CNN RNN Attention）解决大规模文本分类问题 - 综述和实践 - 知乎专栏&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jmlr.org/papers/volume3/bengio03a/bengio03a.pdf"&gt;A Neural Probabilistic Language Model&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;curl&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/7172784/how-to-post-json-data-with-curl-from-terminal-commandline-to-test-spring-rest"&gt;How to POST JSON data with Curl from Terminal/Commandline to Test Spring REST? - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;devops&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackshare.io/circleci/how-circleci-processes-4-5-million-builds-per-month"&gt;How CircleCI Processes 4.5 Million Builds Per Month - | StackShare&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/go1.9"&gt;Go 1.9 is released - The Go Blog&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://githubengineering.com/kubernetes-at-github/"&gt;Kubernetes at GitHub | GitHub Engineering&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pymotw.com/3/smtpd/"&gt;smtpd — Sample Mail Servers — PyMOTW 3&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://eev.ee/blog/2016/11/23/a-rebuttal-for-python-3/"&gt;A Rebuttal For Python 3 / fuzzy notepad&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Zed Shaw, of Learn Python the Hard Way fame, has now written The Case Against Python 3.  I’m not involved with core Python development. The only skin I have in this game is that I like Python 3. It’s a good language.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;整篇都在為 Python 3 平反，狂打臉 Learn Python the Hard Way 的作者。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/QQuick/Transcrypt"&gt;GitHub - QQuick/Transcrypt: Python 3.6 to JavaScript compiler - Lean, fast, open! ---&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Operator &lt;strong&gt;= added, a &lt;/strong&gt;= b converted to a = a ** b Operator @= added, M3 @= M2 converted to M3 = M3 @ M2, same as for other augmented assignment ops Compilation error report now contains detailed import sequence Enhancement for issue #281: tup  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://36kr.com/p/5089671.html"&gt;嫌 Python 太慢？并行运算 Process Pools 三行代码给你 4 倍提速！_36 氪&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;import concurrent.futures&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;with concurrent.futures.ProcessPoolExecutor() as executor:&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;executor.map(func, args)&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Python 3 才有，有認識的人表示因為這個 library 真的太棒了，公司原本用 Python 2 的程式碼為了要用這個函式庫，特地改寫成 Python 3。  &lt;/li&gt;
&lt;li&gt;在&lt;a href="https://weekly.codetengu.com/issues/76#vinta"&gt;碼天狗第 76 期&lt;/a&gt;也有被介紹過，是個可以讓 concurrent 變得像寫一般的 for loop 一樣輕鬆簡單的 library。  &lt;ul&gt;
&lt;li&gt;原文：&lt;a href="https://vinta.ws/code/parallel-tasks-in-python-concurrent-futures.html"&gt;https://vinta.ws/code/parallel-tasks-in-python-concurrent-futures.html&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;原文：&lt;a href="https://medium.com/@ageitgey/quick-tip-speed-up-your-python-data-processing-scripts-with-process-pools-cf275350163a"&gt;https://medium.com/@ageitgey/quick-tip-speed-up-your-python-data-processing-scripts-with-process-pools-cf275350163a&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/glob.html"&gt;11.7. glob — Unix style pathname pattern expansion — Python 3.6.2 documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The glob module finds all the pathnames matching a specified pattern according to the rules used by the Unix shell, although results are returned in arbitrary order. No tilde expansion is done, but *, ?, and character ranges expressed with [] will be correctly matched. This is done by using the os.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;簡單來說就是在 Python 用 UNIX 的 file path pattern expansion，像是 &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**/*&lt;/code&gt; 等等。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/9449101/how-to-stop-flask-from-initialising-twice-in-debug-mode"&gt;python - How to stop Flask from initialising twice in Debug Mode? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;When building a Flask service in Python and setting the debug mode on, the Flask service will initialise twice. When the initialisation loads caches and the like, this can take a while. Having to do this twice is annoying when in development (debug) mode.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/ssuserd44fa2/ss-79172936"&gt;滲透測試基本技巧與經驗分享&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;BambooFox 的學弟在 HITCON CMT 2017 講的議程，投影片做得挺充實且易懂的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://morpheuzblog.wordpress.com/2015/11/18/bof/"&gt;bof – Blog of Morpheuz&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是簡單易懂的 bof pwn 的教學。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/08/25/formosat"&gt;一波三折的台灣太空夢：福衛五號發射成功，那你知道還有福衛一到七號、蕃薯號嗎？ - INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;福衛五號將於 25 日凌晨 2 時 50 分發射升空，為台灣自製衛星立下重要里程碑，台灣衛星史除了已除役的福衛一號、二號，服役中的福衛三號外，還有計畫終止的福衛四號及福衛六號。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Thu, 19 Oct 2017 03:03:37 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-08-28:posts/2017/08/28/y2017w34/</guid><category>ai</category><category>curl</category><category>devops</category><category>golang</category><category>github</category><category>python</category><category>security</category><category>taiwan</category></item><item><title>Y2017W31</title><link>https://blog.m157q.tw/posts/2017/08/07/y2017w31/</link><description>&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.heron.me/how-can-a-kid-prepare-for-the-future-e48394f24ba0?source=rss----d0ef0e7db3bd---4&amp;amp;gi=2e0d3b9ec672"&gt;How can a kid prepare for the future? – Heron’s Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;How would you succeed if you only do things that “others want”? 寫得好  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hellolynn.hpd.io/2017/07/28/%e6%ac%a1%e4%b8%96%e4%bb%a3%e9%80%9a%e8%a8%8a%e8%a6%8f%e6%a0%bc%e2%94%805g/"&gt;物聯網、VR、人工智慧，通通得仰賴的次世代通訊規格─5G – 寫點科普，請給指教。&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://data.leafwind.tw/build-software-engineering-and-data-culture-before-doing-ai-6e345986f872?gi=f8c26725a57f"&gt;先有軟體與數據文化，才有AI – all about data&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「沒有軟體工程文化、不重視數據，就沒有絲毫追趕 AI 的可能性」  &lt;/li&gt;
&lt;li&gt;這個副標題實在太中肯了  &lt;/li&gt;
&lt;li&gt;多少公司都是這樣妄想一步登天  &lt;/li&gt;
&lt;li&gt;唉  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@AlbertHuang314/%E5%AF%AB%E5%AF%A6%E9%A9%97%E7%B4%80%E9%8C%84%E6%88%96%E5%B7%A5%E4%BD%9C%E6%97%A5%E8%AA%8C%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7-eee6115760ef"&gt;寫實驗紀錄或工作日誌的重要性 – Albert Huang – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;每天花一點時間寫可以為自己之後省下不少時間呢，要查找一些相關資訊也會方便許多，之前的作法就是每天在相關的 issue 留下本日的進度，也方便自己隔天工作的時候可以快速進入狀況。  &lt;/li&gt;
&lt;li&gt;聽起來很簡單，但做起來不那麼簡單，每天要下班之前得花一段時間來整理並確認今天到底做了哪些事，一忙起來有時候就會無法做到。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/08/linux-find-limit-date-time-file-2017/amp/"&gt;Linux 使用 find 找出限定修改時間內的檔案 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;-mtime&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-mmin&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ctime&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-cmin&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-atime&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-amin&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ctf&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://maskray.me/blog/2017-08-01-defcon-25-ctf"&gt;DEFCON 25 CTF参赛记 | MaskRay&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來 cLEMENCy 不只 9-bit byte 還有 27-bit register width 和 middle-endian 真夠怪  &lt;/li&gt;
&lt;li&gt;HITCON 跟第三名差不少分 好猛啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;defcon&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/legitbs/cLEMENCy"&gt;GitHub - legitbs/cLEMENCy: cLEMENCy is the LEgitbs Middle ENdian Computer architecture developed by Lightning for DEF CON CTF 2017&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GitHub is home to over 20 million developers working together to host and review code, manage projects, and build software together.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://thylong.com/ci/2016/deploying-from-travis-to-gce/"&gt;Deploying from Travis-CI to Google Container Engine | blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Travis-ci is a great CI tool. In comparison to other solutions, it has the advantage of being free for Open Source projects and is well documented.  This is why I’ve been using it for a while and more recently with regexrace, a project hosted in Google Container Engine cluster.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/google-cloud/continuous-delivery-in-a-microservice-infrastructure-with-google-container-engine-docker-and-fb9772e81da7"&gt;Continuous Delivery in a microservice infrastructure with Google Container Engine, Docker and…&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Nowadays Continuous Integration (CI) has become a de facto standard for modern tech companies and startups. There are several options of how you can setup your perfect CI environment, from using your own Jenkins cluster to third-party services like Travis or CircleCI.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/campoy/go-tooling-workshop"&gt;GitHub - campoy/go-tooling-workshop: A workshop covering all the tools gophers use in their day to day life&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;k8s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/janetkuo/k8s-demos"&gt;janetkuo/k8s-demos: Demo scripts for Kubernetes built-in controllers&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kubernetes/contrib/tree/master/micro-demos"&gt;contrib/micro-demos at master · kubernetes/contrib&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/presentation/d/1fBnd7Z2yKpT25Ib2ThF7vHJi0AfVKHYnSrAYqvBSigg/edit?usp=embed_facebook&amp;amp;usp=embed_facebook&amp;amp;usp=embed_facebook&amp;amp;usp=embed_facebook"&gt;GCPUG.TW meetup #28 - GKE上運作您的K8S服務 - Google Slides&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/walterliu7/kubernetes-workshop-78554820"&gt;Kubernetes Workshop&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;mysql&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.eversql.com/faster-pagination-in-mysql-why-order-by-with-limit-and-offset-is-slow/"&gt;Why Order By With Limit and Offset is Slow - Faster Pagination in Mysql&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Queries with LIMITs and OFFSETs are common in application that require pagination and in some cases might work well for a while.   In many cases though, they become slow and painful once the OFFSET has a high value.  Well, in most cases, low offset queries are not slow.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://thinkgrowth.org/why-good-people-leave-large-tech-companies-af2b6fea4ee"&gt;Why Good People Leave Large Tech Companies – ThinkGrowth.org&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;I was visiting with an ex-student who’s now the CFO of a large public tech company. The company is still one of the hottest places to work in tech. They make hardware with a large part of their innovation in embedded software and services.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;後來還是覺得得先進這些大公司累積一些經驗後，才有本錢自己出去闖啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;GitHub - kamranahmedse/developer-roadmap: Roadmap to becoming a web developer in 2017&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.producthunt.com/@alison985/collections/hard-core-tech-books-that-interest-me"&gt;Hard Core Tech Books That Interest Me by alison985 - Product Hunt&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scotch.io/bar-talk/s-o-l-i-d-the-first-five-principles-of-object-oriented-design"&gt;S.O.L.I.D: The First 5 Principles of Object Oriented Design ― Scotch&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;These principles, when combined together, make it easy for a programmer to develop software that are easy to maintain and extend. They also make it easy for developers to avoid code smells, easily refactor code, and are also a part of the agile or adaptive software development.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;這篇很清楚的介紹了 OOP 裡頭會提到的 SOLID 各自代表什麼意思，也有給出實際程式碼的例子，排版也很乾淨舒服。  &lt;/li&gt;
&lt;li&gt;仔細想想大學修 OOP 的時候好像根本沒提到這個，只是在學 C++，修軟體工程的時候好像也只有提到 KISS。出來工作後也看到很多物件導向的程式碼沒照這個原則走，自己其實也沒有很嚴格遵守，現在看起來，如果都可以遵守的話，程式碼一定會好改不少吧，期許自己之後在寫物件導向有關的程式碼的時候可以謹記這 5 個原則。  &lt;/li&gt;
&lt;li&gt;SOLID  &lt;ul&gt;
&lt;li&gt;S - Single-responsiblity principle  &lt;ul&gt;
&lt;li&gt;A class should have one and only one reason to change, meaning that a class should have only one job.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;O - Open-closed principle  &lt;ul&gt;
&lt;li&gt;Objects or entities should be open for extension, but closed for modification  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;L - Liskov substitution principle  &lt;ul&gt;
&lt;li&gt;Let q(x) be a property provable about objects of x of type T. Then q(y) should be provable for objects y of type S where S is a subtype of T.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I - Interface segregation principle  &lt;ul&gt;
&lt;li&gt;A client should never be forced to implement an interface that it doesn't use or clients shouldn't be forced to depend on methods they do not use.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;D - Dependency Inversion Principle  &lt;ul&gt;
&lt;li&gt;Entities must depend on abstractions not on concretions. It states that the high level module must not depend on the low level module, but they should depend on abstractions.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/08/01/%e4%bd%a0%e6%89%80%e4%b8%8d%e7%9f%a5%e9%81%93%e7%9a%84-python-%e6%a8%99%e6%ba%96%e5%87%bd%e5%bc%8f%e5%ba%ab%e7%94%a8%e6%b3%95-06-concurrent-futures/"&gt;concurrent.futures — 創立非同步任務 — 你所不知道的 Python 標準函式庫用法 06 | louie_lu's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;還真沒印象有看過這個 lib 感覺比用 multiprocessing 或 threading 還好寫  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/07/28/%e4%bd%a0%e6%89%80%e4%b8%8d%e7%9f%a5%e9%81%93%e7%9a%84-python-%e6%a8%99%e6%ba%96%e5%87%bd%e5%bc%8f%e5%ba%ab%e7%94%a8%e6%b3%95-03-abc/"&gt;abc — 抽象類別 — 你所不知道的 Python 標準函式庫用法 03 | louie_lu's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;也是個有用過但一直沒有很懂的 Library 呢  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://logan.tw/posts/2016/01/02/python-new-style-class/"&gt;Python New Style Class | Logan's Note&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;雖然有看過了 但再複習一次 Class 的繼承在 Python 2 和 3 之間的差別吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/07/27/%e4%bd%a0%e6%89%80%e4%b8%8d%e7%9f%a5%e9%81%93%e7%9a%84-python-%e6%a8%99%e6%ba%96%e5%87%bd%e5%bc%8f%e5%ba%ab%e7%94%a8%e6%b3%95-02-random/"&gt;random — 你所不知道的 Python 標準函式庫用法 02 | louie_lu's blog&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html"&gt;Orange: How I Chained 4 vulnerabilities on GitHub Enterprise, From SSRF Execution Chain to RCE!&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;竟然可以串到變 RCE 真精彩  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hackaday.com/2017/07/30/find-instructions-hidden-in-your-cpu/"&gt;Find Instructions Hidden In Your CPU | Hackaday&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;There was a time when owning a computer meant you probably knew most or all of the instructions it could execute. Your modern PC, though, has a lot of instructions, many of them meant for specialized operating system, encryption, or digital signal processing features.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xoreaxeaxeax/sandsifter"&gt;xoreaxeaxeax/sandsifter: The x86 processor fuzzer&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The sandsifter audits x86 processors for hidden instructions and hardware bugs, by systematically generating machine code to search through a processor's instruction set, and monitoring execution for anomalies.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=E6BY7_Zpj0I&amp;amp;feature=youtu.be&amp;amp;t=1m21s"&gt;一青窈與平井堅XD - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;靠北 用 Audacity 試了一下發現這是真的說  &lt;/li&gt;
&lt;li&gt;一青窈的もらい泣き用改變音高的那種放慢 80% 就會變成平井堅的歌聲  &lt;/li&gt;
&lt;li&gt;以前聽這首歌完全不知道 太神奇了 XDDD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2017/07/working-poor.html"&gt;穷忙的人生 - 阮一峰的网络日志&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;真是貼切啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kocpc.com.tw/archives/157259"&gt;波音 787 超狂測試，一邊挑戰最長飛行距離一邊畫飛機 - 電腦王阿達&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作為客機製造公司，Boeing 波音可以說是這個領域的第一。最近該公司測試最新客機 波音 787 ，計畫要進行一場近18小時的長程飛行測試時，一般只要讓飛機在兩地之間來回繞行以達到里程，但該公司最後在美國領空，用飛行過  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cool3c.com/article/127439"&gt;史上最狂 AirDrop 飛行中的 747、777 機長對傳照片 #波音 (127439) - 癮科技&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;剛在Facebook粉絲專頁Jamaica Aviation Spotters貼出某位波音747-8型飛機的機長，碰到正在飛行的新加坡航空777型飛機，想傳圖片給對方機長，結果靠的竟然是iPhone的AirDrop，這大概是蘋果AirDrop的最好宣傳案例。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;youtube&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/LifeProTips/comments/247c2u/lpt_youtube_how_to_play_all_videos_from_a_channel/"&gt;LPT: Youtube: how to play all videos from a channel as a playlist : LifeProTips&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;隨便點一個影片在網址加上&lt;code&gt;&amp;amp;feature=mfu_in_order&amp;amp;list=UL&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Tue, 17 Oct 2017 21:09:27 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-08-07:posts/2017/08/07/y2017w31/</guid><category>blog</category><category>cli</category><category>ctf</category><category>defcon</category><category>gke</category><category>golang</category><category>k8s</category><category>life</category><category>misc</category><category>mysql</category><category>programmer</category><category>programming</category><category>python</category><category>security</category><category>trivia</category><category>youtube</category></item><item><title>Y2017W29</title><link>https://blog.m157q.tw/posts/2017/07/25/y2017w29/</link><description>&lt;h3&gt;ai&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/mmc-writes/the-fourth-industrial-revolution-a-primer-on-artificial-intelligence-ai-ff5e7fffcae1"&gt;The fourth industrial revolution: a primer on Artificial Intelligence (AI)&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@dennyku/%E5%9C%A8-%E6%B1%82%E8%81%B7%E5%A4%A9%E7%9C%BC%E9%80%9A-%E5%B7%A5%E4%BD%9C%E4%B8%80%E5%B9%B4%E6%98%AF%E5%80%8B%E6%80%8E%E6%A8%A3%E7%9A%84%E9%AB%94%E9%A9%97-ecf07be1a0b0"&gt;在「求職天眼通」工作一年是個怎樣的體驗 – Denny Ku – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;digital currency&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mingderwang/%E4%BA%82%E6%95%B8%E5%A4%A0%E4%B8%8D%E5%A4%A0%E4%BA%82-d7db0003d363"&gt;亂數夠不夠亂 – mingderwang – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;原本是想在台大駭客松期間, 找出虛擬幣電子錢包是否能產生夠亂的 seed 來生成新帳號. 但這個題目並沒得到團隊內部的認同, 只好把它寫成文章跟大家一起探討.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/go-python/gopy"&gt;GitHub - go-python/gopy: gopy generates a CPython extension module from a go package.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;WARNING gopy is currently not compatible with Go&amp;gt;=1.6 and its improved CGo rules as documented in cmd/cgo.  You will need Go &amp;gt;= 1.5.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/07/19/machine-learning"&gt;監督式學習？增強學習？聽不懂的話，一定要看這篇入門的機器學習名詞解釋！ - INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/dylanbeattie/status/887650814696804352"&gt;Dylan Beattie 🇪🇺 on Twitter: "One of the biggest challenges with centralized logging is establishing consensus about what log levels actually mean. Here's a quick primer. https://t.co/5UeFnfiq1h"&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the biggest challenges with centralized logging is establishing consensus about what log levels actually mean. Here's a quick primer.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;img alt="logging level" src="/files/y2017w29/logging-level.jpg" /&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mlouielu/raises-stackoverflow"&gt;GitHub - mlouielu/raises-stackoverflow: Raises' in the source code, all's right with the Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Raises Stack Overflow Raises' in your source code, all's right with the Stack Overflow Install Please use pip to install raises  $ pip install raises   How to use? Is easy to use raises in your daily work, to help you find out raises error's answer on Stack Overflow, simply import raises to your cod  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/takluyver/flit"&gt;takluyver/flit: Simplified packaging of Python modules&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Flit is a simple way to put Python packages and modules on PyPI.  Say you're writing a module foobar—either as a single file foobar.py, or as a directory—and you want to distribute it.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pybee/ouroboros"&gt;GitHub - pybee/ouroboros: A standalone, pure Python implementation of the Python Standard Library.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Documentation for Ouroboros can be found on Read The Docs.  Ouroboros is part of the BeeWare suite. You can talk to the community through:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/11092511/python-list-of-unique-dictionaries/11092590"&gt;dictionary - Python - List of unique dictionaries - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Can anyone help me with the most efficient way to achieve this in Python?  So make a temporary dict with the key being the id. This filters out the duplicates. The values() of the dict will be the list  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/11174745/avoiding-nested-for-loops"&gt;python - Avoiding nested for loops - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;I am trying to do some parameter testing on another code using python. I need to test 6 independent parameters, but I need all of the possible combinations of them. Each parameter has a minimum, a maximum, and a step value that needs to be passed to it.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.zeroplex.tw/2017/07/blog-post_2.html"&gt;天興搬家公司 與 崔媽媽基金會 - Zeroplex 生活隨筆&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來崔媽媽基金會有做這麼多事呀  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://musou.watchout.tw/role-play/terror-30/"&gt;沃草→你是戒嚴時代的誰呢？←&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個個都是冤死的人啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;看 Mythbusters S05E01 才知道原來日本機關王比賽那種裝置在英文有個專有的名稱叫做 Rube Goldberg Machine  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/RSVP_(invitations)"&gt;RSVP (invitations) - Wikipedia&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來 RSVP 是法文來的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Tue, 17 Oct 2017 20:09:40 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-07-25:posts/2017/07/25/y2017w29/</guid><category>ai</category><category>blog</category><category>digital currency</category><category>golang</category><category>machine learning</category><category>programming</category><category>python</category><category>taiwan</category><category>trivia</category></item><item><title>Golang Taipei Gathering #25</title><link>https://blog.m157q.tw/posts/2017/07/18/golang-taipei-gathering-25/</link><description>&lt;ul&gt;
&lt;li&gt;Links  &lt;ul&gt;
&lt;li&gt;KKTIX: &lt;a href="https://golang.kktix.cc/events/gtg25"&gt;https://golang.kktix.cc/events/gtg25&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href="https://github.com/golangtw/GolangTaiwanGathering/tree/master/meetup/gtg25"&gt;https://github.com/golangtw/GolangTaiwanGathering/tree/master/meetup/gtg25&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這次來還 GTG #21 時跟 Evan 拿票的債，&lt;br /&gt;
要下班前突然又被抓住講事情，&lt;br /&gt;
所以沒聽到第 1 場 talk，&lt;br /&gt;
到 Dcard 沒多久就直接上台講，&lt;br /&gt;
講完又遇到在 TICC 剛講完 talk 的伊達，&lt;br /&gt;
就跑去外面聊天，&lt;br /&gt;
也沒聽到下一場的 lightning talk，&lt;br /&gt;
所以這次就沒有筆記了。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;19:30 ~ 20:10:  王思元 - Evenote API + Blogger API  &lt;/p&gt;
&lt;p&gt;Evernote to Blogger API 串接經驗分享  &lt;/p&gt;
&lt;p&gt;分享經驗，如何使用 Golang 串接 Evernote 以及 Blogger，製作簡單的服務，將 Evernote 筆記資料發布到 Blogger 部落格上。&lt;br /&gt;
一個簡單的 side project 解決自己的痛點  &lt;/p&gt;
&lt;p&gt;Slides: &lt;a href="https://docs.google.com/presentation/d/1WOuLZTEb8DXSxifUp9WnLvasj2XKt1Fgk3SG-x7vS8I/edit#slide=id.p"&gt;https://docs.google.com/presentation/d/1WOuLZTEb8DXSxifUp9WnLvasj2XKt1Fgk3SG-x7vS8I/edit#slide=id.p&lt;/a&gt;&lt;br /&gt;
Video: &lt;a href="https://youtu.be/i5TJEj86dWw"&gt;https://youtu.be/i5TJEj86dWw&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;20:30- 21:10:  M157Q - Grumpy  &lt;/p&gt;
&lt;p&gt;M157q: Grumpy 簡介  &lt;/p&gt;
&lt;p&gt;Grumpy 是 Google 推出的 Python to Go source-to-source compiler (transcompiler)&lt;br /&gt;
此 talk 將會簡單介紹 Grumpy 的特性：包含其用法、限制&lt;br /&gt;
並透過簡單的範例比較轉換前與轉換後的速度差異&lt;br /&gt;
最後再總結一下可能可以應用的地方及其未來發展性  &lt;/p&gt;
&lt;p&gt;Slides: &lt;a href="https://speakerdeck.com/m157q/20170718-gtg25-introduction-to-grumpy-1"&gt;https://speakerdeck.com/m157q/20170718-gtg25-introduction-to-grumpy-1&lt;/a&gt;&lt;br /&gt;
Video: &lt;a href="https://youtu.be/rsmExnsLAQs?t=6m14s"&gt;https://youtu.be/rsmExnsLAQs?t=6m14s&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;閃電秀 (Lightning Talk) 已經報名場次  &lt;/p&gt;
&lt;p&gt;21:20: HUGO-靜態網站生成器-2-分鐘上手 (林志傑)&lt;br /&gt;
Slides: &lt;a href="https://speakerdeck.com/fukuball/create-static-website-with-hugo-in-2-minutes"&gt;https://speakerdeck.com/fukuball/create-static-website-with-hugo-in-2-minutes&lt;/a&gt;&lt;br /&gt;
Video: &lt;a href="https://youtu.be/TnNqsyqM9DU"&gt;https://youtu.be/TnNqsyqM9DU&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;還有一位 Lightning Talk 的講者講 GoLearn，&lt;br /&gt;
一個用 Golang 寫的 Machine Learning Framework。&lt;br /&gt;
&lt;a href="https://github.com/sjwhitworth/golearn"&gt;https://github.com/sjwhitworth/golearn&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Video: &lt;a href="https://youtu.be/H4BNNhzun2E"&gt;https://youtu.be/H4BNNhzun2E&lt;/a&gt;  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Tue, 18 Jul 2017 23:28:36 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-07-18:posts/2017/07/18/golang-taipei-gathering-25/</guid><category>Golang</category></item><item><title>Y2017W21</title><link>https://blog.m157q.tw/posts/2017/05/29/y2017w21/</link><description>&lt;h3&gt;alpha go&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Z-HL5nppBnM"&gt;The Future of Go Summit, Match One: Ke Jie &amp;amp; AlphaGo - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;圖靈測試 （誒  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/05/25/analyzing-new-alphago"&gt;揭秘新版 AlphaGo，為什麼它能戰勝柯潔？ - INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;雖然只有 1/4 子，但前天 AlphaGo 在對戰柯潔時那種游刃有餘，穩扎穩打的作風已然顯示出其強大的實力。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/05/23/analyzing-alphago-versus-ke-jie-round-1"&gt;柯潔為何說「輸得沒脾氣」？8 個問題解讀人機大戰第一局 - INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;經過四個多小時的對弈，柯潔以四分之一子之差敗給了 AlphaGo。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;bitcoin&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitcoin.org/bitcoin.pdf"&gt;bitcoin.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@benzwjian/%E6%AF%94%E7%89%B9%E5%B9%A3%E8%83%8C%E5%BE%8C%E7%9A%84%E7%B6%93%E6%BF%9F%E5%93%B2%E5%AD%B8-440f4d74c074"&gt;比特幣背後的經濟哲學 – Ben Z.W. Jian – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bitcoin/bitcoin"&gt;bitcoin/bitcoin: Bitcoin Core integration/staging tree&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blockchain&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@benzwjian/%E5%8D%80%E5%A1%8A%E9%8F%88%E5%A6%82%E4%BD%95%E9%81%8B%E4%BD%9C-b7c8d4131a0e"&gt;區塊鏈如何運作? – Ben Z.W. Jian – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;這篇文翻譯自”How Does the Blockchain Work?”全文。作者Michele D'Aliessi用淺白易懂的文字闡述比特幣(Bitcoin)和區塊鏈(Blockchain)的運作原理，是一篇很棒的入門文章，因此我決定挑戰翻譯看看，讓更多人了解這個技術。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ethereum&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@twedusuck/%E6%AF%94%E7%89%B9%E5%B9%A3-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%9A%84%E4%B8%80%E4%BA%9B%E5%95%8F%E9%A1%8C%E4%BB%8B%E7%B4%B9-%E4%BA%8C-bc06a5e7f8fc"&gt;比特幣、以太坊的一些問題介紹(二) – NIC Lin – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;這個漏洞來自於比特幣的簽章機制：解鎖script（比特幣的script介紹可看這篇）因為包含簽名本身，所以不會成為被簽名的一部分（否則就會產生無窮迴圈：簽名包含script，script本身又包含簽名….  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@twedusuck/%E6%AF%94%E7%89%B9%E5%B9%A3-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%9A%84%E4%B8%80%E4%BA%9B%E5%95%8F%E9%A1%8C%E4%BB%8B%E7%B4%B9-%E4%B8%80-5f4e07b9ca71"&gt;比特幣、以太坊的一些問題介紹(一) – NIC Lin – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E4%BB%A5%E5%A4%AA%E5%9D%8A"&gt;以太坊 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lnishan.github.io/2017/j-1-visa-google-nctu/"&gt;Google Internship, J-1 Visa, NCTU&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;光看就覺得好麻煩啊..  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/asiayo-engineering/%E5%A6%82%E4%BD%95%E7%94%A8-google-tag-manager-%E6%89%93%E9%80%A0%E5%85%8D%E8%B2%BB%E7%9A%84-data-collection-x-streaming-data-%E6%9E%B6%E6%A7%8B-d4593b88ffea"&gt;如何用 Google Tag Manager 打造免費的 Data Collection x Streaming Data 架構&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;從剛進來的時候敝公司就是這樣做了，不過有沒有能力整理成這樣的文章，好像又是另外一回事哩  。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ctl.io/developers/blog/post/dockerfile-add-vs-copy/"&gt;Dockerfile: ADD vs COPY - CenturyLink Cloud Developer Center&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This blog post will help you understand the differences between two similar Dockerfile instructions – ADD and COPY – how they became what they are today, and our recommendation on which instruction you should use. (Hint: It's not ADD)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chubin/cheat.sh"&gt;GitHub - chubin/cheat.sh: the fastest way to find {command options|code pieces} you need&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kkdai/bookmark-makerserver"&gt;GitHub - kkdai/bookmark-makerserver: A IFTTT MakerServer to help you post your tweet to github issue as a bookmark&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;"Bookmark Maker Server" is a webhook service help you using IFTTT to forward your tweet to your github issue as a bookmark. Result on kkdai/bookmarks, feel free to take a loook.  Here is the step, how to use this without writing any code.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stretchr/testify"&gt;stretchr/testify: A sacred extension to the standard go testing package&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Go code (golang) set of packages that provide many tools for testifying that your code will behave as you intend.  The assert package provides some helpful methods that allow you to write better test code in Go.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ruby-china.org/topics/33036"&gt;量產型炮灰工程師 ‧ Ruby China&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;嗯，某神跑去中國開課之後，也開始被發現真面目啦，有種在台灣就看過的 Deja Vu。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/QQuick/Opy"&gt;QQuick/Opy: Obfuscator for Python&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;The famous Phaistos Disc from Crete, obfuscation unbroken after thousands of years.  Opy will obfuscate your extensive, real world, multi module Python source code for free! And YOU choose per project what to obfuscate and what not, by editing the config file:  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/liftoff/pyminifier"&gt;GitHub - liftoff/pyminifier: Pyminifier is a Python code minifier, obfuscator, and compressor.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;When you install pyminifier it should automatically add a 'pyminifier' executable to your $PATH. This executable has a number of command line arguments:  This reduced the size of tumult.py from 1358 bytes to 640 bytes. Not bad!  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://thehackernews.com/2017/05/samsung-galaxy-s8-iris-scanner.html"&gt;It's Insanely Easy to Bypass Samsung Galaxy S8 Iris Scanner with a Photo&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;德國 CCC 的傑作 LOL  &lt;/li&gt;
&lt;li&gt;給照片戴隱形眼鏡 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.checkpoint.com/2017/05/23/hacked-in-translation/"&gt;Hacked in Translation - from Subtitles to Complete Takeover | Check Point Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Check Point researchers revealed a new attack vector which threatens millions of users worldwide – attack by subtitles.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Medicean/VulApps"&gt;Medicean/VulApps: 快速搭建各种漏洞环境(Various vulnerability environment)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;收集各种漏洞环境，为方便使用，统一采用 Dockerfile 形式。同时也收集了安全工具环境。  需要查看相关环境的 tag 在Github具体的漏洞目录下查看 README 文件  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scarybeastsecurity.blogspot.tw/2017/05/bleed-continues-18-byte-file-14k-bounty.html"&gt;Security: *bleed continues: 18 byte file, $14k bounty, for leaking private Yahoo! Mail images&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;*bleed attacks are hot right now. Most notably, there's been Heartbleed and Cloudbleed. In both cases, out-of-bounds reads in server side code resulted in private server memory content being returned to clients.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/building-a-botnet-on-pypi-be1ad280b8d6"&gt;Building a botnet on PyPi – Hacker Noon&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;At a London python dojo in October last year, we discovered that PyPi allows packages to be registered with builtin module names.  So what? you might ask. Who would pip install a system package? Well the story goes something like this:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Botnet 真的是在各種地方都可以放  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ubuntu&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://serverfault.com/questions/643006/what-is-status-of-proc-and-how-do-i-call-it"&gt;debian wheezy - What is status_of_proc, and how do I call it? - Server Fault&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;This code runs just fine and sudo service nginx status outputs [ ok ] nginx is running. Yet status_of_proc is not defined in bash, neither in dash:  Yet inserting the same function call into an init script made by myself returned that the function was undefined.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;vim&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.wildsky.cc/posts/update-to-vim8/"&gt;Vim 上 8.0, Vundle 換 vim-plug | ws://wildsky.cc&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.blog/2017/05/23/stack-overflow-helping-one-million-developers-exit-vim/"&gt;Stack Overflow: Helping One Million Developers Exit Vim - Stack Overflow Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;You’re not alone, jclancy. In the five years since this question was asked, there have been over a million other developers who got stuck in Vim and couldn’t escape without a bit of help. Indeed, the difficulty of quitting the Vim editor is a common joke among developers.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appear.in/"&gt;appear.in – one click video conversations&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;xorg&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=108695"&gt;Error: cannot open display: :0.0 [SOLVED] / Applications &amp;amp; Desktop Environments / Arch Linux Forums&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4GsKWGHHigs"&gt;2017臺北世大運－TAIPEI IN MOTION - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這宣傳影片拍的超酷  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fugu.cafe/talks/14697"&gt;用 MSX 學寫 BASIC 的女高中生，與親切的陌生大叔們 - Fugu Café｜未來復古&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;網路真是個神奇的地方  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vodlocker.to/"&gt;VoDLocker API - a free web service to obtain video information&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;直接用 IMDB 番號(?) 就可以自動找到影片和字幕直接看  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://torrentfreak.com/now-anyone-can-embed-a-pirate-movie-in-a-website-170522/"&gt;Now Anyone Can Embed a Pirate Movie in a Website - TorrentFreak&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Vodlocker.to is offering an interesting service that not only provides streaming movies and TV shows in the browser but also allows them to be published anywhere on the web.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rotixblog.blogspot.com/2009/02/blog-post_6580.html"&gt;猴子都能懂的超簡單圍棋教學－入門篇 │ 畫越天際&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;不會圍棋，只好看一下教學。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://web.it.nctu.edu.tw/~hcsci/hospital/other/hivd.htm"&gt;椎間盤突出症及其相關手術&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;超過百分之八十的成年國人有下背疼痛的經驗，大多數是因姿勢不良或過度勞累造成 肌肉緊繃，或肌腱發炎，經過姿勢矯正、休養及藥物治療， 95% 左右的患者都可以獲得改善。然而也有一些患者卻有持續性的下背疼痛  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dcard.tw/f/trending/p/13215230"&gt;新詐騙手法，未顯示來電不要亂接，小心有詐！ - Dcard&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;【文長注意】   新詐騙手法，詐騙集團利用未顯示號碼撥打電話，如果手機被接聽就會用於做詐騙人頭的聯絡號碼。   未顯示來電不要亂接，到時候就等著接詐騙受害者的騷擾電話吧(尤其受害者如果比較不聰明，還會堅持  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/zhangzhesheng/posts/10152637307289531"&gt;張哲生 - Posts&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;原來接了之後就立刻掛斷的來電，是為了確認電話號碼是否利於推銷的「洗電話號碼」伎倆！ 據悉，「洗電話號碼」是使用電腦程式以流水號自動進行，因此就算是半夜也可能會打給你，只要一接通就立刻斷線以節省話費，而且即使來電有顯示號碼，你回撥該號碼也不會通。 一旦你接了「洗電話」的來電，對方便能確定你的電話號碼為有人使用的可騷擾對象，而且得知你是願意接不明來電的人，也就是說，打給你的接通率比較高。於是，過沒多久，你就會開始接到一通又一通的行銷電話了。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;不明來電就別接了吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 28 Aug 2017 13:10:37 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-05-29:posts/2017/05/29/y2017w21/</guid><category>alpha go</category><category>bitcoin</category><category>blockchain</category><category>blog</category><category>docker</category><category>ethereum</category><category>github</category><category>golang</category><category>life</category><category>misc</category><category>programmer</category><category>python</category><category>security</category><category>taiwan</category><category>ubuntu</category><category>vim</category><category>web</category><category>xorg</category><category>digital currency</category></item><item><title>Golang Taipei Gathering #24</title><link>https://blog.m157q.tw/posts/2017/05/23/golang-taipei-gathering-24/</link><description>&lt;ul&gt;
&lt;li&gt;Links  &lt;ul&gt;
&lt;li&gt;KKTIX: &lt;a href="https://golang.kktix.cc/events/gtg24"&gt;https://golang.kktix.cc/events/gtg24&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href="https://github.com/golangtw/GolangTaiwanGathering/tree/master/meetup/gtg24"&gt;https://github.com/golangtw/GolangTaiwanGathering/tree/master/meetup/gtg24&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;鮑承佑: go-swagger 踩雷分享&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Slides  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/golangtw/GolangTaiwanGathering/blob/master/meetup/gtg24/gogland_and_go-swagger.pdf"&gt;https://github.com/golangtw/GolangTaiwanGathering/blob/master/meetup/gtg24/gogland_and_go-swagger.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/go-swagger/go-swagger"&gt;https://github.com/go-swagger/go-swagger&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/go/"&gt;Gogland&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;寫 &lt;code&gt;swagger.yaml&lt;/code&gt; 可以 generate golang code for web server  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Genji Lu: Golang GC 演算法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Slides  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/GenchiLu/gc-in-golang-76250675"&gt;https://www.slideshare.net/GenchiLu/gc-in-golang-76250675&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Tracing_garbage_collection#Tri-color_marking"&gt;Tri-color GC&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;mark phase &amp;amp; sweep phase  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Write Barrier  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/go15gc"&gt;Go GC: Prioritizing low latency and simplicity - The Go Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Golang 1.5 時的文章，以降低 latency 為主。  &lt;/li&gt;
&lt;li&gt;Golang 1.5 公佈了這個 low latency 為主的 Garbage Collector  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;tradeoff  &lt;ul&gt;
&lt;li&gt;Tricolor GC 能達到極短暫的 pause time，但相對的付出代價  &lt;ul&gt;
&lt;li&gt;heap size 不可預期性  &lt;/li&gt;
&lt;li&gt;頻繁產生新物件時，throughput 會較低，CPU 時間花在 GC 上的比例較高  &lt;/li&gt;
&lt;li&gt;潛在風險：記憶體破碎  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;實測 GC example code  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;GODEBUG=gctrace=1&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ GODEBUG=gctrace=1 go run main.go&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/runtime/pprof/"&gt;runtime/pprof&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;net/pprof  &lt;ul&gt;
&lt;li&gt;http://127.0.0.1:7777/debug/pprof  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Golang 對 GC 的優化  &lt;ul&gt;
&lt;li&gt;1.6: 在 rescan stack 階段會檢查自從上次 STW (stop-the-world) 之後該 goroutine 是否有執行過，否則不 scan 該 stack。  &lt;/li&gt;
&lt;li&gt;1.7: 用一個 list 紀錄所有自從上次 STW 以後有執行過的 goroutine，在 rescane 階段不用 scan 所有 stack。  &lt;/li&gt;
&lt;li&gt;1.8: 修改 write barrier 消除 stack re-scan 的必要性。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Related materials  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://dave.cheney.net/tag/godebug"&gt;GODEBUG | Dave Cheney&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://segmentfault.com/a/1190000004233812"&gt;[译]GC专家系列1：理解Java垃圾回收 - 牧曦之晨 - SegmentFault&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;STW:「回到垃圾回收上，在開始學習GC之前你應該知道一個詞：stop-the-world。不管選擇哪種GC算法，stop-the-world都是不可避免的。Stop-the-world意味著從應用中停下來並進入到GC執行過程中去。一旦Stop-the-world發生，除了GC所需的線程外，其他線程都將停止工作，中斷了的線程直到GC任務結束才繼續它們的任務。GC調優通常就是為了改善stop-the-world的時間。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Linzy: 介紹 Testify 的 mock 功能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Slides  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/golangtw/GolangTaiwanGathering/blob/master/meetup/gtg24/testify_gtg24.zip"&gt;https://github.com/golangtw/GolangTaiwanGathering/blob/master/meetup/gtg24/testify_gtg24.zip&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stretchr/testify"&gt;https://github.com/stretchr/testify&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;A sacred extension to the standard go testing package  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stretchr/testify#mock-package"&gt;https://github.com/stretchr/testify#mock-package&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;mock.AnythingOfType("string")&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Chain your expectations  &lt;/li&gt;
&lt;li&gt;Verify your expectations  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;mock.AssertCalled(t, "foo", "bar")&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Stan Lo: Rooby: A new object oriented language written in Go aim at developing microservice efficiently&lt;/h3&gt;
&lt;p&gt;是這篇&lt;a href="https://medium.com/@st0012/%E5%AF%AB%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80-for-rubyist-3f055c4573da"&gt;寫自己的程式語言（For Rubyist） – Stan Lo – Medium&lt;/a&gt; 的作者本人耶  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Slides  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/LoStan/goby-76176699"&gt;https://www.slideshare.net/LoStan/goby-76176699&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goby-lang/goby"&gt;GitHub - goby-lang/goby: Goby (Rooby) is a new object oriented language written in Go aim at developing microservice efficiently.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;從 Rooby 改名叫 Goby 了，因為被罵翻了，一堆人寫信或開 issue 建議改名 XDDD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://goby-lang.github.io/goby/"&gt;https://goby-lang.github.io/goby/&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;目的是想用 Ruby 的語法來做到像 Golang 一樣的 High Performance 的 Language  &lt;/li&gt;
&lt;li&gt;Goby is not  &lt;ul&gt;
&lt;li&gt;A new implementation of Ruby  &lt;/li&gt;
&lt;li&gt;Syntax sugar for Golang.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Why Golang?  &lt;ul&gt;
&lt;li&gt;已經對 Golang 有興趣一陣子  &lt;/li&gt;
&lt;li&gt;效能不錯  &lt;/li&gt;
&lt;li&gt;GC 和底層的事可以交給 Golang，自己則專心在 VM 上面的開發  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;上禮拜五辭職來全職開發這個語言，希望大家可以&lt;a href="https://gratipay.com/goby/"&gt;捐助一點錢&lt;/a&gt; XD  &lt;/li&gt;
&lt;li&gt;目前開發完成度大概是 first release 的 70%  &lt;/li&gt;
&lt;li&gt;歡迎大家送 PR，就算是改個錯字也可以。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Tue, 23 May 2017 21:46:45 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-05-23:posts/2017/05/23/golang-taipei-gathering-24/</guid><category>Golang</category></item><item><title>Y2017W17</title><link>https://blog.m157q.tw/posts/2017/05/01/y2017w17/</link><description>&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Swordfish90/cool-retro-term"&gt;GitHub - Swordfish90/cool-retro-term: A good looking terminal emulator which mimics the old cathode display...&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;cool-retro-term is a terminal emulator which mimics the look and feel of the old cathode tube screens. It has been designed to be eye-candy, customizable, and reasonably lightweight.  This terminal emulator works under Linux and OSX and requires Qt 5.2 or higher.  &lt;/li&gt;
&lt;li&gt;這個畫面真的是有夠復古 XDDD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mitchellh/gox"&gt;mitchellh/gox: A dead simple, no frills Go cross compile tool&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Gox is a simple, no-frills tool for Go cross compilation that behaves a lot like standard go build. Gox will parallelize builds for multiple platforms. Gox will also build the cross-compilation toolchain for you.  To install Gox, please use go get.  &lt;/li&gt;
&lt;li&gt;支援挺多平台的，連 Plan9 都有，看起來頗方便。但沒有實際拿編出來的 binary 來用，不知道會不會動就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pndurette/gTTS"&gt;GitHub - pndurette/gTTS: Module and command line utility to save spoken text to mp3 via the Google Text to Speech (TTS) API&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;on GitHub and clone it locally Make sure you write tests for new features or modify the existing ones if necessary Open a new Pull Request from your feature branch to the develop branch.  &lt;/li&gt;
&lt;li&gt;在 IThome 的 ChatBot Day 聽到 adr 分享的「孫子廣播電台」，這專案也挺有趣的，用 RPi 加麵包版還有喇叭，寫個 script 去爬自己的 Facebook 動態，然後用 gTTS 唸出來給阿公阿嬤聽，讓不會用智慧型手機的長輩也可以知道你的 Facebook 動態 XD  &lt;ul&gt;
&lt;li&gt;有提到花了一些時間在處理斷詞的問題  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;才知道原來 Google 翻譯有 Python 的 module 可用，看來很多實況主的 donation 音效可能都是用這個做的。  &lt;/li&gt;
&lt;li&gt;但這個 module 每次都只能用一種語言，所以就無聊寫了個可以支援中英文的 script：&lt;a href="https://gist.github.com/M157q/71cd6a5d815ad10b467adeb7e08f563c"&gt;https://gist.github.com/M157q/71cd6a5d815ad10b467adeb7e08f563c&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mimino666/langdetect"&gt;GitHub - Mimino666/langdetect: Port of Google's language-detection library to Python.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Port of Google's language-detection library (version from 03/03/2014) to Python.  Supported Python versions 2.6, 2.7, 3.x.  &lt;/li&gt;
&lt;li&gt;因為上面那個問題，想說看看有沒有 library 可以自動偵測語言，然後把語言的 ISO 直接餵給 gTTS 就可以有個萬用的翻譯，所以找到了這個。不過實際試用了一下發現不太準，雖然 README 有寫支援 zh-tw，不過我餵繁體中文進去得到的結果都是 ko。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;vim&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dbkaiser.github.io/linux/2013/10/30/vimc-s/"&gt;Vim 中键入 C_s 卡死&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Vim 中误操作 由于用惯了Emacs, 有时为了速度在其他服务器上用vi常常会按emacs的快捷键。当然vi往往会集成一些emacs的快捷键比如C-n C-p等等。但是还是有很多键是有其他意义的，而这个保存键就很容易按错。C-x C-s（通常emacs保存  &lt;/li&gt;
&lt;li&gt;最近用 Vim 的時候不知道為啥常常卡死，查了之後才發現是這個問題，按太快不小心按到 Ctrl+S，然後就按啥都沒反應了，還以為自己的 Vim 當了。  &lt;/li&gt;
&lt;li&gt;解法是按 Ctrl+Q 跳出 flow control 模式  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;facebook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Schmavery/facebook-chat-api"&gt;Schmavery/facebook-chat-api&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Facebook now has an official API for chat bots here. This API is still the only way to automate chat functionalities on a user account. We do this by emulating the browser. This means doing the exact same GET/POST requests and tricking Facebook into thinking we're accessing the website normally.  &lt;/li&gt;
&lt;li&gt;直接用 Facebook 使用者的帳號密碼登入，然後用 JavaScript 直接打 Private API 拿各種資料，還可以 listen，等同於可以拿來稍微加工一下就變成 API  &lt;/li&gt;
&lt;li&gt;在 IThome 的 ChatBot Day 聽到 Her/Him 的開發者 Howard 分享，用這個拿來繞過 Facebook Messenger Platform API 的限制，還可以拿到 Facebook 使用者的 permanent ID，剛好最近工作上也遇到這個需求。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;music&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;原來金屬樂的唱腔還有分這麼多種，而且沒受過專業的訓練大概是真的唱不出來。  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://blow.streetvoice.com/11818-%E3%80%8C%E5%90%BC%E3%80%8D%E7%9A%84%E8%97%9D%E8%A1%93%EF%BC%9A%E5%A6%82%E4%BD%95%E5%8D%80%E5%88%86%E4%B8%8D%E5%90%8C%E9%A2%A8%E6%A0%BC%E7%9A%84%E5%98%B6%E5%90%BC%E5%94%B1%E8%85%94%EF%BC%9F/"&gt;「吼」的藝術：如何區分不同風格的嘶吼唱腔？ - Blow 吹音樂&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;歌唱的世界無比遼闊，任何一種風格都像萬花筒般蘊藏著七七四十九種變化！嘶吼是統稱，裡面還有好幾種唱法待你去研究探索，甚至是開發，心中怒氣值爆表的你究竟要選擇哪一種方式去吶喊呢？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.saydigi.com/2014/12/10-metal-vocal-styles.html"&gt;搖滾迷必看 三分鐘讓你瞭解10種金屬樂唱腔 - SayDigi | 點子生活&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;YouTube上的搖滾模仿紅人Jared Dines，在10月時錄製了一支有點搞笑，但卻又很實在影片。影片中用一首歌的方式，來模仿10種金屬風格的唱腔，了解各種金屬風格的朋友，一定馬上被點中笑穴並膜拜。如果你對金屬搖滾不了解，  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 10 Jul 2017 04:19:00 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-05-01:posts/2017/05/01/y2017w17/</guid><category>github</category><category>golang</category><category>misc</category><category>music</category><category>python</category><category>vim</category></item><item><title>Y2017W16</title><link>https://blog.m157q.tw/posts/2017/04/24/y2017w16/</link><description>&lt;h3&gt;docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.docker.com/2017/04/introducing-linuxkit-container-os-toolkit/"&gt;Announcing LinuxKit: A Toolkit for building Secure, Lean and Portable Linux Subsystems - Docker Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/linuxkit/linuxkit"&gt;GitHub - linuxkit/linuxkit: A toolkit for building secure, portable and lean operating systems for containers&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;facebook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://caffe2.ai/blog/2017/04/18/caffe2-open-source-announcement.html"&gt;Caffe2 Open Source Brings Cross Platform Machine Learning Tools to Developers | Caffe2&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Training and deploying AI models is often associated with massive data centers or super computers, with good reason. The ability to continually process, create, and improve models from all kinds of information: images, video, text, and voice, at massive scale, is no small computing feat.  &lt;/li&gt;
&lt;li&gt;感覺有機會的話可以拿來用用看  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.facebook.com/blog/post/2017/04/18/messenger-platform-2.0/"&gt;Messenger Platform 2.0 Debuts at F8 - Facebook for Developers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Today at F8, we introduced Messenger Platform 2.0, a new suite of tools that gives you the ability to build richer experiences, get discovered, and extend the conversational, visual and social capabilities of your bots. With more than 1.  &lt;/li&gt;
&lt;li&gt;真的更新的有夠快，一個月前才 1.4，現在已經 2.0 了，最大的改變大概是多了 extensions 吧，不過天知道台灣到底哪時候才能用 Payments  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/FacebookforDevelopers/videos/10154613896183553/"&gt;Live at our annual F8 developer conference. - Facebook for Developers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;今年 F8 的影片  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gcpug-tw.gitbooks.io/google-cloud-platform-in-practice/content/"&gt;簡介 ‧ Google Cloud Platform In Practice&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GCPUG.TW 出了一本關於 GCP 的書  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/managing-notification-emails-for-organizations/"&gt;Managing notification emails for organizations - User Documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來我想要的功能早就有了，不同組織的通知可以綁定不同信箱，這樣工作跟個人的就不會混在一起了，竟然現在才知道，趕緊設定。  &lt;/li&gt;
&lt;li&gt;不過後來用了一下發現，有時候還是會因為不明原因，在個人的信箱收到公司 GitHub repo 的通知，然後 Travis 的通知好像沒地方可以設定，統一會寄信到 GitHub 的 primary email 的樣子。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@hoffa/the-top-github-projects-per-country-92c275e19409"&gt;The top GitHub projects per country – Felipe Hoffa – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個統計有點有趣，是拿 GCP 上的 GitHub Public dataset 用 BigQuery 來計算的，台灣也有在裏面，第 1 名的是求職天眼通。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/poga/fuzz-testing-and-go-fuzz"&gt;Fuzz Testing and go-fuzz // Speaker Deck&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;iphone&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;最近買了 iPhone SE，所以看了一堆跟 iPhone 有關的有的沒的  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.51feibao.com/article-view-3784.html"&gt;利用iphone手機自帶包裝盒做支架 - 廢物利用手工DIY小製作 - 51費寶網&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很多朋友把苹果手机买回家之后第一时间就是到配件市场上重新买手机支架，殊不知iphone自带的出厂包装本身就为我们提供了一个绝佳的diy手机支架方案。如果你之前没有留意到这种手机新玩法，那么一起来跟随51费宝这期的手  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://read01.com/GPaLex.html"&gt;繼續使用iphone原裝包裝盒教你如何收納earpods耳機 - 壹讀&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;iphone買回家以後千萬不要急著把拆開的包裝盒扔掉，在以往教程當中我們已經學會了怎麼使用手機原裝包裝盒做diy手機架。可是盒子裡還有很多包材我們依然沒有用到的，例如裝earpod的耳機小盒子。我想各位跟我一樣，在打開i  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://appleuser.com/2014/05/16/wrap-iphone-earphones-without-tangles/"&gt;iPhone 耳機繞 8 字不打結收線法 | AppleUser&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;幾年前還在 Apple 店打工的時候，當時的前輩 Max 曾經傳授給我一個讓 iPhone 耳機線絕對不打結的收納方法，這起源於他當兵時擔任通信兵的線材收納法：繞 8 字。  &lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;後來收耳機線都用這個方法，幾乎不太打結，很棒。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Oversea_Job/M.1382073074.A.C85.html"&gt;[歐洲] ARM Norway AS 面試經驗分享 - 看板 Oversea_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很詳細的面試經歷，而且竟然是在挪威，應該不算常見，挺有趣的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ablagoev.github.io/linux/adventures/commands/2017/02/19/adventures-in-usr-bin.html"&gt;Adventures in /usr/bin and the likes - Dormammu's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;I just love Linux! For me it makes interacting with your computer fun and educational. I think if someone needs to learn about the core principles underlying an operating system and hardware, Linux is a great place to start.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dpdk.org/"&gt;DPDK&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;DPDK is a Linux Foundation Project, developed by hundreds of contributors, supported by strong leading members, and used in a growing ecosystem.  DPDK is a set of libraries and drivers for fast packet processing.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://chuansong.me/n/1720679451638"&gt;【論文解讀】Facebook 何凱明 Mask R-CNN 狙擊目標實例分割_人工智能頭條_傳送門&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;导读：自从将卷积神经网络引入了目标检测领域后，从rcnn到fast-rcnn，然后到end-to-end的faster-rcnn,除了yolo一枝独秀外，基本垄断了整个目标检测领域；而何凯明的resnet基本成了整个图像分类算法的巅峰。这一次，他们强强联手准  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;mastodon&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@poga/%E6%9E%B6%E8%A8%AD%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84-mastodon-instance-858a658e9494"&gt;架設你自己的 mastodon instance – Poga Po – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;mastodon 概念上類似 mail server：每個人都能架設他自己的 instance，每個 instance 之間都能互相溝通，使用者可以跨 instance follow、reply、reblog… 等等。  &lt;/li&gt;
&lt;li&gt;這篇描述了 &lt;a href="https://g0v.social"&gt;https://g0v.social&lt;/a&gt; 架設 Mastodon 的筆記，根據自己架設的友人表示，RoR 好肥（戰  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bslatkin/effectivepython"&gt;GitHub - bslatkin/effectivepython: Effective Python: Source Code and Errata for the Book&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Hello! You've reached the official source code repository for Effective Python. To learn more about the book or contact the author, please visit the official website.  In this repository you can browse all of the source code included in the book.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software engineering&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@rdsubhas/10-modern-software-engineering-mistakes-bc67fbef4fc8"&gt;Modern Software Over-Engineering Mistakes – RDX – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Few things are guaranteed to increase all the time: Distance between stars, Entropy in the visible universe, and Fucking business requirements . Many articles say Dont over-engineer but don’t say why or how. Here are 10 clear examples.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.inboundjournals.com/3-free-monitoring-tools-to-compare-your-facebook-page-with-the-competition/"&gt;與競品比較粉絲專頁的3個免費監測工具&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;社群經營是一個不斷優化的過程。經常為自己的社群經營作評估非常重要，而透過數據指標的分析，可以幫助品牌在社群的經營上逐步精進。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;深圳華強北真的是個神奇的地方，大概所有用過的 iPhone 都回流到這裡了吧。  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://forum.xda-developers.com/nexus-5x/general/4gb-ram-upgraded-nexus-5x-t3588743"&gt;4GB RAM upgraded of my Nexus 5X | LG Nexus 5X&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnbeta.com/articles/tech/603095.htm"&gt;老外Nexus 5X成磚寄去深圳：修好且升級到4G RAM_Google Android_cnBeta.COM&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Gossiping/M.1492426304.A.892.html"&gt;Re: [新聞] 八田安葬烏山頭 愛台灣超越種族&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;比課本上還詳細的八田羽一歷史  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pansci.asia/archives/110479"&gt;這個九九乘法表你小學沒背過！吠陀方形的千年奧秘 - PanSci 泛科學&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;古印度的奧妙  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E6%B0%B4%E7%85%99"&gt;水煙 - 维基百科，自由的百科全书&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來水煙起源於波斯啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E9%BC%BB%E7%83%9F"&gt;鼻烟 - 维基百科，自由的百科全书&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來鼻煙起源於美洲印地安人  &lt;/li&gt;
&lt;li&gt;十六世紀初西班牙人  &lt;/li&gt;
&lt;li&gt;帶回歐洲後於十七世紀流行起來  &lt;/li&gt;
&lt;li&gt;清朝時傳入中國  &lt;/li&gt;
&lt;li&gt;一時蔚為風潮  &lt;/li&gt;
&lt;li&gt;後被旱菸、水煙、紙煙取代  &lt;/li&gt;
&lt;li&gt;於蒙古大為流行  &lt;/li&gt;
&lt;li&gt;至今仍有吸食鼻煙的習慣  &lt;/li&gt;
&lt;li&gt;甚至和社交禮儀有關  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 10 Jul 2017 03:54:06 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-04-24:posts/2017/04/24/y2017w16/</guid><category>docker</category><category>facebook</category><category>gcp</category><category>github</category><category>golang</category><category>iphone</category><category>job</category><category>linux</category><category>machine learning</category><category>mastodon</category><category>misc</category><category>python</category><category>software engineering</category><category>taiwan</category><category>trivia</category></item><item><title>Y2017W14</title><link>https://blog.m157q.tw/posts/2017/04/10/y2017w14/</link><description>&lt;h3&gt;docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/anildigital/862675ec1b7bccabc311"&gt;Remove dangling docker images&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Remove dangling docker images View gist:862675ec1b7bccabc311 Raw gistfile1.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;因為同事問了，所以就找了一下。  &lt;/li&gt;
&lt;li&gt;我自己是用 &lt;code&gt;docker images -aqf dangling=true | xargs --no-run-if-empty docker rmi&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud-playground.appspot.com/playground/"&gt;Cloud Playground&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/googlearchive/cloud-playground"&gt;https://github.com/googlearchive/cloud-playground&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;算是 Google App Engine 的火力展示吧，用 GAE 架了一個可以快速 fork and deploy GAE service 的網站  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/7813194/how-do-i-edit-an-existing-tag-message-in-git"&gt;git tag - How do I edit an existing tag message in git? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;git tag &amp;lt;tag name&amp;gt; &amp;lt;tag name&amp;gt; -f -m "&amp;lt;new message&amp;gt;"&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;基本上就是強制 overwrite  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1028649/how-do-you-rename-a-git-tag"&gt;How do you rename a Git tag? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;git tag new old&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;git tag -d old&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin :refs/tags/old&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push --tags&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;基本上就是把舊的複製到新的以後，在把舊的 local 跟 remote 砍掉，再把更新 push 到 remote  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.wu-boy.com/2017/04/5-reasons-why-we-switched-from-python-to-go/"&gt;五大理由從 Python 轉到 Go 語言 | 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;都算滿務實的理由  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1491689771.A.CCF.html"&gt;[心得] 歐洲工作&amp;amp;面試心得 - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;挺不錯的經驗，在阿姆斯特丹工作好像真的很棒啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://szlin.me/2017/04/05/linux-kernel-%e5%af%86%e7%a2%bc%e5%ad%b8%e6%bc%94%e7%ae%97%e6%b3%95%e5%af%a6%e4%bd%9c%e6%b5%81%e7%a8%8b/"&gt;Linux Kernel 密碼學演算法實作流程 – SZ Lin  &amp;amp; Embedded Linux&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTE4Nzk1NA%3D%3D&amp;amp;mid=2650741697&amp;amp;idx=1&amp;amp;sn=9e460ef496d57164c27b617ff17a78f8&amp;amp;chksm=beb2ed5c89c5644a2161f4151ec3cca8e605538435b772a911646d62f9f7de4ccaa9d5125fd7&amp;amp;mpshare=1&amp;amp;scene=4&amp;amp;srcid=0402GzvLtZhgODBSpKPlLwoC#rd"&gt;参与这场线上大战之后，我觉得人类未来还是有希望的&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Reddit 的愚人節  &lt;/li&gt;
&lt;li&gt;好酷啊  &lt;/li&gt;
&lt;li&gt;完全沒有參與到  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/2017/04/noto-serif-cjk-is-here.html"&gt;Google Open Source Blog: Noto Serif CJK is here!&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/04/04/7229/tim-berners-lee-%e6%8b%bf%e4%b8%8b-2016-%e5%b9%b4-turing-award/"&gt;Tim Berners-Lee 拿下 2016 年 Turing Award | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/04/04/7224/adobe-%e8%88%87-google-%e5%90%88%e4%bd%9c%e6%8e%a8%e5%87%ba-noto-serif-cjk-%e6%80%9d%e6%ba%90%e5%ae%8b%e9%ab%94/"&gt;Adobe 與 Google 合作推出 Noto Serif CJK (思源宋體) | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.omgubuntu.co.uk/2017/04/ubuntu-18-04-ship-gnome-desktop-not-unity"&gt;Ubuntu 18.04 To Ship with GNOME Desktop, Not Unity - OMG! Ubuntu!&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Ubuntu 18.04 LTS will use GNOME as its default desktop environment, and not Unity 8 — or even Unity 7.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ptt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/CCRomance/M.1491078577.A.39F.html"&gt;[閒聊] 我媽的異國婚姻&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;大概是第一次花這麼多時間看 CCR 版的文章，作者的文筆很好，真的可以當小品文來看，有時候真實的人生就是比小說來的神奇啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doughellmann.com/blog/2017/04/03/profile-and-pstats-performance-analysis-pymotw-3/"&gt;profile and pstats — Performance Analysis — PyMOTW 3 – Doug Hellmann&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Python 的 built-in module 就有可以做 profiling 的工具  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Progressive_web_app"&gt;Progressive web app - Wikipedia&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Progressive Web App (PWA) is a term used to denote a new software development methodology. Unlike traditional applications, progressive web apps are a hybrid of regular web pages (or websites) and a mobile application.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;因為最近 &lt;a href="https://mobile.twitter.com"&gt;https://mobile.twitter.com&lt;/a&gt; 用 Node.js, React.js 重寫，改善了不少效能。裡頭提到了 PWA，因為沒聽過而去查了一下  &lt;/li&gt;
&lt;li&gt;看起來就是 website 但故意設計的跟 App 的感覺一樣，讓使用者在網頁版與手機上的 UX 是一樣的  &lt;/li&gt;
&lt;li&gt;詳細改寫的細節在 Twitter Engineering blog 這篇：&lt;a href="https://blog.twitter.com/2017/how-we-built-twitter-lite"&gt;https://blog.twitter.com/2017/how-we-built-twitter-lite&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/%E9%AD%94%E9%AC%BC%E7%9A%84%E6%89%8B%E7%A8%BF/%E5%9C%8B%E9%81%93%E5%9B%9B%E6%96%AC%E9%A6%96%E4%BA%86%E5%8F%B0%E7%81%A3%E7%AC%AC%E4%B8%80%E6%A2%9D%E8%87%AA%E8%A1%8C%E8%BB%8A%E9%81%93-8ca7c80e6bd1"&gt;國道四斬首了台灣第一條自行車道 – 魔鬼的手稿 – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;近20年來，國道四號，在老台中山區是一個非常複雜的概念。這一條高速公路，由台中清水起，大略沿大甲溪往東而行，至豐原東北止，已於2001年11月16日通車，但是，後續工程還沒完，國道四後面一分為二，還要接一條打山洞  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;身為一個豐原人，沒看這篇還真的不知道東豐自行車隧道有這麼多的牽扯，大概是因為最近在看紙牌屋的關係，所以對於這些大概也能有些想像。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/TaichungBun/M.1491294485.A.A97.html"&gt;[食記] 全台最容易讓女友落淚的餐廳 - 看板 TaichungBun - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這餐廳... 「夜間X行」真的太狂了，超級像九把刀的小說會出現的內容...  &lt;/li&gt;
&lt;li&gt;雖然身為一個台中人，但沒聽過這間餐廳。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://0.30000000000000004.com/"&gt;0.30000000000000004 - Floating Point Math&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好像還是有不少人不知道這問題  &lt;/li&gt;
&lt;li&gt;0.1+0.2 != 0.3  &lt;/li&gt;
&lt;li&gt;浮點數運算的誤差  &lt;/li&gt;
&lt;li&gt;數值方法的課程應該必提吧？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 01 May 2017 20:29:16 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-04-10:posts/2017/04/10/y2017w14/</guid><category>docker</category><category>gcp</category><category>git</category><category>golang</category><category>job</category><category>linux</category><category>misc</category><category>news</category><category>ptt</category><category>python</category><category>taiwan</category><category>trivia</category><category>web</category></item><item><title>Y2017W13</title><link>https://blog.m157q.tw/posts/2017/04/03/y2017w13/</link><description>&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2017/03/boundary.html"&gt;技术的边界 - 阮一峰的网络日志&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;挺有趣的反思  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotblogs.com.tw/hatelove/2017/03/26/why-engineers-should-keep-blogging"&gt;我為什麼鼓勵工程師寫 blog | In 91 - 點部落&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;覺得講這麼長一篇真的好累  &lt;/li&gt;
&lt;li&gt;像我這種拖延症患者看完大概就會覺得太麻煩而不做了  &lt;/li&gt;
&lt;li&gt;個人一直都抱持著寫給之後會忘記這件事情的自己看的想法在寫  &lt;/li&gt;
&lt;li&gt;因為我記不住這麼多東西  &lt;/li&gt;
&lt;li&gt;如果有人剛好因此而受益也很好  &lt;/li&gt;
&lt;li&gt;如果有好的回饋更好  &lt;/li&gt;
&lt;li&gt;僅此而已  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;facebook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.facebook.com/posts/1245186942201788/hardware-analytics-and-lifecycle-optimization-halo-at-facebook/"&gt;Hardware Analytics and Lifecycle Optimization (HALO) at Facebook | Engineering Blog | Facebook Code | Facebook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Facebook 的 blog 大概是我有追的裡頭最難懂的一個  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.gcping.com/"&gt;GCP ping&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;測試自己跟 GCP 不同 region 之間的 latency  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/03/21/%e5%a6%82%e4%bd%95%e5%af%ab%e4%b8%80%e5%80%8b-git-commit-message/"&gt;如何寫一個 Git Commit Message | louie_lu's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;2014 年的舊文了  &lt;/li&gt;
&lt;li&gt;但被這位翻成了繁體中文  &lt;/li&gt;
&lt;li&gt;所以還是推一下  &lt;/li&gt;
&lt;li&gt;很值得一看  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ad Blocker 與 Anti Ad Blocker 們  &lt;ul&gt;
&lt;li&gt;Ad Blocker  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gorhill/uBlock"&gt;GitHub - gorhill/uBlock: uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/reek/anti-adblock-killer"&gt;GitHub - reek/anti-adblock-killer: Anti-Adblock Killer helps you keep your Ad-Blocker active, when you visit a website and it asks you to disable.&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Anti Ad Blocker  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sitexw/BlockAdBlock"&gt;GitHub - sitexw/BlockAdBlock: Allows you to detect the extension AdBlock (and other)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sitexw/FuckAdBlock"&gt;sitexw/FuckAdBlock: Detects ad blockers (AdBlock, ...)&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fission/fission"&gt;fission/fission: Fast Serverless Functions for Kubernetes&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Fission is a fast serverless framework for Kubernetes with a focus on developer productivity and high performance.  Fission operates on just the code: Docker and Kubernetes are abstracted away under normal operation, though you can use both to extend Fission if you want to.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;GTG 聽到的介紹，可以拿來在 k8s 上做到 Function as a Service，不過目前還不夠成熟，還不太適合拿來用於 production  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hybridgroup/gobot"&gt;GitHub - hybridgroup/gobot: Golang framework for robotics, drones, and the Internet of Things (IoT)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Gobot (http://gobot.io/) is a framework using the Go programming language (http://golang.org/) for robotics, physical computing, and the Internet of Things.  It provides a simple, yet powerful way to create solutions that incorporate multiple, different hardware devices at the same time.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;一個提供快速打造 IoT device 的 Golang framework  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;google&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/"&gt;Google Open Source Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Google 開了一個網站，整理了 Google 和 Open Source 有關的東西。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://thecodist.com/article/the-biggest-difference-between-coding-today-and-when-i-started-in-the-80-s"&gt;The Codist: The Biggest Difference Between Coding Today and When I Started in the 80’s&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者出自於親身經驗描述了現在寫程式與三十年前寫程式的差別  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/03/disable-pylint-warning-check-2017/"&gt;關掉 Pylint 一些特定 Warning 的檢查 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有時候真的會想要關閉一些比較嚴格的檢查  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tzangms.com/dashboard-tool-metabase/"&gt;Dashboard 利器: Metabase&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;花了幾個小時玩 Metabase 就把這張漂亮的 Dashboard 拉了出來, 也沒什麼寫到 SQL, 就把 StreetVoice 的相關營運數據都給攤了出來, 真的是非常棒啊, 雖然內容得再多調整就是了, 這塊我得再多學習。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;好像真的挺不錯的，順便把它介紹給了同事。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/FENGJoy/status/847009349599870976"&gt;V Joy on Twitter: "三件套式可膨胀式植入假体，是男科用于重度ED的三线治疗手段。在伟哥问世前，三件套手术风靡欧美，号称植入幸福，植入自信，其手术切口隐蔽，创伤也比较小。以前医生尝试过植入肋骨、肋软骨、硬性材料，半硬性材料，最后进展到可膨胀性材料。不过需要祈祷术后不要遇到机械故障，导致开关无效，#科普 https://t.co/qngLfow95E"&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;三件套式可膨胀式植入假体，是男科用于重度ED的三线治疗手段。在伟哥问世前，三件套手术风靡欧美，号称植入幸福，植入自信，其手术切口隐蔽，创伤也比较小。以前医生尝试过植入肋骨、肋软骨、硬性材料，半硬性材  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;這是什麼恐怖的東西，光看起來就很痛。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/03/bank-deposit-method-different-2017/"&gt;銀行定存 零存整付、整存整付、存本取息 的差別 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;常常聽到這些名詞都搞不太懂，這篇總算有比較清楚的解釋。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ted.com/talks/emilie_wapnick_why_some_of_us_don_t_have_one_true_calling"&gt;Emilie Wapnick: Why some of us don't have one true calling | TED Talk | TED.com&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有些人並沒有對某一件事有天賦與絕對的興趣，每件事情做到一定的程度就會開始感到厭煩或無趣，進而開始學習其他事物，常常會被很多人認為是三分鐘熱度。  &lt;/li&gt;
&lt;li&gt;講者自己就是這樣的一個人，但強調這樣的人並不是壞事，因為他們對於未知的事物會比較樂於接受與學習，而且因為常常在學新東西，所以對於學習新東西的方法已經有一定的模式，所以會比別人快還上手，也知道學習的過程一定會遇到失敗，因此而不怕失敗。  &lt;/li&gt;
&lt;li&gt;在團隊合作的時候，這樣的人也可以提供團隊一些比較不一樣的觀點。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/25343518"&gt;用深度学习（DNN）构建推荐系统 - Deep Neural Networks for YouTube Recommendations论文精读 - 知乎专栏&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Youtube 用 DNN 打造推薦系統的論文  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 01 May 2017 20:04:26 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-04-03:posts/2017/04/03/y2017w13/</guid><category>blog</category><category>facebook</category><category>gcp</category><category>git</category><category>github</category><category>golang</category><category>google</category><category>life</category><category>misc</category><category>programmer</category><category>python</category><category>trivia</category><category>web</category></item><item><title>Golang Taipei Gathering #22</title><link>https://blog.m157q.tw/posts/2017/03/28/golang-taipei-gathering-22/</link><description>&lt;ul&gt;
&lt;li&gt;Links  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://golang.kktix.cc/events/gtg22"&gt;http://golang.kktix.cc/events/gtg22&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/groups/269001993248363/permalink/817469818401575/"&gt;https://www.facebook.com/groups/269001993248363/permalink/817469818401575/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;19:30~20:10: 陳敬翔 (Sean) - Go 的技能與安裝入門&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Slides  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://go-talks.appspot.com/github.com/Starfine/02.-Go-Present/GTG22.slide#1"&gt;http://go-talks.appspot.com/github.com/Starfine/02.-Go-Present/GTG22.slide#1&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用 Go 開發手機 App  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;gomobile&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;gomobile install golang.org/x/mobile/example/flappy&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用 Chrome 開啟 Android 畫面的瀏覽器套件  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/vysor/gidgenkbbabolejbgbpnhbimgjbffefm"&gt;https://chrome.google.com/webstore/detail/vysor/gidgenkbbabolejbgbpnhbimgjbffefm&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用 Go 開發 Arduino  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://gobot.io"&gt;GoBot&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;學習資源  &lt;ul&gt;
&lt;li&gt;Google 搜尋時，用 &lt;code&gt;golang&lt;/code&gt; 當關鍵字，不要用 &lt;code&gt;go&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang/go/wiki/FromXToGo"&gt;https://github.com/golang/go/wiki/FromXToGo&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;常用網站  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://godoc.org/"&gt;GoDoc&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://gowalker.org/"&gt;GoWalker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://awesome-go.com/"&gt;AwesomeGo&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/avelino/awesome-go"&gt;https://github.com/avelino/awesome-go&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golanglibs.com/"&gt;GoLangLibs&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;20:20~21:00: VMFive - TA-CHING CHEN - Introduction to Fission&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Slides  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://tachingchen.com/tw/blog/Fission-Introduction/"&gt;https://tachingchen.com/tw/blog/Fission-Introduction/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/TaChingChen/fission-introduction"&gt;https://www.slideshare.net/TaChingChen/fission-introduction&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fission/fission"&gt;Fission: Fast Serverless Functions for Kubernetes&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Function as a Service (FaaS)  &lt;ul&gt;
&lt;li&gt;Exmaple  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/functions/"&gt;Google Cloud Functions&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pros  &lt;ul&gt;
&lt;li&gt;developer focus on code snippets  &lt;/li&gt;
&lt;li&gt;short cold-start  &lt;/li&gt;
&lt;li&gt;horizontal scaling  &lt;/li&gt;
&lt;li&gt;pay as you go (!= cheap)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cons  &lt;ul&gt;
&lt;li&gt;vendor lock-in  &lt;/li&gt;
&lt;li&gt;hard to test  &lt;/li&gt;
&lt;li&gt;environmental limitation  &lt;/li&gt;
&lt;li&gt;limited execution time per request  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fission  &lt;ul&gt;
&lt;li&gt;支援 Go, Node.js, PHP7, Python3, .NET  &lt;ul&gt;
&lt;li&gt;Go 的部份是以 Go 1.8 plugin 的方式插入，如果要使用 Go 開發的話，記得要把版本升到 1.8  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Live demo example  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;fission fn create --name GTG22 --env nodejs --code hello.js&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;fission route create --method GET --url /hello --function GTG22&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;fission fn edit --name GTG22&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;看 log (講者貢獻的 &lt;a href="https://github.com/fission/fission/pull/131"&gt;PR&lt;/a&gt;，不到一個星期前才剛 merge 進 master branch)  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;fission fn logs --name GTG22&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;fission fn logs --name GTG22 -f&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;fission fn logs --name GTG22 -f -d&lt;/code&gt; # 看更詳細的 log (Debug mode)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Architecture  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fission/fission/blob/master/Documentation/Architecture.md"&gt;https://github.com/fission/fission/blob/master/Documentation/Architecture.md&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;會先開好一堆 generic pods listen，當接到佈署 fuction 的需求時，可以在幾毫秒內就佈署完成，並轉換成 Specific Function Pod.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How to contribute  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fission/fission/blob/master/CONTRIBUTING.md"&gt;https://github.com/fission/fission/blob/master/CONTRIBUTING.md&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;是個去年才開始的專案，所以有很多地方可以貢獻。文件寫的不錯，懂 Go 的話基本上可以很快做出一些貢獻。  &lt;/li&gt;
&lt;li&gt;Repo owner 是位印度人，但英文很好，也很積極的回應，做出貢獻還有可能得到神祕小禮物，例如一件來自美國的 T-shirt 之類的  &lt;/li&gt;
&lt;li&gt;還不是個成熟的專案，還不建議用在 Production。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Conclusion  &lt;ul&gt;
&lt;li&gt;Short cold-start overhead (~100 ms)  &lt;/li&gt;
&lt;li&gt;Suitable for developers want to set up their own FaaS  &lt;/li&gt;
&lt;li&gt;Cutsomized environment image  &lt;/li&gt;
&lt;li&gt;Adjustable execution time  &lt;/li&gt;
&lt;li&gt;Cheaper than FaaS under heavy usage  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Lighting Talks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;陳小熊 - Go 新手村冒險筆記  &lt;ul&gt;
&lt;li&gt;Slides: &lt;a href="https://drive.google.com/file/d/0B158iGrlsSveNFVoUUF4ZTlsbVE/view"&gt;https://drive.google.com/file/d/0B158iGrlsSveNFVoUUF4ZTlsbVE/view&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;生動活潑得介紹了 Golang 有哪些學習資源，包括線上課程、推薦書籍、Gopher Con 等等，為入門者提供了一個方向。  &lt;/li&gt;
&lt;li&gt;還 Live Demo 了一個用 Golang 實作出來的線上讀書會平台  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;想想我也是上次 GTG 才決定開始學 Golang 的，結果過了一個月了根本沒啥進展，感到慚愧 QQ  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Tue, 28 Mar 2017 22:39:59 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-03-28:posts/2017/03/28/golang-taipei-gathering-22/</guid><category>Golang</category></item><item><title>Y2017W09</title><link>https://blog.m157q.tw/posts/2017/03/06/y2017w09/</link><description>&lt;h3&gt;facebook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://messengerblog.com/platform-updates/messenger-platform-1-4-brings-even-more-tools-to-build-great-experiences/"&gt;Messenger Platform 1.4 Brings Even More Tools to Build Great Experiences – Messenger Platform&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Facebook Messenger Platform 1.4 版，最近剛好在碰 Messenger Bot 的部份，所以得追一下。  &lt;/li&gt;
&lt;li&gt;這版改最大的大概就是 Persistent Menu 的結構吧，從原本只能放 5 個最上層的按鈕，改成放 3 個最上層的按鈕，然後每個按鈕的下一層可以再放 5 個按鈕。  &lt;/li&gt;
&lt;li&gt;另外的則是 persistent Menu 加入了 locale 的設定，可以設定 default locale 要回的訊息，然後可以針對不同的 locale 做設定，比如英語系的國家就回英文的訊息，中文的則回中文等等。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unixpickle/fbmsgr"&gt;unixpickle/fbmsgr: Reverse engineering Facebook Messenger&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有人自己用 Golang reverse 了一個 Facebook Messenger bot 出來...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://sky-dogod.blogspot.com/2008/10/wine.html"&gt;Doggy: WINE 解決中文亂碼&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近有用到 WINE，又遇到中文亂碼的問題，花了一些時間踩了些雷以後，發現主要有兩種問題：  &lt;ul&gt;
&lt;li&gt;第一種是字型問題，解法就照上面這篇寫的一樣，把字型複製到 &lt;code&gt;~/.wine/driver_c/windows/Fonts&lt;/code&gt; 之後，再用編輯器開個 &lt;code&gt;font.reg&lt;/code&gt; 寫入下方的內容後存檔  &lt;/li&gt;
&lt;li&gt;之後再打開 &lt;code&gt;~/.wine/driver_c/windows/regedit.exe&lt;/code&gt; or &lt;code&gt;$ wine regedit&lt;/code&gt;，選擇 import 剛剛儲存的 &lt;code&gt;font.reg&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;另外一種則是 locale 的問題，必須視執行軟體的情況修改 &lt;code&gt;LC_ALL&lt;/code&gt; 和 &lt;code&gt;LANG&lt;/code&gt; 這兩個環境變數  &lt;ul&gt;
&lt;li&gt;可能是 &lt;code&gt;$ export LC_ALL=zh_TW.UTF-8&lt;/code&gt;, &lt;code&gt;$ export LANG=zh_TW.UTF-8&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;也可能是 &lt;code&gt;$ export LC_ALL=zh_TW.Big5&lt;/code&gt;, &lt;code&gt;$ export LANG=zh_TW.Big5&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;我遇到的是這兩種問題都得一起解決才不會出現任何中文亂碼。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;REGEDIT4  

[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontSubstitutes]  
&amp;quot;Arial&amp;quot;=&amp;quot;Arial&amp;quot;  
&amp;quot;Arial CE,238&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Arial CYR,204&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Arial Greek,161&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Arial TUR,162&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Courier New&amp;quot;=&amp;quot;Courier New&amp;quot;  
&amp;quot;Courier New CE,238&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Courier New CYR,204&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Courier New Greek,161&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Courier New TUR,162&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;MingLiU&amp;quot;=&amp;quot;MingLiU&amp;quot;  
&amp;quot;PMingLiU&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;FixedSys&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Helv&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Helvetica&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;MS Sans Serif&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;MS Shell Dlg&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;MS Shell Dlg 2&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;System&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Tahoma&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Times&amp;quot;=&amp;quot;Times&amp;quot;  
&amp;quot;Times New Roman&amp;quot;=&amp;quot;Times New Roman&amp;quot;  
&amp;quot;Times New Roman CE,238&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Times New Roman CYR,204&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Times New Roman Greek,161&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Times New Roman TUR,162&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Tms Rmn&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cnet.com/news/icon-smart-condom-ring/"&gt;Smart condom ring i.Con is like a Fitbit for your man bits - CNET&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The i.Con Smart Condom, which markets itself as the "world's first smart condom," is actually a ring that fits over a boring, dumb condom and claims to track the exercise of your man bits, as well as detect chlamydia and syphilis.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;智慧型保險套，可以追蹤運動時間、射速、射出角度還可以分享到社群軟體...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mozilla.org/blog/2017/02/27/mozilla-acquires-pocket"&gt;Mozilla Acquires Pocket | The Mozilla Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Mozilla 竟然把 Pocket 買了，聽說 Firefox 跟 Pocket 的整合性也提高了，真好奇買了 Pocket 的用意是什麼？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/cyberomin/status/835888786462625792"&gt;Celestine Omin on Twitter: "I was just asked to balance a Binary Search Tree by JFK's airport immigration. Welcome to America."&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;I was just asked to balance a Binary Search Tree by JFK's airport immigration. Welcome to America.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;因為川普禁令，在入境的時候被美國海關考試，而且還不是只有考一題平衡二元搜尋樹而已，而是要他寫一份 A4 考卷...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.techug.com/post/good-programmer-good-habit.html"&gt;有前途的程序員的16個習慣，你擁有幾個？ | 程序師&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;大部份都還算認同，算是可以拿來提醒自己的文章吧。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/kylinfish/clean-code-72688451"&gt;無暇的程式碼 Clean Code 心得分享&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;挺棒的要點分享，Clean Code 真的是值得一看的好書啊，雖然是用 Java 當範例，不過其他程式語言的使用者來看也不會覺得落差很大就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.wu-boy.com/2017/02/caddy-setting-with-drone-ci-server/"&gt;Caddy 搭配 Drone 伺服器設定 | 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Caddy 直接就有 HTTPS 可用，因為會自動幫忙申請 Let's encrypt 憑證  &lt;/li&gt;
&lt;li&gt;之後有機會的話好像可以試試看，現在要弄支援 HTTPS 的 HTTP server 真的比以前簡單很多了啊j  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/02/tequila-wine-mixer-2017/"&gt;幾種簡單的 龍舌蘭 調酒 (雞尾酒) - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;比較知道的還是 Tequila Bomb 就是，其他的有機會的話也可以來試試看？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/gossiping/M.1488390813.A.E39.html"&gt;Re: [新聞] 央行去年每月賺188億元 - 看板 Gossiping - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇也算是個精彩好文呢，原來外匯存底高不是什麼好事啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Tue, 14 Mar 2017 11:15:00 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-03-06:posts/2017/03/06/y2017w09/</guid><category>facebook</category><category>golang</category><category>life</category><category>linux</category><category>news</category><category>programmer</category><category>programming</category><category>taiwan</category><category>web</category></item><item><title>Y2017W08</title><link>https://blog.m157q.tw/posts/2017/02/27/y2017w08/</link><description>&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotblogs.com.tw/hatelove/2017/01/26/dead-fish-smell-by-reading-understanding-patterns-of-project-behavior"&gt;[遛書]項目百態－死魚&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;data science&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://36kr.com/p/5064677.html"&gt;大數據技術在預測性營銷上的實踐9個問題&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;devops&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/chickenwu/web-application-72464042"&gt;大型 Web Application 轉移到微服務的經驗分享&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chengl.com/kubectl-authentication-made-simple/"&gt;kubectl Authentication Made Simple&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/acme"&gt;google/acme: A simple ACME command line tool without 3rd party deps!&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;ACME-complient Go client library and a command line tool. Neither has 3rd party dependencies. Also, see https://letsencrypt.org.  This package is a work in progress and makes no API stability promises.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Google 用 golang 寫了一個 Let's Encrypt 的 CLI client.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;kswapd&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=144702"&gt;kswapd using 100% CPU, I don't even have swap. / Kernel &amp;amp; Hardware / Arch Linux Forums&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This process kswapd (kswapd0, actually) suddenly starts using 100% of one of my cores for no good reason, usually when moving many GBs around, but sometimes for no good reason at all.  I have no swap.  It also prevents the computer from sucessfully suspending.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;kswapd 會在記憶體用盡的時候佔據大量的 CPU 資源，導致速度變得很慢。  &lt;/li&gt;
&lt;li&gt;如果遇到的話可以透過 &lt;code&gt;sudo sh -c "sync; echo 3 &amp;gt; /proc/sys/vm/drop_caches"&lt;/code&gt; 這個指令來釋放佔據記憶體的 Cache  &lt;/li&gt;
&lt;li&gt;參考資料  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://linux-mm.org/Drop_Caches"&gt;https://linux-mm.org/Drop_Caches&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gtwang.org/linux/linux-cache-memory-linux/"&gt;https://blog.gtwang.org/linux/linux-cache-memory-linux/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2010/10/linux-cached-memory-release-2010/"&gt;https://blog.longwin.com.tw/2010/10/linux-cached-memory-release-2010/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://huenlil.pixnet.net/blog/post/26822270-%5B%E8%BD%89%5D-%E9%87%8B%E6%94%BElinux%E8%A8%98%E6%86%B6%E9%AB%94"&gt;http://huenlil.pixnet.net/blog/post/26822270-%5B%E8%BD%89%5D-%E9%87%8B%E6%94%BElinux%E8%A8%98%E6%86%B6%E9%AB%94&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;movie&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jacky.seezone.net/2017/02/02/8636/"&gt;《Arrival》的宇宙觀› 網絡暴民Jacky's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看來原著小說好像值得一看  &lt;/li&gt;
&lt;li&gt;電影似乎省略不少細節？  &lt;/li&gt;
&lt;li&gt;原著小說中文翻譯版：&lt;a href="https://krantasblog.blogspot.tw/2016/06/story-of-your-life.html"&gt;https://krantasblog.blogspot.tw/2016/06/story-of-your-life.html&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.susanjfowler.com/blog/2017/2/19/reflecting-on-one-very-strange-year-at-uber"&gt;Reflecting on one very, very strange year at Uber — Susan J. Fowler&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;As most of you know, I left Uber in December and joined Stripe in January. I've gotten a lot of questions over the past couple of months about why I left and what my time at Uber was like.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;在 Uber 待了一年的女性工程師爆料 Uber 裡頭對於女性工程師有多麼的不友善，主管的性騷擾、HR 的漠視以及發現其他女性工程師也有遇到同樣的問題進而到大量女性工程師離職等等，非常的誇張。  &lt;/li&gt;
&lt;li&gt;Uber 在技術方面沒話說，但是在法律以及工作文化方面只怕已是聲名狼籍，剛好還搭上在台灣因為無法配合法律問題而暫停營業的風潮，所以這篇也被台灣許多科技媒體轉發。  &lt;/li&gt;
&lt;li&gt;也因為這件事，之後也有非常多的 Uber 工程師提出離職申請。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PolicyStat/terrarium"&gt;GitHub - PolicyStat/terrarium: Package and ship relocatable python virtualenvs, like a boss.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用這個打包環境 佈署時就不用等 pip 不錯  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CloudBleed 系列  &lt;ul&gt;
&lt;li&gt;Google Project Zero 的 Taviso 回報漏洞  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://bugs.chromium.org/p/project-zero/issues/detail?id=1139"&gt;1139 - cloudflare: Cloudflare Reverse Proxies are Dumping Uninitialized Memory - project-zero - Monorail&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;(It took every ounce of strength not to call this issue "cloudbleed")  Corpus distillation is a procedure we use to optimize the fuzzing we do by analyzing publicly available datasets. We've spoken a bit about this publicly in the past, for example:  https://security.googleblog.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CloudFlare 官方詳細說明  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.cloudflare.com/incident-report-on-memory-leak-caused-by-cloudflare-parser-bug/"&gt;Incident report on memory leak caused by Cloudflare parser bug&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Last Friday, Tavis Ormandy from Google’s Project Zero contacted Cloudflare to report a security problem with our edge servers. He was seeing corrupted web pages being returned by some HTTP requests run through Cloudflare.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有人稍微整理了一下該如何處理這件事  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@octal/cloudbleed-how-to-deal-with-it-150e907fd165"&gt;Cloudbleed: How to deal with it – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有人列出了使用 CloudFlare 服務的網站名單（不一定但有可能受影響）  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pirate/sites-using-cloudflare"&gt;GitHub - pirate/sites-using-cloudflare: List of domains using Cloudflare DNS (potentially affected by the CloudBleed HTTPS traffic leak)&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;檢測網站是不是有使用 CloudFlare  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.doesitusecloudflare.com"&gt;http://www.doesitusecloudflare.com&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Google 系列  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://security.googleblog.com/2017/02/announcing-first-sha1-collision.html"&gt;Google Online Security Blog: Announcing the first SHA1 collision&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Cryptographic hash functions like SHA-1 are a cryptographer’s swiss army knife. You’ll find that hashes play a role in browser security, managing code repositories, or even just detecting duplicate files in storage. Hash functions compress large amounts of data into a small message digest.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;已經確定找到 SHA-1 碰撞的演算法了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2017/01/7-ways-we-harden-our-KVM-hypervisor-at-Google-Cloud-security-in-plaintext.html"&gt;Google Cloud Platform Blog: 7 ways we harden our KVM hypervisor at Google Cloud: security in plaintext&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/keybase/client"&gt;GitHub - keybase/client: Keybase Go Library, Client, Service, OS X, iOS, Android, Electron&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;keybase.io 似乎把 PGP key 傳遞這件事做到簡單易用了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitleaks.com/"&gt;GitLeaks - Search Engine for exposed secrets on the web&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個好歡樂啊  &lt;/li&gt;
&lt;li&gt;不過目前好像只有蒐集 GitHub 上的  &lt;/li&gt;
&lt;li&gt;之後預計加入其他來源  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FallibleInc/security-guide-for-developers"&gt;GitHub - FallibleInc/security-guide-for-developers: Security Guide for Developers (实用性开发人员安全须知)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;A practical security guide for web developers (Work in progress) The intended audience Security issues happen for two reasons - Developers who have just started and cannot really tell a difference between using MD5 or bcrypt. Developers who know stuff but forget/ignore them.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hungtraan/FacebookBot"&gt;GitHub - hungtraan/FacebookBot: A Facebook Messenger Bot that supports Voice Recognition, Natural Language Processing and features such as: search nearby restaurants, search trending news, transcribe and save memos to the cloud.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Optimist Prime is a Facebook Messenger Bot that supports Voice Recognition, Natural Language Processing and features such as: search nearby restaurants, search trending news, transcribe and save memos to the cloud.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;看起來就是把各種平台的 API 串起來，IBM 的 Waston 等等。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://taobaofed.org/blog/2017/02/16/a-guide-to-api-design/index.html"&gt;從達標到卓越 —— API 設計之道 | Taobao FED | 淘寶前端團隊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;新技术层出不穷，长江后浪推前浪，而浪潮褪去后能留下来的，是一些经典的设计思想。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/TaiwanPassportSticker/photos/a.1465798763729893.1073741828.1465796757063427/1635278683448566/?type=3&amp;amp;theater"&gt;【實驗：Republic of中國不喜歡台灣貼紙 那麼貼中國共產黨黨徽貼紙呢？】... - 台灣國護照貼紙 Taiwan Passport Sticker | Facebook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;中華民國的護照貼台灣國貼紙過海關會被欄，但是貼共產黨黨徽完全沒事唷。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Gossiping/M.1487699803.A.053.html"&gt;[問卦] 還記得中國用語入侵前的用詞嗎&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;文化入侵 QQ  &lt;/li&gt;
&lt;li&gt;媒體都一堆中資了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shaohui.simpleinfo.cc/more/"&gt;全能古蹟燒燬王 - 你知道嗎？在台灣，平均每個月都會有歷史建物「離奇失火」&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/photo.php?fbid=10211125434633061&amp;amp;set=a.1237143290030.37008.1272688531&amp;amp;type=3&amp;amp;theater"&gt;Yen Jing Bo - 「台灣不用急著手機支付，應該先把信用卡支付做好」 今天早上又看到一篇講中國手機支付好棒棒的文...&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thinkingtaiwan.com/content/6057"&gt;【人心人術】在二二八中消逝的台灣第一位留美博士：林茂生 | 想想論壇&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;台灣第一位留美哲學博士林茂生，一生都為台灣的教育和文化努力；原本終於盼望到「台灣光復」的這一刻，卻沒想到，不久之後，他成了消失在島嶼上的台灣菁英之一......  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.ho600.com"&gt;到 何六百工作(遠端徵1~2人)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這間公司的徵才文案寫的挺用心也挺狂的就是  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3vxmvTXz6EM"&gt;商戰與談判 - ER講堂第０課 - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這影片真精彩  &lt;/li&gt;
&lt;li&gt;上半場拿 World Gym vs 統一集團 和 書亞集成 vs 台智卡 的案例，講商場上小蝦米要怎麼搏大鯨魚。  &lt;/li&gt;
&lt;li&gt;下半場拿 Paganini+ 和 和沛科技 的案例，講成功經營個人品牌的大神們背後不為人知的一面。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 13 Mar 2017 12:48:00 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-02-27:posts/2017/02/27/y2017w08/</guid><category>blog</category><category>data science</category><category>devops</category><category>gcp</category><category>golang</category><category>kswapd</category><category>misc</category><category>movie</category><category>news</category><category>python</category><category>security</category><category>taiwan</category><category>web</category></item><item><title>Y2017W07</title><link>https://blog.m157q.tw/posts/2017/02/20/y2017w07/</link><description>&lt;h3&gt;algorithm&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ro31337/bigoposter"&gt;bigoposter/bigoposter.pdf at master · ro31337/bigoposter&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個整理了一些常用演算法的時間複雜度與空間複雜度的海報，挺適合印下來貼在牆壁上的。  &lt;/li&gt;
&lt;li&gt;其他相關的 repo:  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/josem/bigoref"&gt;https://github.com/josem/bigoref&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://bigoref.com/"&gt;http://bigoref.com/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ericdrowell/BigOCheatSheet"&gt;https://github.com/ericdrowell/BigOCheatSheet&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://bigocheatsheet.com/"&gt;http://bigocheatsheet.com/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://serverfault.com/questions/62411/how-can-i-sort-du-h-output-by-size"&gt;linux - How can I sort du -h output by size - Server Fault&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;du -hs * | sort -h&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;原來 &lt;code&gt;sort&lt;/code&gt; 有 &lt;code&gt;-h&lt;/code&gt; 的選項可以用呀  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.wu-boy.com/2017/01/business-benefits-of-go/"&gt;從商業利益看 Go 程式語言 | 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;今年是不是該來學一下 Golang 了啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.goin5minutes.com/screencasts/"&gt;Go In 5 Minutes - Short, helpful screencasts for professional Go developers&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/doc/go1.8"&gt;Go 1.8 Release Notes - The Go Programming Language&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The latest Go release, version 1.8, arrives six months after Go 1.7. Most of its changes are in the implementation of the toolchain, runtime, and libraries. There are two minor changes to the language specification. As always, the release maintains the Go 1 promise of compatibility.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/go1.8"&gt;Go 1.8 is released - The Go Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Today the Go team is happy to announce the release of Go 1.8. You can get it from the download page. There are significant performance improvements and changes across the standard library.  The compiler back end introduced in Go 1.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;google&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/spanner/"&gt;Cloud Spanner | Automatic Sharding with Transactional Consistency at Scale  |  Google Cloud Platform&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Cloud Spanner is the first and only relational database service that is both strongly consistent and horizontally scalable.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/02/16/google-launches-cloud-spanner-a-new-globally-distributed-database-service"&gt;兼備關聯式與 NoSQL 兩者優點，Google 推出「私藏技術」Cloud Spanner！ – INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Google 昨天 宣布推出雲端資料庫「Cloud Spanner」Beta 版！傳統以來，工程師或資料管理人員得從傳統關聯式資料庫及 NoSQL 資料庫二擇一，傳統關聯式具較好穩定性與交易一致性但擴充困難，而 NoSQL 容易進行水平擴充。不同於 Bigtabl  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://community.qingcloud.com/topic/88/google%E5%85%A8%E7%90%83%E7%BA%A7%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93spanner%E5%8E%9F%E7%90%86"&gt;Google全球級分佈式數據庫Spanner原理 | 青雲QingCloud 社區&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;挺詳細的 Cloud Spanner 原理講解  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;interview&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1487082859.A.4CA.html"&gt;Fw: [心得] 想要超過年資薪資的web前端面試心得 - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;嗯  還是找真外商吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@fchern/%E9%9D%A2%E8%A9%A6%E6%8A%80%E5%B7%A7-4be66bcf71f7"&gt;面試技巧 – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;嗯 大公司跟小公司要的人真的是有本質上的不同，照理說應該也沒有所謂的優與劣，感覺是個性使然，不過大家普遍還是喜歡聽到大公司的頭銜就是（？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;libretaxi&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@romanpushkin/how-i-made-uber-like-app-in-no-time-with-javascript-and-secret-sauce-94ef9120c7f6"&gt;Uber-like app in no time with JavaScript and secret sauce – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近 Uber 的名聲真的是愈來愈差，有人乾脆直接用 Telegram 做出了一個可以讓乘客和司機直接聯絡的 bot。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.theregister.co.uk/2017/02/15/think_different_shut_up_and_work_harder_says_linus_torvalds/"&gt;Talk of tech innovation is bullsh*t. Shut up and get the work done – says Linus Torvalds • The Register&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;OSLS Linus Torvalds believes the technology industry's celebration of innovation is smug, self-congratulatory, and self-serving.  The term of art he used was more blunt: "The innovation the industry talks about so much is bullshit," he said. "Anybody can innovate.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;"Talk is cheap. Show me the code."  &lt;/li&gt;
&lt;li&gt;「做不出來叫嘴炮，做得出來才叫創新。」應該就是這個意思  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lnishan/awesome-competitive-programming"&gt;GitHub - lnishan/awesome-competitive-programming: A curated list of awesome Competitive Programming, Algorithm and Data Structure resources&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個整理了關於程式競賽相關的清單，因為 repo owner 是台灣人，所以也收錄了不少台灣相關的資源。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jam-py/jam-py"&gt;GitHub - jam-py/jam-py: Jam.py “all in the browser” framework is the fastest way to create a web database application&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Jam.py is an event-driven framework for developing web database applications. The Server side uses Python and werkzeug library, the client side - JavaScript, JQuery and Bootstrap.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;好像有點厲害，直接用 GUI 選一選就可以建出用到資料庫的應用程式。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;movie&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.techug.com/post/10-documentary-films-about-programmer.html"&gt;十部經典「程序員」紀錄片，你看過幾部？ | 程序師&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有空好像該來看看  &lt;/li&gt;
&lt;li&gt;想起以前在 bs2 個版好像也有整理一個跟 coding 相關電影的清單，有空再找找看好了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E7%8B%84%E5%A5%8E%E5%87%A1%E6%B0%8F%E7%97%87"&gt;狄奎凡氏症 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;狄奎凡氏症（De Quervain Disease），正式醫學名稱為「狹窄性腱鞘炎」，俗稱「媽媽手」，因瑞士外科醫生狄奎凡於1895年詳談此症而得名。  &lt;/li&gt;
&lt;li&gt;原來媽媽手的全名是這麼寫的...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E5%B8%B8%E6%9F%93%E8%89%B2%E4%BD%93%E6%98%BE%E6%80%A7%E5%A4%9A%E5%9B%8A%E8%82%BE"&gt;常染色體顯性多囊腎 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;ADPKD  &lt;/li&gt;
&lt;li&gt;多囊腎... 有密集恐懼症的人可能不要點開比較好  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MQEz1j8Ye_Y&amp;amp;list=PLQc1XfyoC1K4YEGDXLwtXOmUSzjZIEQuf&amp;amp;index=1"&gt;【央視一分鐘】工時計算新制上路 撈撈混混真淘氣 - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「能撈就撈，能混就混，大家來拖垮這個政府，好不好啊？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;以自己公務員的身份講這種話都不覺得有問題的嗎 呵呵  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.twreporter.org/a/photo-railyway-worker"&gt;曾原信／台鐵「夜巡者」：星光下守護鐵軌的人 - 報導者 The Reporter&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;晚間末班車載送最後一批乘客，火車的亮光逐漸離遠，而工務車上的台鐵工人，才剛點亮頭燈，準備上工。   為了不再發生因「火線」上仍有列車行駛，造成工人不察被撞死的意外，台鐵多數的工程項目從白天  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ptt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/joke/M.1487330703.A.034.html"&gt;約嗎？ - 看板 joke - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這真的不是 Trivago 的業配文嗎 XD  &lt;/li&gt;
&lt;li&gt;原來這句廣告台詞有各國語言的版本  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;north korea&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.storm.mg/article/223732"&gt;BBC特寫：金正男講述「金家王朝」罕見內幕-北韓｜金正恩｜金正日｜平壤｜暗殺｜金正男｜北韓政治-風傳媒-BBC中文網, 童倩 BBC中文網日本特約記者&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;2011年12月去世的北韓最高領導人金正日的長子金正男與《東京新聞》編輯委員五味洋治互通的150封電子郵件以及兩人在澳門、北京先後共約7小時的談話內容，經五味整理後出的書《父親金正日與我 金正男獨家告白》  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.bbc.com/zhongwen/trad/world-38978504"&gt;金正男身亡：是什麼導致了他的死亡? - BBC 中文網&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;金正男是朝鮮第二代領導人金正日之子，也是朝鮮現任領導人金正恩同父異母的兄長。  金正男在1971年5月於平壤出生，母親是演員成蕙琳。金正男的外祖父母是來自韓國、信奉共產主義的知識分子，在韓戰時期移居至朝鮮。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E9%87%91%E6%AD%A3%E7%94%B7"&gt;金正男 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;car&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blacktyre.pixnet.net/blog/post/35119998-%E6%96%9C%E4%BA%A4%E8%83%8E-v.s.-%E8%BC%BB%E5%B0%84%E5%B1%A4%E8%BC%AA%E8%83%8E"&gt;斜交胎 V.S. 輻射層輪胎 @ 黑輪學府 :: 痞客邦 PIXNET ::&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;斜交輪胎(BIAS)是由多層簾子布以小於90度交叉放置貼合組成的輪胎,它的簾布是由縱向強韌的經線與放在各經線之間的少數緯線織成. 胎體簾布層材質有棉簾線. 人造絲簾線. 尼龍簾線. 聚酯簾線和金屬絲 簾線等.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://peace543.pixnet.net/blog/post/30965015-5%E5%88%86%E9%90%98%E6%95%99%E4%BD%A0%E7%9C%8B%E8%BC%AA%E8%83%8E%E8%A6%8F%E6%A0%BC%E3%80%81%E8%BC%AA%E8%83%8E%E5%87%BA%E5%BB%A0(%E7%94%9F%E7%94%A2-%E8%A3%BD%E9%80%A0)"&gt;5分鐘教你看輪胎規格、輪胎出廠(生產/製造)日期 @ 毒舌痞子的五四三日記 :: 痞客邦 PIXNET ::&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看車的型錄感覺比看電腦的還複雜，一堆東西真的都看不懂，光是輪胎的型號啥的就藏了這麼多的東西。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 13 Mar 2017 12:09:00 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-02-20:posts/2017/02/20/y2017w07/</guid><category>algorithm</category><category>car</category><category>cli</category><category>golang</category><category>google</category><category>interview</category><category>libretaxi</category><category>movie</category><category>news</category><category>north korea</category><category>programming</category><category>ptt</category><category>taiwan</category><category>trivia</category><category>web</category></item><item><title>Y2016W48</title><link>https://blog.m157q.tw/posts/2016/12/05/y2016w48/</link><description>&lt;h3&gt;assembly&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://webassembly.org/demo/AngryBots/"&gt;Unity WebGL Player | AngryBots&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;WebAssembly 開發的網頁遊戲，玩起來還算順暢，看來直接在 Web 開發方面寫 Aseembly 的日子不遠矣。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jvns.ca/blog/2016/11/27/more-linux-drawings/"&gt;More drawings about computers - Julia Evans&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者自己畫的一系列跟電腦科學有關的插畫，又畫了更多幅了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackmd.io/s/ByvJsnBfl"&gt;成大學士生找工作歷程 (後端工程師) - HackMD&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看了一下 blog 的 GA 發現星期一的 PV 有個小幅度的上升  &lt;/li&gt;
&lt;li&gt;原來是被這篇引用了  &lt;/li&gt;
&lt;li&gt;底下的面試過程有種跟自己約莫一年前寫的那篇相似的感覺 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mhperng.blogspot.tw/2016/11/blog-post_22.html"&gt;清大彭明輝的部落格: 站在巨人的肩膀上（願景書院系列）&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「如果各種「改革」都只在乎「創新」，而不去檢討過去的失敗經驗，也不去認真取法國外的完整經驗和智慧，老是一招半式地抄襲、模仿，我們將永遠都走不出台灣今天的困境。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@fchern/%E9%97%9C%E6%96%BC%E8%AE%8A%E5%BC%B7%E9%80%99%E6%AA%94%E4%BA%8B-%E5%85%AB-fe5256d00910#.4dkx7unhv"&gt;關於變強這檔事（八） – Felix Chern – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;不該當個「缺乏大局觀而只關注自己的小世界」的人  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/technology-coding/g0v-%E7%BE%8E%E8%A5%BF%E8%A1%8C-code-for-america-summit-3287d75382eb?source=rss-4a6ce25fcf6e------2"&gt;g0v 美西行 — Code For America Summit – Technology &amp;amp; Coding – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「在台灣的會議很多都是單向單方面的傳遞，而採用小型座談或是讓聽眾一起參與，其實都可以有更多面向的觀點與討論，我覺得在台灣的研討會是值得一試的。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/12/linux-pidof-get-sub-process-id-2016/"&gt;使用 pidof 找出此程式的所有 process id - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;哦哦 這樣就不用 &lt;code&gt;ps aux | grep&lt;/code&gt; 啦  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://peteris.rocks/blog/htop"&gt;htop explained | peteris.rocks&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;For the longest time I did not know what everything meant in htop.  I thought that load average 1.0 on my two core machine means that the CPU usage is at 50%. That's not quite right. And also, why does it say 1.0?  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;非常詳細的解釋了 &lt;code&gt;htop&lt;/code&gt; 裡頭的資訊代表的意思。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2016/11/byte-order.html"&gt;理解字节序 - 阮一峰的网络日志&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么会有小端字节序？  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;答案是，计算机电路先处理低位字节，效率比较高，因为计算都是从低位开始的。所以，计算机的内部处理都是小端字节序。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://scottlobdell.me/2015/01/sql-database-best-practices-django-orm/"&gt;SQL Database Best Practices with Django (or any ORM) – Scott Lobdell&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;So I’m by no means a database expert and don’t consider myself as such, but some of my coworkers who I would label as database experts have educated me enough to learn about some best practices that would be difficult to otherwise stumble upon and self-learn.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2016/11/what-is-Google-Cloud-Deployment-Manager-and-how-to-use-it.html"&gt;Google Cloud Platform Blog: What is Google Cloud Deployment Manager and how to use it&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以用來管理 GCE, GKE, BigQuery, GCS, Cloud SQL  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gcp.expert/gcp-machine-learning-api/"&gt;你不知道的 GCP 人工智慧之各種API！ | GCP 雲端服務頂級合作夥伴 LIVEhouse.in&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;基本上就那幾個，有在稍微追一下 GCP 的新聞的人應該都會知道的。  &lt;/li&gt;
&lt;li&gt;Transalte, Vision, Prediction, Natural Langauge, Speech 這 5 個。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/11/golang-gvm-go-version-manager-install-2016/"&gt;GVM 與 Go 語言的環境如何安裝、架設 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;跟 Golang 沒有很熟，看起來是個跟 Python 裡的 virturalenv 差不多的工具。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rocket.cafe/talks/80786"&gt;公司愈大，弊病愈多：11個你不該進大公司的原因 | Rocket Café 火箭科技評論&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;... 這作者的經歷待的全是大公司  &lt;/li&gt;
&lt;li&gt;額 好吧 該說很有說服力嗎  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;k8s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gcp.expert/kubernetes-spark-built/"&gt;快速上手！使用 Kubernetes 建立 Spark 服務 | GCP 雲端服務頂級合作夥伴 LIVEhouse.in&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks#Removing_unused_packages_.28orphans.29"&gt;pacman/Tips and tricks - ArchWiki&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;pacman -Rns $(pacman -Qtdq)&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/11/debian-linux-iptable-save-restore-auto-start-2016/"&gt;Debian Linux iptables 儲存、還原、自動啟動設定 - Tsung's Blog&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;mysql&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/589652/add-2-hours-to-current-time-in-mysql"&gt;Add 2 hours to current time in MySQL? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Which is the valid syntax of this query in MySQL?  See Date and Time Functions for other date/time manipulation.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/19080143/mysql-calculate-average-post-for-every-hour-in-each-day"&gt;MySQL: Calculate average post for every hour in each day - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;I trying to calculate the average post made for every hour for each day and I have to do this for 113 months. Inside the Post table have this attribute timePosted, DatePosted and Text. I also need to join two table post and thread because I only want to get category id number 3.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;最近因為要簡單計算一下 MySQL 裡的資料，但忘記要怎麼寫了，所以查了一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eli.thegreenplace.net/2012/01/04/shared-counter-with-pythons-multiprocessing"&gt;Shared counter with Python's multiprocessing - Eli Bendersky's website&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This code is a demonstration of the problem, distilling only the usage of the shared counter. A "pool" of 10 processes is created to run the func function. All processes share a Value and increment it 50 times. You would expect this code to eventually print 500, but in all likeness it won't.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/2080660/python-multiprocessing-and-a-shared-counter"&gt;Python multiprocessing and a shared counter - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm having troubles with the multiprocessing module. I'm using a Pool of workers with its map method to load data from lots of files and for each of them I analyze data with with a custom function.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最近寫了個 multiprocessing 的程式，因為數量有點大，然後資料是直接寫入資料庫中，如果最後才計算的話可能要花非常久的時間查詢，所以想說能不能在執行的時候就用一個 multiprocessing 的 shared counter 去紀錄。  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software_engineering&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gitbook.com/book/ericyeh92094/self-reflection-and-insight-for-s-w-engineering/details"&gt;軟體開發見聞錄 · GitBook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一位在 Microsoft 工作二十年的台灣工程師分享的軟體開發經驗，分成二十幾篇，篇幅都不太長，值得花點時間閱讀一下，畢竟我還沒有待過大公司的經驗，瞭解一下也不錯。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=p5M8JmeGc_4"&gt;紅色藥丸 (紀錄片預告) - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;hmm... 男權運動  &lt;/li&gt;
&lt;li&gt;值得思考一下  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.hy31.net/?p=189"&gt;2016/11/11 在中國使用手機版 LINE 狀況紀錄 | Henry的筆記集散地&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「iPhone 如果你在中國境內插上中國 SIM 卡，網路就都是不會通。請記得到中國如果一定手機需要插當地 SIM 卡且要用 LINE 那就請插在 Andoird 上吧。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mhperng.blogspot.tw/2016/11/blog-post_20.html"&gt;清大彭明輝的部落格: 網路時代的階級與競爭力&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「如果你是一個有上進心的人，第一件該學會的事情是Google、Advanced Google、Google Scholar 以及 Google Books 四種搜尋引擎的用法。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/11/security-android-spy-back-door-sent-data-china-2016/"&gt;部分 Android 會自動將裝置內的資料上傳到中國伺服器 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;強國貨不要買比較好  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Fri, 03 Feb 2017 15:15:53 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-12-05:posts/2016/12/05/y2016w48/</guid><category>assembly</category><category>blog</category><category>cli</category><category>cs</category><category>django</category><category>gcp</category><category>golang</category><category>job</category><category>k8s</category><category>linux</category><category>misc</category><category>mysql</category><category>news</category><category>python</category><category>software_engineering</category></item><item><title>Y2016W32</title><link>https://blog.m157q.tw/posts/2016/08/15/y2016w32/</link><description>&lt;h3&gt;Github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python"&gt;rlabbe/Kalman-and-Bayesian-Filters-in-Python: Kalman Filter book using Jupy&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 Python 程式碼直接講解 Kalman and Bayesian Filtlers  &lt;/li&gt;
&lt;li&gt;現在還滿多這種出了書以後，把程式碼放到 GitHub 上讓讀者搭配閱讀的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shazow/ssh-chat"&gt;shazow/ssh-chat: Chat over SSH.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 Golang 自己架一個可以直接用 ssh 聊天的 server  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mp.weixin.qq.com/s?__biz=MzAxNjIzMzU5NQ%3D%3D&amp;amp;mid=2649477326&amp;amp;idx=1&amp;amp;sn=c7e6f5534e4acb4720b0d36cc4d606c2&amp;amp;scene=1&amp;amp;srcid=0807l2IocSJLUwwJiKSoFCNz&amp;amp;key=8dcebf9e179c9f3a41236227750c6715a7e059e6081351047d015c8ded23436f514c77bf232e40c49af65c75dc8e6e45&amp;amp;ascene=0&amp;amp;uin=MTk3NDExNzA0Mg%3D%3D&amp;amp;devicetype=iMac+MacBookPro11,5+OSX+OSX+10.10.5+build(14F1909)&amp;amp;version=11020201&amp;amp;pass_ticket=2C4DQqwN/gRBPAdYHGWYsu6GU08QODDmT/rTeQGDAQxRtVCaCxXSbFcbV3XMjMN1&amp;amp;utm_content=buffer31230&amp;amp;utm_medium=social&amp;amp;utm_source=twitter.com&amp;amp;utm_campaign=buffer"&gt;進入職場後，如何高效地讀書？&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;功利一些，未嘗不可  &lt;ul&gt;
&lt;li&gt;是的，怎樣的讀書方式才是最有效的？我覺得一定是當你遇到某個迫切的問題的時候。怎樣的讀書方式是最無效、最容易讓人繼續讀下去的？我覺得應該是漫無目的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;學習某個領域時，多讀幾本書  &lt;ul&gt;
&lt;li&gt;如果我覺得某個方面是有必要瞭解學習，我至少會看十本同類書籍，然後仔細想想那些專家的看法是否一致，慢慢得出我在這個領域的思考框架。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;沒時間讀怎麼辦？  &lt;ul&gt;
&lt;li&gt;讀書，要以自己為主體  &lt;ul&gt;
&lt;li&gt;以學習者為主體的閱讀，不太關心看不懂和記不住的問題，只關心能不能夠通過閱讀提升自己的能力，帶來行為的改變。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;讀書，不必讀完，讀對你有用的那部分即可  &lt;ul&gt;
&lt;li&gt;我們需要做的是，在一本書中，找到對我們有幫助的那部分，並認真讀，而不是一字不落的讀。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;掌握核心方法  &lt;ul&gt;
&lt;li&gt;反思+應用  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;不能只是接受書上的資訊，&lt;br /&gt;
把這些資訊集合起來好好思考並做出結論，&lt;br /&gt;
從而內化成自己的知識才是最重要的呀  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Sat, 29 Oct 2016 09:07:40 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-08-15:posts/2016/08/15/y2016w32/</guid><category>Learning</category><category>Golang</category><category>Github</category></item></channel></rss>