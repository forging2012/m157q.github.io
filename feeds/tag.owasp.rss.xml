<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Just for noting</title><link>https://blog.m157q.tw/</link><description></description><lastBuildDate>Mon, 20 Nov 2017 18:01:33 +0800</lastBuildDate><item><title>OWASP Taiwan Week 2017</title><link>https://blog.m157q.tw/posts/2017/11/20/owasp-taiwan-week-2017/</link><description>&lt;ul&gt;
&lt;li&gt;event links  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://csa.kktix.cc/events/owasp2017"&gt;https://csa.kktix.cc/events/owasp2017&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://2017.owasp.org.tw/agenda_2.html"&gt;http://2017.owasp.org.tw/agenda_2.html&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="/files/owasp-taiwan-week-2017/OWASP Top 10 2017 GM (en).pdf"&gt;OWASP 2017 Top 10 Golden Master (EN) 備份&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;開場&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/Top_10_2017-Top_10"&gt;OWASP 2017 Top 10&lt;/a&gt; 已經釋出，上一次正式發佈是 2013 年。  &lt;ul&gt;
&lt;li&gt;2017 分別有 RC1 和 RC2，中間有些差異，大家吵了很久。XD  &lt;/li&gt;
&lt;li&gt;原來 &lt;a href="https://github.com/OWASP/Top10"&gt;OWASP Top 10 有 GitHub Repo&lt;/a&gt; 啊。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OWASP/Top10/blob/master/2017/OWASP%20Top%2010%202017%20GM%20(en).pdf"&gt;OWASP Top 10 2017 Golden Master&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;OWASP 發展趨勢 - 蔡一郎&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;簡介  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://owasp.org"&gt;https://owasp.org&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;OWASP Taiwan 創立約莫 7~8 年，但之前都是被認定為不活躍的社群。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/Category:OWASP_CTF_Project"&gt;OWASP CTF&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OWASP/Top10"&gt;OWASP Top 10&lt;/a&gt; 都有告訴你要如何檢測網站是否有該漏洞。  &lt;/li&gt;
&lt;li&gt;志工性質、無給薪，好處是志工可以優先參加活動。  &lt;/li&gt;
&lt;li&gt;Research and Development  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project"&gt;Top 10&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;Zed Attack Proxy (ZAP)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project"&gt;WebGoat&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OWASP Taiwan Week 今年是第一次辦。  &lt;/li&gt;
&lt;li&gt;每年 7 月會有個較大型的會議。(OWASP Taiwan Day)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OWASP 旗艦計劃 (OWASP Flagship Projects)  &lt;ul&gt;
&lt;li&gt;Tools  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;OWASP Zed Attack Proxy (ZAP)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_Web_Testing_Environment_Project"&gt;OWASP Web Testing Environment Project&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_OWTF"&gt;OWASP OWTF&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_Dependency_Check"&gt;OWASP Dependency Check&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/Category:OWASP_ModSecurity_Core_Rule_Set_Project"&gt;OWASP ModSecurity Core Rule Set Project&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project"&gt;OWASP CSRFGuard Project&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jtmelton/appsensor"&gt;OWASP AppSensor Project Reference&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Documentation  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/Category:OWASP_Application_Security_Verification_Standard_Project"&gt;OWASP Application Security Verification Standard Project&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_SAMM_Project"&gt;OWASP Software Assurance Maturity Model (SAMM)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/OWASP/samm"&gt;https://github.com/OWASP/samm&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/File:Owasp-appsensor-guide-v2.pdf"&gt;OWASP AppSensor Project Guide&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project"&gt;OWASP Top 10 Project&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_Testing_Guide_v4_Table_of_Contents"&gt;OWASP Testing Guide Project&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;建議先從 Flagship Projects 開始看，因為這是很多人吵架的結果。XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;OWASP Top 10 2017 - Henry Hu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;General introduction to OWASP Top 10  &lt;ul&gt;
&lt;li&gt;first released in 2003  &lt;/li&gt;
&lt;li&gt;flagship project  &lt;/li&gt;
&lt;li&gt;2004, 2007, 2010, 2013, 2017  &lt;/li&gt;
&lt;li&gt;a list of the 10 most critical web application security risks  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2017 Timeline  &lt;ul&gt;
&lt;li&gt;07/31: Call for Data Open  &lt;/li&gt;
&lt;li&gt;10/09: RC2  &lt;/li&gt;
&lt;li&gt;11/20: Released  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How is OWASP Top 10 generated?  &lt;ul&gt;
&lt;li&gt;Data proven  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web App by Language in survey  &lt;ul&gt;
&lt;li&gt;Java: 54%  &lt;/li&gt;
&lt;li&gt;.NET: 32%  &lt;/li&gt;
&lt;li&gt;JavaScript 快速成長  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vunlnerability Assessments - HAT vs TAH  &lt;ul&gt;
&lt;li&gt;Human-Augmented Tools (HAT)  &lt;ul&gt;
&lt;li&gt;人去調整工具之後用工具去做掃描  &lt;/li&gt;
&lt;li&gt;很多現有的工具都是 foucs 在 XSS，所以掃出來的結果以 XSS 居多。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tool-Augmented Humans (TAH)  &lt;ul&gt;
&lt;li&gt;以人為主去使用工具來做掃描  &lt;/li&gt;
&lt;li&gt;發現的漏洞就比較多樣化。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/Top_10_2017-Release_Notes"&gt;2017 RC1 Changed&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;merged 2013-A4: Insecure Direct Object References and 2013-A7: Missing Function Level Access Control back into 2017-A4: Broken Access Control.  &lt;/li&gt;
&lt;li&gt;added 2017-A7: Insufficient Attack Protection  &lt;/li&gt;
&lt;li&gt;added 2017-A10: Underprotected APIs  &lt;/li&gt;
&lt;li&gt;dropped: 2013-A10: Unvalidated Redirects and Forwards  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OWASP/Top10/blob/master/2017/OWASP%20Top%2010%202017%20GM%20(en).pdf"&gt;2017 Golden Master Changed&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;ADDED  &lt;ul&gt;
&lt;li&gt;A4:2017-XML External Entities (XXE) is a new category primarily supported by source code analysis security testing tools (SAST: Static Application Security Testing tools) data sets.  &lt;/li&gt;
&lt;li&gt;A8:2017-Insecure Deserialization, which permits remote code execution or sensitive object manipulation on affected platforms.  &lt;ul&gt;
&lt;li&gt;Responsible for one of the worst breaches of all time.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A10:2017-Insufficient Logging and Monitoring, the lack of which can prevent or significantly delay malicious activity and breach detection, incident response, and digital forensics.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MERGED  &lt;ul&gt;
&lt;li&gt;A4-Insecure Direct Object References and A7-Missing Function Level Access Control merged into A5:2017-Broken Access Control.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RETIRED  &lt;ul&gt;
&lt;li&gt;A8-Cross-Site Request Forgery (CSRF), Frameworks commonly include CSRF defenses, with &amp;lt; 5% of all apps, now #13.  &lt;/li&gt;
&lt;li&gt;A10-Unvalidated Redirects and Forwards, less than 1% of the data set supports this issue today, now #25.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The Significant of Top 10 2017  &lt;ul&gt;
&lt;li&gt;Web front-end  &lt;ul&gt;
&lt;li&gt;Single page application (SPA) wriiten in JS allows the creation of highly modular front end UI/UX  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web back-end  &lt;ul&gt;
&lt;li&gt;Microservices written in node.js is now the primary interface for legacy application through API and RESTful web services.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OWASP/Top10/blob/master/2017/en/0xa4-xxe.md"&gt;A4:2017-XML External Entities (XXE)&lt;/a&gt; explained  &lt;ul&gt;
&lt;li&gt;尤其微軟的 IIS server 的 XML Processor 的設定最有可能有問題  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Billion_laughs_attack"&gt;Billion laughs attack&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OWASP/Top10/blob/master/2017/en/0xa8-insecure-deserialization.md"&gt;A8:2017 Insecure Deserialization&lt;/a&gt; explained  &lt;ul&gt;
&lt;li&gt;這次制定的過程中其中一個吵架吵的滿兇的一個  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OWASP/Top10/blob/master/2017/en/0xaa-logging-detection-response.md"&gt;A10:2017 Insufficient Logging and Monitoring&lt;/a&gt; explained  &lt;ul&gt;
&lt;li&gt;不是只有 web server 而已，應該要把所有的 server log 都納入管轄範圍。  &lt;/li&gt;
&lt;li&gt;大部份的 breach 被發現時潛伏期已經拉長到 200 天前的事了，目前很少人會去看到 200 天前的 log，所以這是新的需要去注意的事。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Moving on...  &lt;ul&gt;
&lt;li&gt;除了 Top 10 以外，其實有列出總共 50 個 issues，但事實上當然有更多的安全漏洞。  &lt;/li&gt;
&lt;li&gt;請不要只看 OWASP Top 10，它不是一切，也不是聖經，在開發網站的時候還要注意更多的安全問題。  &lt;/li&gt;
&lt;li&gt;希望各位可以多多參與 OWASP 的社群，因為很缺人。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Client Side Security and Testing Tools - David Cervigni&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;JS Security, topics:  &lt;ul&gt;
&lt;li&gt;Evolution of client technologies  &lt;/li&gt;
&lt;li&gt;Why is always more important  &lt;/li&gt;
&lt;li&gt;Why is always more difficult  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Client security is vast  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/Client_Side_Testing"&gt;https://www.owasp.org/index.php/Client_Side_Testing&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;XSS  &lt;ul&gt;
&lt;li&gt;XSS is always dangerous  &lt;ul&gt;
&lt;li&gt;consequences  &lt;ul&gt;
&lt;li&gt;XSRF protection bypass  &lt;/li&gt;
&lt;li&gt;Cookies / session stealing  &lt;/li&gt;
&lt;li&gt;Defacement  &lt;/li&gt;
&lt;li&gt;Password / credential stealing  &lt;/li&gt;
&lt;li&gt;Enumeration  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Anti XSS approaches  &lt;ul&gt;
&lt;li&gt;Classic  &lt;ul&gt;
&lt;li&gt;Validation  &lt;/li&gt;
&lt;li&gt;Filtering  &lt;/li&gt;
&lt;li&gt;HTML Encoding  &lt;/li&gt;
&lt;li&gt;Encoding lib + Contextual encoding  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Requires  &lt;ul&gt;
&lt;li&gt;Secure coding standards (enforced!)  &lt;/li&gt;
&lt;li&gt;Knowledge  &lt;/li&gt;
&lt;li&gt;Design (use the right libs)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Anti XSS evolution  &lt;ul&gt;
&lt;li&gt;Contextual encoding templates  &lt;ul&gt;
&lt;li&gt;Very strict  &lt;ul&gt;
&lt;li&gt;Hard to encode in nested contexts. (double encoding)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mitigations  &lt;ul&gt;
&lt;li&gt;CPC: Content Security Policy  &lt;/li&gt;
&lt;li&gt;ECMAScript security features (e.g. strict mode)  &lt;/li&gt;
&lt;li&gt;Sandboxing JS (Google CAJA, sanitizer libraries)  &lt;/li&gt;
&lt;li&gt;Anti XSS browser features WAF  &lt;/li&gt;
&lt;li&gt;Requires  &lt;ul&gt;
&lt;li&gt;Secure Application Design  &lt;/li&gt;
&lt;li&gt;Third parties JS libraries compatibility  &lt;/li&gt;
&lt;li&gt;Legacy systems?  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code Flow and Taint analysis  &lt;ul&gt;
&lt;li&gt;Sources  &lt;/li&gt;
&lt;li&gt;Filters  &lt;/li&gt;
&lt;li&gt;Sinks  &lt;/li&gt;
&lt;li&gt;投影片的字有點小，可能可以直接看&lt;a href="https://www.owasp.org/index.php/Static_Code_Analysis"&gt;這份文件&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tools for JS Code analysis  &lt;ul&gt;
&lt;li&gt;SCA, static code analysis  &lt;ul&gt;
&lt;li&gt;Heavy  &lt;/li&gt;
&lt;li&gt;Difficult  &lt;/li&gt;
&lt;li&gt;Lower accuracy (false positive)  &lt;/li&gt;
&lt;li&gt;Adaptability (false negatives... needs custom rules)  &lt;/li&gt;
&lt;li&gt;Broad language support  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dynamic code analysis  &lt;ul&gt;
&lt;li&gt;Requires instrumentation  &lt;/li&gt;
&lt;li&gt;More accurate  &lt;/li&gt;
&lt;li&gt;Fuzzing capabilities  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Integrated them into SDLC (systems development life cycle) and Automation (CI)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;當萬物相遇電信網路：一探邊緣運算的資安議題與解決方案 - 王騰嶽&lt;/h2&gt;
&lt;p&gt;這個 talk 介紹挺有意思的，&lt;br /&gt;
講了滿多跟電信網路相關的東西，&lt;br /&gt;
平常真的比較少接觸到。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/LPWAN"&gt;LPWAN (Low Power WAN)&lt;/a&gt; 與其他 Wireless 技術  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/NarrowBand_IOT"&gt;NB-IoT&lt;/a&gt; 是 3GPP 標準的窄帶蜂窩物聯網技術，也是 5G 時代一項重要的實體連結技術。  &lt;ul&gt;
&lt;li&gt;NB-IoT 只是 3GPP 技術中的一環。  &lt;/li&gt;
&lt;li&gt;使用專屬的頻譜，必須要花費。但未來不會有爭奪 NB-IoT 頻譜的問題，因為可以直接使用在電信公司現有的電信網路上。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;LPWAN: NB-IoT, LoRa, sigfox, LTE-M, genu, eightless, waviot  &lt;ul&gt;
&lt;li&gt;使用開放頻譜，不需要購買，所以品質也就無法保證，但價格會較便宜。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bluetooth 的限制是不夠遠。  &lt;/li&gt;
&lt;li&gt;功耗比 ZigBee 還要低，Range 比 3G/4G/5G 還要遠。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NB-IoT 與電信網路架構  &lt;ul&gt;
&lt;li&gt;UE, LTE-Uu (NB-IoT 只有在這段）, eNB, GTP-U (S1-U), S-GW, P-GW, Internet  &lt;/li&gt;
&lt;li&gt;Physical Interface (Last Mile), Backhual, EPC（核心網路）  &lt;/li&gt;
&lt;li&gt;GTP 的世界：GPRS Tunnel 包覆 IP 封包  &lt;/li&gt;
&lt;li&gt;所以使用 NB-IoT 只會在 UE （手機） 和 eNB （基地台） 這段而已  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mobile Edge Computing (MEC)  &lt;ul&gt;
&lt;li&gt;Mobile Edge  &lt;ul&gt;
&lt;li&gt;電信行動網的邊緣（核心網路與基地台之間）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IoT 為何需要搭配 MEC  &lt;ul&gt;
&lt;li&gt;如果 device 不太需要上 Facebook / LINE / YouTube  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEC Case  &lt;ul&gt;
&lt;li&gt;車聯網  &lt;/li&gt;
&lt;li&gt;Cache  &lt;ul&gt;
&lt;li&gt;Content cache 有困難，因為加密太多。  &lt;/li&gt;
&lt;li&gt;但 DNS 是可以做的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IoT 與 MEC 合體之後的資安疑慮  &lt;ul&gt;
&lt;li&gt;前情提要  &lt;ul&gt;
&lt;li&gt;核心網路內是沒有 IPS 或 Firewall 的  &lt;/li&gt;
&lt;li&gt;客戶的手機有被攻擊過嗎？  &lt;ul&gt;
&lt;li&gt;沒聽過  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;我們手機客戶會攻擊人？  &lt;ul&gt;
&lt;li&gt;那不關我的事...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IoT 服務的資安疑慮  &lt;ul&gt;
&lt;li&gt;如果電信商真的要提供這樣的服務的話，應該要更正視這樣的問題。  &lt;/li&gt;
&lt;li&gt;Device 於實體世界被駭，透過 MEC 作為中繼繼續傳播。  &lt;/li&gt;
&lt;li&gt;Device 運算力弱者，不太可能端點防禦，也不太可能裝防毒軟體。  &lt;/li&gt;
&lt;li&gt;在 MEC 與基地台中間安裝 Firewall 或 IPS 就收工了？  &lt;ul&gt;
&lt;li&gt;錯，因為有 Tunnel 存在，一定得請電信公司處理。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;建立 MEC 的資安機制  &lt;ul&gt;
&lt;li&gt;MEC 的平台要提供 IoT 服務進駐  &lt;/li&gt;
&lt;li&gt;MEC 內各個 IoT 服務（VM 型態）要隔離  &lt;/li&gt;
&lt;li&gt;MEC 可以直接進行黑名單 IP 過濾  &lt;/li&gt;
&lt;li&gt;MEC 要轉換 GTP &amp;lt;-&amp;gt; IP 和 GTP termination，於是 IT 產業找到了電信的突破口。  &lt;/li&gt;
&lt;li&gt;進入 IP 世界之後：NFV (Network Functions Virtualization) + SDN  &lt;ul&gt;
&lt;li&gt;VM 監控管理平台  &lt;/li&gt;
&lt;li&gt;網路安全設備  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Security Framework in MEC Platform  &lt;ul&gt;
&lt;li&gt;NFV Inftrastructure Security  &lt;/li&gt;
&lt;li&gt;Network Security  &lt;/li&gt;
&lt;li&gt;Application Authorization  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;講者認為 IoT + MEC + 資安尚未解決的問題對於軟體從業人員是個在未來有許多發展空間的舞台。  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Container 與 Web 安全 - 鄭學輝&lt;/h2&gt;
&lt;p&gt;前半段有點分不清楚是在介紹 Docker 還是在講 container security...&lt;br /&gt;
個人感覺整個投影片比較偏向 Sales Kit...  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新興應用安全技術  &lt;ul&gt;
&lt;li&gt;RUNTIME  &lt;ul&gt;
&lt;li&gt;Runtime Application Self Protection (RASP)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;INTERACTIVE  &lt;/li&gt;
&lt;li&gt;SOFTWARE  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Python as Hacking Tool - Galoget Latorre&lt;/h2&gt;
&lt;p&gt;原本以為是要現場教學，&lt;br /&gt;
但整場的狀況比較像是，&lt;br /&gt;
前半段推坑 Python，&lt;br /&gt;
後半段 Live Demo 用 Python 寫的 script 的攻擊實況，&lt;br /&gt;
然後提供一些工具供聽眾參考，&lt;br /&gt;
還是沒講要怎麼寫 XD。&lt;br /&gt;
（是說現場直接拿別人的真實個資來 Demo 真的沒問題嗎 www）  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python 簡介  &lt;/li&gt;
&lt;li&gt;基本 Google Hacking  &lt;/li&gt;
&lt;li&gt;Some tools  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dloss/python-pentest-tools"&gt;GitHub - dloss/python-pentest-tools: Python tools for penetration testers&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andresriancho/w3af"&gt;GitHub - andresriancho/w3af: w3af: web application attack and audit framework, the open source web vulnerability scanner.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chinoogawa/fbht"&gt;GitHub - chinoogawa/fbht: Facebook Hacking Tool&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IFGHou/wapiti"&gt;GitHub - IFGHou/wapiti: A web-application vulnerability scanner&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OWASP/QRLJacking"&gt;GitHub - OWASP/QRLJacking: QRLJacking or Quick Response Code Login Jacking is a simple-but-nasty attack vector affecting all the applications that relays on “Login with QR code” feature as a secure way to login into accounts which aims for hijacking users session by attackers.&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;web swc case study and cyber simulation - 何宜霖&lt;/h2&gt;
&lt;p&gt;（這場講的條理滿清楚的，但會場座位沒得充電，我的 Mac Book Air 2013 已經沒電了 Orz）  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;講了釣魚攻擊和水坑攻擊的發生情境  &lt;/li&gt;
&lt;li&gt;腳本駭客的常見攻擊手法  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/beefproject/beef"&gt;GitHub - beefproject/beef: The Browser Exploitation Framework Project&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一些很基本的卻常常忽略的問題  &lt;ul&gt;
&lt;li&gt;裝置預設密碼沒改  &lt;/li&gt;
&lt;li&gt;放在 DMZ 東西是否會被外網輕易存取  &lt;/li&gt;
&lt;li&gt;網站測試頁面和測試帳號是否有清除  &lt;ul&gt;
&lt;li&gt;上傳檔案的測試頁面記得關掉，否則就很有可能會被人上傳後門。  &lt;/li&gt;
&lt;li&gt;網路上都有很多現成的後門可以取得了，像是 &lt;a href="https://github.com/tennc/webshell"&gt;GitHub - tennc/webshell: This is a webshell open source project&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;物聯網裝置的資安模擬環境會是未來重要的一環  &lt;ul&gt;
&lt;li&gt;電腦跟手機可能不是 24x7 連網，但物聯網裝置基本上都是 24x7 連網而且有的還要求網路的 latency 要很低，一被入侵很有可能成為非常大型的 Bot Net。（沒提到前陣子鬧很大的 Mira 病毒）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;然後講者講了一句很有趣的話  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「社交工程一直都可以成功的原因是什麼？因為人腦的愚蠢是不能進行安全性更新的。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;今天聽下來真的覺得滿棒的，&lt;br /&gt;
也對 OWASP 更加瞭解了，&lt;br /&gt;
一直以來都只知道 Top 10 而已，&lt;br /&gt;
今天才發現原來還有很多很好用的 Project 和文件，&lt;br /&gt;
才知道原來以前用的 DirBuster 也是 OWASP 的 project 之一。&lt;br /&gt;
打聽一下才發現原來今年 7 月就有個 OWASP Taiwan Day 了，&lt;br /&gt;
但我當時沒有見到任何宣傳消息。&lt;br /&gt;
現在自己的狀況真的就比較像拿資安當興趣而已，&lt;br /&gt;
要當飯吃的話覺得自己的技術力和學習能力都跟不上這個產業啊。  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Mon, 20 Nov 2017 18:01:33 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-11-20:posts/2017/11/20/owasp-taiwan-week-2017/</guid><category>OWASP</category><category>Security</category></item></channel></rss>