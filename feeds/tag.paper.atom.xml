<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Just for noting</title><link href="https://blog.m157q.tw/" rel="alternate"></link><link href="https://blog.m157q.tw/feeds/tag.paper.atom.xml" rel="self"></link><id>https://blog.m157q.tw/</id><updated>2016-10-14T13:36:52+08:00</updated><entry><title>Y2016W30</title><link href="https://blog.m157q.tw/posts/2016/08/01/y2016w30/" rel="alternate"></link><published>2016-10-14T13:36:52+08:00</published><updated>2016-10-14T13:36:52+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2016-08-01:posts/2016/08/01/y2016w30/</id><summary type="html">&lt;h3&gt;Gae&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/14458470/google-app-engines-ndb-get-an-entitys-id"&gt;google app engine's ndb: get an entity's id - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GAE 的 ndb 其實就是 Datastore 的 client。  &lt;/li&gt;
&lt;li&gt;因為最近在公司開發跟 GAE 有關的程式碼，想要從 Datastore 拿到資料的 ID，發現不知道怎麼拿，所以查了一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;複製貼上備忘一下  &lt;/p&gt;
&lt;p&gt;You can get the id with several ways provided you have the key.&lt;br /&gt;
Example with fetch or get:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;message = Message.query(Message.name==someName).fetch(1)[0]&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;message_id = message.key.id()&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;message = Message.query(Message.name==someName).get()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;message_id = message.key.id()&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;If you don't need the entity but only the id then you can save resources by getting only the key.  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;message_key = Message.query(Message.name==someName).fetch(1, keys_only=True)[0]&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;message_id = message_key.id()&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;message_key = Message.query(Message.name==someName).get(keys_only=True)&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;message_id = message_key.id()&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Keep in mind that you can get the key after a put as well:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;message_key = message.put()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;message_id = message_key.id()&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;Gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/datastore/docs/apis/gql/gql_reference?hl=en_GB&amp;amp;_ga=1.75913941.1514764281.1456334755"&gt;GQL Reference|Cloud Datastore|Google Cloud Platform&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近要從 Datastore 裡頭拿資料出來，所以學了一下 GQL 的語法。  &lt;/li&gt;
&lt;li&gt;基本上跟 SQL 差不多。  &lt;/li&gt;
&lt;li&gt;但 Datastore 要注意的是，因為其本身是 NoSQL 的結構，所以要做 query 的話，其對應的 condition 必須要有 composite index 才行，所以要更改 &lt;code&gt;index.yaml&lt;/code&gt;，並且要 &lt;code&gt;update&lt;/code&gt;。一般來說使用官方提供的 GAE SDK 的 &lt;code&gt;dev_appserver.py&lt;/code&gt; 這個指令在 local 跑起測試的 GAE server 時，就會順便幫忙檢查，如果有用到新的 index 的話就會自動改寫 index.yaml 了，還算方便。  &lt;/li&gt;
&lt;li&gt;但要建 composite index 的話，跟該 composite index 相關的所有 columns 都要有 index，否則就無法成功建立，所以建議不要沒事把 datastore 對每個 column 預設開啟的 index 關掉，除非真的確定不會用到 query，否則哪天要加 composite index 的話會很麻煩。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Paper&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dl.acm.org/citation.cfm?id=584494"&gt;General approaches for implementing seamless handover&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近公司在做架構上的 migration，一直試圖想做到 zero downtime，有人就丟了這個名詞出來，查了一下，查到這篇論文。  &lt;/li&gt;
&lt;li&gt;原來就叫 "Seamless handover" 呀  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Joke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://imgur.com/KGrV41o"&gt;Harry speaks python - Imgur&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;寫 Python 的天天都在說爬說語。  &lt;/li&gt;
&lt;li&gt;然後爬說語的英文是 Parseltongue，爬說嘴的英文則是 Parselmouth。(&lt;a href="http://www.crown.com.tw/harrypotter/english/P.htm"&gt;source&lt;/a&gt;)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Paper"></category><category term="Joke"></category><category term="Gae"></category><category term="Job"></category><category term="Gcp"></category></entry></feed>