<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Just for noting</title><link href="https://blog.m157q.tw/" rel="alternate"></link><link href="https://blog.m157q.tw/feeds/tag.job.atom.xml" rel="self"></link><id>https://blog.m157q.tw/</id><updated>2018-01-23T13:48:30+08:00</updated><entry><title>整理一些跟面試相關的文章</title><link href="https://blog.m157q.tw/posts/2018/01/12/articles-related-to-interview/" rel="alternate"></link><published>2018-01-12T22:50:58+08:00</published><updated>2018-01-12T22:50:58+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2018-01-12:posts/2018/01/12/articles-related-to-interview/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;2015 年底開始找正職工作的時候，就覺得自己對面試這件事實在不拿手，也沒有什麼信心。畢竟學校也沒教，然後自己之前在學校裏面做些跟寫程式相關的工作也都不算有太嚴格的面試，大多都是認識的人問我有沒有興趣就做了。  &lt;/p&gt;
&lt;p&gt;當時唯二兩個有面試的工作裡頭，其中一個是要處理網路設備相關的工作，問了我 C/C++ 的問題，我當時啥都沒準備，答得超爛，就不了了之。另外一個則是系上計算機中心的助教，但這嚴格說起來不算是很難的面試，因為考試內容基本上就是上學期學的計算機系統管理，以及下學期學的計算機網路管理。我在這兩門課都拿到不錯的分數，沒記錯的話應該是 97 和 99 吧 ，因為學得很有興趣，就被問問有沒有興趣當助教。所以考試的題目基本上都是學過的東西，面試官也都是修課時看了一年的助教，沒有什麼太強烈的緊張感。  &lt;/p&gt;
&lt;p&gt;2016 年 1 月 21 日，人生第 1 份 出社會的工作正式上工以後，一直到 2017 年 12 月 1 日正式離職，在這期間雖然沒有參加任何面試，但也看到了滿多不錯的面試文章。大概在 2016 年 9 月左右，開始覺得自己好像應該把這些不錯的面試文章蒐集起來，並紀錄一下自己當時看完的心得，以供自己日後面試時可以參考複習。往後期間都只有簡短紀錄在 Trello 中，一直沒有花時間整理成一篇文章。剛好利用這段離職後比較閒暇的時間來好好整理一下，後續會紀錄在 &lt;a href="https://github.com/M157q/m157q.github.io/issues?q=is%3Aopen+is%3Aissue+label%3Ainterview"&gt;Issues · M157q/m157q.github.io · GitHub&lt;/a&gt;，如果沒忘記的話也會更新在這篇文章就是。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;內文&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rowkey.me/blog/2015/12/31/dev-job-talk/"&gt;研发招聘之殇 - 后端技术杂谈 | 飒然Hang&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是作者面試許多人後給出的意見，我覺得滿中肯的。  &lt;/li&gt;
&lt;li&gt;因為有面試剛畢業的學生，所以也有點出了中國那邊學生的狀況，基本上跟台灣這邊提到的差不多：  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;技术脱离业界前沿  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;基础素质欠缺  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;没有畏惧心  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;知其然不知其所以然  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;提出了中國那邊常見的面試型態：  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;N轮算法题目面试  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;掺杂计算机基础知识、算法以及项目经验的面试  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;软件设计  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;现场结对编程/ppt讲解  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;只看学历、学校。这种面试方式  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;群面  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;也提出了自己對於優秀的工程師或技術人員所預期的特質：  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;聪明、思维灵活  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;对技术有热情  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;基础知识扎实  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;有执行力  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1473255742.A.ED5.html"&gt;[心得] 台北多家面試心得 - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個主要是夠多家（18 間），而且有不少算有一點名氣的新創公司的資訊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://thecodist.com/article/phone-interviews-can-be-so-painful-to-do"&gt;The Codist: Phone Interviews Can Be So Painful To Do&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇是在講作者透過 Phone interview 面試人的經驗。  &lt;/li&gt;
&lt;li&gt;怨念超深，作者目前是迪士尼公司的 Lead iOS engineer，抱怨一堆來面試的人連一些很基本的問題都答不出來。  &lt;/li&gt;
&lt;li&gt;可以拿來引以為戒。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Tech_Job/M.1473663935.A.177.html"&gt;[面試] 研替心得分享及請益-下 (晨星) - 看板 Tech_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是竹科的公司普遍的面試流程。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@jhihsianwu/%E9%97%9C%E6%96%BC%E8%BE%AD%E8%81%B7-%E8%BD%89%E8%A1%8C-%E6%80%9D%E8%80%83-%E6%96%87%E7%AB%A0%E5%88%86%E4%BA%AB-c8c26319d25b"&gt;關於辭職、轉行、思考｜文章分享 – Jhih-Sian Wu – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇嚴格說起來不太算面試相關，不過我覺得跟思考自己的職涯有關，所以其實也滿適合整理在這的。  &lt;/li&gt;
&lt;li&gt;作者整理了滿多相關的文章，很適合給我這種離職完後的人好好想想，提到了一些我沒有想到的觀點或面向。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/hulis-blog/interview-prepare-b815d938f0de"&gt;面試問答準備心得之考前猜題 – Huli’s blog – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇真的整理的很完整，基本上把面試會提到的問題大概都列出來了。  &lt;/li&gt;
&lt;li&gt;很適合在面試前，自己花時間把這些都好好在腦中演練一下，我覺得會滿有幫助的。  &lt;/li&gt;
&lt;li&gt;如果能用英文演練的話更好。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/hulis-blog/stripe-and-i-df35a6f0a799"&gt;我與 Stripe ：一段愛與夢想的故事 – Huli’s blog – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者過了好幾關，而且把細節描述的非常詳細，過程中也瞭解到：真的很喜歡一間公司的話到底會為面試準備到什麼程度  &lt;/li&gt;
&lt;li&gt;自己可以拿來好好學習一下&amp;lt;但想不到最後竟然是因為聯絡延宕過久而去了另一間公司，現實生活中的事情總是這樣充滿變數和難以預料啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@Doppler/2017-front-end-%E5%8F%8A-ui-designer-%E9%9D%A2%E8%A9%A6%E7%B4%80%E9%8C%84-bdef59188916"&gt;2017 Front-End 及 UI Designer 面試紀錄 – Doppler Kuo – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇也紀錄的很詳細，雖然我自己應該是不會面試 Web Front-End 和 UI Designer 相關的工作，但還是很值得參考。  &lt;/li&gt;
&lt;li&gt;面試了 15 間公司，大多數都是偏叫得出名字的新創，但也有大公司。  &lt;/li&gt;
&lt;li&gt;雖然結果好像沒有很亮眼，但每次看到這種面試了很多間的我還是會挺敬佩的就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://crossing.cw.com.tw/blogTopic.action?id=568&amp;amp;nid=8891"&gt;「最後，你有沒有問題想問我們？」──跨國企業面試官，教你7大面試提問法 ｜ 何則文／香蕉夢想家 ｜ 換日線 Crossing&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;滿實用的一篇文章，以前面試完被問到這個都有點不太知道要問什麼，剛好近期又要開始面試了，可以好好想一下裏面的問題。  &lt;/li&gt;
&lt;li&gt;不過感覺這篇比較偏向外商的公司可以問的，像底下還是有人提到以前有問過一樣的問題，但因為被面試官覺得太直接而被迴避掉或被直接反問的。但剛好之後的目標應該主要也是鎖定國外的公司，所以應該遇到這個狀況的可能性會比較低一點。  &lt;/li&gt;
&lt;li&gt;這邊節錄一下 7 個問題：  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;一、「請問這個職缺是怎麼產生的？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;二、「您喜歡這家公司嗎？為什麼？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;三、「就我的理解，公司目前在業界的情況、主要競爭對手，我的理解是不是正確的？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;四、「您認為公司在業界中，最大的競爭優勢是什麼？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;五、「您認為這個職缺需要的核心能力是什麼？希望具備什麼特質？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;六、「如果我最後沒能進入貴公司，最大的因素是？您認為我哪方面需要再加強？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;七、「詢問姓名、職稱與聯絡方式」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;心得&lt;/h2&gt;
&lt;p&gt;剛好在上一份工作離職前，得到了第一次面試別人的機會，面試完後的感想紀錄在此：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;面試時不要不懂裝懂，真的會讓懂得人不知道該擺出甚麼表情。  &lt;/li&gt;
&lt;li&gt;講不知道後再根據自己已知的事物聯想提問，跟一知半解得胡亂猜測單純找話講，觀感天差地遠。  &lt;/li&gt;
&lt;li&gt;上禮拜面試人的感想，近期自己可能也要去面試，順便用來自省。  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Interview"></category><category term="Job"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>我的新鮮人離職紀錄</title><link href="https://blog.m157q.tw/posts/2017/12/26/i-left-my-first-full-time-job/" rel="alternate"></link><published>2018-01-23T13:48:30+08:00</published><updated>2018-01-23T13:48:30+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-12-26:posts/2017/12/26/i-left-my-first-full-time-job/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;這個標題是為了與另一篇將近兩年前寫的文章：&lt;a href="/posts/2016/02/12/first-job-interviews/"&gt;我的新鮮人面試紀錄&lt;/a&gt; 相互呼應，&lt;br /&gt;
這篇文章因為把面試過程紀錄的很詳細，&lt;br /&gt;
導致被 Google 搜尋到的機率很高，&lt;br /&gt;
意外成了我部落格上瀏覽量最高的文章，&lt;br /&gt;
是當初始料未及的，&lt;br /&gt;
原本只是想紀錄給自己看。  &lt;/p&gt;
&lt;p&gt;至於為什麼這篇文章要與其相呼應的原因也很明顯了，&lt;br /&gt;
嗯，因為我離職了。&lt;br /&gt;
算是這輩子第一份離開的全職工作，&lt;br /&gt;
想說既然當初找工作的時候紀錄得這麼詳細，&lt;br /&gt;
那就不要虎頭蛇尾。&lt;br /&gt;
所以這篇文章會紀錄我在 2016/01/21~2017/11/30 這段時間，&lt;br /&gt;
於塔圖科技擔任 Web back-end engineer 發生的事情。  &lt;/p&gt;
&lt;p&gt;其實 2017/09/30 就辦離職了，&lt;br /&gt;
但 2017/10/01~2017/11/30 轉為約聘，&lt;br /&gt;
把停了一年多的架構搬遷的專案收個尾，&lt;br /&gt;
也算是為自己負責吧。&lt;br /&gt;
而頭銜雖然是掛 Web Back-end Engineer，&lt;br /&gt;
實際上算是 DevOps + Architect + 半個 Support engineer。  &lt;/p&gt;
&lt;p&gt;主要當然還是紀錄下來給我自己以後有空的時候回頭檢視用的，&lt;br /&gt;
但如果有幫助到閱讀這篇文章的你的話，&lt;br /&gt;
我也會感到滿開心的就是，&lt;br /&gt;
如果真的有幫助的話也請你不吝留言讓我知道。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;紀錄&lt;/h2&gt;
&lt;p&gt;就先從我做了哪些事開始回想好了，一方面也是為了最近要開始改履歷用。&lt;br /&gt;
這裡當然會比較流水帳一點，會再從這找比較重點的事蹟更新到履歷上。&lt;br /&gt;
以下依照到職時間以每 6 個月來切分：  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;剛到職到六個月&lt;/h3&gt;
&lt;p&gt;因為剛到職的狀況比較多變，所以這裡我再區分成每個月來紀錄：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;剛到職  &lt;ul&gt;
&lt;li&gt;只有我一個 Web Back-end Engineer，另外是寫 JavaScript 的 Support Engineer，也剛進公司沒多久，之前的開發團隊都到另外一間公司去了。  &lt;/li&gt;
&lt;li&gt;雖然在 Slack 上有位前員工可以問，但也只有一開始一兩個月有問而已，其他都靠自己摸索。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;到職一個月  &lt;ul&gt;
&lt;li&gt;把所有前人留下來的文件讀完並進到還有在用的伺服器自行尋找相關設定。  &lt;/li&gt;
&lt;li&gt;因為前人留下來的文件不夠完整，這部份真的很像在打站，拿到一個可以登入的 shell 以後就什麼都要自己找...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;到職兩個月  &lt;ul&gt;
&lt;li&gt;把伺服器搞炸。  &lt;/li&gt;
&lt;li&gt;不小心把 Google Cloud Platform 上的 Compute Engine Service Account 給砍了，到處求助但都無法解決，最後只好開一個新的 GCP Project。  &lt;/li&gt;
&lt;li&gt;因為之前的人把服務都跑在同一台 Google Cloud Compute Engine 上，所以一堆服務都掛掉，為此加班熬夜幾天搞定自己捅出來的簍子。  &lt;/li&gt;
&lt;li&gt;第一次參加 GCPUG.tw 就非常狼狽得來問這個問題，這裡有尋求協助的紀錄：&lt;a href="https://www.facebook.com/groups/GCPUG.TW/permalink/1695449067380624/"&gt;https://www.facebook.com/groups/GCPUG.TW/permalink/1695449067380624/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;剛好公司方向有改變，很多之前的服務用不到，適合開個新的 GCP project 把還有要用的東西移過去。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;到職三個月  &lt;ul&gt;
&lt;li&gt;把雲端平台的使用費省下 70% 左右。  &lt;/li&gt;
&lt;li&gt;大概是從每個月 2x 萬新台幣降到 6 萬左右，大概是降了 20&lt;br /&gt;
萬新台幣左右，雖然嚴格說起來真的沒有很多就是。  &lt;/li&gt;
&lt;li&gt;原因是因為之前團隊的人走了之後，沒把 GCP Cloud Bigtable（可以想成是跑在 GCP 上的 Spark）關掉，也沒在跑啥運算，就這樣每個月白白燒掉 20 萬新台幣。  &lt;/li&gt;
&lt;li&gt;當然也還把一些確定沒用到的服務都一併暫停了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;到職四個月  &lt;ul&gt;
&lt;li&gt;已經把有在跑的服務大致上都搞懂了，可以修改並加上新功能，只剩下一些非常久遠的 legacy package 沒有去動它。  &lt;/li&gt;
&lt;li&gt;開始撰寫新文件，因為對服務都大致瞭解了，所以也從舊的文件中篩選出還有用的部份，將其獨立出來，並儘量完整補充。  &lt;/li&gt;
&lt;li&gt;因為之前的團隊把服務都集中在某台 Google Compute Engine 上，所以開始跟約聘的 Web Back-end Engineer 同事討論計劃把服務拆分出來，以避免之後「一個掛、全部掛」的狀況。  &lt;/li&gt;
&lt;li&gt;剛好同事有用過 Docker 跟 Kubernetes，也是我當時想學的新技術之一，於是就開始計劃把現有的服務都拆分成 microservices。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;到職五個月  &lt;ul&gt;
&lt;li&gt;年資最久的工程師離職了（其實也只比我早進公司 3 個月），所以要花比較多時間帶兩位跟我同期進來，但比較沒經驗的同事。（其實在這之前多少就有花時間帶了，因為座位在旁邊，年紀也相仿，所以比較好溝通。）  &lt;/li&gt;
&lt;li&gt;有新的全職 Web Back-end Engineer 加入，雖然是有經驗的，但也得額外花點時間帶他熟悉。  &lt;/li&gt;
&lt;li&gt;開始針對現有服務的效能做改善。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;到職六個月到一年&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;和後來加入的 Web Back-end Engineer 磨合，年紀差了一輪以上，溝通上面有很嚴重的問題，許多觀念差太多，這是第一個腦海浮現讓我想離職的時候。  &lt;ul&gt;
&lt;li&gt;另外一位年紀與我相仿的約聘同事也在和他的合作上遇到滿大的問題，剛好當時他們有個案子要合作，常常溝通到後來都要請我居中協調。  &lt;/li&gt;
&lt;li&gt;常常在溝通的時候不發表意見，都說「好」「沒問題」，但之後實作出來的程式碼卻不是照討論的結果，而是他原本想做的事，浪費的討論的時間。  &lt;/li&gt;
&lt;li&gt;程式碼會動就好，常常直接 copy-paste 程式碼，因為很快就能交差了事，老闆都會覺得他的進度很快很棒，甚至我包好的 function 也被直接複製出去修改，然後原本的就被棄置。  &lt;/li&gt;
&lt;li&gt;每天都要跑來問我們昨天的進度，但明明大家都會寫在 Trello 上，其實每個人就只是把 Trello 打開，講昨天紀錄的東西，所以是浪費時間，溝通很多次了也沒用，後來就不了了之。  &lt;/li&gt;
&lt;li&gt;所以後來在分配專案的時候，我都會儘量與其避開，因為實在是太累，是心理上的那種累。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;開始把服務拆分並轉移到新的 GCP Project，這中間比較有挑戰性的事情是和另外兩位同事們討論如何做到 zero downtime 的 Database migration，透過架構與程式碼的修改以及撰寫 script 進行資料搬移，大家各負責不同的部份，後來也成功做到了。  &lt;/li&gt;
&lt;li&gt;解決現有服務要提供給中國客戶使用的問題  &lt;ul&gt;
&lt;li&gt;其實這原本不是我主要負責的事，老闆是先指派給年紀比我大一輪的那位同事做，因為他剛好做完了上一件老闆交代的事。我一開始有給些方向與想法，但該同事就沒再來找我討論，結果一個禮拜過去了，上線前測試，根本不會動。跟客戶講說下禮拜就可以好的東西，老闆只好去請客戶寬限一週，然後就落到了我頭上，開啟了一個禮拜的爆炸加班之旅。  &lt;/li&gt;
&lt;li&gt;中國網路環境特殊，要使用 GCP 的服務直接提供根本不可能，因為會被擋光光，但老闆談這筆生意的時候又很急著上線，所以根本來不及把所有的服務都複製到中國的雲端平台上使用，更別說可能還有域名得立案的問題。  &lt;/li&gt;
&lt;li&gt;後來當然是沒有遇域名立案，因為根本沒時間，而是老闆先跟同行借了中國的伺服器，但要佈署服務很麻煩，畢竟不是自己的伺服器，再加上狀況其實不太好，所以最後還是用了中國的雲端服務。  &lt;/li&gt;
&lt;li&gt;加了三天晚上的班，吃老闆請的披薩等等速食晚餐，總算是弄出了個能用的東西。但效果不太好，即便是在中國牆內的網路，還是被擋的很慘，不然就是 latency 太高，而且還被同行合作的程式碼雷到。XD  &lt;/li&gt;
&lt;li&gt;之後大概又來來回回折騰了一個多月，仍舊無法完全克服 Google Tag Manager 部份被擋的狀況。折衷弄了一個全由自己獨立開發的 Django server，撰寫爬蟲定時去抓取資訊，並提供 API，做到確保能載入 &lt;code&gt;gtm.js&lt;/code&gt; 的時候才載入，不能載入的時候就不載入。當然也有把 request 資訊紀錄到資料庫裏面，方便之後拉資料出來觀察狀況。詳細紀錄在這篇文章：&lt;a href="https://blog.m157q.tw/posts/2018/01/11/dealing-with-china-network/"&gt;中國網路相關筆記 | Just for noting&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2016 梅竹黑客松  &lt;ul&gt;
&lt;li&gt;回交大當評審，其他評審看起來都至少大我 5~10 歲以上，第一次當程式相關的評審，其實有點抖。  &lt;/li&gt;
&lt;li&gt;為此弄了一個 Django server，搭配 Django REST framework 和 Django REST framework Docs 提供 API 給參加者撈出 BigQuery 裡頭的資料。詳細紀錄在這篇文章：&lt;a href="https://blog.m157q.tw/posts/2018/01/07/django-rest-framework-note/"&gt;關於 Django REST framework 的一些筆記 | Just for noting&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;開始開發 Facebook Messenger Bot  &lt;ul&gt;
&lt;li&gt;用 Google App Engine 搭配 &lt;code&gt;webapp2&lt;/code&gt; 開發，因為 Facebook 官方沒有 SDK，所以啥都得自己接。  &lt;/li&gt;
&lt;li&gt;也踩到了不少雷，例如：  &lt;ul&gt;
&lt;li&gt;Facebook 的開發文件很雷這應該就不用說了，有程式碼的話直接去看程式碼比較快，程式碼寫的比文件好。  &lt;/li&gt;
&lt;li&gt;Generic Template 10 個 element 都放圖片的話，即便已經用了 cache 快速回應給 Facebook 的伺服器，訊息仍舊非常慢才在 client 端被 render 出來，主要都是卡在圖片。  &lt;/li&gt;
&lt;li&gt;沒有完善的測試環境，基本上大家都是開一個 production bot、一個 testing bot 分開維護。  &lt;/li&gt;
&lt;li&gt;API 常常沒在管 backward compability，major version 都還在 1 的時候常常 API 行為突然就改了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;到職一年到一年半&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;繼續開發 Facebook Messenger Bot  &lt;ul&gt;
&lt;li&gt;2017 上半年時間幾乎都在弄 Facebook Messenger Bot，主要是功能需求其實有點違反 Facebook 的 policy，所以在實作上為了不要觸犯 policy，一直在花時間想要怎麼繞路。  &lt;/li&gt;
&lt;li&gt;主要是需求沒有確定下來，PM 是個初心者，所以浪費了不少時間在做重複的事，導致之後要儲存使用者行為及分析的流程延宕了很久。  &lt;/li&gt;
&lt;li&gt;為了更加瞭解 Facbeook Messenger Bot，2017 年 6 月參加了 &lt;a href="https://fdctaipei.kktix.cc/events/fdc201706"&gt;Facebook Developer Circle: Taipei - Meetup #2&lt;/a&gt;，有篇筆記文：&lt;a href="https://blog.m157q.tw/posts/2017/06/22/facebook-developer-circle-taipei-meetup-2/"&gt;Facebook Developer Circle: Taipei - Meetup #2 | Just for noting&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;支援同事  &lt;ul&gt;
&lt;li&gt;這反而是我這段時間做得比較有成就感的，實在是因為 Messenger Bot 的開發沒規劃好，讓我覺得有點厭煩了。  &lt;/li&gt;
&lt;li&gt;幫忙解決了一些數字落差的問題，有點像是網站方面的 debug，除了更加熟悉架構與細節以外，有時候也挺享受確定問題的發生的原因跟自己思考出來的結果是相同的那種成就感。  &lt;/li&gt;
&lt;li&gt;幫忙把原本在 Travis CI 上要跑一個半小時的測試（沒錯，一個半小時。），加上 multiprocessing，縮短到只要花 15 分鐘就跑完。  &lt;/li&gt;
&lt;li&gt;加上廣告商品自動下架機制，因為原本的下架機制很陽春，常常被客戶抱怨。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;到職一年半到離職前&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;因為覺得公司走向改變，工作內容已經變成我不太喜歡的部份，經過多次思考後，在 2017 的 7 月底提離職。  &lt;ul&gt;
&lt;li&gt;談完之後調整了工作內容，回歸到架構和資料分析的部份。  &lt;/li&gt;
&lt;li&gt;並設定兩個月的觀察期，期間順便把工作相關的部份逐步交接給同事，如果不行的話就 2017 的 9 月底離職。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;開始做 data cleaning 和接觸 Machine Learning  &lt;ul&gt;
&lt;li&gt;參加了幾場資料科學年會辦的活動，學到了不少東西：  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.m157q.tw/posts/2017/08/12/dive-into-deep-learning-datasci-tw/"&gt;台灣資料科學年會之系列活動：深入淺出深度學習 (Dive into Deep Learning) | Just for noting&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.m157q.tw/posts/2017/08/13/deep-learning-hands-on-step-by-step-datasci-tw/"&gt;台灣資料科學年會之系列活動：手把手的深度學習實務 | Just for noting&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;這期間真的是比較多時間在碰 Machine Learing 和 Deep Learning，但花在上面的時間沒有很多，因為還有其他事情得做，而且主要負責機器學習相關專案的開發者不是我，所以自己覺得只學了點皮毛。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;儘量把文件補齊全  &lt;ul&gt;
&lt;li&gt;花最多時間的應該是用 draw.io 畫出了整個公司的伺服器架構圖。  &lt;/li&gt;
&lt;li&gt;其次則是撰寫新的員工訓練與入門文件。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最後還是在 2017 的 9 月底離職了，但後續以約聘的方式完成了一件案子，直到 2017 年 11 月底。  &lt;ul&gt;
&lt;li&gt;主要內容是 API 搬遷以及整理資料流。  &lt;/li&gt;
&lt;li&gt;API 搬遷算是 2016 年中做到一半的東西，因為相關人員都已經離職，只剩我比較瞭解，自己也想做個了斷，所以就接了。  &lt;ul&gt;
&lt;li&gt;主要是去除舊的 API 以及增添新的資料庫欄位因應新的需求。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;整理資料流則是儘量讓不同服務之間傳遞資料的方式有個統一的規則，在此之前是有點雜亂無章的，常常會搞混。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;反省&lt;/h2&gt;
&lt;p&gt;「人非聖賢，孰能無過？」其實在這段時間內自己覺得也犯了不少錯，在這邊紀錄下來，用來提醒以後的自己。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;絕對要克制自己看到 legacy code 就想改的強迫症。  &lt;ul&gt;
&lt;li&gt;基本上沒有錯誤或者嚴重效能瓶頸的 legacy code 就別動它了。  &lt;/li&gt;
&lt;li&gt;剛進公司的時候逞一時之勇，改了一些 legacy code 導致行為改變，都是後來有人回報或是察看資料才發現。  &lt;/li&gt;
&lt;li&gt;如果真的要改的話，先確定自己瞭解整個服務在幹嘛，最好還要確定有夠完整的測試，避免修改後出錯卻不知道。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在面對年紀比自己大的同事時的溝通能力還不夠好  &lt;ul&gt;
&lt;li&gt;無法像和年紀相仿的同事那樣直接溝通  &lt;/li&gt;
&lt;li&gt;這部份目前真的沒啥其他想法，之後可能要多注意一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;對於技術瞭解得不夠深入  &lt;ul&gt;
&lt;li&gt;很多時候都是網路上查到覺得不錯就用某個工具或方法，但用了以後發現有不少的問題或者中途才發現有更好的處理方法，但要改的話進度又會落後。  &lt;/li&gt;
&lt;li&gt;對於該如何用什麼樣的技術、什麼樣的架構、什麼樣的演算法、什麼樣的資料結構還是不夠確定，資工的基礎部份還是不夠熟，得多花時間加強。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;對於專案進度的安排不夠準確  &lt;ul&gt;
&lt;li&gt;常常有進度落後的狀況出現，對於專案的估期還是不夠準確，其實某方面應該也代表自己的技術能力不夠純熟。  &lt;/li&gt;
&lt;li&gt;當然也會遇到需求變動而導致專案進度落後的部份，這部份可能之後要多熟悉 Agile 的流程，畢竟在這份工作並沒有使用到 Agile。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解釋東西的時候常常會太過發散  &lt;ul&gt;
&lt;li&gt;有時候為了要讓人比較好懂反而會講得太過詳細或太過多餘，甚至不自覺得離了題，這點是自己之後要注意的部份，講話要多講些重點。  &lt;/li&gt;
&lt;li&gt;還有一點要注意的是講解技術相關的東西時，必需要再多加確定聽的人的程度，這樣才能更有效且更精準的討論或解答，不會太過或不及。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;仍舊沒養成寫測試的習慣  &lt;ul&gt;
&lt;li&gt;雖然知道寫測試很重要，但常常因為開發進度的關係來不及寫測試。  &lt;/li&gt;
&lt;li&gt;知道 TDD，但還是不太習慣，總覺得有機會應該找一個 side project，強迫自己試試 TDD，去體會其中明顯的差別。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;英文口說沒太大進步  &lt;ul&gt;
&lt;li&gt;畢竟在台灣能用到的場合相對來說真的比較少，這部份還要自己再找時間精進。  &lt;/li&gt;
&lt;li&gt;基本上現在已經不太怕口說了，但重點是用字會趨於過度單調，常常重複使用同樣的字。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;和人交談技巧還是不夠  &lt;ul&gt;
&lt;li&gt;算是我自己長久以來的問題吧，常常都是事後才想到當時其實應該還有很多東西可以聊，有助於建立人際網路。  &lt;/li&gt;
&lt;li&gt;出社會以後算是真的體驗到人際網路比我以前想像中的重要些。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;聽完演講歸納問題並勇於發問的能力仍舊不足  &lt;ul&gt;
&lt;li&gt;之後應該要多訓練自己聽講時的歸納與分析能力，並和自己的一些想法結合，提出一些精闢的問題。  &lt;/li&gt;
&lt;li&gt;這個算是 2016 年底去 33C3 的時候有非常深刻的體會，會場不僅提問踴躍，每個人問的問題也都很棒，我覺得這是從小到大習慣了填鴨式教育最大的問題。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;時間管理不夠好、自信不足、應該多嘗試面試邀約  &lt;ul&gt;
&lt;li&gt;在這將近兩年的時間內，從 LinkedIn 或 Email 至少收到 7 位獵頭詢問、與一間東南亞頗大間公司的 HR 當面吃飯聊天、和想在加拿大創業的高中同班同學聊過，不過都因為覺得自己還在工作中加上個性的關係沒有進一步去面試，現在覺得導致自己少了滿多學習的機會的。  &lt;/li&gt;
&lt;li&gt;之後在工作中如果有不錯的面試邀約應該就會去嘗試看看，不然老實說將近兩年的時間沒有面試，對於面試的東西實在有點生疏，現在要額外準備的心力讓我的拖延症更嚴重了。以後不如就把面試當健身，讓自己保持在習慣面試的狀態，也許這樣會比較好。  &lt;/li&gt;
&lt;li&gt;期間還有一件事是，2015 年底找工作的時候在 Livecoding.tv 這個平台（現在改名為 LiveEdu）上開了寫程式的實況，後來找到工作後因為租屋觸網路問題所以就沒繼續開了，結果後來發生了幾件事：  &lt;/li&gt;
&lt;li&gt;收到不少次該平台的工作人員寄訊息來說覺得我的實況不錯，不知道為什麼我沒繼續開了，想邀請我參加他們的 Premium member，可能每週固定時間開實況這樣。  &lt;/li&gt;
&lt;li&gt;也在該平台的私訊收到一些人表示剛學 Python，說看我之前的實況 VOD 學到不少，算是在這平台上還不錯的影片，問我什麼時候能繼續開。  &lt;ul&gt;
&lt;li&gt;當時我因為 2016 年下半年比較忙，再加上租屋處網路問題短時間內也無法解決，所以只回說目前因為網路問題無法解決所以不會開，之後有可能會再開，但不一定。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;收到該平台中國區工作人員邀請我進行一段訪問，我也因為工作因素加上自信不足沒有回應，就這樣算是錯失了一個可以小小建立一點自己的能見度的機會。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;心得&lt;/h2&gt;
&lt;p&gt;在這將近兩年的工作時間，收穫其實也不少，就在這邊把一些心得感想寫下來。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最大的收穫應該是認識了一群感情很好的同事吧  &lt;ul&gt;
&lt;li&gt;週末晚上會約去唱歌、吃飯、喝酒，還有自己揪團的小旅行。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用中文和技術職或非技術職的同事溝通的能力算是有長進吧  &lt;ul&gt;
&lt;li&gt;獲得了「會講人話的工程師」的稱號  &lt;/li&gt;
&lt;li&gt;關於回答問題的部份，最近翻譯的這篇文章算是把我想講的話都講出來了：&lt;a href="https://blog.m157q.tw/posts/2017/12/21/how-to-answer-questions-in-a-helpful-way-zh-tw/"&gt;《回答的智慧》 | Just for noting&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Docker 和 Kubernetes 算是這份工作學到比較多的吧  &lt;ul&gt;
&lt;li&gt;雖然自己覺得對於 Docker 和 Kubernetes 的實作還是不夠瞭解，如果要進行效能方面的改善的話應該還是會有問題就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;獨立完成的兩個使用 Django 的專案  &lt;ul&gt;
&lt;li&gt;無論是程式碼、註解、說明文件，我自己都覺得還算滿意。  &lt;/li&gt;
&lt;li&gt;最不滿意的都是效能的部份，之後從事 Python 相關開發的話得提醒自己多注重要怎麼讓效能更好這一部份。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算是有點確定自己有興趣的方向了  &lt;/li&gt;
&lt;li&gt;對於網站後端架構以及自動化測試與佈署的部份，覺得能幫助同事和自己節省更多時間或看到因為架構改善讓開發變得比較容易，會滿有成就感的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;原因&lt;/h2&gt;
&lt;p&gt;紀錄一下這次離職的一些原因，想說在之後有新工作的時後可以拿來檢視。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公司著重方向改變，和我想做的事情以及當初面試進來的工作內容不符合。  &lt;ul&gt;
&lt;li&gt;主要是我對於新的方向沒有很強烈的興趣。  &lt;/li&gt;
&lt;li&gt;雖然工作內容有調整，但剛進來的新人也無法成為即戰力，等於是我要做更多的事。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;覺得自己的技術能力沒有什麼顯著的長進  &lt;ul&gt;
&lt;li&gt;自己覺得剛畢業後的工作應該要能夠讓自己的技術能力有顯著的成長，不然會嚴重影響之後的職涯發展  &lt;/li&gt;
&lt;li&gt;因為同事大部份都算是初學者，所以花比較多時間在帶人，基本上同事有問問題的話我都是儘量回答到好，畢竟從別人的問題也常常可以學到新東西或發現自己的盲點。  &lt;/li&gt;
&lt;li&gt;甚至連非工程師的同事提出的問題我也儘量回答，而且是儘我最大的能力用比喻的方式讓不懂技術名詞的同事也能理解其中的概念。  &lt;/li&gt;
&lt;li&gt;其實我還滿享受這種幫助同事的成就感，但肯定是會擠壓到我精進技術能力的時間。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;薪資成長不如預期  &lt;ul&gt;
&lt;li&gt;覺得調薪幅度跟我做的事情不太成比例。  &lt;/li&gt;
&lt;li&gt;當然也可能跟我自己沒有積極爭取加薪有關，算是下一份工作會想要有所突破的部份吧。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;其實在這將近兩年的工作時間內，我也有好幾次不斷問自己，「到底下一份工作要不要找個大公司試試？」每次問完自己以後，都還是偏向找比較小型的公司。  &lt;/p&gt;
&lt;p&gt;最近再次問了自己這個問題，還是想要找小型的新創公司來待，可能跟我自己的個性有關吧，不是很在意 brand name。  &lt;/p&gt;
&lt;p&gt;但我想之後還是會每隔一段時間問自己這個問題就是，我自己也知道大公司與小公司各有優缺點，唯一一個讓我覺得最有感的是，大公司比較有可能遇到好的 mentor 授予你一些經驗，不是說小公司遇不到，主要是小公司每個人得各司其職，工作範圍可能都不太重疊，所以比較沒有人有時間可以帶你。大公司則制度比較完善，人力資源也比較多，也大多會分配 mentor，當然能不能遇到好 mentor 也是要看運氣就是。  &lt;/p&gt;
&lt;p&gt;這份工作會想離職有滿大一部份原因是「沒有人可以帶我」，所以都得靠自己摸索，也不是說自己就無法自學，只是就進步得比較緩慢，然後就覺得自己將近兩年來在能力上沒啥成長。也許跟之前的工作都有比我有經驗的人在帶有關，被有經驗的人指點或者被有經驗的人電，會讓我學得非常快，我想這是我自己的盲點，需要多花點時間去思考。  &lt;/p&gt;
&lt;p&gt;下一份工作應該會先從國外的小型新創公司開始找吧，如果能夠 relocate 的話最好，但目前並沒有鎖定美國，畢竟美國現在因為 Trump 當總統，所以對技術移民不是那麼友善。  &lt;/p&gt;
&lt;p&gt;但也有在考慮大公司就是，主要是可以面對規模比較大的服務以及可以接觸到比較深的技術，這是主要考量的點，很多問題在規模夠大的服務才會浮現，而且通常滿有挑戰性的。畢竟小公司大多數狀況會因為人少而且要急著有個賺錢的產品，所以會比較偏快速弄出個應用，且剛上線的服務使用人數不會太多。總之最近跟朋友聊完以後，對大公司可能有這樣的工作環境有點興趣，但就是要多花更多心力去準備大公司繁瑣的面試流程就是。  &lt;/p&gt;
&lt;p&gt;我反而比較想去比較少人去的歐洲或是紐澳，總之可能就是邊緣人個性作祟吧，想去試一些比較少人試過的事。也因為這樣，其實雖然知道 referral 是比較容易找到工作的，但我其實沒有很喜歡從朋友變成同事，不知道為什麼下意識就會覺得多了一份利害關係而感到尷尬，還是覺得朋友之間可以分享彼此都不知道的事情比較有趣些。  &lt;/p&gt;
&lt;p&gt;但我可以接受從同事變成朋友，我也不太確定為啥我會有這種想法，可能是因為我對朋友的要求並沒有很嚴格，就算我不太喜歡某位朋友的作風，我還是可以接受他比較 OK 的地方，但如果要成為同事的話，可能就會超越這條線讓我無法接受吧。再加上我的個性很難與人深交，所以寧願多認識一些不同的人之類的。  &lt;/p&gt;
&lt;p&gt;總之，目前應該還是會傾向 Web Back-end 和 DevOps 的部份吧，我自己是覺得算有興趣，至於 Data Analysis 和 Machine Learning 的部份也要找時間好好碰一下，算是有興趣，但在這份工作比較沒有機會接觸到。  &lt;/p&gt;</summary><category term="Job"></category><category term="2018 iT 邦幫忙鐵人賽"></category></entry><entry><title>Y2017W16</title><link href="https://blog.m157q.tw/posts/2017/04/24/y2017w16/" rel="alternate"></link><published>2017-07-10T03:54:06+08:00</published><updated>2017-07-10T03:54:06+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-04-24:posts/2017/04/24/y2017w16/</id><summary type="html">&lt;h3&gt;docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.docker.com/2017/04/introducing-linuxkit-container-os-toolkit/"&gt;Announcing LinuxKit: A Toolkit for building Secure, Lean and Portable Linux Subsystems - Docker Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/linuxkit/linuxkit"&gt;GitHub - linuxkit/linuxkit: A toolkit for building secure, portable and lean operating systems for containers&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;facebook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://caffe2.ai/blog/2017/04/18/caffe2-open-source-announcement.html"&gt;Caffe2 Open Source Brings Cross Platform Machine Learning Tools to Developers | Caffe2&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Training and deploying AI models is often associated with massive data centers or super computers, with good reason. The ability to continually process, create, and improve models from all kinds of information: images, video, text, and voice, at massive scale, is no small computing feat.  &lt;/li&gt;
&lt;li&gt;感覺有機會的話可以拿來用用看  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.facebook.com/blog/post/2017/04/18/messenger-platform-2.0/"&gt;Messenger Platform 2.0 Debuts at F8 - Facebook for Developers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Today at F8, we introduced Messenger Platform 2.0, a new suite of tools that gives you the ability to build richer experiences, get discovered, and extend the conversational, visual and social capabilities of your bots. With more than 1.  &lt;/li&gt;
&lt;li&gt;真的更新的有夠快，一個月前才 1.4，現在已經 2.0 了，最大的改變大概是多了 extensions 吧，不過天知道台灣到底哪時候才能用 Payments  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/FacebookforDevelopers/videos/10154613896183553/"&gt;Live at our annual F8 developer conference. - Facebook for Developers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;今年 F8 的影片  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gcpug-tw.gitbooks.io/google-cloud-platform-in-practice/content/"&gt;簡介 ‧ Google Cloud Platform In Practice&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GCPUG.TW 出了一本關於 GCP 的書  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/managing-notification-emails-for-organizations/"&gt;Managing notification emails for organizations - User Documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來我想要的功能早就有了，不同組織的通知可以綁定不同信箱，這樣工作跟個人的就不會混在一起了，竟然現在才知道，趕緊設定。  &lt;/li&gt;
&lt;li&gt;不過後來用了一下發現，有時候還是會因為不明原因，在個人的信箱收到公司 GitHub repo 的通知，然後 Travis 的通知好像沒地方可以設定，統一會寄信到 GitHub 的 primary email 的樣子。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@hoffa/the-top-github-projects-per-country-92c275e19409"&gt;The top GitHub projects per country – Felipe Hoffa – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個統計有點有趣，是拿 GCP 上的 GitHub Public dataset 用 BigQuery 來計算的，台灣也有在裏面，第 1 名的是求職天眼通。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/poga/fuzz-testing-and-go-fuzz"&gt;Fuzz Testing and go-fuzz // Speaker Deck&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;iphone&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;最近買了 iPhone SE，所以看了一堆跟 iPhone 有關的有的沒的  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.51feibao.com/article-view-3784.html"&gt;利用iphone手機自帶包裝盒做支架 - 廢物利用手工DIY小製作 - 51費寶網&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很多朋友把苹果手机买回家之后第一时间就是到配件市场上重新买手机支架，殊不知iphone自带的出厂包装本身就为我们提供了一个绝佳的diy手机支架方案。如果你之前没有留意到这种手机新玩法，那么一起来跟随51费宝这期的手  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://read01.com/GPaLex.html"&gt;繼續使用iphone原裝包裝盒教你如何收納earpods耳機 - 壹讀&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;iphone買回家以後千萬不要急著把拆開的包裝盒扔掉，在以往教程當中我們已經學會了怎麼使用手機原裝包裝盒做diy手機架。可是盒子裡還有很多包材我們依然沒有用到的，例如裝earpod的耳機小盒子。我想各位跟我一樣，在打開i  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://appleuser.com/2014/05/16/wrap-iphone-earphones-without-tangles/"&gt;iPhone 耳機繞 8 字不打結收線法 | AppleUser&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;幾年前還在 Apple 店打工的時候，當時的前輩 Max 曾經傳授給我一個讓 iPhone 耳機線絕對不打結的收納方法，這起源於他當兵時擔任通信兵的線材收納法：繞 8 字。  &lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;後來收耳機線都用這個方法，幾乎不太打結，很棒。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Oversea_Job/M.1382073074.A.C85.html"&gt;[歐洲] ARM Norway AS 面試經驗分享 - 看板 Oversea_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很詳細的面試經歷，而且竟然是在挪威，應該不算常見，挺有趣的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ablagoev.github.io/linux/adventures/commands/2017/02/19/adventures-in-usr-bin.html"&gt;Adventures in /usr/bin and the likes - Dormammu's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;I just love Linux! For me it makes interacting with your computer fun and educational. I think if someone needs to learn about the core principles underlying an operating system and hardware, Linux is a great place to start.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dpdk.org/"&gt;DPDK&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;DPDK is a Linux Foundation Project, developed by hundreds of contributors, supported by strong leading members, and used in a growing ecosystem.  DPDK is a set of libraries and drivers for fast packet processing.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://chuansong.me/n/1720679451638"&gt;【論文解讀】Facebook 何凱明 Mask R-CNN 狙擊目標實例分割_人工智能頭條_傳送門&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;导读：自从将卷积神经网络引入了目标检测领域后，从rcnn到fast-rcnn，然后到end-to-end的faster-rcnn,除了yolo一枝独秀外，基本垄断了整个目标检测领域；而何凯明的resnet基本成了整个图像分类算法的巅峰。这一次，他们强强联手准  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;mastodon&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@poga/%E6%9E%B6%E8%A8%AD%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84-mastodon-instance-858a658e9494"&gt;架設你自己的 mastodon instance – Poga Po – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;mastodon 概念上類似 mail server：每個人都能架設他自己的 instance，每個 instance 之間都能互相溝通，使用者可以跨 instance follow、reply、reblog… 等等。  &lt;/li&gt;
&lt;li&gt;這篇描述了 &lt;a href="https://g0v.social"&gt;https://g0v.social&lt;/a&gt; 架設 Mastodon 的筆記，根據自己架設的友人表示，RoR 好肥（戰  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bslatkin/effectivepython"&gt;GitHub - bslatkin/effectivepython: Effective Python: Source Code and Errata for the Book&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Hello! You've reached the official source code repository for Effective Python. To learn more about the book or contact the author, please visit the official website.  In this repository you can browse all of the source code included in the book.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software engineering&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@rdsubhas/10-modern-software-engineering-mistakes-bc67fbef4fc8"&gt;Modern Software Over-Engineering Mistakes – RDX – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Few things are guaranteed to increase all the time: Distance between stars, Entropy in the visible universe, and Fucking business requirements . Many articles say Dont over-engineer but don’t say why or how. Here are 10 clear examples.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.inboundjournals.com/3-free-monitoring-tools-to-compare-your-facebook-page-with-the-competition/"&gt;與競品比較粉絲專頁的3個免費監測工具&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;社群經營是一個不斷優化的過程。經常為自己的社群經營作評估非常重要，而透過數據指標的分析，可以幫助品牌在社群的經營上逐步精進。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;深圳華強北真的是個神奇的地方，大概所有用過的 iPhone 都回流到這裡了吧。  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://forum.xda-developers.com/nexus-5x/general/4gb-ram-upgraded-nexus-5x-t3588743"&gt;4GB RAM upgraded of my Nexus 5X | LG Nexus 5X&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnbeta.com/articles/tech/603095.htm"&gt;老外Nexus 5X成磚寄去深圳：修好且升級到4G RAM_Google Android_cnBeta.COM&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Gossiping/M.1492426304.A.892.html"&gt;Re: [新聞] 八田安葬烏山頭 愛台灣超越種族&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;比課本上還詳細的八田羽一歷史  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pansci.asia/archives/110479"&gt;這個九九乘法表你小學沒背過！吠陀方形的千年奧秘 - PanSci 泛科學&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;古印度的奧妙  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E6%B0%B4%E7%85%99"&gt;水煙 - 维基百科，自由的百科全书&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來水煙起源於波斯啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E9%BC%BB%E7%83%9F"&gt;鼻烟 - 维基百科，自由的百科全书&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來鼻煙起源於美洲印地安人  &lt;/li&gt;
&lt;li&gt;十六世紀初西班牙人  &lt;/li&gt;
&lt;li&gt;帶回歐洲後於十七世紀流行起來  &lt;/li&gt;
&lt;li&gt;清朝時傳入中國  &lt;/li&gt;
&lt;li&gt;一時蔚為風潮  &lt;/li&gt;
&lt;li&gt;後被旱菸、水煙、紙煙取代  &lt;/li&gt;
&lt;li&gt;於蒙古大為流行  &lt;/li&gt;
&lt;li&gt;至今仍有吸食鼻煙的習慣  &lt;/li&gt;
&lt;li&gt;甚至和社交禮儀有關  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="docker"></category><category term="facebook"></category><category term="gcp"></category><category term="github"></category><category term="golang"></category><category term="iphone"></category><category term="job"></category><category term="linux"></category><category term="machine learning"></category><category term="mastodon"></category><category term="misc"></category><category term="python"></category><category term="software engineering"></category><category term="taiwan"></category><category term="trivia"></category></entry><entry><title>Y2017W14</title><link href="https://blog.m157q.tw/posts/2017/04/10/y2017w14/" rel="alternate"></link><published>2017-05-01T20:29:16+08:00</published><updated>2017-05-01T20:29:16+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-04-10:posts/2017/04/10/y2017w14/</id><summary type="html">&lt;h3&gt;docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/anildigital/862675ec1b7bccabc311"&gt;Remove dangling docker images&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Remove dangling docker images View gist:862675ec1b7bccabc311 Raw gistfile1.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;因為同事問了，所以就找了一下。  &lt;/li&gt;
&lt;li&gt;我自己是用 &lt;code&gt;docker images -aqf dangling=true | xargs --no-run-if-empty docker rmi&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud-playground.appspot.com/playground/"&gt;Cloud Playground&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/googlearchive/cloud-playground"&gt;https://github.com/googlearchive/cloud-playground&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;算是 Google App Engine 的火力展示吧，用 GAE 架了一個可以快速 fork and deploy GAE service 的網站  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/7813194/how-do-i-edit-an-existing-tag-message-in-git"&gt;git tag - How do I edit an existing tag message in git? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;git tag &amp;lt;tag name&amp;gt; &amp;lt;tag name&amp;gt; -f -m "&amp;lt;new message&amp;gt;"&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;基本上就是強制 overwrite  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1028649/how-do-you-rename-a-git-tag"&gt;How do you rename a Git tag? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;git tag new old&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;git tag -d old&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin :refs/tags/old&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push --tags&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;基本上就是把舊的複製到新的以後，在把舊的 local 跟 remote 砍掉，再把更新 push 到 remote  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.wu-boy.com/2017/04/5-reasons-why-we-switched-from-python-to-go/"&gt;五大理由從 Python 轉到 Go 語言 | 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;都算滿務實的理由  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1491689771.A.CCF.html"&gt;[心得] 歐洲工作&amp;amp;面試心得 - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;挺不錯的經驗，在阿姆斯特丹工作好像真的很棒啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://szlin.me/2017/04/05/linux-kernel-%e5%af%86%e7%a2%bc%e5%ad%b8%e6%bc%94%e7%ae%97%e6%b3%95%e5%af%a6%e4%bd%9c%e6%b5%81%e7%a8%8b/"&gt;Linux Kernel 密碼學演算法實作流程 – SZ Lin  &amp;amp; Embedded Linux&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTE4Nzk1NA%3D%3D&amp;amp;mid=2650741697&amp;amp;idx=1&amp;amp;sn=9e460ef496d57164c27b617ff17a78f8&amp;amp;chksm=beb2ed5c89c5644a2161f4151ec3cca8e605538435b772a911646d62f9f7de4ccaa9d5125fd7&amp;amp;mpshare=1&amp;amp;scene=4&amp;amp;srcid=0402GzvLtZhgODBSpKPlLwoC#rd"&gt;参与这场线上大战之后，我觉得人类未来还是有希望的&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Reddit 的愚人節  &lt;/li&gt;
&lt;li&gt;好酷啊  &lt;/li&gt;
&lt;li&gt;完全沒有參與到  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/2017/04/noto-serif-cjk-is-here.html"&gt;Google Open Source Blog: Noto Serif CJK is here!&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/04/04/7229/tim-berners-lee-%e6%8b%bf%e4%b8%8b-2016-%e5%b9%b4-turing-award/"&gt;Tim Berners-Lee 拿下 2016 年 Turing Award | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/04/04/7224/adobe-%e8%88%87-google-%e5%90%88%e4%bd%9c%e6%8e%a8%e5%87%ba-noto-serif-cjk-%e6%80%9d%e6%ba%90%e5%ae%8b%e9%ab%94/"&gt;Adobe 與 Google 合作推出 Noto Serif CJK (思源宋體) | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.omgubuntu.co.uk/2017/04/ubuntu-18-04-ship-gnome-desktop-not-unity"&gt;Ubuntu 18.04 To Ship with GNOME Desktop, Not Unity - OMG! Ubuntu!&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Ubuntu 18.04 LTS will use GNOME as its default desktop environment, and not Unity 8 — or even Unity 7.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ptt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/CCRomance/M.1491078577.A.39F.html"&gt;[閒聊] 我媽的異國婚姻&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;大概是第一次花這麼多時間看 CCR 版的文章，作者的文筆很好，真的可以當小品文來看，有時候真實的人生就是比小說來的神奇啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doughellmann.com/blog/2017/04/03/profile-and-pstats-performance-analysis-pymotw-3/"&gt;profile and pstats — Performance Analysis — PyMOTW 3 – Doug Hellmann&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Python 的 built-in module 就有可以做 profiling 的工具  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Progressive_web_app"&gt;Progressive web app - Wikipedia&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Progressive Web App (PWA) is a term used to denote a new software development methodology. Unlike traditional applications, progressive web apps are a hybrid of regular web pages (or websites) and a mobile application.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;因為最近 &lt;a href="https://mobile.twitter.com"&gt;https://mobile.twitter.com&lt;/a&gt; 用 Node.js, React.js 重寫，改善了不少效能。裡頭提到了 PWA，因為沒聽過而去查了一下  &lt;/li&gt;
&lt;li&gt;看起來就是 website 但故意設計的跟 App 的感覺一樣，讓使用者在網頁版與手機上的 UX 是一樣的  &lt;/li&gt;
&lt;li&gt;詳細改寫的細節在 Twitter Engineering blog 這篇：&lt;a href="https://blog.twitter.com/2017/how-we-built-twitter-lite"&gt;https://blog.twitter.com/2017/how-we-built-twitter-lite&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/%E9%AD%94%E9%AC%BC%E7%9A%84%E6%89%8B%E7%A8%BF/%E5%9C%8B%E9%81%93%E5%9B%9B%E6%96%AC%E9%A6%96%E4%BA%86%E5%8F%B0%E7%81%A3%E7%AC%AC%E4%B8%80%E6%A2%9D%E8%87%AA%E8%A1%8C%E8%BB%8A%E9%81%93-8ca7c80e6bd1"&gt;國道四斬首了台灣第一條自行車道 – 魔鬼的手稿 – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;近20年來，國道四號，在老台中山區是一個非常複雜的概念。這一條高速公路，由台中清水起，大略沿大甲溪往東而行，至豐原東北止，已於2001年11月16日通車，但是，後續工程還沒完，國道四後面一分為二，還要接一條打山洞  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;身為一個豐原人，沒看這篇還真的不知道東豐自行車隧道有這麼多的牽扯，大概是因為最近在看紙牌屋的關係，所以對於這些大概也能有些想像。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/TaichungBun/M.1491294485.A.A97.html"&gt;[食記] 全台最容易讓女友落淚的餐廳 - 看板 TaichungBun - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這餐廳... 「夜間X行」真的太狂了，超級像九把刀的小說會出現的內容...  &lt;/li&gt;
&lt;li&gt;雖然身為一個台中人，但沒聽過這間餐廳。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://0.30000000000000004.com/"&gt;0.30000000000000004 - Floating Point Math&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好像還是有不少人不知道這問題  &lt;/li&gt;
&lt;li&gt;0.1+0.2 != 0.3  &lt;/li&gt;
&lt;li&gt;浮點數運算的誤差  &lt;/li&gt;
&lt;li&gt;數值方法的課程應該必提吧？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="docker"></category><category term="gcp"></category><category term="git"></category><category term="golang"></category><category term="job"></category><category term="linux"></category><category term="misc"></category><category term="news"></category><category term="ptt"></category><category term="python"></category><category term="taiwan"></category><category term="trivia"></category><category term="web"></category></entry><entry><title>Y2017W11</title><link href="https://blog.m157q.tw/posts/2017/03/20/y2017w11/" rel="alternate"></link><published>2017-04-22T17:59:30+08:00</published><updated>2017-04-22T17:59:30+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-03-20:posts/2017/03/20/y2017w11/</id><summary type="html">&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2017/03/crispr.html"&gt;高级人类的崛起 - 阮一峰的网络日志&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;CRISPR  &lt;/li&gt;
&lt;li&gt;人類要透過修改基因的技術自己創造出變種人了嗎？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://orson.tw/2017/02/26/%e8%aa%b0%e5%9f%b7%e6%94%bf%ef%bc%9f/"&gt;誰執政？ – 綠紅黃白黑&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好像是個有趣的八卦  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/2017/03/python-fire-command-line.html"&gt;Google Open Source Blog: Introducing Python Fire, a library for automatically generating command line interfaces&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看了一下範例好像很好用  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/python-fire"&gt;https://github.com/google/python-fire&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/03/02/7162/usrbin-%e4%b8%8b%e7%9a%84%e5%b7%a5%e5%85%b7%e4%bb%8b%e7%b4%b9/"&gt;/usr/bin 下的工具介紹 | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://ablagoev.github.io/linux/adventures/commands/2017/02/19/adventures-in-usr-bin.html"&gt;Adventures in /usr/bin and the likes - Dormammu's Blog&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gcp.expert/cloudendure-vm-migration/"&gt;用 CloudEndure 一鍵完成VM搬家完全免費！ | GCP 雲端服務頂級合作夥伴 LIVEhouse.in&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GCP 真的是一直努力在搶 AWS 的客戶耶 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;GitHub - kamranahmedse/developer-roadmap: Roadmap to becoming a web developer in 2017&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Web 工程師的技能樹  &lt;/li&gt;
&lt;li&gt;DevOps 真難當  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bcicen/ctop"&gt;bcicen/ctop: Top-like interface for container metrics&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Top-like interface for container metrics ctop provides a concise and condensed overview of real-time metrics for multiple containers:  as well as an expanded view for inspecting a specific container.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;google&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/03/17/7191/google-%e7%9a%84-guetzli%ef%bc%8c%e5%b0%8d-jpeg-%e7%9a%84%e5%a3%93%e7%b8%ae%e6%bc%94%e7%ae%97%e6%b3%95/"&gt;Google 的 Guetzli，對 JPEG 的壓縮演算法 | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/2017/03/guetzli-new-open-source-jpeg-encoder.html"&gt;Google Open Source Blog: Announcing Guetzli: A New Open Source JPEG Encoder&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;嗯 果然是用到了前陣子發布的 RNN-based 圖片壓縮演算法 RAISR  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;interview&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@KenjiChao/2016-17-%E7%BE%8E%E5%9C%8B%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E6%B1%82%E8%81%B7%E5%BF%83%E5%BE%97-a5c00427fa73#.dhyvp598r"&gt;2016/17 美國軟體工程師求職心得 – Kenji Chao – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;每次看到美國軟體工作的面試心得都覺得好強啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1489584667.A.6BC.html"&gt;Re: [請益] 非cs想走ai領域，投履歷沒公司理 - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是給了想碰 Machine Learning 的門外漢一個方向  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/poteto/hiring-without-whiteboards"&gt;GitHub - poteto/hiring-without-whiteboards: ⭐️  Companies that don't have a broken hiring process&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;A listing of companies (or teams within companies) that don't do typical, CS based "whiteboard" interviews. Using sites like HackerRank probably fall into that category and won't be accepted.  &lt;/li&gt;
&lt;li&gt;因為 Twitter 上有一群寫程式的大老說自己根本無法通過白板面試，所以就有人建了一個 repo 收集那些不用白板面試的公司名單。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.byvoid.com/zht/blog/micronesia-pohnpei-1"&gt;波納佩島意外之旅（一） - BYVoid&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;到哪都有中國人 XD  &lt;/li&gt;
&lt;li&gt;飛個太平洋小島飛機要停五次  &lt;/li&gt;
&lt;li&gt;作者應該是在環遊世界吧  &lt;/li&gt;
&lt;li&gt;而且都是去比較少人去的地方  &lt;/li&gt;
&lt;li&gt;前陣子才在東歐  &lt;/li&gt;
&lt;li&gt;看看挺有趣的  &lt;/li&gt;
&lt;li&gt;畢竟可能一輩子都不會去  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://szlin.me/2017/03/13/linux-kernel-delay-sleep-%e5%bb%b6%e9%81%b2%e5%87%bd%e5%bc%8f%e5%ad%b8%e7%bf%92%e7%ad%86%e8%a8%88/"&gt;Linux Kernel delay/ sleep 延遲函式學習筆記 – SZ Lin  &amp;amp; Embedded Linux&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;atomic 用 delay  &lt;/li&gt;
&lt;li&gt;non-atomic 用 sleep  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://venturebeat.com/2017/03/15/gitlab-acquires-software-chat-startup-gitter-will-open-source-the-code/"&gt;GitLab acquires software chat startup Gitter, will open-source the code | VentureBeat | Dev | by Jordan Novet&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;o2o&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;對 O2O 不熟，所以看了些介紹  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2015/03/02/jump-in-with-everyone-else-or-jump-right"&gt;不知道這兩項，別說你懂 O2O！ – INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;O2O，全名為 Online to Offline，是指將實體商務與電子商務做結合，透過網路無遠弗屆的力量尋找消費者，再藉由行銷活動或購買行為將消費者帶至實體通路。簡單來說，消費者在網上購買服務，在線下取得服務。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.mbalib.com/zh-tw/O2O%E8%90%A5%E9%94%80%E6%A8%A1%E5%BC%8F"&gt;O2O營銷模式 - MBA智库百科&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;O2O營銷模式又稱離線商務模式，是指線上營銷線上購買帶動線下經營和線下消費。O2O通過打折、提供信息、服務預訂等方式，把線下商店的消息推送給互聯網用戶，從而將他們轉換為自己的線下客戶，這就特別適合必須到  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kkc.github.io/2017/02/19/reading-note-apprenticeship-patterns/"&gt;筆記：學徒模式，優秀軟體開發者的養成之路 | Kakashi's Notes&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;img alt="apprenticeship-patterns" src="/files/y2017w11/apprenticeship-patterns.png" /&gt;  &lt;/li&gt;
&lt;li&gt;期許自己也能做到  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/02/18/pylivecap-%e6%93%b7%e5%8f%96-youtube-%e7%9b%b4%e6%92%ad%e5%bd%b1%e7%89%87-frame-%e4%b8%a6%e4%b8%94%e5%ad%98%e6%88%90%e5%9c%96%e7%89%87/"&gt;pylivecap - 擷取 YouTube 直播影片 frame 並且存成圖片 | louie_lu's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pynayzr/livestream-frame-capture"&gt;https://github.com/pynayzr/livestream-frame-capture&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kb.hitcon.org/post/158546428972/%E5%8F%B0%E7%81%A3%E9%A7%AD%E5%AE%A2%E6%8C%91%E6%88%B0%E7%BE%8E%E5%9C%8Bcgc%E5%A4%A9%E7%B6%B2%E6%A9%9F%E5%99%A8%E4%BA%BA%E5%B0%88%E9%A1%8C%E7%B3%BB%E5%88%97%E5%A0%B1%E5%B0%8E%E5%8D%81%E4%B8%80%E8%BA%AB%E6%AD%B7%E5%85%B6%E5%A2%83cgc%E6%88%B0%E5%A0%B4%E5%B0%8E%E8%A6%BD"&gt;HITCON Knowledge Base - 台灣駭客挑戰美國CGC天網機器人專題系列報導(十一)：身歷其境，CGC戰場導覽&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;跟這系列的上一篇隔了半年  &lt;/li&gt;
&lt;li&gt;視覺化在資安比賽這塊也是挺重要的  &lt;/li&gt;
&lt;li&gt;不然旁人大概啥都看不懂  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/03/11/7171/%e9%80%8f%e9%81%8e%e6%89%8b%e6%a9%9f%e8%9e%a2%e5%b9%95%e4%b8%8a%e7%9a%84%e9%a4%98%e7%86%b1%e7%8c%9c%e6%b8%ac-pin-%e7%a2%bc/"&gt;透過手機螢幕上的餘熱猜測 PIN 碼 | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;在輸入完 PIN 碼的 30 秒內的準確度都還是很高 (80%)  &lt;/li&gt;
&lt;li&gt;這樣也行 真酷  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://exablue.de/blog/2017-03-15-github-enterprise-remote-code-execution.html"&gt;GitHub Enterprise Remote Code Execution&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Everyone uses GitHub. If you have huge amount of green paper or you are very paranoid about your code, you can run your own GitHub. For $2,500 USD per 10 user years you get GitHub Enterprise: A virtual machine containing a fully-featured GitHub instance.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://paragonie.com/blog/2017/03/jwt-json-web-tokens-is-bad-standard-that-everyone-should-avoid"&gt;JOSE (Javascript Object Signing and Encryption) is a Bad Standard That Everyone Should Avoid - Paragon Initiative Enterprises Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Note: This was originally written about JSON Web Tokens (JWT), but JWT is a subset of Javascript Object Signing and Encryption (JOSE) so these criticisms are more fairly focused at JOSE as a whole.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software_development&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://teddy-chen-tw.blogspot.tw/2017/03/vs.html"&gt;搞笑談軟工: 價值 VS 技術&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;現實 VS 理想  &lt;/li&gt;
&lt;li&gt;麵包 VS 愛情  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;ducky&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.duckychannel.net/download/user_manual/One_backlit.pdf"&gt;Ducky-one_DKON1508S-DKON1687S_manual_V18_20160114&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;忘記手上這支 Ducky One 80% 的自定義設定了，所以做個紀錄。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.medicalnewstoday.com/articles/157333.php"&gt;Menstrual Cramps (Period Pains): Causes and Treatments - Medical News Today&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;指的其實不是月經  &lt;/li&gt;
&lt;li&gt;而是經痛啊  &lt;/li&gt;
&lt;li&gt;其他別名有 dysmenorrhea 或 period pains  &lt;/li&gt;
&lt;li&gt;https://t.co/buKVIXdZ3E  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="blog"></category><category term="cli"></category><category term="ducky"></category><category term="gcp"></category><category term="github"></category><category term="google"></category><category term="interview"></category><category term="job"></category><category term="life"></category><category term="linux"></category><category term="news"></category><category term="o2o"></category><category term="programmer"></category><category term="python"></category><category term="security"></category><category term="software_development"></category><category term="trivia"></category></entry><entry><title>Y2017W06</title><link href="https://blog.m157q.tw/posts/2017/02/13/y2017w06/" rel="alternate"></link><published>2017-02-13T01:40:56+08:00</published><updated>2017-02-13T01:40:56+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-02-13:posts/2017/02/13/y2017w06/</id><summary type="html">&lt;h3&gt;app&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@zonble/our-mac-app-was-rejected-because-we-are-using-swift-3-9f574529945"&gt;Our Mac app was rejected because we are using Swift 3 – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 Swift 3 寫 Mac App 會過不了官方 App store 的審核而不能上架，原因是使用了 Private API，但作者確定自己沒有使用任何 Private API，結果作者去追了 source code 以後發現，是 Swift 3 的 library 裏面用到的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@rudychin/ph-d-admission-uiuc-cornell-cmu-347827b5af00#.112b14qkm"&gt;[Ph.D. Admission] UIUC / Cornell / CMU – 金廷武 – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;人生勝利組的大學同學發了篇美國名校資工博士申請的心得文  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django"&gt;Django Web Framework (Python) - Learn web development | MDN&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Mozilla 竟然有 Django 的 Tutorial XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;editor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hungys.xyz/why-i-switched-from-sublime-to-vscode/"&gt;為什麼我從 Sublime Text 跳槽 Visual Studio Code？&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;之前有試用過一下 VS code，覺得算是 GUI editor 裏面我目前用到覺得最好用的吧，光是內建整合 Git 以及 integrated terminal 對我來說就贏很多其他的 GUI editor 了。  &lt;/li&gt;
&lt;li&gt;看了這篇才知道原來 integrated terminal 的點子是台灣人去開 issue 的 XD。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gitlab&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://about.gitlab.com/2017/02/10/postmortem-of-database-outage-of-january-31/"&gt;Postmortem of database outage of January 31 | GitLab&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Gitlab 針對 2017/01/31 誤刪 production db 以及後續的處理和反省做了詳細的紀錄。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/google-cloud/using-single-docker-repository-with-multiple-gke-projects-1672689f780c"&gt;Using single Docker repository with multiple GKE projects&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;透過把另外一個 GCP project 的 GKE default service account 加入另外一個 GCP project 的 IAM 中，並給予相對應的權限，就能讓後者直接使用前者的 Docker repository，不用每開一個 GCP project 都要重新 build 一次。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;interview&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lnishan.github.io/2017/interview-preparation-101/"&gt;Interview Preparation 101&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;成功面試進入美國 Google Intern 的人的準備心得  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.techug.com/post/first-two-years-i-work-in-huawei.html"&gt;一位在华为工作2年员工的心路历程 | 程序师&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;華為有這麼操喔？上次在飛機上跟一個華為的工程師聊感覺沒這麼慘耶，還是是因為這篇是上海，但跟我聊天的沒記錯好像是北京？而且他才第1年就四處出差都公司出錢。還是學碩士差別？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hackaday.com/2016/09/04/convert-any-usb-keyboard-to-bluetooth/"&gt;Convert Any USB Keyboard to Bluetooth | Hackaday&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好酷啊，竟然可以自幹個把 USB 轉成 Bluetooth 的裝置，不過去看了教學影片以後其實還挺麻煩的就是了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/learning-new-stuff/machine-learning-in-a-year-cdb0b0ebd29c"&gt;Machine Learning in a Year – Learning New Stuff – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者花了一年的時間自學 Machine Learning。開頭就說不一定需要懂數學理論才能開始學。  &lt;/li&gt;
&lt;li&gt;簡體中文版：&lt;a href="http://www.techug.com/post/how-i-learn-machine-learning-in-a-year.html"&gt;我是如何花了一年時間來學機器學習的 | 程序師&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terryum/awesome-deep-learning-papers"&gt;terryum/awesome-deep-learning-papers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個收集跟 Deep Learning 相關論文的 Repo.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.wired.com/2017/02/programming-is-the-new-blue-collar-job/"&gt;The Next Big Blue-Collar Job Is Coding | WIRED&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;When I ask people to picture a coder, they usually imagine someone like Mark Zuckerberg: a hoodied college dropout who builds an app in a feverish 72-hour programming jag—with the goal of getting insanely rich and, as they say, “changing the world.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;寫程式的門檻愈降愈低，很多時候不用懂相關理論甚至只要複製貼上再修修改改就能夠寫出一個應用程式，等到人人都會寫程式，像現在勞力付出的藍領階級工作一樣普及的時候，那些純勞力付出的工作可能都已經被機器取代。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/python/cpython"&gt;python/cpython: The Python programming language&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;CPython 的 source code 丟到 GitHub 上哩  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/playpauseandstop/python-3-dot-6-and-performance-a-love-story"&gt;Python 3.6 &amp;amp; Performance. A Love Story&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;關於 Python 3.6 一些新特性的介紹，紀錄一些比較顯著的：  &lt;ul&gt;
&lt;li&gt;PEP 498: f-strings  &lt;/li&gt;
&lt;li&gt;PEP 525: Async generator  &lt;/li&gt;
&lt;li&gt;PEP 530: Async comprehension  &lt;/li&gt;
&lt;li&gt;PEP 526: Variable annotations  &lt;/li&gt;
&lt;li&gt;new &lt;code&gt;dict&lt;/code&gt; implementation  &lt;ul&gt;
&lt;li&gt;參考了 PyPy 的實作，為 dict 的 memory entry 加上 index  &lt;/li&gt;
&lt;li&gt;memory usage 20% ~ 25% smaller comparted to Python 3.5  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;以及比較了執行速度： Python 2.7 &amp;gt; Python 3.6 &amp;gt; Python 3.5，而 Python 3.7 會比 Python 3.6 再快些。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitheis/alog"&gt;keitheis/alog: Python logging for Humans.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Python logging for Humans. Your goto logging module without panic on context swtich.  Warning: No more logger = logging.getLogger(&lt;strong&gt;name&lt;/strong&gt;) in your every file.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;resume&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nickwarm.logdown.com/posts/1402232"&gt;撰寫履歷：如何吸引賞識你的人 « NickWarm's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇是以中文履歷為主  &lt;/li&gt;
&lt;li&gt;同一個人丟了兩種不同版本的履歷，一個收到感謝函，一個收到面試通知，足見履歷重要性。  &lt;/li&gt;
&lt;li&gt;除了照片、姓名解構、自傳以外我都算認同  &lt;/li&gt;
&lt;li&gt;CakeResume 感覺不錯用  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;p&gt;看了第一個 RAT 的工具以後，就把其他相關的也看了一下了。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nathanlopez/Stitch"&gt;nathanlopez/Stitch: Python Remote Administration Tool (RAT)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Stitch is for education/research purposes only. The author takes NO responsibility and/or liability for how you choose to use any of the tools/source code/any files provided.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sweetsoftware/Ares"&gt;sweetsoftware/Ares: Python botnet and backdoor&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Ares is a Python Remote Access Tool.  Warning: Only use this software according to your current legislation. Misuse of this software can raise legal and ethical issues which I don't support nor can be held responsible for.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ahhh/Reverse_DNS_Shell"&gt;GitHub - ahhh/Reverse_DNS_Shell: A python reverse shell that uses DNS as the c2 channel&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;DNShell v1.7 Description: A Python Reverse Shell that uses DNS as the C2 channel. Requires: dnslib dnspython pycrypto Gotchyas: don't forget to change your HOST don't forget to change your SECRET key run server first Moar Info: &lt;a href="http://lockboxx.blogspot.com/2015/01/python-reverse-dns-shell"&gt;http://lockboxx.blogspot.com/2015/01/python-reverse-dns-shell&lt;/a&gt;.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vesche/basicRAT"&gt;vesche/basicRAT: python remote access trojan&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a Python RAT (Remote Access Trojan), basicRAT was created to maintain a clean design full-featured Python RAT. Currently a work in progress and still being hacked on.  Disclaimer: This RAT is for research purposes only, and should only be used on authorized systems.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/n1nj4sec/pupy"&gt;GitHub - n1nj4sec/pupy: Pupy is an opensource, cross-platform (Windows, Linux, OSX, Android) remote administration and post-exploitation tool mainly written in python&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Pupy is an opensource, multi-platform (Windows, Linux, OSX, Android), multi function RAT (Remote Administration Tool) and post-exploitation tool mainly written in python. It features a all-in-memory execution guideline and leaves very low footprint.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software engineering&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://arxiv.org/abs/1702.01715"&gt;[1702.01715] Software Engineering at Google&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/pdf/1702.01715.pdf"&gt;1702.01715.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.bbc.com/zhongwen/trad/38859981"&gt;你知道英語可以寫成這樣嗎？ - BBC 中文網&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來英文有速記寫法，根本就是蝌蚪文 XD。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://disp.cc/b/163-9SEx"&gt;Re: [問卦] 那些說吻仔魚是各種魚類幼苗的人在想什麼 - Gossiping板 - Disp BBS&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;吻仔魚是沙丁魚魚苗，不好養殖，只能用補抓野生的，因為魚苗很小，所以要用網眼特別小的魚網，捕撈時會連同其他魚的魚苗也一起抓上來，也不可能每個魚苗慢慢挑，進而導致漁業資源枯竭。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ds3d2x8n3szkj73oe8n0.lh.pdis.nat.gov.tw/"&gt;2016/10 立院公聽會 | 電競政策產銷履歷 | hackfoldr&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來電競替代役從去年 10 月就開始計劃了啊  &lt;/li&gt;
&lt;li&gt;而且 hackfolder 竟然被引進政府裏面用了嗎？  &lt;/li&gt;
&lt;li&gt;真的是完全公開透明的會議記錄啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.storm.mg/lifestyle/220782"&gt;不考幹嘛念？偏鄉免費教程式多年，成大教授：4個錯觀念，害台灣一代比一代笨-教育｜台灣｜偏鄉教育｜教授｜學習｜做孩子的重要他人｜蘇文鈺｜成大資工系｜程式教育-風傳媒-蘇文鈺&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;只學「有用」的學問  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;不唸不會賺錢的科系  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;不培養無法測量的能力  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;考試至上，什麼都要打分數。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;製造相互排擠的世代  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;成績好的人不肯教成績不好的人，怕自己被超越。  &lt;/li&gt;
&lt;li&gt;芬蘭的教育則是從小就讓孩子學會互助合作。  &lt;/li&gt;
&lt;li&gt;成功是靠互助合作，而不是踩著別人的屍骨往上爬。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;教育不該為教育以外的目的服務  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;很多企業開的私立大學都是為了直接培養員工，不太教其他的事。  &lt;/li&gt;
&lt;li&gt;反而很多台灣家長覺得這樣很棒，一畢業就有工作。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Gosu"&gt;Gosu - Wikipedia&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Gosu (고수) is a Korean term used to refer to a highly skilled person. In computer gaming the term is usually used to refer to a person highly skilled in multiplayer games like StarCraft, Warcraft III (RTS/RPG - DotA), Diablo II (RPG), Counter-Strike (FPS) and others.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;原來 Gosu 在韓文是高手的意思...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="app"></category><category term="blog"></category><category term="django"></category><category term="editor"></category><category term="gitlab"></category><category term="gke"></category><category term="interview"></category><category term="job"></category><category term="keyboard"></category><category term="machine learning"></category><category term="misc"></category><category term="programmer"></category><category term="pupy"></category><category term="python"></category><category term="resume"></category><category term="security"></category><category term="software engineering"></category><category term="taiwan"></category><category term="trivia"></category></entry><entry><title>Y2017W01</title><link href="https://blog.m157q.tw/posts/2017/01/09/y2017w01/" rel="alternate"></link><published>2017-02-06T03:14:33+08:00</published><updated>2017-02-06T03:14:33+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-01-09:posts/2017/01/09/y2017w01/</id><summary type="html">&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.fntsr.tw/articles/2016/12/21/generate-google-drive-dropbox-onedrive-directly-download-link/"&gt;獲取 Google Drive, Dropbox, OneDrive 中檔案直接下載的連結 - 深藏若虛&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「筆者現在工作場所連接影印機的電腦仍是 Windows XP 搭配 IE6，無法下載要影印的文件下來。」  &lt;/li&gt;
&lt;li&gt;感覺有了這篇文章的整理就可以寫個 script 解決這件事啦  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/ccckmit/ss-70707797"&gt;《計算機結構與作業系統裡》-- 資工系學生們經常搞錯的那些事兒！&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是釐清了一些自己沒懂的部份  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;javascript&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;GitHub - ryanmcdermott/clean-code-javascript: Clean Code concepts adapted for JavaScript&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;JavaScript 版本的 Clean Code  &lt;/li&gt;
&lt;li&gt;分享給寫 JavaScript 的同事之後，他說這篇真的還挺不錯的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/gossiping/M.1483435954.A.307.html"&gt;[新聞] 【獨家】翟本喬公司員工爆 年前大裁員 - 看板 Gossiping - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「員工透露，公司疑似因周轉不靈、錢進不來，幾乎要倒閉，所以才會在農曆年前突然大規模裁員，人數將近8成，全公司大約110至120人左右，裁員後，將只剩下2個核心小組成員。」  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/denny.ku1/posts/1226657567387696"&gt;Denny Ku - 最近新聞提到我之前任職的公司和沛科技年前裁員，網路上有各種說法都跑出來，... | Facebook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「落井下石很容易，但在這個時代失敗和成功都是暫時的。」  &lt;/li&gt;
&lt;li&gt;簡單來說就是跟酸民認真就輸了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackshare.io/posts/top-developer-tools-2016"&gt;The Top 50 Developer Tools of 2016 | StackShare&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;總共分成五類，各取了前十名。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pythonlearn.com/index.php"&gt;Python for Everybody: Exploring Data in Python 3&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naftaliharris/placeholder"&gt;GitHub - naftaliharris/placeholder: Fork of Python 2.7 with new syntax, builtins, and libraries backported from Python 3.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;本來叫 Python 2.8 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pypa/pipfile"&gt;GitHub - pypa/pipfile&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;a new (and much better!) replacement for the existing standard pip's requirements.txt file.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/grumpy"&gt;GitHub - google/grumpy: Grumpy is a Python to Go source code transcompiler and runtime.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Grumpy is a Python to Go source code transcompiler and runtime that is intended to be a near drop in replacement for CPython. The key difference is that it compiles Python source code to Go source code which is then compiled to native code, rather than to bytecode. This means that Grumpy has no VM.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;沒錯，就是字面上的意思，人只要寫 Python 再用 Grumpy 幫你轉成 golang，一切都是為了效能啊  &lt;/li&gt;
&lt;li&gt;不過目前仍然還沒有很成熟，加上有些限制。  &lt;ul&gt;
&lt;li&gt;不支援 &lt;code&gt;exec&lt;/code&gt;, &lt;code&gt;eval&lt;/code&gt;, &lt;code&gt;compile&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;不支援 C extension modules  &lt;/li&gt;
&lt;li&gt;還有許多預計會支援但目前還沒支援的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/2017/01/grumpy-go-running-python.html"&gt;Google Open Source Blog: Grumpy: Go running Python!&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Grumpy is an experimental Python runtime for Go. It translates Python code into Go programs, and those transpiled programs run seamlessly within the Go runtime.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bola.gov.taipei/ct.asp?xItem=94627869&amp;amp;ctNode=76327&amp;amp;mp=116003"&gt;臺北市政府勞動局 ─ 違反勞動基準法事業單位&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;台灣 Yahoo、台灣 Oracle、台灣大學、中央研究院上榜  OAO  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/photo.php?fbid=1720330024659355&amp;amp;set=a.150639711628402.36958.100000471228657&amp;amp;type=3&amp;amp;theater"&gt;葉丙成 - 【魂斗羅名字由來，你知否？】... | Facebook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「魂斗羅」三字的漢字日語發音是「コントラ」，也是它的英文名字 Contra 的日語發音。  &lt;/li&gt;
&lt;li&gt;Contras 是 1980 年代活躍於尼加拉瓜反桑定左翼政權的反革命游擊隊的稱呼。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5K7cNWJfxMY"&gt;亞當潑冷水：電動車並沒有比較環保 - College Humor - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「如果你不留意，這些公司會利用你想幫助地球的想法，來賣你更多傷害地球的東西。購買綠能產品並不能解決問題，因為購買本身就是個問題。我們要降低購買的數量，並重複使用現有的東西。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KsGiDrt5U2c"&gt;千禧世代在職場上到底出了什麼問題?  - Simon Sinek 賽門.西奈克 - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;身為千禧世代的一份子，我覺得這個訪談鞭辟入裡啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.mobile01.com/newsdetail/20372/ces-2017-honda-motorcycle-riding-assist-technology"&gt;[CES 2017快訊]重機會自己平衡了！Honda 本田發表全自體平衡技術 『Honda Riding Assist』 - Mobile01&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;哇賽 有點神  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="blog"></category><category term="conf"></category><category term="cs"></category><category term="javascript"></category><category term="job"></category><category term="life"></category><category term="misc"></category><category term="programmer"></category><category term="python"></category><category term="taiwan"></category><category term="trivia"></category></entry><entry><title>Y2016W49</title><link href="https://blog.m157q.tw/posts/2016/12/12/y2016w49/" rel="alternate"></link><published>2017-02-05T12:10:10+08:00</published><updated>2017-02-05T12:10:10+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2016-12-12:posts/2016/12/12/y2016w49/</id><summary type="html">&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tomlee.co/2011/10/gnu-screen-splitting/"&gt;GNU Screen splitting&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CTRL-a SHIFT-\&lt;/code&gt; (&lt;code&gt;CTRL-a |&lt;/code&gt;) (:split -v) to split the screen vertically.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CTRL-a SHIFT-s&lt;/code&gt; (&lt;code&gt;CTRL-a S&lt;/code&gt;) (:split) to split the pane horizontally.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CTRL-a TAB&lt;/code&gt; to move between the panes  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CTRL-a SHIFT-x&lt;/code&gt; (&lt;code&gt;CTRL-a X&lt;/code&gt;) will close the pane that has focus  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CTRL-a d&lt;/code&gt; will detach screen from the TTY and put it in the background. Resume with &lt;code&gt;screen -r&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CTRL-a n&lt;/code&gt; and &lt;code&gt;CTRL-a p&lt;/code&gt; shifts input focus to the next &amp;amp; previous window, respectively.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CTRL-a SHIFT-a&lt;/code&gt; (&lt;code&gt;CTRL-a A&lt;/code&gt;) will ask you to set the title of the focus window.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CTRL-a SHIFT-'&lt;/code&gt; (&lt;code&gt;CTRL-a "&lt;/code&gt;) list available windows  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/21351251/database-returned-an-invalid-value-in-queryset-dates"&gt;mysql - Database returned an invalid value in QuerySet.dates() - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Appreciate your help to resolve it.   Looks like error caused Django's 1.6 timezone functionality changes(https://docs.djangoproject.com/en/1.6/ref/databases/#time-zone-definitions).  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;用公司的 Django 1.6 時遇到的問題，要在 model 裏面使用 &lt;code&gt;timezone&lt;/code&gt; 的話，必須要在 MySQL 先載入 timezone 相關的 table  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -D mysql -u root -p&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gitready.com/intermediate/2009/02/13/list-remote-branches.html"&gt;git ready » list remote branches&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Sometimes you may need to figure out what branches exist on a remote repository so you can pull them down and check them out, merge them into your local branches, etc.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -r&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mre/awesome-static-analysis"&gt;GitHub - mre/awesome-static-analysis: A curated list of static analysis tools, linters and code quality checkers for various programming languages&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Static program analysis is the analysis of computer software that is performed without actually executing programs (analysis performed on executing programs is known as dynamic analysis). — Definition by Wikipedia  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;一個收集跟 static analysis 有關的 repo  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/asdf-vm/asdf"&gt;GitHub - asdf-vm/asdf: Extendable version manager with support for Ruby, Node.js, Elixir, Erlang &amp;amp; more&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Supported languages include Ruby, Node.js, Elixir and more. Supporting a new language is as simple as this plugin API.  If you use zsh or any other shell, replace .bashrc with the config file for the respective shell.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/commaai/research"&gt;commaai/research: comma.ai for the people to experiment with&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;7 and a quarter hours of largely highway driving. Enough to train what we had in Bloomberg.  Dataset referenced on this page is copyrighted by comma.ai and published under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;geohot 之前為了做自動駕駛系統所蒐集的資料，雖然後來因為法律問題而不做了，但把他們公開出來給想要做的人使用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alex/what-happens-when"&gt;GitHub - alex/what-happens-when: An attempt to answer the age old interview question "What happens when you type google.com into your browser and press enter?"&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;What happens when... This repository is an attempt to answer the age old interview question "What happens when you type google.com into your browser's address box and press enter?" Except instead of the usual story, we're going to try to answer this question in as much detail as possible.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;非常詳細的講解一個有點歷史的面試問題：「在瀏覽器的網址輸入 google.com 並按下 enter 發生了哪些事」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xxhomey19/PPAV"&gt;GitHub - xxhomey19/PPAV: This is an amazing Facebook messenger bot. Welcome to visit our fan page&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 Facebook Messenger Bot 來搜尋 Adult Video，爆紅沒幾天就被 Facebook ban 了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/notes/meng-ju-leu/job-hunting/1171750332901548"&gt;https://www.facebook.com/notes/meng-ju-leu/job-hunting/1171750332901548&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「每天 7:00 起床，7:20 出門上班，晚上 7 點到學校圖書館念書這樣的生活步調，假日也都是在圖書館寫題目、複習知識。 」  &lt;/li&gt;
&lt;li&gt;也太認真了吧 我好慚愧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2016/12/user_space_vs_kernel_space.html"&gt;User space 与 Kernel space - 阮一峰的网络日志&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;簡單講解而已，然後提了一下用 &lt;code&gt;time&lt;/code&gt; 這個指令出來的數字跟這個之間的關係。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;i3wm  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://faq.i3wm.org/question/239/how-do-i-suspendlockscreen-and-logout.1.html"&gt;How do i suspend,lockscreen and logout? - i3 FAQ&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://faq.i3wm.org/question/3747/enabling-multimedia-keys.1.html"&gt;Enabling multimedia keys - i3 FAQ&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;花點時間改了一下 i3wm 的快捷鍵，主要就是要在 i3 的 ‵config‵ 裡頭用 &lt;code&gt;bindsym&lt;/code&gt; 去綁定按鍵要觸發的 script  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine_learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/2016/12/open-sourcing-deepmind-lab.html"&gt;Google Open Source Blog: Open-sourcing DeepMind Lab&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;A customisable 3D platform for agent-based AI research  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/deepmind/lab"&gt;https://github.com/deepmind/lab&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jeffknupp.com/blog/2016/12/09/how-python-linters-will-save-your-large-python-project/"&gt;How Python Linters Will Save Your Large Python Project&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者推薦了 3 個檢查 Python coding style 的工具：&lt;code&gt;pylint&lt;/code&gt;, &lt;code&gt;pycodestyle&lt;/code&gt;, &lt;code&gt;pydocstyle&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;原來這種檢查 coding style 的工具可以直接叫作 linter 啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;複習一下 Python 的 ‵@property‵ 的用法  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.programiz.com/python-programming/property"&gt;Python @property: How to Use it and Why? - Programiz&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/17330160/how-does-the-property-decorator-work"&gt;python - How does the @property decorator work? - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/python-2-vs-python-3-practical-considerations-2"&gt;Python 2 vs Python 3: Practical Considerations | DigitalOcean&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;比較了 Python 2 和 Python 3 的一些差異  &lt;/li&gt;
&lt;li&gt;到目前為止對我來說最難搞懂的大概還是這兩個的 encode 和 decode 的關係吧，雖然在最近讀到的 Effective Python 裡頭有一章就是在講這個，但駑鈍如我還是常常搞混。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ithome.com.tw/news/110022"&gt;研究人員只花6秒就能破解盜刷Visa信用卡 | iThome&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「利用「分散式猜測攻擊」（Distributed Guessing Attack）來破解Visa信用卡的到期日與安全碼，最快可在6秒內找出正確數值並進行盜刷。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software_engineering&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[[好文導讀] [Dear Product Managers …] 親愛的產品經理- 來自曾經支持你的工程團隊!](http://www.evanlin.com/reading-dear-pm/)  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;stackoverflow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://unix.stackexchange.com/questions/10178/how-do-i-force-remove-a-package-in-arch-with-pacman"&gt;How do I force remove a package in Arch with pacman? - Unix &amp;amp; Linux Stack Exchange&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 &lt;code&gt;pacman -R&lt;/code&gt; 移除某個 package 的時候，如果有其他 package 相依於該 package 的話就無法移除  &lt;/li&gt;
&lt;li&gt;如果仍要強制移除該 package 的話，有兩種解法：  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;pacman -Rd&lt;/code&gt;: 不管相依性，直接強制移除該 package。  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;pacman -Rc&lt;/code&gt;: 把該 package 跟所有相依於該 package 的 packages 全部一起移除掉（注意：會遞迴下去）。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1670970/how-to-cherry-pick-multiple-commits"&gt;git - How to cherry-pick multiple commits - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;git cherry-pick A..B&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;every commit after A up to and including B.  &lt;/li&gt;
&lt;li&gt;not include commit A.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git cherry-pick A^..B&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;include commit A.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Commit A should be older than commit B. If they're the wrong order the command will silently fail.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;unix&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dspinellis/unix-history-repo"&gt;GitHub - dspinellis/unix-history-repo: Continuous Unix commit history from 1970 until today&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;雖然之前就 Star 過哩  &lt;/li&gt;
&lt;li&gt;還是手動收藏一下吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;vim&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vim-syntastic/syntastic/issues/204"&gt;Syntastic overrides let g:syntastic_python_checker = 'flake8 --ignore=E501' · Issue #204 · vim-syntastic/syntastic · GitHub&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 &lt;code&gt;syntastic&lt;/code&gt; 這個 vim plugin 遇到要改 Python linter 的問題，然後查到這個。  &lt;/li&gt;
&lt;li&gt;要在 ‵vimrc‵ 裡頭用 ‵let g:syntastic_python_flake8_args = '--ignore=E501'‵ 這樣的寫法才有用  &lt;/li&gt;
&lt;li&gt;然後 &lt;code&gt;let g:syntastic_python_checkers = ["flake8","pep8","pyflakes","pylint"]&lt;/code&gt; 的順序會影響 syntastic 的運作  &lt;ul&gt;
&lt;li&gt;按照順序來，只要其中一個沒安裝的話 syntastic 就會自動停止  &lt;/li&gt;
&lt;li&gt;以這個設定來看的話，也就是只要沒有安裝 &lt;code&gt;flake8&lt;/code&gt; 的話，syntastic 的 python syntax checking 就不會 work  &lt;/li&gt;
&lt;li&gt;但如果全部都有安裝的話，就會照著這個順序一個一個檢查，所以把最常用的要擺在最前面  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.facebook.com/posts/1751945575131606/yoga-a-cross-platform-layout-engine"&gt;Yoga: A cross-platform layout engine | Engineering Blog | Facebook Code | Facebook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;基於 Facebook 的 &lt;a href="https://www.w3.org/TR/css-flexbox-1/"&gt;Flexbox 標準&lt;/a&gt;的 cross-platform implementation  &lt;/li&gt;
&lt;li&gt;因為效能考量而用 C 語言實作  &lt;/li&gt;
&lt;li&gt;這個專案之前的名字叫 &lt;code&gt;css-layout&lt;/code&gt;，但自此開始正式改名成 &lt;code&gt;Yoga&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;windows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/12/windows-10-limited-dhcp-get-ip-failed-fixed-2016/"&gt;Windows 10 限制連線無法從 DHCP 拿到 IP 的解法 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;預設的 DHCP 竟然有問題是怎麼回事  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.twreporter.org/a/opinion-okinawa-publishing"&gt;富察／一個140萬人口的地方，會有怎樣的出版？答案在沖繩 - 報導者 The Reporter&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;沒錯 去沖繩逛了兩家書店都有一區專門放跟沖繩有關的任何書籍  &lt;/li&gt;
&lt;li&gt;文化、歷史、政治、經濟、氣候、產物等等  &lt;/li&gt;
&lt;li&gt;看了這篇才知道原來只有沖繩才有縣產書  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-7GjvnJ2PO0"&gt;牛排的血水根本不是血! - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來是肌紅蛋白 被高中同學教學了...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.flightlineshop.com/%E5%95%86%E5%93%81/%e3%80%90flightline%e3%80%91%e6%be%b3%e6%b4%b2-alpaka-%e7%99%be%e8%ae%8a%e9%98%b2%e6%b0%b4%e5%9e%8b%e6%a0%bc%e5%a4%9a%e5%8a%9f%e8%83%bd%e9%83%b5%e5%b7%ae%e5%8c%85-%e7%ac%ac5%e6%89%b9%e9%a0%90-2/"&gt;【Flightline】澳洲 ALPAKA 百變防水型格多功能郵差包 | Flightline Shop - Fashion Never Ends&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;就叫你不要再買包包了 (ry  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://toggl.com/startup-simulator/"&gt;Unicorn Startup Simulator&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This game was created in Nov 2016 during one awesome week in North Berwick, Scotland.  The brains and the beauty behind this creation belong to Toggl's marketing team (Andrea, Annika, Dunja &amp;amp; Mart) and front-end team (Andrin, Jaan, Jake, Luiz, Merlyn, Thiago &amp;amp; Tyler).  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;一個模擬新創公司的遊戲，挺寫實的（？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iUFJOQk91Jo"&gt;『臺獨運動，曾經的那一次。』- 臺灣世界史 第8集 (完結篇) - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;日軍因為清朝打輸甲午戰爭簽訂馬關條約割讓台灣，日軍要接收台灣的那時候。  &lt;/li&gt;
&lt;li&gt;台灣民主國、藍地黃虎旗。  &lt;/li&gt;
&lt;li&gt;官員逃之夭夭，居民抗日兇猛。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HPGqEDG7HUw"&gt;EP6【Public Issue Series】：Mamarirage Equality  / Marriage Equality and Nussbaum - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這部影片太厲害了 有太多我不知道的事  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.foodnext.net/news/newssafe/paper/4616151960"&gt;夜市牛排、沙朗、菲力怎麼分？ @ 食力foodNEXT‧食事求實的知識頻道&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;你應該要知道的食事  平平都是一塊「牛排」，有貴有便宜，並非全都從同一塊部位的牛肉得來的喔！平價牛排常用於牛臀部位，而上背部可作為嚼勁最足的紐約克牛排，下腰部則可作為口感較細緻的沙朗牛排，藏在其中的腰  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.justlaw.com.tw/ViewLawTxt.php?id=1706"&gt;何謂保險人、要保人、被保險人及受益人?-天秤座法律網&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一、 在我們保險制度中，按照主體來區分，會發現有「保險人」、「要保人」、「被保險人」以及「受益人」等不同稱呼，一般民眾可能對這些稱呼不太明白，下面就稍作介紹：(一)保險人  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="cli"></category><category term="django"></category><category term="git"></category><category term="github"></category><category term="job"></category><category term="life"></category><category term="linux"></category><category term="machine_learning"></category><category term="misc"></category><category term="python"></category><category term="security"></category><category term="software_engineering"></category><category term="stackoverflow"></category><category term="taiwan"></category><category term="trivia"></category><category term="unix"></category><category term="vim"></category><category term="web"></category><category term="webdav"></category><category term="windows"></category></entry><entry><title>Y2016W48</title><link href="https://blog.m157q.tw/posts/2016/12/05/y2016w48/" rel="alternate"></link><published>2017-02-03T15:15:53+08:00</published><updated>2017-02-03T15:15:53+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2016-12-05:posts/2016/12/05/y2016w48/</id><summary type="html">&lt;h3&gt;assembly&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://webassembly.org/demo/AngryBots/"&gt;Unity WebGL Player | AngryBots&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;WebAssembly 開發的網頁遊戲，玩起來還算順暢，看來直接在 Web 開發方面寫 Aseembly 的日子不遠矣。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jvns.ca/blog/2016/11/27/more-linux-drawings/"&gt;More drawings about computers - Julia Evans&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者自己畫的一系列跟電腦科學有關的插畫，又畫了更多幅了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackmd.io/s/ByvJsnBfl"&gt;成大學士生找工作歷程 (後端工程師) - HackMD&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看了一下 blog 的 GA 發現星期一的 PV 有個小幅度的上升  &lt;/li&gt;
&lt;li&gt;原來是被這篇引用了  &lt;/li&gt;
&lt;li&gt;底下的面試過程有種跟自己約莫一年前寫的那篇相似的感覺 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mhperng.blogspot.tw/2016/11/blog-post_22.html"&gt;清大彭明輝的部落格: 站在巨人的肩膀上（願景書院系列）&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「如果各種「改革」都只在乎「創新」，而不去檢討過去的失敗經驗，也不去認真取法國外的完整經驗和智慧，老是一招半式地抄襲、模仿，我們將永遠都走不出台灣今天的困境。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@fchern/%E9%97%9C%E6%96%BC%E8%AE%8A%E5%BC%B7%E9%80%99%E6%AA%94%E4%BA%8B-%E5%85%AB-fe5256d00910#.4dkx7unhv"&gt;關於變強這檔事（八） – Felix Chern – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;不該當個「缺乏大局觀而只關注自己的小世界」的人  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/technology-coding/g0v-%E7%BE%8E%E8%A5%BF%E8%A1%8C-code-for-america-summit-3287d75382eb?source=rss-4a6ce25fcf6e------2"&gt;g0v 美西行 — Code For America Summit – Technology &amp;amp; Coding – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「在台灣的會議很多都是單向單方面的傳遞，而採用小型座談或是讓聽眾一起參與，其實都可以有更多面向的觀點與討論，我覺得在台灣的研討會是值得一試的。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/12/linux-pidof-get-sub-process-id-2016/"&gt;使用 pidof 找出此程式的所有 process id - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;哦哦 這樣就不用 &lt;code&gt;ps aux | grep&lt;/code&gt; 啦  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://peteris.rocks/blog/htop"&gt;htop explained | peteris.rocks&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;For the longest time I did not know what everything meant in htop.  I thought that load average 1.0 on my two core machine means that the CPU usage is at 50%. That's not quite right. And also, why does it say 1.0?  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;非常詳細的解釋了 &lt;code&gt;htop&lt;/code&gt; 裡頭的資訊代表的意思。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2016/11/byte-order.html"&gt;理解字节序 - 阮一峰的网络日志&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么会有小端字节序？  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;答案是，计算机电路先处理低位字节，效率比较高，因为计算都是从低位开始的。所以，计算机的内部处理都是小端字节序。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://scottlobdell.me/2015/01/sql-database-best-practices-django-orm/"&gt;SQL Database Best Practices with Django (or any ORM) – Scott Lobdell&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;So I’m by no means a database expert and don’t consider myself as such, but some of my coworkers who I would label as database experts have educated me enough to learn about some best practices that would be difficult to otherwise stumble upon and self-learn.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2016/11/what-is-Google-Cloud-Deployment-Manager-and-how-to-use-it.html"&gt;Google Cloud Platform Blog: What is Google Cloud Deployment Manager and how to use it&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以用來管理 GCE, GKE, BigQuery, GCS, Cloud SQL  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gcp.expert/gcp-machine-learning-api/"&gt;你不知道的 GCP 人工智慧之各種API！ | GCP 雲端服務頂級合作夥伴 LIVEhouse.in&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;基本上就那幾個，有在稍微追一下 GCP 的新聞的人應該都會知道的。  &lt;/li&gt;
&lt;li&gt;Transalte, Vision, Prediction, Natural Langauge, Speech 這 5 個。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/11/golang-gvm-go-version-manager-install-2016/"&gt;GVM 與 Go 語言的環境如何安裝、架設 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;跟 Golang 沒有很熟，看起來是個跟 Python 裡的 virturalenv 差不多的工具。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rocket.cafe/talks/80786"&gt;公司愈大，弊病愈多：11個你不該進大公司的原因 | Rocket Café 火箭科技評論&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;... 這作者的經歷待的全是大公司  &lt;/li&gt;
&lt;li&gt;額 好吧 該說很有說服力嗎  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;k8s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gcp.expert/kubernetes-spark-built/"&gt;快速上手！使用 Kubernetes 建立 Spark 服務 | GCP 雲端服務頂級合作夥伴 LIVEhouse.in&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks#Removing_unused_packages_.28orphans.29"&gt;pacman/Tips and tricks - ArchWiki&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;pacman -Rns $(pacman -Qtdq)&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/11/debian-linux-iptable-save-restore-auto-start-2016/"&gt;Debian Linux iptables 儲存、還原、自動啟動設定 - Tsung's Blog&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;mysql&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/589652/add-2-hours-to-current-time-in-mysql"&gt;Add 2 hours to current time in MySQL? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Which is the valid syntax of this query in MySQL?  See Date and Time Functions for other date/time manipulation.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/19080143/mysql-calculate-average-post-for-every-hour-in-each-day"&gt;MySQL: Calculate average post for every hour in each day - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;I trying to calculate the average post made for every hour for each day and I have to do this for 113 months. Inside the Post table have this attribute timePosted, DatePosted and Text. I also need to join two table post and thread because I only want to get category id number 3.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;最近因為要簡單計算一下 MySQL 裡的資料，但忘記要怎麼寫了，所以查了一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eli.thegreenplace.net/2012/01/04/shared-counter-with-pythons-multiprocessing"&gt;Shared counter with Python's multiprocessing - Eli Bendersky's website&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This code is a demonstration of the problem, distilling only the usage of the shared counter. A "pool" of 10 processes is created to run the func function. All processes share a Value and increment it 50 times. You would expect this code to eventually print 500, but in all likeness it won't.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/2080660/python-multiprocessing-and-a-shared-counter"&gt;Python multiprocessing and a shared counter - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm having troubles with the multiprocessing module. I'm using a Pool of workers with its map method to load data from lots of files and for each of them I analyze data with with a custom function.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最近寫了個 multiprocessing 的程式，因為數量有點大，然後資料是直接寫入資料庫中，如果最後才計算的話可能要花非常久的時間查詢，所以想說能不能在執行的時候就用一個 multiprocessing 的 shared counter 去紀錄。  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software_engineering&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gitbook.com/book/ericyeh92094/self-reflection-and-insight-for-s-w-engineering/details"&gt;軟體開發見聞錄 · GitBook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一位在 Microsoft 工作二十年的台灣工程師分享的軟體開發經驗，分成二十幾篇，篇幅都不太長，值得花點時間閱讀一下，畢竟我還沒有待過大公司的經驗，瞭解一下也不錯。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=p5M8JmeGc_4"&gt;紅色藥丸 (紀錄片預告) - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;hmm... 男權運動  &lt;/li&gt;
&lt;li&gt;值得思考一下  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.hy31.net/?p=189"&gt;2016/11/11 在中國使用手機版 LINE 狀況紀錄 | Henry的筆記集散地&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「iPhone 如果你在中國境內插上中國 SIM 卡，網路就都是不會通。請記得到中國如果一定手機需要插當地 SIM 卡且要用 LINE 那就請插在 Andoird 上吧。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mhperng.blogspot.tw/2016/11/blog-post_20.html"&gt;清大彭明輝的部落格: 網路時代的階級與競爭力&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「如果你是一個有上進心的人，第一件該學會的事情是Google、Advanced Google、Google Scholar 以及 Google Books 四種搜尋引擎的用法。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/11/security-android-spy-back-door-sent-data-china-2016/"&gt;部分 Android 會自動將裝置內的資料上傳到中國伺服器 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;強國貨不要買比較好  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="assembly"></category><category term="blog"></category><category term="cli"></category><category term="cs"></category><category term="django"></category><category term="gcp"></category><category term="golang"></category><category term="job"></category><category term="k8s"></category><category term="linux"></category><category term="misc"></category><category term="mysql"></category><category term="news"></category><category term="python"></category><category term="software_engineering"></category></entry><entry><title>Y2016W38</title><link href="https://blog.m157q.tw/posts/2016/09/26/y2016w38/" rel="alternate"></link><published>2016-11-04T02:15:26+08:00</published><updated>2016-11-04T02:15:26+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2016-09-26:posts/2016/09/26/y2016w38/</id><summary type="html">&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://amir.rachum.com/blog/2013/07/13/django-querysets-fucking-awesome-yes/"&gt;Django QuerySets: Fucking Awesome? Yes&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;就最近接手了一個公司內的專案，裡頭大量使用了 Django 的 QuerySet。  &lt;/li&gt;
&lt;li&gt;找到這篇，覺得講的還不錯，所以存個檔（？）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.wu-boy.com/2016/09/docker-cache-on-travis/"&gt;在 Travis 實現 Docker Cache&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這好像可以用來解決之前用 Travis 自動上版到 GKE 的時候 build image 都要很久的問題  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/how2dock/docbook"&gt;how2dock/docbook: Sample code and Vagrant files for O'Reilly Docker cookbook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;歐萊禮系列的《Docker 錦囊妙計》中的範例程式碼  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;firefox&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.servethehome.com/firefox-is-eating-your-ssd-here-is-how-to-fix-it/"&gt;Firefox is eating your SSD - here is how to fix it&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;預設每 15 秒就會把 session 存入硬碟，於是造成硬碟寫入的 loading 非常高，對 SSD 這種寫入次數有限的東西非常傷，文中有提供解法。  &lt;/li&gt;
&lt;li&gt;開啟 &lt;code&gt;about:config&lt;/code&gt; 頁面，把 &lt;code&gt;browser.sessionstore.interval&lt;/code&gt; 從預設的 &lt;code&gt;15000&lt;/code&gt; (15 秒) 改成 &lt;code&gt;1800000&lt;/code&gt; (30 分鐘) 後，硬碟寫入的 loading 明顯降低了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cli, htop&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://serverfault.com/questions/180711/what-exactly-do-the-colors-in-htop-status-bars-mean"&gt;linux - What exactly do the colors in htop status bars mean? - Server Fault&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;之前看 htop 都只有看數字而已，於是查了一下 CPU 跟 RAM 的 status bar 中不同顏色代表什麼意思，節錄一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Hitting &lt;code&gt;F1&lt;/code&gt; or &lt;code&gt;h&lt;/code&gt; will show you the key. But for reference, the default colors are:  &lt;/p&gt;
&lt;p&gt;CPU:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blue = Low priority threads  &lt;/li&gt;
&lt;li&gt;Green = Normal priority threads  &lt;/li&gt;
&lt;li&gt;Red = Kernel threads  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Memory:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Green = Used memory  &lt;/li&gt;
&lt;li&gt;Blue = Buffers  &lt;/li&gt;
&lt;li&gt;Yellow/Orange = Cache  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are a couple of different color-schemes available, you can see them through hitting &lt;code&gt;F2&lt;/code&gt;.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1474342684.A.3BA.html"&gt;[徵才] Opera TV: C   Developers with Linux - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來那個做瀏覽器的 Opera 在內湖有辦公室啊  &lt;/li&gt;
&lt;li&gt;月薪 100k 起跳還算不錯耶，雖然還是比國外的便宜就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.evanlin.com/developer-after-40/"&gt;[好文共賞] Being A Developer After 40 (如何在四十歲後繼續從事軟體開發)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很棒的翻譯文章，一個國外的、具有 18 年開發經驗的開發者的分享，期許自己也能像他一樣，在寫程式這方面努力不懈。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/crazyguitar/pysheeet"&gt;Python Cheatsheet https://www.pythonsheets.com&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Python 小抄，整理的還不算少，無聊的時候可以看看。  &lt;ul&gt;
&lt;li&gt;網站的部份在這： &lt;a href="https://www.pythonsheets.com/"&gt;https://www.pythonsheets.com/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;順便整理幾個類似的文章在這邊備忘好了  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html"&gt;Code Like a Pythonista: Idiomatic Python&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeffknupp.com/blog/2012/10/04/writing-idiomatic-python/"&gt;Writing Idiomatic Python&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.python-guide.org/en/latest/"&gt;The Hitchhiker’s Guide to Python! — The Hitchhiker's Guide to Python&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dongwm.com/archives/liao-liao-pythonmian-shi-zhe-jian-shi-er/"&gt;聊聊 python 面試這件事兒 - 小明明 s à domicile&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;還滿不錯的一篇關於 Python 面試的文章，有作者自己的心得還有經驗分享，以及最後有分享一些 Python 面試題目的連結。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;第一次面試被電的部份  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;他们觉得我买了好多书, 想看想学的很多, 但是都没有深入. 建议我砍掉一半的兴趣, 把这些时间专注于做其中的几件  &lt;/li&gt;
&lt;li&gt;一个领域学习1，2个就好了. 比如web框架. 只要学好django或者flask, 理解原理. 用什么框架已经不重要了  &lt;/li&gt;
&lt;li&gt;好好学习一个编辑器. 驾驭好它, 让它提高你的工作效率.  &lt;/li&gt;
&lt;li&gt;python学的不够深入, 建议我在细节上一个一个的抠, 力争弄清楚每一个, 积少成多  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;後來做的努力  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;去某公司面试前, 或者立志要去该公司. 最好先了解公司用到的python相关的技术栈, 这样可以有针对的准备相关内容  &lt;/li&gt;
&lt;li&gt;针对性的准备想要做的职位的python技能需求. 比如面试运维开发, 多准备系统, 数据库, 配置管理相关的知识, 比如web框架(除非了解到该职位需要)  &lt;/li&gt;
&lt;li&gt;及时关注python技能最新用法, 或者推荐用法. 多了解python3的趋势, 有可能会被面试官问到.  &lt;/li&gt;
&lt;li&gt;有个github账号. 能把自己的想法实践出来的python项目, 这样就多了了解你的机会. 可能在面试中就会少问你对应的技术点  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;收錄一下面試題目的連結們  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://programmers.stackexchange.com/questions/21917/python-interview-questions"&gt;http://programmers.stackexchange.com/questions/21917/python-interview-questions&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/sigmavirus24/python-interview-questions"&gt;https://github.com/sigmavirus24/python-interview-questions&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://gist.github.com/xiangzhuyuan/7454001522d275021b2d"&gt;https://gist.github.com/xiangzhuyuan/7454001522d275021b2d&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/ContinuumIO/interview-questions"&gt;https://github.com/ContinuumIO/interview-questions&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/Flowerowl/python_articles"&gt;https://github.com/Flowerowl/python_articles&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://marselester.com/preparation-to-python-interview.html"&gt;http://marselester.com/preparation-to-python-interview.html&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/zachwill/cracking-the-coding-interview"&gt;https://github.com/zachwill/cracking-the-coding-interview&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://www.bogotobogo.com/python/python_interview_questions.php"&gt;http://www.bogotobogo.com/python/python_interview_questions.php&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://www.quora.com/What-are-good-Python-interview-questions"&gt;https://www.quora.com/What-are-good-Python-interview-questions&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://www.reddit.com/r/Python/comments/1knw7z/python_interview_questions"&gt;https://www.reddit.com/r/Python/comments/1knw7z/python_interview_questions&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/1st/interview/blob/master/python.md"&gt;https://github.com/1st/interview/blob/master/python.md&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;还有2个中文:  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/taizilongxu/interview_python"&gt;https://github.com/taizilongxu/interview_python&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://gist.github.com/prim/3e7f814187c715541ef2"&gt;https://gist.github.com/prim/3e7f814187c715541ef2&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;tool&lt;/h3&gt;
&lt;p&gt;就一些檢測中國網路連線狀況的工具，&lt;br /&gt;
最近工作上再處理一個把網站架在中國網路的大客戶，&lt;br /&gt;
所以一直遇到跟中國網路有關的問題，&lt;br /&gt;
之後有空應該會整理成一篇文章吧。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tools.cloudxns.net/"&gt;首頁 --CloudXNS 運維工具箱_智能 DNS 運維工具箱_最好用的 DNS 檢測工具_永久免費&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://ping.chinaz.com/"&gt;多个地点Ping服务器,网站测速 - 站长工具&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.zhihu.com/question/35239964"&gt;宇宙中有哪些超出常人想像的現象？ - 自然科學 - 知乎&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最多人按讚的那個算是滿易懂的有關黑洞的天文科普吧。  &lt;/li&gt;
&lt;li&gt;想起高中科展做的有關黑洞的專題啊...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.mobile01.com/topicdetail.php?f=177&amp;amp;t=83330"&gt;蘋果週邊綜合 - 大家的電腦桌周邊是如何～分享一下吧＠＠ - 蘋果討論區 - Mobile01&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;我的天啊... 十年前的電腦配置的照片，好懷念啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Baseball/M.1457362742.A.F5B.html"&gt;Re: [問題] 為何陳金鋒是神?&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;雖然沒有很常看棒球但淚推 QQ  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/cowbeiNTHU/posts/1087778498001953"&gt;靠北清大&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇好中肯啊，只好附個截圖了。  &lt;/li&gt;
&lt;li&gt;&lt;img alt="靠北清大38597" src="/files/y2016w38/cowbeiNTHU38597.png" /&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cool.ptt01.cc/post_1213"&gt;10 年過了！當年「宋岳庭」打敗方文山和周杰倫的『Life's A Struggle』終於聽懂這首歌它在說什麼！，回頭才知道他早已不在人世... | &lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;真的好好聽啊，聽了以後就停不下來了。  &lt;/li&gt;
&lt;li&gt;公視人生劇展短篇影集《他們在畢業前一天爆炸》有出現這首歌，以前看的時候完全沒有注意到，這個週末耍廢花了一個下午重看一次，才發現這首歌原來這麼猛。  &lt;/li&gt;
&lt;li&gt;第一次聽到這麼清楚的 Rap，而且歌詞不是亂罵一堆有的沒的髒話，是對這個社會的諷刺還有個人的反思，可惜天妒英才。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ptt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/gossiping/M.1474389994.A.56D.html"&gt;Re: [問卦] 交大讀四年，母豬賽貂蟬？ - 看板 Gossiping - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;交大唸了四年，完全沒聽過虎二... 只好節錄一下了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;講到虎二喔?  &lt;/p&gt;
&lt;p&gt;那就來講虎二掘起的八卦吧。  &lt;/p&gt;
&lt;p&gt;話說男生多的地方必定要尻尻，沒有色情圖片也要有色情小說。  &lt;/p&gt;
&lt;p&gt;在民國八十年那個蠻荒時代，交大獨步全台，做為施振榮的母校，&lt;br /&gt;
網路大管電腦多，在別的學校網路只拉到計算機中心的時代，&lt;br /&gt;
交大就把網路拉到學生宿舍，在別的學校一個學校建一個 BBS 的&lt;br /&gt;
時代，交大就已經進入了一間房間四個 BBS 的光榮時代。  &lt;/p&gt;
&lt;p&gt;網路元年大家只能登入學校工作站，按學號找人 Talk。  &lt;/p&gt;
&lt;p&gt;要練英文。  &lt;/p&gt;
&lt;p&gt;所以當年的網路文章充滿了  &lt;/p&gt;
&lt;p&gt;ji31vu042y941ulgji 15j/ 1jp61531s/61m/415k415j/31z; 1z831&lt;br /&gt;
(我現在要說中文只能用這種方法)(注音輸入法)  &lt;/p&gt;
&lt;p&gt;這種只有聰明人才看得懂的密碼。  &lt;/p&gt;
&lt;p&gt;進入網路二年，全交大的年輕人矢志中文化，不論是中文化 VTerm&lt;br /&gt;
還是中文化 XWindow, 總之，想盡辦法講中文。  &lt;/p&gt;
&lt;p&gt;而有了網路就有論壇，最早當然就是 Mail List 與 USENEWS，&lt;br /&gt;
交大資工的學生很早就都使用 TIN/CTIN 在看 News, 學校的論壇&lt;br /&gt;
不是用 Notes 就是用 News；當然，最可怕的就是交大總計中&lt;br /&gt;
的 Notes 系統上的 Anonymous 板，那可是集中所有反政府學生&lt;br /&gt;
討論如何對抗學校當局的言論中心。  &lt;/p&gt;
&lt;p&gt;然後，在民國八十二年四月就發生了  &lt;/p&gt;
&lt;p&gt;「拒吃二餐快餐部運動」  &lt;/p&gt;
&lt;p&gt;與  &lt;/p&gt;
&lt;p&gt;「在環校道路上散步運動」  &lt;/p&gt;
&lt;p&gt;前者是為了對抗難吃到要命的交大二餐快餐部，結果就是運動當天晚上&lt;br /&gt;
快餐部營業額是 0 (相對的我在自助餐當工讀生夾菜夾到手快要斷掉..)  &lt;/p&gt;
&lt;p&gt;後者則是針對交大特有的「睦鄰行為」: 允許園區上下班汽機車通過交大&lt;br /&gt;
校園通勤卻禁止交大學生在校內騎機車。  &lt;/p&gt;
&lt;p&gt;結果當天在交大行政大樓前聚集了大約三四百名學生，讓計中主任都出來&lt;br /&gt;
說話:「我們絕對不會關掉 Note」.....  &lt;/p&gt;
&lt;p&gt;(當天晚上 Notes 系統就變成唯讀禁止發言，所謂交大校方的說話與國民黨&lt;br /&gt;
 政府的保證一樣完全是放P。)  &lt;/p&gt;
&lt;p&gt;好，沒有了 Notes,  BBS 興起了。  &lt;/p&gt;
&lt;p&gt;民國八十一年中山大學建置了西子灣 BBS 站。坦白說我同學當初介紹我用&lt;br /&gt;
的時候我還覺得它的介面靠北難用(不過跟現在 PTT 一樣)。不過呢，&lt;br /&gt;
連中山那個鄉下學校都有了 BBS ，交大怎能沒有?  &lt;/p&gt;
&lt;p&gt;所以那年春天在計中關閉了 Notes 系統之後，交大各系如雨後狗尿苔一樣&lt;br /&gt;
建立了各式BBS..........BBS一多，逛 BBS 就很不方便，每次都要登入&lt;br /&gt;
各個 BBS 去看文章。  &lt;/p&gt;
&lt;p&gt;於是我們系上就開始想到利用 News Server 把各大 BBS 的文章統一轉載，&lt;br /&gt;
也就是民國八十年代所謂的  &lt;/p&gt;
&lt;p&gt;連線板  &lt;/p&gt;
&lt;p&gt;而在那個法律管不到的時代呢，自然 SEX 板上就開始有人講色情話題，久了&lt;br /&gt;
之後女性不堪其擾屢屢找我們網管靠北，還說我們不處理就讓校方來處理....  &lt;/p&gt;
&lt;p&gt;開玩笑，讓校方處理跟關站沒啥兩樣。  &lt;/p&gt;
&lt;p&gt;於是，SEX 板就分流出一個 SEXSTORY 板，專放色情小說，提供登徒子們滿足&lt;br /&gt;
性幻想的園地。  &lt;/p&gt;
&lt;p&gt;一時間，連線 SEXSTORY 板成了最紅的板面。  &lt;/p&gt;
&lt;p&gt;人紅是非多，板紅有人找碴，沒多久交大資工系接獲政府公文說有人利用&lt;br /&gt;
學術網路刊載色情資訊違反善良風俗等廢話五千言，限時刪除。  &lt;/p&gt;
&lt;p&gt;此時，網路傳奇名人 Tiger 2 學弟就跳出來說:  &lt;/p&gt;
&lt;p&gt;「這樣吧，我捐一台電腦來放這些資料....」  &lt;/p&gt;
&lt;p&gt;於是全台最著名的地下 BBS 站，需要有人介紹才能找到 IP 登入的 Tiger 2&lt;br /&gt;
站就此誕生。  &lt;/p&gt;
&lt;p&gt;爾後此站幾度易手，學長傳學弟，一路不知所終，而 Tiger 2 學弟也去澳洲&lt;br /&gt;
開公司放牧綿羊好不快活，喝的酒都比俺的薪水還多。  &lt;/p&gt;
&lt;p&gt;回首前塵不覺已二十數年矣....................  &lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="django"></category><category term="docker"></category><category term="firefox"></category><category term="cli"></category><category term="htop"></category><category term="job"></category><category term="misc"></category><category term="programmer"></category><category term="ptt"></category><category term="python"></category><category term="taiwan"></category><category term="tol"></category><category term="tool"></category><category term="trivia"></category></entry><entry><title>Y2016W30</title><link href="https://blog.m157q.tw/posts/2016/08/01/y2016w30/" rel="alternate"></link><published>2016-10-14T13:36:52+08:00</published><updated>2016-10-14T13:36:52+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2016-08-01:posts/2016/08/01/y2016w30/</id><summary type="html">&lt;h3&gt;Gae&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/14458470/google-app-engines-ndb-get-an-entitys-id"&gt;google app engine's ndb: get an entity's id - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GAE 的 ndb 其實就是 Datastore 的 client。  &lt;/li&gt;
&lt;li&gt;因為最近在公司開發跟 GAE 有關的程式碼，想要從 Datastore 拿到資料的 ID，發現不知道怎麼拿，所以查了一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;複製貼上備忘一下  &lt;/p&gt;
&lt;p&gt;You can get the id with several ways provided you have the key.&lt;br /&gt;
Example with fetch or get:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;message = Message.query(Message.name==someName).fetch(1)[0]&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;message_id = message.key.id()&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;message = Message.query(Message.name==someName).get()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;message_id = message.key.id()&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;If you don't need the entity but only the id then you can save resources by getting only the key.  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;message_key = Message.query(Message.name==someName).fetch(1, keys_only=True)[0]&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;message_id = message_key.id()&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;message_key = Message.query(Message.name==someName).get(keys_only=True)&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;message_id = message_key.id()&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Keep in mind that you can get the key after a put as well:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;message_key = message.put()&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;message_id = message_key.id()&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;Gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/datastore/docs/apis/gql/gql_reference?hl=en_GB&amp;amp;_ga=1.75913941.1514764281.1456334755"&gt;GQL Reference|Cloud Datastore|Google Cloud Platform&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近要從 Datastore 裡頭拿資料出來，所以學了一下 GQL 的語法。  &lt;/li&gt;
&lt;li&gt;基本上跟 SQL 差不多。  &lt;/li&gt;
&lt;li&gt;但 Datastore 要注意的是，因為其本身是 NoSQL 的結構，所以要做 query 的話，其對應的 condition 必須要有 composite index 才行，所以要更改 &lt;code&gt;index.yaml&lt;/code&gt;，並且要 &lt;code&gt;update&lt;/code&gt;。一般來說使用官方提供的 GAE SDK 的 &lt;code&gt;dev_appserver.py&lt;/code&gt; 這個指令在 local 跑起測試的 GAE server 時，就會順便幫忙檢查，如果有用到新的 index 的話就會自動改寫 index.yaml 了，還算方便。  &lt;/li&gt;
&lt;li&gt;但要建 composite index 的話，跟該 composite index 相關的所有 columns 都要有 index，否則就無法成功建立，所以建議不要沒事把 datastore 對每個 column 預設開啟的 index 關掉，除非真的確定不會用到 query，否則哪天要加 composite index 的話會很麻煩。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Paper&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dl.acm.org/citation.cfm?id=584494"&gt;General approaches for implementing seamless handover&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近公司在做架構上的 migration，一直試圖想做到 zero downtime，有人就丟了這個名詞出來，查了一下，查到這篇論文。  &lt;/li&gt;
&lt;li&gt;原來就叫 "Seamless handover" 呀  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Joke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://imgur.com/KGrV41o"&gt;Harry speaks python - Imgur&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;寫 Python 的天天都在說爬說語。  &lt;/li&gt;
&lt;li&gt;然後爬說語的英文是 Parseltongue，爬說嘴的英文則是 Parselmouth。(&lt;a href="http://www.crown.com.tw/harrypotter/english/P.htm"&gt;source&lt;/a&gt;)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Paper"></category><category term="Joke"></category><category term="Gae"></category><category term="Job"></category><category term="Gcp"></category></entry><entry><title>我的新鮮人面試紀錄</title><link href="https://blog.m157q.tw/posts/2016/02/12/first-job-interviews/" rel="alternate"></link><published>2018-01-18T18:19:00+08:00</published><updated>2018-01-18T18:19:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2016-02-12:posts/2016/02/12/first-job-interviews/</id><summary type="html">&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;從去年 11/13 開始寫完我的 LinkedIn profile 後，算是開始找工作的起點。&lt;br /&gt;
但過沒多久就發現，LinkedIn 充其量只能當作參考，也不是必要的，最重要的還是 resume。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;LinkedIn 好難用，所以寫了個程式。&lt;/h3&gt;
&lt;p&gt;當時因為覺得 LinkedIn 很難用，&lt;br /&gt;
再加上花了不少時間寫 LinkedIn profile，懶的重寫一份 resume。&lt;br /&gt;
於是異想天開的寫了一個把 LinkedIn profile 轉成 markdown format 的工具:&lt;br /&gt;
&lt;a href="https://github.com/M157q/linkedin2md"&gt;linkedin2md&lt;/a&gt;&lt;br /&gt;
（2017/09/22: 這個 project 因為&lt;a href="https://github.com/M157q/linkedin2md/commit/297f1c3ca0c2d40add957fd735b8bf825268a38b"&gt;一些原因&lt;/a&gt;所以我不再維護了，程式已經不會動了。）&lt;br /&gt;
這樣我就可以偷懶直接用 LinkedIn 生一份 resume 出來。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;公司要的是 Resume，不是 CV。&lt;/h3&gt;
&lt;p&gt;結果當然是個悲劇，&lt;br /&gt;
因為 LinkedIn 上的形式比較像是 CV，紀錄你所有做過的事，&lt;br /&gt;
這對一份 resume 來說實在是太過於雜亂無章且毫無重點可言，&lt;br /&gt;
雖然跟我的經歷也有點關係就是，&lt;br /&gt;
因為一直就是有興趣的東西我就會去碰，所以容易給人一種鼯鼠五技而窮的感覺。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;覺得整理想去的公司好麻煩，乾脆整理在 GitHub 上&lt;/h3&gt;
&lt;p&gt;於是過了一個月，到了十二月中旬，&lt;br /&gt;
才把&lt;a href="https://github.com/M157q/resume/blob/8a70dabbea604ec780c247baa683b1df46d612d4/archives/version-1/resume.pdf"&gt;第一版英文履歷&lt;/a&gt;生了出來。&lt;br /&gt;
之後大概就是往 Web Backend 跟 DevOps 這兩個職位去找，&lt;br /&gt;
並把想投的公司及狀況紀錄在 &lt;a href="https://github.com/M157q/resume/issues"&gt;Issues · M157q/resume · GitHub&lt;/a&gt;。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;透過獵人頭找工作&lt;/h3&gt;
&lt;p&gt;然後又想到之前參加某個 Open Source 的 conf 時，&lt;br /&gt;
看到臺灣有家叫 &lt;a href="https://sudo.com.tw"&gt;sudo&lt;/a&gt; 的新公司，&lt;br /&gt;
專門在幫軟體工程師找工作，&lt;br /&gt;
基本上就是獵人頭這樣。&lt;br /&gt;
於是就到他們網站上用 GitHub 帳號登入，&lt;br /&gt;
把相關資料填一填跟履歷上傳後，&lt;br /&gt;
申請該平台上面的職缺。&lt;br /&gt;
（必須說這平台比 LinkedIn 簡單好用多了，雖然因為是新平台還有蠻多 bug 就是，&lt;br /&gt;
但我有反應的 bug 跟意見他們的工作人員都還蠻快就回覆然後請工程師解決。&lt;br /&gt;
而且 sudo 上的履歷支援 markdown 語法，光是這點我就覺得比 LinkedIn 好用了。&lt;br /&gt;
我一直覺得 LinkedIn 自訂的 description 不能用超連結，只能用純文字 URL 是件很扯的事。）  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;履歷寫的太爛，被慘電。&lt;/h3&gt;
&lt;p&gt;之後在去年十二月底收到第一個面試通知，&lt;br /&gt;
期間也一直在修改我的履歷，&lt;br /&gt;
尤其是在收到第一個面試通知之前，&lt;br /&gt;
跑去成大當面給 Jserv review 我的第一份 resume 被慘電 3 個小時，&lt;br /&gt;
著實獲益良多。&lt;br /&gt;
詳細內容則紀錄在 &lt;a href="/posts/2016/01/22/how-to-write-a-resume-for-programming-jobs/"&gt;程式設計師的履歷撰寫要點&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/M157q/resume/blob/8a70dabbea604ec780c247baa683b1df46d612d4/resume.pdf"&gt;最終版本的履歷在此&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;面試紀錄&lt;/h2&gt;
&lt;h3&gt;Tagtoo - 塔圖科技&lt;/h3&gt;
&lt;p&gt;這間是我在 sudo 上自己主動投的，&lt;br /&gt;
主要是之前參加 PyCon 知道這間的 CTO 是 PyCon 的 Staff 之一，&lt;br /&gt;
感覺進去應該可以很開心的寫 Python，&lt;br /&gt;
不過沒想到面試的時候才知道 CTO 已經把整個 team 都帶到另外一間新公司了。&lt;br /&gt;
（這又是另外一個故事了w）  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;應徵職位：Web Backend (Python) Engineer  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/resume/issues/10"&gt;https://github.com/M157q/resume/issues/10&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試時間：2015/12/30 16:00  &lt;/li&gt;
&lt;li&gt;面試地點：台北市光復南路 612 號 5 樓  &lt;/li&gt;
&lt;li&gt;面試官：Teddy (CEO)  &lt;/li&gt;
&lt;li&gt;面試過程  &lt;ul&gt;
&lt;li&gt;Teddy 跟我介紹 Tagtoo 的 Server 架構，說明公司內部會需要用到哪些東西，主要就網站後端用 Python, 前端基本的 JavaScript, HTML, CSS 可能會需要支援，但主要是後端開發。然後 CI 用 Travis, CD 用 Google Cloud Platform。大致介紹完後跟我說明 2016 年的目標是進軍東南亞的廣告市場，因為台灣的市場開發的差不多了，所以會有新的挑戰可以做。過程中都可以隨時提問，我對 server 的架構問了些問題。  &lt;/li&gt;
&lt;li&gt;之後問了我的兵役狀況，就把從常備役變免役的事敘述一遍。然後又問我為什麼沒繼續唸碩士，就把我看到很多學長姊進了 Lab 也沒辦法做自己有興趣的 Project，大部份都是接 Lab 裡的學長姊留下來的論文計劃，或是教授新接的計劃，甚至有些人連為什麼要唸碩士都沒有個明確的目標，就覺得大家都繼續唸上去，就跟著申請跟考試，有了就去唸，當然也有人是因為不想當兵想當研發替代役而唸。我坦白說我現階段對於唸碩士沒有什麼強烈的動機和意願，想先出來工作瞭解業界的情況和會用到的東西，再來看需要學什麼理論，一邊準備托福，之後考慮到美國發展。  &lt;/li&gt;
&lt;li&gt;然後提到了履歷，Teddy 說有先看過我的 GitHub (這點讓我當下小開心了一下) ，然後問我的履歷中印象最深刻及收穫最多的是哪一項，並描述這項事情的內容。我就選了大學時弄的專題，把專題的架構以及各個部份是在負責什麼功能，以及大致上是如何去實作的過程都講了。得到的回應是覺得我還不錯，因為面試過許多工程師都無法清楚描述自己做過的專案。  &lt;/li&gt;
&lt;li&gt;被問到「在做過的事情中，跟專業技能無關的部份遇到的最大困難是什麼？」。就提了大學專題在做上台報告的時候，因為做的東西是比較偏分析類，不像其他組有的做遊戲、有的做嵌入式等等，有成品可以 Demo，所以我這組在報告的時候就顯得頗枯燥乏味，於是深深體會到將專業技術清楚得表達是很重要的一件事。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結果  &lt;ul&gt;
&lt;li&gt;Offer Got  &lt;/li&gt;
&lt;li&gt;60 K * 13  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;17 Media (就做 17 App 的那家)&lt;/h3&gt;
&lt;p&gt;這間是 sudo 那邊把我的履歷投給他們看之後，&lt;br /&gt;
他們覺得有興趣，然後找我去面試的。&lt;br /&gt;
聽到是麻吉大哥的那間 17 App 我也蠻有興趣去面試的，&lt;br /&gt;
原本在他還沒聯絡我的時候我就有在 sudo 上看到，&lt;br /&gt;
但當時看到要寫 Node.js 我就沒打算投了。&lt;br /&gt;
畢竟我 Node.js 只有大學專題的時候自己寫一寫而已。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;應徵職位：API Backend Developer / Cloud System Admin （透過 sudo 投遞）  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/resume/issues/21"&gt;https://github.com/M157q/resume/issues/21&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試時間：2016/01/08 11:30  &lt;/li&gt;
&lt;li&gt;面試地點：台北市信義區信義路五段 2 號 6 F (震旦大樓)  &lt;/li&gt;
&lt;li&gt;面試官：Popo (CEO)  &lt;/li&gt;
&lt;li&gt;面試過程  &lt;ul&gt;
&lt;li&gt;早到五分鐘，不過會議桌好像有人在談生意，所以我就在沙發上稍微等了一下，順便觀察公司環境。環境蠻寬敞明亮的，員工彼此都是坐在好幾張大桌子上，沒有隔版。有大冰箱、一整櫃零食櫃還有咖啡機，放著員工自己想聽的音樂，基本上就是我喜歡的那種新創環境。  &lt;/li&gt;
&lt;li&gt;一開始 Popo 要我自我介紹，我就照履歷上列出來的事情每件稍微講了一下，我邊講他才邊點開連結看，感覺應該沒有事先看過。  &lt;/li&gt;
&lt;li&gt;之後問了我對 Node.js 的熟悉程度，就跟他說大學專題的時候我有自己稍微寫一下，但沒有到很熟。之後聊一聊就說如果之後進去的話，應該就是負責撰寫 API doc 跟調整 Node.js 的部份。  &lt;/li&gt;
&lt;li&gt;之後大致上就是一些閒聊，我也記得不太熟了，就有問他對於 17 App 前陣子染黃有什麼看法和應對，聽到一個我覺得還蠻有趣的答案。在新聞大幅報導過後，他們現在對於色情是完全禁止的，檢查的方法是透過程式定時去擷取實況用戶的畫面，再丟給 Machine Learning 去判斷是否有色情的成份，如果有的話會先暫時停止播放，再經由人工確認，如果確定是色情的話就會直接 ban 掉帳號。  &lt;/li&gt;
&lt;li&gt;然後聊一聊，聊到程序員鼓勵師，還聊到學到了一個新單字，聖人模式的英文叫 "Moment of Clarity"，不要問我為什麼會聊到這個www。走的時候還很讓我到冰箱挑了一瓶飲料，還不錯XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結果  &lt;ul&gt;
&lt;li&gt;無聲卡  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Akatsuki - 曉數碼&lt;/h3&gt;
&lt;p&gt;這間也是 sudo 幫我找的，是間日商，在台灣開辦公室。&lt;br /&gt;
真的要特別講一下這間，明明是間外商，也說不要求日文能力，&lt;br /&gt;
可是我交英文履歷過去後，sudo 那邊就跟我說這間的人資需要我交一份中文履歷。&lt;br /&gt;
當下聽到有點傻眼，想說中文履歷大概就這家會要而已，&lt;br /&gt;
而且光寫那份英文履歷就花了我好久的時間，要寫中文的話等於是要重寫，所以我就拒絕。&lt;br /&gt;
之後去面試我有當場確認，的確是這麼一回事，&lt;br /&gt;
人資表示如果確定進入二面的話，就一定得交中文履歷。&lt;br /&gt;
我有當場問原因，人資表示雖然是外商公司，但也不是每位員工都有辦法懂履歷上的英文。&lt;br /&gt;
（其實聽到這裡有點傻眼XDDD）  &lt;/p&gt;
&lt;h4&gt;第一階段&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;應徵職位：Application Engineer / Backend Server Engineer （透過 sudo 投遞）  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/resume/issues/22"&gt;https://github.com/M157q/resume/issues/22&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試時間：2016/01/11 14:00  &lt;/li&gt;
&lt;li&gt;面試地點：松山區南京東路四段16號7樓B  &lt;/li&gt;
&lt;li&gt;面試官：Kana (HR Manager, Eng), ??? (HR, 中文)  &lt;/li&gt;
&lt;li&gt;面試過程  &lt;ul&gt;
&lt;li&gt;兩位人資，一位負責英文面試，另外一位負責中文面試，但不是分開的，兩位會一起面試，所以是一對二這樣。不過老實說我好像是當天才知道要英文面試，忘記當時在忙什麼了，總之當天 sudo 的獵人頭 Jane 告知我面試是英文的，然後我也在當天查到 ptt 上有一位來面試過有發心得，說是要英文面試。不過我大概只有一點點小緊張，對自己的英文口說還算是有點自信，平常有在看美劇，通常只看英文字幕，偶爾有空會練練不看字幕，然後跟著學聽到的口語，雖然有點久沒講就是。（事後證明還是有點生疏XD）  &lt;/li&gt;
&lt;li&gt;英文面試的過程就先要求兩分鐘自我介紹，然後講自己履歷上的事情，然後提到自己的社團平常在做的事，討論課外和資工相關的話題，開社課推廣資訊教育。會去參加開源社群的聚會，認識業界的人士，瞭解開源界的一些最新議題。然後問我說有沒有玩過他們家的遊戲，還有平常有沒有玩手機遊戲或電玩的習慣。然後被問到自己最近 3 年的規劃，就講了下自己打算先工作，瞭解自己的能力與業界的狀況，然後一邊準備托福等等英文考試，之後打算有機會的話往國外發展，主要應該會是美國，但歐洲也有在考慮。之後又被問之後 10 年的計劃，其實也沒有很明確，就講說自己想透過工作確立自己想鑽研的領域，之後繼續不斷學習新的技術和吸收新的理論。  &lt;/li&gt;
&lt;li&gt;英文面試結束後是中文面試，問的內容其實差不多。（其實我不確定是不是中文面試的人資不太懂英文所以需要再問一次，但我也不好意思問。）有多問覺得自己的優缺點是什麼，我就回答自己是屬於那種可以自行摸索並研究實作方法的人，不像大多數同儕屬於被動式的學習。缺點的話就是在對話的當下有時候有些問題不會馬上發問，因為無法確定自己的問題是不是早就已經有答案但只是自己還沒找過。還有自己的個性有點木訥，跟人比較難熟，在團隊合作可能會有一些磨合期。（結果我一說到這裡兩位人資都笑說他們覺得我不像是這種人。是說用英文面試的那位人資經理是日本人，然後也懂中文，真的蠻厲害的。）  &lt;/li&gt;
&lt;li&gt;之後就問我有沒有什麼其他問題要問，我對於人資方面其實沒啥問題問，薪資、福利、工作環境、進修機會這些我其實沒有看的很重，我找的每間公司大概都不會差到哪去，也都是我可接受的範圍。主要還是想看看公司在做的事情我有沒有興趣，然後之後可以學到新的東西或接觸到新的事物的機會多不多。主要想問的還是偏技術和未來發展居多，不過人資就說這方面的問題他們比較無法回答。然後就問了他們覺得跟雷亞遊戲比起來的優缺點還有之後到日本出差或是工作的機會多不多這樣。  &lt;/li&gt;
&lt;li&gt;要離開之前我特地再確認了一次，如果要進入二面的話是不是一定得交中文履歷。人資跟我說「是的」，然後我就走出門了。話說辦公室真的蠻大的，在小巨蛋旁的金融大樓的其中一層，不過缺點就是金融業的抽煙人口真的超多，進出門口就全部都是二手菸，我完全無法忍受。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結果  &lt;ul&gt;
&lt;li&gt;不進入二階面試。原因是覺得我的技能樹跟他們公司的需求不符，還有覺得我稍嫌自信，未來如果進入公司可能在團隊合作上會有問題。  &lt;ul&gt;
&lt;li&gt;技能樹不太 match 的確是事實，不過稍嫌自信我當下怎麼想都想不透，後來覺得是中文履歷的問題，大概是因為我死都不肯寫個中文履歷，覺得之後公司有什麼要求我可能也會據理力爭的不照辦一些事情，會讓他們覺得很麻煩吧？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;但也是很感謝兩位人資花時間面試我，畢竟這是我人生第一個英文面試。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;VMFive&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;應徵職位：Cloud Engineer in Operation （透過 Referral）  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/resume/issues/14"&gt;https://github.com/M157q/resume/issues/14&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試時間： 2016/01/12 16:00  &lt;/li&gt;
&lt;li&gt;面試地點： 台北市大安區敦化南路二段 105 號 19 樓 B 室  &lt;ul&gt;
&lt;li&gt;這位置超尷尬的，在 4 個捷運站中間  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試官： HR, Patrick, Michael, ?  &lt;/li&gt;
&lt;li&gt;面試過程  &lt;ul&gt;
&lt;li&gt;人資面試  &lt;ul&gt;
&lt;li&gt;就一樣基本的自我介紹，然後人資請我舉出自己的優缺點各 3 個。  &lt;/li&gt;
&lt;li&gt;優點  &lt;ol&gt;
&lt;li&gt;自己有當過 mentor 的經驗  &lt;/li&gt;
&lt;li&gt;有給過演講的經驗而且評價還算不錯，算是能夠清楚的表達技術  &lt;/li&gt;
&lt;li&gt;對於有興趣的東西能夠自己花時間研究並找出實作方法。  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;缺點  &lt;ol&gt;
&lt;li&gt;當下有疑慮的時候不一定會馬上提問，可能會先思考後事後才會提問  &lt;/li&gt;
&lt;li&gt;學習東西的時候常常得瞭解來龍去脈並有一個明確的動機才會的卯起勁去學，否則就會覺得不太有興趣而不想投入時間  &lt;/li&gt;
&lt;li&gt;和人相處比較慢熟，而且不太擅長將事務交代給他人去做。  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;三位 Engineer 面試  &lt;ul&gt;
&lt;li&gt;這應該是我這些面試中最硬的一個面試，問的問題也是最精闢的。  &lt;/li&gt;
&lt;li&gt;一開始就問問我之前在系計中管系上 server 的相關經驗，但對他們公司來說應該不是個很有說服力的經驗，畢竟系上 server 的規模實在太小，而且管 server 的模式是一對一，實在跟真正外面公司在玩的一個人管多個 server 是不一樣的世界。  &lt;/li&gt;
&lt;li&gt;被問到一些問題紀錄一下  &lt;ol&gt;
&lt;li&gt;「如果今天要你一個人管 200 台 server 的話，你會怎麼管？」  &lt;/li&gt;
&lt;li&gt;「如果今天要做到根據流量即時增減 server ，而且無法知道新增加的 server 的 IP 的話，你會如何做到自動化佈署？」  &lt;/li&gt;
&lt;li&gt;「除了用預先設定好的 image 以外，有沒有其他更好的作法？」（因為我上一題回答直接佈署預先設定好的 image，直接跟 central node 溝通就好。）  &lt;/li&gt;
&lt;li&gt;「你對維運比較有興趣？還是開發新功能比較有興趣？」（主要是因為我在面試過程中回答的比較偏向 R&amp;amp;D 而不是 OP，但老實說我的確是對 R&amp;amp;D 要做的事比較有興趣。）  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結果  &lt;ul&gt;
&lt;li&gt;被出了個後試，就是上面的第 3 題，但自己回去考慮了一陣子後覺得之後不太想做純維運的工作，就回信感謝面試官花時間面試這樣。  &lt;/li&gt;
&lt;li&gt;這間是我面試的公司裏面，我覺得面試的最認真的一間公司，3 個 Engineer 不說，其中一位還是該 Team 的主管，而且問的問題我覺得都蠻有深度的，有些我真的不太熟，答不上來。他們很謹慎的選擇應徵者的能力，還有必須確認應徵者之後真的是想跟他們一起衝的，如果對自己的能力有信心而且對這間公司在做的事情有興趣的話，可以去應徵看看。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;CHOCOLABS - 歐酷網路&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;應徵職位：Cloud Engineer in Operation （透過 Referral）  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/resume/issues/23"&gt;https://github.com/M157q/resume/issues/23&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試時間： 2016/01/13  &lt;/li&gt;
&lt;li&gt;面試地點： 台北市民權東路三段 142 號 17 樓  &lt;ul&gt;
&lt;li&gt;新辦公室，我面試的時候才剛搬一個禮拜，裝潢都還沒好，印象最深刻的是有一整片的透明玻璃就面對著松山機場，有一排座位和桌子，可以讓你看著飛機起降 coding。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試官： Darren, Henry, Jerry （三位分開面試）  &lt;/li&gt;
&lt;li&gt;面試過程  &lt;ul&gt;
&lt;li&gt;專案總監 Darren 先跟我聊他們公司目前的狀況、裏面 App 的產品分類以及未來這年的目標。聊完後覺得是我面試中遇到對公司未來的藍圖最有想法的一位，對於公司裏面目前現有 App 的狀況以及之後的發展走向都蠻具體的。  &lt;/li&gt;
&lt;li&gt;首席架構師 Henry 則是問了一些技術相關的問題，大部份都蠻簡單的，例如：「git 有用過 checkout 和開過新的 branch 嗎？」、「你修過軟體工程，那有聽過瀑布開發或其他的開發方式嗎？」不過我在一些比較深入的研究所相關的課程比較吃虧，像被問到有沒有修過「分散式計算」、「機器學習」、「雲端系統」，我就只能摸摸鼻子說沒修過，但有在關注相關的技術。  &lt;/li&gt;
&lt;li&gt;CTO &amp;amp; co-founder Jerry 則是和我聊我如果進去他們公司的話會想要負責哪些部份、薪水、還有問我有沒有其他問題這樣。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;結果  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Offer got 最高給 50 K，但婉拒了。  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;當下是跟對方說回去考慮考慮，然後會再回信告知，後來就寄信婉拒了。雖然上班環境真的蠻棒的，而且因為是 App 團隊的關係，性別比例看起來頗均衡的，但主要是因為是寫 Node.js 我沒有特別喜歡也沒有到很熟，還有因為他們做了很多 App 的關係，讓我覺得之後可能會常常做一些重複性的事情（比如這支 App 寫完要寫下支 App 這樣，後端來講可能差別都不太大，比較有差的大概是前端設計的部份吧？），再加上 pay 略低於我自己的期望，所以就婉拒了這樣。  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;心得&lt;/h2&gt;
&lt;p&gt;人生第一次的面試，&lt;br /&gt;
感覺跟想像中的不太一樣，&lt;br /&gt;
原本腦海中想像的都是大公司那樣的面試，&lt;br /&gt;
必須要準備很多演算法跟資料結構相關的內容，&lt;br /&gt;
然後要過好幾關。  &lt;/p&gt;
&lt;p&gt;我想大概是因為我選的大多是新創的小公司關係吧，&lt;br /&gt;
主要是因為我自己也比較喜歡新創公司的氣氛，&lt;br /&gt;
聽過許多同學朋友在大公司實習或工作的狀況，&lt;br /&gt;
覺得實在沒有很喜歡。&lt;br /&gt;
雖然福利跟薪資就真的都比新創公司來的好，&lt;br /&gt;
自己對大公司的面試雖然沒有到很有把握，&lt;br /&gt;
但也不覺得自己的能力會輸同屆的，&lt;br /&gt;
但就真的不是很喜歡被當小螺絲和被限制要做什麼事情的感覺，&lt;br /&gt;
所以就在選面試公司的時候就挑工作內容自己有興趣的，&lt;br /&gt;
和覺得可以學到東西比較有發展性的新創公司。&lt;br /&gt;
主要是也比較喜歡新創公司自由的風氣啦，&lt;br /&gt;
無論是上下班時間或是請假制度等等。  &lt;/p&gt;
&lt;p&gt;覺得面試比自己想像中的順利很多，&lt;br /&gt;
也意識到自己有許多東西真的學的不夠扎實，&lt;br /&gt;
我想就是透過之後工作的時候邊做邊學吧，&lt;br /&gt;
沒學好的也要花時間來為自己補習一下。  &lt;/p&gt;
&lt;p&gt;不過面試的結果自己覺得倒沒有很好，&lt;br /&gt;
感覺台灣用 Python 的公司真的沒到很多，&lt;br /&gt;
網路業大概就還是 Node.js, PHP 和 Java 居多。&lt;br /&gt;
然後也沒辦法像 Soft_job 版的神人面試二十幾家公司，&lt;br /&gt;
覺得這樣實在是太累了，&lt;br /&gt;
正常來說應該還是挑大概三到五間自己真的有興趣的公司去面試，&lt;br /&gt;
我覺得比較適合，不會太累，找工作的時間也不會拖到太長。  &lt;/p&gt;
&lt;p&gt;是說有個獵人頭幫忙安排面試真的覺得比較輕鬆一點，&lt;br /&gt;
幾乎都不用自己去接洽 HR，&lt;br /&gt;
只要給自己有空的時間請獵人頭幫忙安排就行。&lt;br /&gt;
不過缺點大概就是會被推薦一些自己不是那麼想要的職缺，&lt;br /&gt;
但可以透過跟獵人頭的溝通解決這個問題就是，&lt;br /&gt;
也有可能意外發現自己沒注意到的好職缺也不一定，&lt;br /&gt;
雖然機率可能不高啦？&lt;br /&gt;
我是想說自己身為一個新鮮人，&lt;br /&gt;
多去累積一些不同公司的面試經驗也不錯，&lt;br /&gt;
所以聽聽職缺和在做的事後，&lt;br /&gt;
雖然自己可能覺得不是很 match 該公司的要求也會想去面試看看。&lt;br /&gt;
可能之後找下一份工作的時候就會比較 focus 在特定的範圍，&lt;br /&gt;
然後不透過獵人頭找工作也不一定。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;後記 (2016/05/16)&lt;/h2&gt;
&lt;p&gt;距離這篇文章發佈約莫過了 3 個月，&lt;br /&gt;
比較讓我訝異的是這篇跟我其他的文章比起來好像被頗多人看到的，&lt;br /&gt;
(Jane 跟我說她的同事丟了這篇文章給她看的當下我有點嚇到）&lt;br /&gt;
Google Analytics 看了一下，&lt;br /&gt;
總共 1,452 (565 unique) page views，&lt;br /&gt;
其中有 1,052 (395 unique) 是透過搜尋找到的，&lt;br /&gt;
當初寫這篇文章的時候比較著重在紀錄資訊給以後的自己看，&lt;br /&gt;
其實從大學以來寫 blog 一直都是給自己備忘用的，&lt;br /&gt;
並沒有想要專門寫給別人看，&lt;br /&gt;
但如果剛好能幫助到人也不錯。  &lt;/p&gt;
&lt;p&gt;原本以為這種短短幾個月就有點流量的應該是有人在社群網站 share 之類的，&lt;br /&gt;
但這篇我記得我並沒有 share 到我的 Facebook。&lt;br /&gt;
（我很少 share 自己的文章到自己的 Facebook，&lt;br /&gt;
雖然之前 share 過的幾次的確會讓我這平常沒啥人看的 blog 流量上升不少，&lt;br /&gt;
但其實上面也說了，這不太符合我寫 blog 的本意。）&lt;br /&gt;
沒想到竟然是透過搜尋而找到的佔了 2/3，&lt;br /&gt;
試著自己拿關鍵字去 Google 一下，&lt;br /&gt;
發現根本找不到啊 XDDD&lt;br /&gt;
到底是怎麼搜尋到這篇的？&lt;br /&gt;
是搜到出現有在文章裡面的公司名稱然後加上"面試"的關鍵字嗎？  &lt;/p&gt;
&lt;p&gt;總之，&lt;br /&gt;
能夠寫這麼長的一篇文得謝謝很多人：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;謝謝爸媽讓我在家裡當了快半年的啃老族。  &lt;/li&gt;
&lt;li&gt;謝謝 Jserv 花了一個下午跟我講了很多關於履歷撰寫、面試經驗以及出社會工作應該要具備的心態。  &lt;/li&gt;
&lt;li&gt;謝謝愚笨讓我下去台南找 Jserv 的時候有免費的地方可住。  &lt;/li&gt;
&lt;li&gt;謝謝 Sudo_ 的 Jane，幫了我很多忙，提供給我不少資訊，每個面試前也會打電話提醒我時間，面試後也會打電話來問我狀況如何。  &lt;/li&gt;
&lt;li&gt;謝謝 Tagtoo 的 Teddy 讓我在第一次面試就拿到 Offer 後，還願意等我等了將近一個月，讓我有機會可以多去不同間公司面試。  &lt;/li&gt;
&lt;li&gt;謝謝 Apua 讓我在剛上來台北市工作沒地方住的時候讓我借住了整整一個月，一分錢都沒跟我收。  &lt;/li&gt;
&lt;li&gt;謝謝大慶的 VMFive referral，花時間看了我的履歷，也讓我問了不少問題。  &lt;/li&gt;
&lt;li&gt;謝謝所有願意花時間面試我的人，每一次的面試對我來說都是寶貴的經驗。  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;後記 (2016/11/26)&lt;/h2&gt;
&lt;p&gt;Sudo_ 於 2016/11/20 吹熄燈號了。&lt;br /&gt;
沒想到才過不到一年，&lt;br /&gt;
變化竟然這麼大。&lt;br /&gt;
不禁也想問一下自己，&lt;br /&gt;
工作十個月了，&lt;br /&gt;
自己的能力增長幅度夠大嗎？  &lt;/p&gt;
&lt;p&gt;總之，&lt;br /&gt;
看來下次找工作得自己找了，&lt;br /&gt;
畢竟 LinkedIn 上遇到的 Head Hunter 感覺都普普，&lt;br /&gt;
有種亂槍打鳥的感覺。&lt;br /&gt;
然後我也不會想用傳統人力銀行的服務。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;後記 (2017/09/22)&lt;/h2&gt;
&lt;p&gt;因為以下幾個原因，&lt;br /&gt;
所以我停止維護 &lt;a href="https://github.com/M157q/linkedin2md"&gt;linkedin2md&lt;/a&gt; 這個小程式了。  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;LinkedIn 開始阻擋未登入的連線拿到公開的個人頁面資料  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://news.ycombinator.com/item?id=14891301"&gt;LinkedIn 聲稱未經許可蒐集該網站上個人資料視為違法行為&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;LinkedIn 的網頁格式已經改版許多  &lt;/li&gt;
&lt;li&gt;上面有提到這個小程式其實效用不是那麼大，因為產生出來的 CV 其實也不能直接拿來當作履歷投遞，所以我覺得不值得花時間繼續維護它。  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;就拿這個 &lt;a href="https://github.com/M157q/linkedin2md/commit/297f1c3ca0c2d40add957fd735b8bf825268a38b"&gt;commit&lt;/a&gt; 幫這個小程式畫下句點吧。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;後記 (2018/01/18)&lt;/h2&gt;
&lt;p&gt;在 2017 年 11 月底算是正式從自己的第一份工作離職了，&lt;br /&gt;
離職的心得紀錄在這篇：&lt;a href="/posts/2017/12/26/i-left-my-first-full-time-job/"&gt;我的新鮮人離職紀錄&lt;/a&gt;，&lt;br /&gt;
標題算是與這篇文章的標題呼應吧。  &lt;/p&gt;
&lt;p&gt;其實後來才知道前公司很多比我晚到職的同事都看過這篇文章，&lt;br /&gt;
其實每個人跟我講的當下我都滿開心的，&lt;br /&gt;
雖然我可能沒有喜形於色就是。&lt;br /&gt;
甚至有前同事跟我說「看到這篇文章，覺得這個人好像滿有趣的，如果可以共事應該不錯。」&lt;br /&gt;
總之，如果是要一起當同事的話，&lt;br /&gt;
請敬請期待下一篇面試文章囉，&lt;br /&gt;
最近開始在找工作了。&lt;br /&gt;
之後這篇應該就不會有新的後記了吧 XD  &lt;/p&gt;</summary><category term="interview"></category><category term="resume"></category><category term="job"></category></entry></feed>