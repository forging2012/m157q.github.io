<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Just for noting</title><link href="https://blog.m157q.tw/" rel="alternate"></link><link href="https://blog.m157q.tw/feeds/tag.programming-job.atom.xml" rel="self"></link><id>https://blog.m157q.tw/</id><updated>2016-09-09T12:40:59+08:00</updated><entry><title>《程序員面試攻略》第三版（簡中）</title><link href="https://blog.m157q.tw/posts/2016/09/09/programming-interviews-exposed-third-edition/" rel="alternate"></link><published>2016-09-09T12:40:59+08:00</published><updated>2016-09-09T12:40:59+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2016-09-09:posts/2016/09/09/programming-interviews-exposed-third-edition/</id><summary type="html">&lt;p&gt;&lt;img alt="front cover" src="/files/programming-interviews-exposed-third-edition/front_cover.jpg" /&gt;&lt;br /&gt;
&lt;img alt="back cover" src="/files/programming-interviews-exposed-third-edition/back_cover.jpg" /&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;又是一本買了很久才看完的書，&lt;br /&gt;
這本書沒記錯的話應該是大學還沒畢業的時候就買了。&lt;br /&gt;
應該是大四的時候，&lt;br /&gt;
逛清大對面的若水堂看到這本，&lt;br /&gt;
翻了一下覺得內容還不錯就買了。  &lt;/p&gt;
&lt;p&gt;直到去年準備要找工作的時候才開始看，&lt;br /&gt;
仍舊是用我那龜速的看速度。&lt;br /&gt;
我印象最深的就是去年底跑去台南的時候也帶著這本書在看，&lt;br /&gt;
jserv 安排了一天三場分別由 MediaTek, Google, Facebook 的工程師演講那天，&lt;br /&gt;
中午聚餐吃完飯在等待的時間拿出來看，&lt;br /&gt;
然後就被 jserv 嗆：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不要再看什麼書了啦，&lt;br /&gt;
裝什麼認真，&lt;br /&gt;
旁邊有這麼多強者現場就可以問，&lt;br /&gt;
還不趕快去找他們聊天，&lt;br /&gt;
有什麼想問的就趕快問，&lt;br /&gt;
這是書上學不到的經驗，&lt;br /&gt;
書自己找時間再看就好啦，&lt;br /&gt;
懂嗎？  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直到現在猶如當頭棒喝。  &lt;/p&gt;
&lt;p&gt;然後這本書在我找到工作後就這麼擱著，&lt;br /&gt;
直到最近才又拿出來閱讀，&lt;br /&gt;
然後在上個月 25 號讀完了。&lt;br /&gt;
至於為什麼會拿出來看，&lt;br /&gt;
那又是另外一個故事了。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;紀錄&lt;/h2&gt;
&lt;p&gt;我覺得這本書大略可以分成 3 個部份：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第 0~3 章  &lt;ul&gt;
&lt;li&gt;介紹求職應該有什麼樣的心態、注意事項以及面試時回答問題和談薪水的技巧。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 4~13 章  &lt;ul&gt;
&lt;li&gt;基本的資訊學科相關問題，包含：Linked List, Tree, Graph, Array, String, Recursion, Sorting, Concurrency, Object-Oriented, Design Pattern, Database, Bitwise operation.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 14~17 章和附錄  &lt;ul&gt;
&lt;li&gt;一些估算與智力測驗相關還有非技術性的問題（為了瞭解人格特質是否適合團隊）。然後附錄是如何撰寫 Resume 的範例，有給出改過前後的對比以及講說大概要怎麼寫。  &lt;/li&gt;
&lt;li&gt;但第 16 章又回到比較技術性的問題，主要是在做一些名詞解釋以及比較的問答。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;之前是看到 Sorting 的部份，&lt;br /&gt;
最近才從 Concurrency 的部份繼續看完。&lt;br /&gt;
個人覺得裡頭提到的技術相關問題真的都算蠻基本的題目，&lt;br /&gt;
畢竟也沒有深入到問些 Operating System, Computer Architecture, Compiler 底層實作和效能比較相關的問題，&lt;br /&gt;
至於第 16 章針對各種不同的名詞解釋並比較其優缺點，&lt;br /&gt;
列出來的內容也算蠻基本的，&lt;br /&gt;
我覺得也算是面試中常常會被問到的問題。  &lt;/p&gt;
&lt;p&gt;然後我自己覺得收穫比較多的應該算是一些非技術性的部份，&lt;br /&gt;
像是第一部份提到的，&lt;br /&gt;
關於找工作的心態、談薪水的技巧、解程式問題時的思路還有該如何跟面試官討論等等，&lt;br /&gt;
還有第三部份講到一些智力測驗問題的估算還有人格特質會影響拿不拿得到 offer 等等。  &lt;/p&gt;
&lt;p&gt;至於附錄的履歷撰寫部份，&lt;br /&gt;
因為之前找工作的時候有紀錄了一篇 &lt;a href="/posts/2016/01/22/how-to-write-a-resume-for-programming-jobs/"&gt;程式設計師的履歷撰寫要點&lt;/a&gt;，&lt;br /&gt;
個人覺得講的差不多，&lt;br /&gt;
所以就沒有細看。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;這本書我覺得無法拿來準備些技術性比較深的面試，&lt;br /&gt;
然後偏 Web front-end 跟 App 開發的人可能也比較不太適合看這本書，&lt;br /&gt;
因為很多東西可能不需要用到，&lt;br /&gt;
但就看面試的公司會出什麼樣的題目吧。&lt;br /&gt;
（前陣子也是看到一堆美國的公司在找網頁前端開發人員要考演算法、資料結構的）  &lt;/p&gt;
&lt;p&gt;至於比較偏 Operation System, Computer Architecture, Compiler 這塊的人，&lt;br /&gt;
看這本書的技術性相關的部份應該會覺得非常簡單，&lt;br /&gt;
所以比較有收穫的應該會是關於非技術性的面試技巧的部份吧。  &lt;/p&gt;
&lt;p&gt;總之這本書我最近應該會再快速翻閱一次就是。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所以結論是這本書大概就是給我這種基礎學科沒學好的人來複習用的 (?)  &lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="Interview"></category><category term="Programming Job"></category></entry></feed>