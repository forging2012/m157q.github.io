<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Just for noting</title><link href="https://blog.m157q.tw/" rel="alternate"></link><link href="https://blog.m157q.tw/feeds/tag.data-science.atom.xml" rel="self"></link><id>https://blog.m157q.tw/</id><updated>2017-03-13T12:48:00+08:00</updated><entry><title>Y2017W08</title><link href="https://blog.m157q.tw/posts/2017/02/27/y2017w08/" rel="alternate"></link><published>2017-03-13T12:48:00+08:00</published><updated>2017-03-13T12:48:00+08:00</updated><author><name>M157q</name></author><id>tag:blog.m157q.tw,2017-02-27:posts/2017/02/27/y2017w08/</id><summary type="html">&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotblogs.com.tw/hatelove/2017/01/26/dead-fish-smell-by-reading-understanding-patterns-of-project-behavior"&gt;[遛書]項目百態－死魚&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;data science&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://36kr.com/p/5064677.html"&gt;大數據技術在預測性營銷上的實踐9個問題&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;devops&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/chickenwu/web-application-72464042"&gt;大型 Web Application 轉移到微服務的經驗分享&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chengl.com/kubectl-authentication-made-simple/"&gt;kubectl Authentication Made Simple&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/acme"&gt;google/acme: A simple ACME command line tool without 3rd party deps!&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;ACME-complient Go client library and a command line tool. Neither has 3rd party dependencies. Also, see https://letsencrypt.org.  This package is a work in progress and makes no API stability promises.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Google 用 golang 寫了一個 Let's Encrypt 的 CLI client.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;kswapd&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=144702"&gt;kswapd using 100% CPU, I don't even have swap. / Kernel &amp;amp; Hardware / Arch Linux Forums&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This process kswapd (kswapd0, actually) suddenly starts using 100% of one of my cores for no good reason, usually when moving many GBs around, but sometimes for no good reason at all.  I have no swap.  It also prevents the computer from sucessfully suspending.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;kswapd 會在記憶體用盡的時候佔據大量的 CPU 資源，導致速度變得很慢。  &lt;/li&gt;
&lt;li&gt;如果遇到的話可以透過 &lt;code&gt;sudo sh -c "sync; echo 3 &amp;gt; /proc/sys/vm/drop_caches"&lt;/code&gt; 這個指令來釋放佔據記憶體的 Cache  &lt;/li&gt;
&lt;li&gt;參考資料  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://linux-mm.org/Drop_Caches"&gt;https://linux-mm.org/Drop_Caches&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gtwang.org/linux/linux-cache-memory-linux/"&gt;https://blog.gtwang.org/linux/linux-cache-memory-linux/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2010/10/linux-cached-memory-release-2010/"&gt;https://blog.longwin.com.tw/2010/10/linux-cached-memory-release-2010/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://huenlil.pixnet.net/blog/post/26822270-%5B%E8%BD%89%5D-%E9%87%8B%E6%94%BElinux%E8%A8%98%E6%86%B6%E9%AB%94"&gt;http://huenlil.pixnet.net/blog/post/26822270-%5B%E8%BD%89%5D-%E9%87%8B%E6%94%BElinux%E8%A8%98%E6%86%B6%E9%AB%94&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;movie&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jacky.seezone.net/2017/02/02/8636/"&gt;《Arrival》的宇宙觀› 網絡暴民Jacky's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看來原著小說好像值得一看  &lt;/li&gt;
&lt;li&gt;電影似乎省略不少細節？  &lt;/li&gt;
&lt;li&gt;原著小說中文翻譯版：&lt;a href="https://krantasblog.blogspot.tw/2016/06/story-of-your-life.html"&gt;https://krantasblog.blogspot.tw/2016/06/story-of-your-life.html&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.susanjfowler.com/blog/2017/2/19/reflecting-on-one-very-strange-year-at-uber"&gt;Reflecting on one very, very strange year at Uber — Susan J. Fowler&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;As most of you know, I left Uber in December and joined Stripe in January. I've gotten a lot of questions over the past couple of months about why I left and what my time at Uber was like.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;在 Uber 待了一年的女性工程師爆料 Uber 裡頭對於女性工程師有多麼的不友善，主管的性騷擾、HR 的漠視以及發現其他女性工程師也有遇到同樣的問題進而到大量女性工程師離職等等，非常的誇張。  &lt;/li&gt;
&lt;li&gt;Uber 在技術方面沒話說，但是在法律以及工作文化方面只怕已是聲名狼籍，剛好還搭上在台灣因為無法配合法律問題而暫停營業的風潮，所以這篇也被台灣許多科技媒體轉發。  &lt;/li&gt;
&lt;li&gt;也因為這件事，之後也有非常多的 Uber 工程師提出離職申請。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PolicyStat/terrarium"&gt;GitHub - PolicyStat/terrarium: Package and ship relocatable python virtualenvs, like a boss.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用這個打包環境 佈署時就不用等 pip 不錯  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CloudBleed 系列  &lt;ul&gt;
&lt;li&gt;Google Project Zero 的 Taviso 回報漏洞  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://bugs.chromium.org/p/project-zero/issues/detail?id=1139"&gt;1139 - cloudflare: Cloudflare Reverse Proxies are Dumping Uninitialized Memory - project-zero - Monorail&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;(It took every ounce of strength not to call this issue "cloudbleed")  Corpus distillation is a procedure we use to optimize the fuzzing we do by analyzing publicly available datasets. We've spoken a bit about this publicly in the past, for example:  https://security.googleblog.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CloudFlare 官方詳細說明  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.cloudflare.com/incident-report-on-memory-leak-caused-by-cloudflare-parser-bug/"&gt;Incident report on memory leak caused by Cloudflare parser bug&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Last Friday, Tavis Ormandy from Google’s Project Zero contacted Cloudflare to report a security problem with our edge servers. He was seeing corrupted web pages being returned by some HTTP requests run through Cloudflare.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有人稍微整理了一下該如何處理這件事  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@octal/cloudbleed-how-to-deal-with-it-150e907fd165"&gt;Cloudbleed: How to deal with it – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有人列出了使用 CloudFlare 服務的網站名單（不一定但有可能受影響）  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pirate/sites-using-cloudflare"&gt;GitHub - pirate/sites-using-cloudflare: List of domains using Cloudflare DNS (potentially affected by the CloudBleed HTTPS traffic leak)&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;檢測網站是不是有使用 CloudFlare  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.doesitusecloudflare.com"&gt;http://www.doesitusecloudflare.com&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Google 系列  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://security.googleblog.com/2017/02/announcing-first-sha1-collision.html"&gt;Google Online Security Blog: Announcing the first SHA1 collision&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Cryptographic hash functions like SHA-1 are a cryptographer’s swiss army knife. You’ll find that hashes play a role in browser security, managing code repositories, or even just detecting duplicate files in storage. Hash functions compress large amounts of data into a small message digest.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;已經確定找到 SHA-1 碰撞的演算法了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2017/01/7-ways-we-harden-our-KVM-hypervisor-at-Google-Cloud-security-in-plaintext.html"&gt;Google Cloud Platform Blog: 7 ways we harden our KVM hypervisor at Google Cloud: security in plaintext&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/keybase/client"&gt;GitHub - keybase/client: Keybase Go Library, Client, Service, OS X, iOS, Android, Electron&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;keybase.io 似乎把 PGP key 傳遞這件事做到簡單易用了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitleaks.com/"&gt;GitLeaks - Search Engine for exposed secrets on the web&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個好歡樂啊  &lt;/li&gt;
&lt;li&gt;不過目前好像只有蒐集 GitHub 上的  &lt;/li&gt;
&lt;li&gt;之後預計加入其他來源  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FallibleInc/security-guide-for-developers"&gt;GitHub - FallibleInc/security-guide-for-developers: Security Guide for Developers (实用性开发人员安全须知)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;A practical security guide for web developers (Work in progress) The intended audience Security issues happen for two reasons - Developers who have just started and cannot really tell a difference between using MD5 or bcrypt. Developers who know stuff but forget/ignore them.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hungtraan/FacebookBot"&gt;GitHub - hungtraan/FacebookBot: A Facebook Messenger Bot that supports Voice Recognition, Natural Language Processing and features such as: search nearby restaurants, search trending news, transcribe and save memos to the cloud.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Optimist Prime is a Facebook Messenger Bot that supports Voice Recognition, Natural Language Processing and features such as: search nearby restaurants, search trending news, transcribe and save memos to the cloud.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;看起來就是把各種平台的 API 串起來，IBM 的 Waston 等等。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://taobaofed.org/blog/2017/02/16/a-guide-to-api-design/index.html"&gt;從達標到卓越 —— API 設計之道 | Taobao FED | 淘寶前端團隊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;新技术层出不穷，长江后浪推前浪，而浪潮褪去后能留下来的，是一些经典的设计思想。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/TaiwanPassportSticker/photos/a.1465798763729893.1073741828.1465796757063427/1635278683448566/?type=3&amp;amp;theater"&gt;【實驗：Republic of中國不喜歡台灣貼紙 那麼貼中國共產黨黨徽貼紙呢？】... - 台灣國護照貼紙 Taiwan Passport Sticker | Facebook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;中華民國的護照貼台灣國貼紙過海關會被欄，但是貼共產黨黨徽完全沒事唷。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Gossiping/M.1487699803.A.053.html"&gt;[問卦] 還記得中國用語入侵前的用詞嗎&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;文化入侵 QQ  &lt;/li&gt;
&lt;li&gt;媒體都一堆中資了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shaohui.simpleinfo.cc/more/"&gt;全能古蹟燒燬王 - 你知道嗎？在台灣，平均每個月都會有歷史建物「離奇失火」&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/photo.php?fbid=10211125434633061&amp;amp;set=a.1237143290030.37008.1272688531&amp;amp;type=3&amp;amp;theater"&gt;Yen Jing Bo - 「台灣不用急著手機支付，應該先把信用卡支付做好」 今天早上又看到一篇講中國手機支付好棒棒的文...&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thinkingtaiwan.com/content/6057"&gt;【人心人術】在二二八中消逝的台灣第一位留美博士：林茂生 | 想想論壇&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;台灣第一位留美哲學博士林茂生，一生都為台灣的教育和文化努力；原本終於盼望到「台灣光復」的這一刻，卻沒想到，不久之後，他成了消失在島嶼上的台灣菁英之一......  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.ho600.com"&gt;到 何六百工作(遠端徵1~2人)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這間公司的徵才文案寫的挺用心也挺狂的就是  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3vxmvTXz6EM"&gt;商戰與談判 - ER講堂第０課 - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這影片真精彩  &lt;/li&gt;
&lt;li&gt;上半場拿 World Gym vs 統一集團 和 書亞集成 vs 台智卡 的案例，講商場上小蝦米要怎麼搏大鯨魚。  &lt;/li&gt;
&lt;li&gt;下半場拿 Paganini+ 和 和沛科技 的案例，講成功經營個人品牌的大神們背後不為人知的一面。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="blog"></category><category term="data science"></category><category term="devops"></category><category term="gcp"></category><category term="golang"></category><category term="kswapd"></category><category term="misc"></category><category term="movie"></category><category term="news"></category><category term="python"></category><category term="security"></category><category term="taiwan"></category><category term="web"></category></entry><entry><title>視訊訊號處理與深度學習應用</title><link href="https://blog.m157q.tw/posts/2016/04/23/video-signal-processing-and-the-application-of-deep-learning/" rel="alternate"></link><published>2016-04-24T14:43:00+08:00</published><updated>2016-04-24T14:43:00+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2016-04-23:posts/2016/04/23/video-signal-processing-and-the-application-of-deep-learning/</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dsc.kktix.cc/events/video-signal"&gt;http://dsc.kktix.cc/events/video-signal&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://datasci.tw/event/vision_and_learning/"&gt;http://datasci.tw/event/vision_and_learning/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Slides: &lt;a href="http://www.slideshare.net/tw_dsconf/ss-61255961"&gt;http://www.slideshare.net/tw_dsconf/ss-61255961&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/0B9cCeTKOkfWITllMazh2a0ctZVk/view?usp=sharing"&gt;備份&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;【判讀】電腦視覺簡介&lt;/h1&gt;
&lt;h2&gt;Real Cases in Computer Vision&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Character Recognition (LeNet)  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4LxlhoemR3A"&gt;Microsoft PhotoSynth&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ohmajJTcpNk"&gt;Video Reenactment&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Auto Driving  &lt;ul&gt;
&lt;li&gt;Autonomous Cars - NVIDIA Drive PX2  &lt;ul&gt;
&lt;li&gt;Object class recognition  &lt;/li&gt;
&lt;li&gt;Semantic Segmentation  &lt;ul&gt;
&lt;li&gt;分辨出哪裡是車子可以開的地方  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Radar  &lt;ul&gt;
&lt;li&gt;用雷射去掃周邊的環境，可以很快速的去辨認，但跟電腦視覺比較無關。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;電子後照鏡  &lt;ul&gt;
&lt;li&gt;解決視線死角問題  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=gUIKtqyUIo8"&gt;Grandma rides a Tesla&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Trip Wire  &lt;/li&gt;
&lt;li&gt;Loitering  &lt;/li&gt;
&lt;li&gt;People Count  &lt;/li&gt;
&lt;li&gt;Speed Test  &lt;ul&gt;
&lt;li&gt;不用都卜勒雷達算，直接用影像計算。  &lt;/li&gt;
&lt;li&gt;不小心歪掉就不準了，所以大家知道怎麼躲這種測速了吧 （XDD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Smart Daily  &lt;ul&gt;
&lt;li&gt;用監視器的影像辨認人臉打卡。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Smart Fast Forward (Skywatch 的產品)  &lt;ul&gt;
&lt;li&gt;用影像辨識來判斷農舍監視器畫面中哪些時間是有人的，主要是用來定期追蹤是否有記得噴灑農藥。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Structure from motion  &lt;/li&gt;
&lt;li&gt;3D Reconstruction  &lt;/li&gt;
&lt;li&gt;Person tracking  &lt;/li&gt;
&lt;li&gt;Face detection  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Relationship to Data Science?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rich info, lots of data (in terms of bits)  &lt;/li&gt;
&lt;li&gt;Unstructured, usually without much context / semantics  &lt;/li&gt;
&lt;li&gt;Difficult to process and query  &lt;/li&gt;
&lt;li&gt;We are generating them every day  &lt;ul&gt;
&lt;li&gt;要變成人類歷史的一部份，轉化成可搜尋的話，是個問題。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;A Brief History of Computer Vision&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1966, Marvin Minsky  &lt;ul&gt;
&lt;li&gt;50 年過後，我們還沒完全解決這個問題。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;1960's: Interpretation of Synthetic Worlds  &lt;ul&gt;
&lt;li&gt;Larry Roberts (Father of Computer Vision)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;1970's: Some progress on interpreting selected images  &lt;/li&gt;
&lt;li&gt;1980's: AI Winter ... back to basics  &lt;ul&gt;
&lt;li&gt;1984: Perceptual Organization and Visual Recognition, David Lowe  &lt;/li&gt;
&lt;li&gt;Blending  &lt;/li&gt;
&lt;li&gt;Shape from shading  &lt;ul&gt;
&lt;li&gt;用三角函數找出反光的角度建模  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Edge Detection  &lt;/li&gt;
&lt;li&gt;From Science to Engineering  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;1990's: structure, segmentation and face recognition  &lt;/li&gt;
&lt;li&gt;2000's: more object classes, computational photography, video processing  &lt;ul&gt;
&lt;li&gt;重新對焦的照相機  &lt;/li&gt;
&lt;li&gt;Texture Sythesis  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2010's: Deep Learning is Back!!  &lt;ul&gt;
&lt;li&gt;AlexNet NIPS 2012  &lt;/li&gt;
&lt;li&gt;DeepFace CVPR 2014  &lt;/li&gt;
&lt;li&gt;DeepPose CVPR 2014  &lt;/li&gt;
&lt;li&gt;Show, Attend and Tell ICML 2015  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Basic parts of Computer Vision&lt;/h2&gt;
&lt;h3&gt;Reference Books&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;"Multiple View Geometry in Computer Vision", Richard Hartley and Andrew Zisserman  &lt;ul&gt;
&lt;li&gt;A good book to get started on camera geometry  &lt;/li&gt;
&lt;li&gt;More math heavry but very old school  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://szeliski.org/Book/"&gt;"Computer Vision: Algorithms and Applications", Richard Szeliski&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;More balanced mix between math and application  &lt;/li&gt;
&lt;li&gt;Freely available online.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Image Formation and 2D Image Processing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Image formation  &lt;ul&gt;
&lt;li&gt;照相原理：散射會造成無法成像，所以透過針孔（作為 barrier），使其成像。  &lt;ul&gt;
&lt;li&gt;缺點  &lt;ul&gt;
&lt;li&gt;光線不足，所以很暗  &lt;/li&gt;
&lt;li&gt;針孔太大的話，成像會變模糊，所以加上透鏡輔助。  &lt;ul&gt;
&lt;li&gt;Circle of Confusion  &lt;ul&gt;
&lt;li&gt;有散景表示你的鏡頭光圈夠大，代表你是有錢人。 XDD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Modeling Projection  &lt;ul&gt;
&lt;li&gt;The coordinate system  &lt;ul&gt;
&lt;li&gt;Homogeneous Coordinations  &lt;ul&gt;
&lt;li&gt;3D 轉 2D  &lt;/li&gt;
&lt;li&gt;4D 轉 3D  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Projection equations  &lt;/li&gt;
&lt;li&gt;Camera parameters  &lt;ul&gt;
&lt;li&gt;外部參數(extrinsics)  &lt;/li&gt;
&lt;li&gt;內部參數(intrinsics)  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://ai.stanford.edu/~saumitro/projektiv/"&gt;http://ai.stanford.edu/~saumitro/projektiv/&lt;/a&gt; 可以透過這個網址來瞭解外部參數和內部參數實際上的影響  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Distortion （扭曲）  &lt;ul&gt;
&lt;li&gt;Types  &lt;ul&gt;
&lt;li&gt;Pin Cushion Distortion（針包）  &lt;/li&gt;
&lt;li&gt;Barrel Distortion （木桶）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Camera Calibration （攝影機校正）  &lt;ul&gt;
&lt;li&gt;使用時機：把扭曲移除、改變照片的角度、要辨認轉了角度的物件畫面 (Low Level Projection)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tilt-shift  &lt;ul&gt;
&lt;li&gt;Digital Color Images  &lt;ul&gt;
&lt;li&gt;Bayer Filter  &lt;ul&gt;
&lt;li&gt;人對綠色比較敏感，對藍色比較不敏感。  &lt;/li&gt;
&lt;li&gt;彩色的照片是 3 個黑白的 RGB 疊加起來  &lt;/li&gt;
&lt;li&gt;Many early algorithms use greyscale instead of color images, Why?  &lt;ul&gt;
&lt;li&gt;早期只有灰階照片  &lt;/li&gt;
&lt;li&gt;彩色會有偏差  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Image Filtering  &lt;ul&gt;
&lt;li&gt;Sliding Window  &lt;/li&gt;
&lt;li&gt;Sharpening filter (Unsharp Mask)  &lt;/li&gt;
&lt;li&gt;Vertical Edge  &lt;/li&gt;
&lt;li&gt;Horizontal Edge  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Epipolar geomerty and stereo matching&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Recovering structure from a single view  &lt;ul&gt;
&lt;li&gt;Intrinsic ambiguity of the mapping from 3D to image (2D)  &lt;/li&gt;
&lt;li&gt;2D 是無法直接確定物體距離與深度的，必須用兩個眼睛來看，三角定位。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Epipolar_geometry"&gt;Epipolar geomerty&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Parallel Images Plane  &lt;/li&gt;
&lt;li&gt;Forward translation  &lt;/li&gt;
&lt;li&gt;Epipolar line  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=sKJeTaIEldM"&gt;The "Vertigo" Effect&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Epipolar Constraint (F)  &lt;ul&gt;
&lt;li&gt;Estimating F  &lt;ul&gt;
&lt;li&gt;The Eight-Point Algorithm  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fundamental Matrix 很重要！  &lt;/li&gt;
&lt;li&gt;Rectification  &lt;ul&gt;
&lt;li&gt;Your basic stereo algorithm  &lt;/li&gt;
&lt;li&gt;Triangulation  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Depth Map Results  &lt;/li&gt;
&lt;li&gt;Active stereo with structured light  &lt;ul&gt;
&lt;li&gt;Data Acquisition  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Structure from motion and tracking&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Finding Path Through the World's Photos  &lt;/li&gt;
&lt;li&gt;Pose Estimation  &lt;/li&gt;
&lt;li&gt;Structure from motion  &lt;ul&gt;
&lt;li&gt;Tracking  &lt;ul&gt;
&lt;li&gt;找特徵點去追蹤，然後解出結構。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Stitching and computational photography&lt;/h3&gt;
&lt;p&gt;如何把一堆照片合起來變成一張大照片  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Image Mosaics  &lt;/li&gt;
&lt;li&gt;Recognizing Panormas  &lt;/li&gt;
&lt;li&gt;De-Ghosting  &lt;ul&gt;
&lt;li&gt;Cutout-based de-ghosting  &lt;ul&gt;
&lt;li&gt;Cutout-based compositing  &lt;/li&gt;
&lt;li&gt;Photomontage  &lt;/li&gt;
&lt;li&gt;可以把好幾張裏面有不同人閉眼的照片合成一張沒有人閉眼的照片。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Poisson Image Editing  &lt;ul&gt;
&lt;li&gt;Possion Equation: 微分、微分、再積分  &lt;/li&gt;
&lt;li&gt;照片合成特效  &lt;/li&gt;
&lt;li&gt;Seamless Poisson cloning  &lt;/li&gt;
&lt;li&gt;Face Cloning  &lt;/li&gt;
&lt;li&gt;Texture Swapping  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interactive Mobile Panorama  &lt;/li&gt;
&lt;li&gt;High Dynamic Range Imaging (HDR)  &lt;ul&gt;
&lt;li&gt;The real word is high dynamic range  &lt;ul&gt;
&lt;li&gt;Typical cameras have limited dynamic range  &lt;ul&gt;
&lt;li&gt;Solution: Merge multiple exposures  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Varying Exposure  &lt;/li&gt;
&lt;li&gt;Tone Mapping  &lt;/li&gt;
&lt;li&gt;Simple Global Operator  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interactive Local Adjustment of Tonal Values  &lt;ul&gt;
&lt;li&gt;Tonal （色調） Manipulation  &lt;/li&gt;
&lt;li&gt;Constraint Propagation  &lt;/li&gt;
&lt;li&gt;Touch-Tone: Point-and-Swipe Image Editing  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Visual Recognition and Query&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1989  &lt;ul&gt;
&lt;li&gt;MNIST, Backpropagation applied to handwritten zip code recognition  &lt;/li&gt;
&lt;li&gt;Character Recognition (LeNet)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;1998, Neural Network-Based Face Detection  &lt;/li&gt;
&lt;li&gt;1999, SIFT (Scale Invariant Feature Transform)  &lt;ul&gt;
&lt;li&gt;Object Recognition from Local Scale-Invariant Features, Lowe, ICCV 1999.  &lt;/li&gt;
&lt;li&gt;No more sliding windows (interest points)  &lt;/li&gt;
&lt;li&gt;Better features (use more computation)  &lt;/li&gt;
&lt;li&gt;找出來的特徵點會是一個球，而不是邊邊角角。  &lt;/li&gt;
&lt;li&gt;Better Descriptor  &lt;ul&gt;
&lt;li&gt;Image gradients =&amp;gt; Keypoint descriptor  &lt;/li&gt;
&lt;li&gt;Truncated normalization (globally)  &lt;/li&gt;
&lt;li&gt;高維度的球  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What worked  &lt;ul&gt;
&lt;li&gt;Object instance recognition  &lt;/li&gt;
&lt;li&gt;Panaroma  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What failed?  &lt;ul&gt;
&lt;li&gt;無法認東西  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2001, Rapid Object Detection using a Boosted Cascade of Simple Features, Viola and Jones  &lt;ul&gt;
&lt;li&gt;Why did it work?  &lt;ul&gt;
&lt;li&gt;Simple Features (Haar wavelets)  &lt;/li&gt;
&lt;li&gt;假設光線都是從上打下來，直接去認眼睛和鼻子的陰影，覺得有可能的保留，沒可能的就丟掉，所以速度很快。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Why did it fail?  &lt;ul&gt;
&lt;li&gt;側面就無法 work  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2003, Constellatioin model (redux) (related to SIFT)  &lt;ul&gt;
&lt;li&gt;Object Class Recognition by Unsupervised Scale-Invariant Learning  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2005, HOG (Histograms of oriented gradients) (related to SIFT)  &lt;ul&gt;
&lt;li&gt;Normalize locally not globally  &lt;/li&gt;
&lt;li&gt;Why worked?  &lt;ul&gt;
&lt;li&gt;Hard negative mining  &lt;/li&gt;
&lt;li&gt;Computers are fast enought  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What failed?  &lt;ul&gt;
&lt;li&gt;無法認出運動中的人，必須要站著。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2007, Pascal VOC  &lt;ul&gt;
&lt;li&gt;The PASCAL Visual Object Classes (VOC) Challenge  &lt;/li&gt;
&lt;li&gt;只有 20 個分類  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2008, DPM (Deformable parts model)  &lt;ul&gt;
&lt;li&gt;Object Detection with Discriminatively Trained Part Based Model  &lt;/li&gt;
&lt;li&gt;Star-structure  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2009, Caltech Pedestrian  &lt;/li&gt;
&lt;li&gt;2009, ImageNet  &lt;ul&gt;
&lt;li&gt;ImageNet, A Large-Scale Hierarchical Image Database  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2010, SUN  &lt;ul&gt;
&lt;li&gt;SUN Database: Large-scale Scene Recognition from Abbey to Zoo  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mscoco.org"&gt;MS COCO&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;over 77,000 worker hours (8+ years)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2012 DNNs  &lt;ul&gt;
&lt;li&gt;GPUs + Data  &lt;/li&gt;
&lt;li&gt;Classification vs Deteciton  &lt;ul&gt;
&lt;li&gt;Detection need to know the position of the target object  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CNN, RNN  &lt;/li&gt;
&lt;li&gt;Why it fails  &lt;ul&gt;
&lt;li&gt;找不到位置的話就很難去判斷  &lt;/li&gt;
&lt;li&gt;Neural Networks are easily fooled  &lt;ul&gt;
&lt;li&gt;會把看起來完全不相關的雜訊誤判成某些物件  &lt;ul&gt;
&lt;li&gt;Neural Networks are easily fooled: High Confidence Predictions for Unrecognizable Images  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PANDA: Pose Aligned Networks for Deep Attribute Modeling  &lt;/li&gt;
&lt;li&gt;DeepFace: closing the gap to  human-Level performance in fac verification  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Additional Challenges  &lt;ul&gt;
&lt;li&gt;Detecgtion in context (with common sense)  &lt;ul&gt;
&lt;li&gt;加入一些常識的判斷，例如：人在普通情況下不可能在天上飛之類的等等  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Model awareness  &lt;/li&gt;
&lt;li&gt;Training time (when dataset is incrementally updated)  &lt;ul&gt;
&lt;li&gt;每個公司都用大量的電腦去運算，不僅耗時，也蠻浪費電的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;More science?  &lt;ul&gt;
&lt;li&gt;目前比較像是大量嘗試去找出方法，不太有系統且有科學性。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;【索引】多媒體檢索&lt;/h1&gt;
&lt;h2&gt;Search By Image Examples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Still very much an open problem  &lt;/li&gt;
&lt;li&gt;Most commercial applications use a mixture of algorithms  &lt;ul&gt;
&lt;li&gt;沒有一種演算法可以完全解決這個問題  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Google Goggles in action  &lt;ul&gt;
&lt;li&gt;Text =&amp;gt; OCR  &lt;/li&gt;
&lt;li&gt;Landmarks, Books, Artwork, Wine, Logos =&amp;gt; SIFT  &lt;/li&gt;
&lt;li&gt;Contact Info  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TinEye  &lt;ul&gt;
&lt;li&gt;以圖找圖  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Instance Recognition  &lt;/li&gt;
&lt;li&gt;Search Structure  &lt;/li&gt;
&lt;li&gt;Possible Solutions  &lt;ul&gt;
&lt;li&gt;Find approximate words  &lt;ul&gt;
&lt;li&gt;Approximate nearest neighbour (ANN)  &lt;/li&gt;
&lt;li&gt;維度比較高，所以速度比較慢  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Find lower dimensional spae to split the data  &lt;ul&gt;
&lt;li&gt;找 2D 的的資料，雖然沒那麼準確，但速度會比較快。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Scalable Recognition with a Vocabulary Tree  &lt;ul&gt;
&lt;li&gt;先拿一張圖找 Feature  &lt;/li&gt;
&lt;li&gt;找出來後丟到高維度的空間（約兩百多維)  &lt;/li&gt;
&lt;li&gt;會有很多不同的點  &lt;/li&gt;
&lt;li&gt;用定義好的向量距離，用 &lt;a href="https://en.wikipedia.org/wiki/K-means_clustering"&gt;K-means&lt;/a&gt; 做分群  &lt;/li&gt;
&lt;li&gt;遞迴做下去就可以得到愈多種類的分群結果  &lt;/li&gt;
&lt;li&gt;最後再把不需要的東西去掉，得到 Vocabulary Tree  &lt;/li&gt;
&lt;li&gt;得到 Vocabulary Tree 後，把每個 Feature 丟進去，會知道在 Vocabulary Tree 的哪個節點  &lt;/li&gt;
&lt;li&gt;如果該 Feature 的結果只指向一張圖的話，就很有可能是這張圖。  &lt;/li&gt;
&lt;li&gt;但當某個節點有關的圖愈多的話，entropy 愈高，結果就愈難判斷。  &lt;/li&gt;
&lt;li&gt;這時候可以使用 &lt;a href="https://en.wikipedia.org/wiki/Tf%E2%80%93idf"&gt;tf-idf&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;【加速】圖形處理器與深度學習 (GPU and Computation)&lt;/h1&gt;
&lt;h2&gt;Parallel Processing and GPU&lt;/h2&gt;
&lt;h3&gt;Parallel Computing Goals&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To slove your problem in less time  &lt;ul&gt;
&lt;li&gt;平行化去處理  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;In order to parallelize a problem  &lt;ul&gt;
&lt;li&gt;要去看哪邊有關聯性，並確定處理這些關聯性對演算法的影響。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Types of Parallelism&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Multiple Programs  &lt;ul&gt;
&lt;li&gt;Multi-tasking  &lt;/li&gt;
&lt;li&gt;Multi-threading  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Single Program  &lt;ul&gt;
&lt;li&gt;Instruction-levl parallelism  &lt;ul&gt;
&lt;li&gt;Multiple instructions in a serial program get excuted simultaneously  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Data-level parallelism  &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;S&lt;/strong&gt;ingle &lt;strong&gt;I&lt;/strong&gt;nstruction, &lt;strong&gt;M&lt;/strong&gt;ultiple &lt;strong&gt;D&lt;/strong&gt;ata processing model (SIMD)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Amdahl's Law  &lt;ul&gt;
&lt;li&gt;Named after computer architect Gene Amdahl  &lt;/li&gt;
&lt;li&gt;Speedup of a parallel computer is limited by the amount of serial work  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Resource Management  &lt;ul&gt;
&lt;li&gt;哲學家晚餐問題  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;GPU Applications&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Real-time rendering. e.g. Game  &lt;/li&gt;
&lt;li&gt;Movie Effect  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;GPUs Today&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GPUs are becoming more programmable  &lt;/li&gt;
&lt;li&gt;GPUs now support 32/64 bit floating points numbers  &lt;/li&gt;
&lt;li&gt;GPUs have higher memory bandwidth than CPUs  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;NVIDIA CUDA&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Compute Unified Device Architecture  &lt;/li&gt;
&lt;li&gt;CUDA Workflow  &lt;ul&gt;
&lt;li&gt;Get a CUDA-enabled GPU  &lt;/li&gt;
&lt;li&gt;Write C/C++ like code (*.cu)  &lt;/li&gt;
&lt;li&gt;Compile with CUDA compiler (nvcc)  &lt;ul&gt;
&lt;li&gt;Generated PTX code ("Parallel Thread Execution")  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Applications auto-magically run on GPUs  &lt;ul&gt;
&lt;li&gt;Many many parallel threads  &lt;/li&gt;
&lt;li&gt;CUDA driver translate PTX code into hardware.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CUDA Overview  &lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;之前學 CUDA 時收集的一份不錯的 CUDA 教學系列文：&lt;a href="/posts/2015/08/15/nice-series-of-cuda-tutorials-on-ptt-cc/"&gt;Nice Series of CUDA Tutorials on ptt.cc&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Frameworks and Libraries&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;MATLAB  &lt;/li&gt;
&lt;li&gt;BLAS Library (Basic Linear Algebra Subprograms)  &lt;ul&gt;
&lt;li&gt;和 Fortran 同年代的產物  &lt;/li&gt;
&lt;li&gt;Processor vendors implement their BLAS library  &lt;ul&gt;
&lt;li&gt;e.g., Intel MKL (Math Kernel Library)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cuBLAS - CUDA version, very fast  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NVIDIA Thrust Library  &lt;ul&gt;
&lt;li&gt;A little like C++ STL library for CUDA  &lt;/li&gt;
&lt;li&gt;Very few lines of code for vector manipulation  &lt;/li&gt;
&lt;li&gt;Fast implementation of parallel primitives  &lt;ul&gt;
&lt;li&gt;reduce  &lt;ul&gt;
&lt;li&gt;mapreduce  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;scan  &lt;/li&gt;
&lt;li&gt;sort  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NVIDIA cuDNN  &lt;ul&gt;
&lt;li&gt;Deep Neural Network Library for CUDA  &lt;/li&gt;
&lt;li&gt;TensorFlow, Caffe, Microsoft CNTK  &lt;/li&gt;
&lt;li&gt;Deep Learning Getting Started Advises  &lt;ul&gt;
&lt;li&gt;Borrow (steal if you must) a modern GPU  &lt;/li&gt;
&lt;li&gt;Use &lt;a href="http://caffe.berkeleyvision.org"&gt;Caffe&lt;/a&gt; for your deep learning projects  &lt;/li&gt;
&lt;li&gt;Browse through the Caffe Model Zoo and try out the existing (pre-trained) models (AlexNet, R-CNN and GooLeNet  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;電腦視覺之實作演示&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduct OpenCV by the official tutorials  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Core functionality  &lt;/li&gt;
&lt;li&gt;Image processing  &lt;/li&gt;
&lt;li&gt;Demos  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python, OpenCV, Numpy  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Canny Edge Detection  &lt;ol&gt;
&lt;li&gt;Detect unique edges  &lt;ul&gt;
&lt;li&gt;不管是 strong edge 或 weak edge 在經過微分後都會產生一個 peak  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Edge Voting (Use 2 threshold)  &lt;ul&gt;
&lt;li&gt;Strong edge: Always accept.  &lt;/li&gt;
&lt;li&gt;Weak edge: Accept when connected.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;是很多後續演算法的基礎  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Histogram  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Demo  &lt;ul&gt;
&lt;li&gt;OpenCV QR Drive  &lt;ul&gt;
&lt;li&gt;QR code Marker Detection  &lt;ul&gt;
&lt;li&gt;1:1:3:1:1 black-white markers at the coners  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How to detect 11311?  &lt;ul&gt;
&lt;li&gt;Only need to use raster scan  &lt;/li&gt;
&lt;li&gt;Use &lt;a href="https://en.wikipedia.org/wiki/Otsu%27s_method"&gt;Otsu algorithm&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Thresholding: leave only white and black  &lt;/li&gt;
&lt;li&gt;A binarization algorithm that minimize the weighted intra-class variance algorighm for bimodal distributioin.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Detect the most bright points  &lt;ol&gt;
&lt;li&gt;Dilate  &lt;/li&gt;
&lt;li&gt;Equality check  &lt;/li&gt;
&lt;li&gt;Threshold  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Dilation and thresholding  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make a little PiBorg which will chase the $1,000 NTD bill.  &lt;ul&gt;
&lt;li&gt;The PiBorg (RPi + Motor) aka &lt;a href="https://www.youtube.com/watch?v=s3Qdsn401H0"&gt;DoodleBorg&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Camshift (WACV 98)  &lt;/li&gt;
&lt;li&gt;Meanshift  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.opencv.org/3.1.0/db/df8/tutorial_py_meanshift.html"&gt;OpenCV: Meanshift and Camshift&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Camshift 比 Meanshift 多了一個 scale 的選項  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Conclusion  &lt;ul&gt;
&lt;li&gt;Basic OpenCV functionalities  &lt;/li&gt;
&lt;li&gt;OpenCV and image processing  &lt;/li&gt;
&lt;li&gt;OpenCV and detection  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Data Science"></category><category term="Deep Learning"></category><category term="Conf"></category></entry></feed>