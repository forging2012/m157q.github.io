<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Just for noting</title><link>https://blog.m157q.tw/</link><description></description><lastBuildDate>Wed, 31 Jan 2018 12:56:16 +0800</lastBuildDate><item><title>2018 Developer Skills Report by HackerRank 摘要</title><link>https://blog.m157q.tw/posts/2018/01/31/2018-developer-skills-report-by-hackerrank-brief/</link><description>&lt;p&gt;HackerRank 這份訪問了多個國家總計 39,441 名開發者的統計報告挺有趣的，受訪期間為 2017/10/16~2017/11/01，用 SurveyMonkey 做的調查。  &lt;/p&gt;
&lt;p&gt;原網址在此：&lt;a href="https://research.hackerrank.com/developer-skills/2018/"&gt;https://research.hackerrank.com/developer-skills/2018/&lt;/a&gt;，有更詳細的資訊，有興趣的人可以點進去自己看，以下做個摘要：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;75% 在 21 歲前就開始寫程式，有 50% 集中在 16~20 歲。  &lt;/li&gt;
&lt;li&gt;70 年代出生的有 40% 在 11~15 歲就開始寫程式，之後出生的卻又愈來愈晚才開始寫程式，愈來愈像 60 年代出生的狀況。  &lt;/li&gt;
&lt;li&gt;70% 以上都是透過自學或學校課程學寫程式  &lt;/li&gt;
&lt;li&gt;自學途徑第一名是 StackOverflow，高達 80% 以上。第二、三名則是 Youtube 和書籍，較年輕的透過 Youtube 自學者較多，較年長者則透過書籍學習較多。  &lt;/li&gt;
&lt;li&gt;總計各行業雇主尋找的前五名語言：JavaScript, Java, Python, C++, C。但根據各行業有所不同：  &lt;ul&gt;
&lt;li&gt;運輸：JavaScript, Java, Python, C++, C#  &lt;/li&gt;
&lt;li&gt;硬體：C, C++, Python, Java, JavaScript  &lt;/li&gt;
&lt;li&gt;金融：Java, JavaScript, Python, C#, C++  &lt;/li&gt;
&lt;li&gt;政府：Java, JavaScript, C#, Python, C  &lt;/li&gt;
&lt;li&gt;醫療：JavaScript, Java, Python, C#, C++  &lt;/li&gt;
&lt;li&gt;遊戲：JavaScript, Python, Java, PHP, C++  &lt;/li&gt;
&lt;li&gt;電商：Java, JavaScript, Python, C#, PHP  &lt;/li&gt;
&lt;li&gt;資安：Java, Python, JavaScript, C++, C  &lt;/li&gt;
&lt;li&gt;科技：Java, JavaScript, Python, C++, C  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;公司最需要的框架前三名：AngularJS, Node.js, React  &lt;/li&gt;
&lt;li&gt;公司最重視的應徵者能力前三名：解決問題的能力、程式語言熟悉度、除錯的能力。  &lt;/li&gt;
&lt;li&gt;公司重視的履歷項目前三名：工作經驗、簡歷（例如：GitHub）、學歷  &lt;ul&gt;
&lt;li&gt;愈大的公司愈重視經驗、較小的公司則參考簡歷的比例較多，但還是以經驗為主。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;執行階層的面試官重視的履歷項目前三名：簡歷（例如：GitHub）、工作經驗、年資  &lt;ul&gt;
&lt;li&gt;推測因為到了執行階層的面試官都已經是最後一關了，技術能力上沒啥問題，比較重視應徵者額外還做過哪些事。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;受訪者之後最想學的程式語言前三名：Golang, Python, Scala  &lt;/li&gt;
&lt;li&gt;受訪者最喜歡的語言前五名：Python, C, C++, Java, JavaScript。根據年齡層稍有不同，但 Python 以壓倒性獲得絕大多數支持：  &lt;ul&gt;
&lt;li&gt;18~24 歲：Python, C++, C, Java, JavaScript  &lt;/li&gt;
&lt;li&gt;25~34 歲：Python, C, Golang, JavaScript, TypeScript  &lt;/li&gt;
&lt;li&gt;35~44 歲：Python, C, Golang, TypeScript, C#  &lt;/li&gt;
&lt;li&gt;45~54 歲：Python, Golang, C, TypeScript, C++  &lt;/li&gt;
&lt;li&gt;55 歲以上：Swift, C, Python, Java, C++  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;受訪者最喜歡的框架前五名：Node.js, React, ExpressJS, AngularJS, Django  &lt;/li&gt;
&lt;li&gt;對公司來說面試最大的挑戰前三名：沒有 onsite 之前很難鑑定應徵者的能力、面試時間太過費時、應徵者不夠多。  &lt;/li&gt;
&lt;li&gt;公司常用的鑑定應徵者能力的工具前五名：履歷篩選、問題解決與邏輯測驗、內部推薦、遠端線上測驗、人格測驗  &lt;/li&gt;
&lt;li&gt;受訪者重視的工作特性前三名：合理的工時與生活品質（Good work-life balance)、專業技能成長與學習、薪資。根據各國家有所不同。  &lt;ul&gt;
&lt;li&gt;對於學生來說，專業技能成長最重要。  &lt;/li&gt;
&lt;li&gt;對於已就業者來說，生活品質則稍比專業技能成長重要。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;公司如何改善員工生活品質前三名：彈性工時、遠端工作、責任制（只計產出而不是工時）  &lt;/li&gt;
&lt;li&gt;67% 受訪者使用 Vim, 14% 使用 Emacs。  &lt;/li&gt;
&lt;li&gt;Founder, CTO, CEO 中有 15% 在 11 歲前就開始學寫程式，其他職位則是只有 5%。  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://research.hackerrank.com/developer-skills/2018/"&gt;2018 Developer Skills Report by HackerRank&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Wed, 31 Jan 2018 12:56:16 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2018-01-31:posts/2018/01/31/2018-developer-skills-report-by-hackerrank-brief/</guid><category>Programmer</category><category>Interview</category><category>Coding</category></item><item><title>《程序员修炼之道:从小工到专家》</title><link>https://blog.m157q.tw/posts/2018/01/15/the-pragmatic-programmer-from-journeyman-to-master/</link><description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;這本也是很多人推薦的書，在 goodreads 有 4.31 的高分：&lt;a href="https://www.goodreads.com/book/show/4099.The_Pragmatic_Programmer"&gt;The Pragmatic Programmer: From Journeyman to Master by Andy Hunt&lt;/a&gt;，大學的時候就聽到身邊很多人讀完這本了，但我一直到最近才看完這本書，至少「看好書永遠不嫌晚」？以下就留個紀錄和想法吧。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;簡介&lt;/h2&gt;
&lt;p&gt;關於作者簡介與目錄的部份，可以參考天瓏書局的頁面：&lt;a href="https://www.tenlong.com.tw/products/9787121123368"&gt;天瓏網路書店-程序員修煉之道 ：從小工到專家 (The Pragmatic Programmer: From Journeyman to Master)&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;紀錄 &amp;amp;&amp;amp; 想法&lt;/h2&gt;
&lt;p&gt;看這本書的時候一直想到《人月神話》，主要是因為章節名稱的風格吧，都是比喻的方式，有點像是寓言故事風格的標題，所以讓人滿好記憶的。  &lt;/p&gt;
&lt;p&gt;這本書主要就是在教你如何寫出品質夠好的程式碼，包含了函式撰寫、演算法、效能、註解、測試、重構、基本工具、例外處理、如何根據需求寫出夠有彈性的程式碼...等等，透過比喻、 分類、圖例、實際程式碼來做說明。  &lt;/p&gt;
&lt;p&gt;第一次瀏覽的話我個人的建議是，在掃目錄裡面出現的大標題的時候，裏面都會有些小標題，大概掃過去就可以知道在講什麼。  &lt;/p&gt;
&lt;p&gt;大概有個概念以後可以再做比較詳細的瀏覽，如果有已經知道的部份就可以跳過啦，只看自己比較不知道的部份。大概就是 BFS 的閱讀方式，會有種由淺入深的感覺。  &lt;/p&gt;
&lt;p&gt;真的有在寫這種技術文就會發現，真的要足夠的實力才有辦法把這種實際上寫程式會遇到的問題抽象化成書中的比喻，甚至還對其做分類。也算是之後自己寫技術文的目標之一吧，能夠把實際上遇到的問題抽象化並歸納整理再清楚的描述出來，真的需要不少心力。  &lt;/p&gt;
&lt;p&gt;第八章算是把前面七章提到的東西整合起來，如果對整本書在講的東西沒有什麼概念，想用 top down approach 的方式閱讀的話，我建議可以先看第八章。因為這本書都會在內容附上跟哪個章節有關並告訴你頁碼，所以很好做 cross reference 方式的閱讀，看到不懂的再翻到前面看個詳細。  &lt;/p&gt;
&lt;p&gt;想要快速複習的人，可以翻到最後面的 Quick Refernce Guide，列出了 70 個書中的提示重點，也都有標頁碼。可以用來訓練自己看看能不能大概講出這個提示重點在講什麼，如果講不出來的話就可以快速翻到該重點那頁再重新看一遍。  &lt;/p&gt;
&lt;p&gt;工作以後看這本書，對於某些章節真的是頗有感觸的，這幾天應該會再多瀏覽這本書幾遍吧。這種夠有系統的分析寫程式這件事情，並列出需要注意的點讓程式碼的品質更好，才真的說得上是軟體工程啊，工程是需要有系統的。  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Thu, 18 Jan 2018 23:46:05 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2018-01-15:posts/2018/01/15/the-pragmatic-programmer-from-journeyman-to-master/</guid><category>Programmer</category><category>2018 iT 邦幫忙鐵人賽</category></item><item><title>《回答的智慧》</title><link>https://blog.m157q.tw/posts/2017/12/21/how-to-answer-questions-in-a-helpful-way-zh-tw/</link><description>&lt;ul&gt;
&lt;li&gt;本文為翻譯文章  &lt;/li&gt;
&lt;li&gt;原文為：&lt;a href="https://jvns.ca/blog/answer-questions-well/"&gt;How to answer questions in a helpful way - Julia Evans&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://mobile.twitter.com/M157q/status/943722828188151808"&gt;本文已獲得作者 Julia Evans 同意授權翻譯並發佈&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;《回答的智慧》&lt;/h2&gt;
&lt;p&gt;當你遇到與你共事的人向你詢問問題，&lt;br /&gt;
卻描述得不太清楚時，你會怎麼回答？&lt;br /&gt;
我認為問問題是門學問，&lt;br /&gt;
（請參見我另外一篇文章 &lt;a href="https://jvns.ca/blog/good-questions/"&gt;How to ask good questions&lt;/a&gt;）&lt;br /&gt;
【譯註：這是作者另外一篇文章，有機會的話我也會嘗試翻譯。】&lt;br /&gt;
然而，&lt;br /&gt;
如何有效得回答問題同樣是門學問，&lt;br /&gt;
兩者同等實用。  &lt;/p&gt;
&lt;p&gt;在開始之前，先做個假設：&lt;br /&gt;
我知道大家多少都遇過不尊重你的寶貴時間的提問者，&lt;br /&gt;
那種感覺很糟。&lt;br /&gt;
但在這篇文章中，&lt;br /&gt;
我要先假定這樣的情況不存在。&lt;br /&gt;
假設這篇文章裡的提問者都是合乎理性且會盡全力把事情弄懂，&lt;br /&gt;
是會讓你想幫助的那種人。&lt;br /&gt;
因為身邊和我一起工作的伙伴都是這樣的人，&lt;br /&gt;
而我目前就是在這樣的環境下工作。&lt;br /&gt;
【譯註：除了讓人羨慕以外，我想這也會讓這篇文章著重在回答問題上，比較不會模糊焦點。】  &lt;/p&gt;
&lt;p&gt;以下是一些我認為如何更有效回答問題的方法：  &lt;/p&gt;
&lt;h3&gt;如果對方的問題不夠明確，幫助對方釐清問題&lt;/h3&gt;
&lt;p&gt;初學者常會提出不夠明確的問題，或者提出沒有足夠資訊、讓人無從回答的問題。&lt;br /&gt;
這裡有幾個方法可以讓你幫助他們釐清問題：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用&lt;strong&gt;更確切的問題&lt;/strong&gt;回問對方。  &lt;/li&gt;
&lt;li&gt;詢問對方沒有提供的那些&lt;strong&gt;更加確切的資訊&lt;/strong&gt;。  &lt;ul&gt;
&lt;li&gt;例如：你是使用 IPv6 嗎？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;詢問對方&lt;strong&gt;是什麼原因而問這個問題&lt;/strong&gt;。  &lt;ul&gt;
&lt;li&gt;舉例來說，有時候我會遇到同事在群組頻道裏面詢問「我們公司的 service discovery 是如何運作的？」  &lt;/li&gt;
&lt;li&gt;通常會有此一問是因為他們正在嘗試架設或是調整某個服務。  &lt;/li&gt;
&lt;li&gt;在這種情況下，回問「你現在在弄哪個服務？我可以看一下你目前的 Pull Request  嗎？」會是有幫助的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很多類似的方法在我的另外一篇文章 &lt;a href="https://jvns.ca/blog/good-questions/"&gt;How to ask good questions&lt;/a&gt; 都有被提及。&lt;br /&gt;
（然而我絕對不會對某個人說：「喔，你必須先看過這篇 &lt;a href="https://jvns.ca/blog/good-questions/"&gt;How to ask good questions&lt;/a&gt; 才能問我問題。」）  &lt;/p&gt;
&lt;h3&gt;先瞭解對方已經知道哪些東西&lt;/h3&gt;
&lt;p&gt;在回答問題之前，先瞭解對方已經知道哪些東西是很有用的。  &lt;/p&gt;
&lt;p&gt;Harold Treen 給了我一個很棒的例子：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;某天有個人要我解釋 "&lt;a href="https://github.com/redux-saga/redux-saga"&gt;Redux Sagas&lt;/a&gt;" 是什麼，我並沒有直接回答：「它們就像等待 action 並幫你更新 store 的背景工作執行緒 (worker threads)！」&lt;br /&gt;
而是先從對方對於 Redux, Redux 的 action, Redux 的 store 及其他關於 Redux 的基本觀念瞭解多少著手，如此一來會讓解釋 Redux Sagas 這件事容易一些，因為這些觀念與其環環相扣。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;瞭解對你提問的人已經知道哪些東西是很重要的，&lt;br /&gt;
因為對方可能是連一些基本的觀念都還搞不太清楚的新手（例如：什麼是 Redux?），&lt;br /&gt;
也可能是遇到極端案例（corner case）的老手。&lt;br /&gt;
你的回答如果是建立在對方不知道的觀念上，會造成對方的困惑；&lt;br /&gt;
你的回答如果是重述對方已經知道的事情，則會讓對方感到厭煩。  &lt;/p&gt;
&lt;p&gt;在詢問對方已經知道哪些東西的時候，有個實用的技巧是，&lt;br /&gt;
與其問對方「你知道 XXX 嗎？」&lt;br /&gt;
也許可以試著改成問對方「你對 XXX 瞭解的程度有多少？」&lt;br /&gt;
【譯註：第一種問法得到的回答通常只有「知道」或「不知道」，而第二種通常會得到比較詳細一點的回答，能夠比第一種問法容易知道對方的程度。】  &lt;/p&gt;
&lt;h3&gt;告訴對方應該要看哪些文件&lt;/h3&gt;
&lt;p&gt;「去讀那些他媽的文件」(RTFM) 是最典型的無用回答，&lt;br /&gt;
但如果你明確告訴對方要去看哪個文件則能產生很大的幫助。&lt;br /&gt;
當我問問題的時候，比起直接得到答案，&lt;br /&gt;
我其實比較喜歡被告知該去看哪份文件，&lt;br /&gt;
因為該份文件的內容很可能也會順便解決掉我其他的問題。  &lt;/p&gt;
&lt;p&gt;我認為有件很重要的事情是，&lt;br /&gt;
你必須確保當下告知對方的文件真的有回答到他的問題，&lt;br /&gt;
如果沒有的話，至少在事後確認它有幫助到對方。&lt;br /&gt;
否則你很有可能上演這種常見的場景：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;問：「我要怎麼做到 X 這件事？」  &lt;/li&gt;
&lt;li&gt;答：（給了一份文件的連結）  &lt;/li&gt;
&lt;li&gt;問：「這份文件沒有解釋 X 啊，只有解釋 Y。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果我告知對方的文件太過冗長的話，&lt;br /&gt;
我會明確點出我正在說的是其中的哪一個部份。&lt;br /&gt;
&lt;a href="https://linux.die.net/man/1/bash"&gt;Bash 的使用說明&lt;/a&gt; 有 44,000 個英文字（這是真的！），&lt;br /&gt;
所以如果只告訴對方「去看 Bash 的使用說明。」根本沒什麼幫助。  &lt;/p&gt;
&lt;h3&gt;告訴對方可以用什麼樣的關鍵字去搜尋&lt;/h3&gt;
&lt;p&gt;在工作上，&lt;br /&gt;
我時常會使用一些「我知道這會讓我得到答案」的關鍵字來進行搜尋。&lt;br /&gt;
然而這樣的關鍵字對於新手來說可能不是這麼顯而易見，&lt;br /&gt;
所以告訴對方「如果是我的話，我會用 XXX 關鍵字來搜尋答案。」是很有用的。&lt;br /&gt;
同樣地，記得事後確認一下你給出的關鍵字真的有幫助到他們。  &lt;/p&gt;
&lt;h3&gt;撰寫新文件&lt;/h3&gt;
&lt;p&gt;我常常不斷遇到不同的人來問我所處的團隊一模一樣的問題，&lt;br /&gt;
但這並不是這些人的錯，&lt;br /&gt;
畢竟他們不知道在這之前已經有 10 個人問過一樣的問題，&lt;br /&gt;
也不知道答案。&lt;br /&gt;
因此，與其一直重複告訴不同的人相同的答案，&lt;br /&gt;
我和團隊的其他人改用了以下的步驟：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;馬上為這個問題撰寫解答的文件  &lt;/li&gt;
&lt;li&gt;告訴提問者這份我們新撰寫的文件  &lt;/li&gt;
&lt;li&gt;皆大歡喜！  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;雖然撰寫文件花費的時間比直接回答問題還多，&lt;br /&gt;
但通常是很值得的，尤其是以下幾種問題：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一而再，再而三，不斷被人重複問的問題。  &lt;/li&gt;
&lt;li&gt;答案不太會隨時間而變動的問題。  &lt;ul&gt;
&lt;li&gt;如果答案是每週或每月就會變動的話，這份文件就很容易過期，也會令提問者感到失望。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;向對方解釋你做了哪些事&lt;/h3&gt;
&lt;p&gt;身為某個領域的初學者時，&lt;br /&gt;
如果發生以下對話，真的會令人很沮喪：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;菜鳥：「你怎麼弄這東西的？」  &lt;/li&gt;
&lt;li&gt;老鳥：「就這樣啊，我弄完了。」  &lt;/li&gt;
&lt;li&gt;菜鳥：「……，但你做了哪些事啊？」  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果向你提問的人正在嘗試瞭解某件事是如何運作的話，&lt;br /&gt;
幾個方法將對其有所幫助：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;帶對方完整跑過一次流程，而不是只做給對方看。  &lt;/li&gt;
&lt;li&gt;告訴對方你是用了哪些方法得到答案的&lt;br /&gt;
【譯註：給他釣竿教他如何自己釣到魚，而不是在他面前釣魚給他看，然後把釣到的魚給他。】  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;雖然這比你直接做給對方看要花更多時間，&lt;br /&gt;
但這對於提問者來說是個學習的機會，&lt;br /&gt;
如此一來，他們往後面對相同的問題時就能夠有所準備。  &lt;/p&gt;
&lt;p&gt;套用這樣的方法，對話狀況就會好上許多：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;菜鳥：「我在網站上看到錯誤，發生什麼事了？」  &lt;/li&gt;
&lt;li&gt;老鳥：「（檢查兩分鐘後）喔，因為資料庫正在進行容錯移轉（failover）。」  &lt;/li&gt;
&lt;li&gt;菜鳥：「原來！你是怎麼知道的啊？」  &lt;/li&gt;
&lt;li&gt;老鳥：「以下是我做的判斷：」  &lt;ul&gt;
&lt;li&gt;從錯誤訊息看來，這類的錯誤通常是因為某個服務掛了，我去察看了一下，發現該服務還在正常執行，所以問題不在這。  &lt;/li&gt;
&lt;li&gt;所以我去看了網站的後台，後台顯示有個資料庫容錯移轉的動作正在執行。  &lt;/li&gt;
&lt;li&gt;然後我再去察看該服務的紀錄檔，紀錄裡頭顯示連線到資料庫的時候出錯了，看起來問題就出在這。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你向對方解釋你如何針對問題進行除錯，&lt;br /&gt;
將有利於讓對方瞭解你如何排除其他原因及如何發現真正的問題點。&lt;br /&gt;
當你遇到問題時，能馬上判斷出原因，的確是件讓人覺得很爽的事。&lt;br /&gt;
但幫助他人學得更好、更深入分析問題，&lt;br /&gt;
並瞭解到自己想出來的對策是有效的，&lt;br /&gt;
是件更棒的事。  &lt;/p&gt;
&lt;h3&gt;解決最根本的問題&lt;/h3&gt;
&lt;p&gt;這個方法比較難一點，有時候會遇到一種情況，&lt;br /&gt;
提問者覺得自己已經找到了正確的解決方法，&lt;br /&gt;
且只差最後一個關鍵就可以把問題解決，&lt;br /&gt;
但其實很可能不是這麼一回事。&lt;br /&gt;
舉例來說：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;George:「我現在在想辦法搞定 X，然後出錯了，我要怎麼解掉這個錯誤？」  &lt;/li&gt;
&lt;li&gt;Jasminda: 「你實際上是不是想搞定 Y？如果是的話，你不應該從 X 下手，你應該要從 Z 下手才對。」  &lt;/li&gt;
&lt;li&gt;George：「對耶！感謝！那我要先來解決 Z。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在上面的對話中，Jasminda 並沒有直接回答 George 的問題，&lt;br /&gt;
而是根據經驗推測 George 實際上不是想搞定 X 這件事，&lt;br /&gt;
而她對了，這個舉動非常的有用。  &lt;/p&gt;
&lt;p&gt;但有一點要注意的是，&lt;br /&gt;
如果回答者太過於高姿態的話，很可能會造成反效果，&lt;br /&gt;
例如：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;George:「我現在在想辦法搞定 X，然後出錯了，我要怎麼解掉這個錯誤？」  &lt;/li&gt;
&lt;li&gt;Jasminda:「不用解這個錯誤，你實際上應該是想搞定 Y，然後你應該先從 Z 著手。」  &lt;/li&gt;
&lt;li&gt;George:「ㄜ，我真的沒有想解決 Y，我是真的因為某些原因想要搞定 X，我到底該怎麼做？」  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以回答時切忌高姿態，&lt;br /&gt;
而且要記住，有些提問者有可能會附上他們已經做了哪些事，&lt;br /&gt;
最好的回答方式是，&lt;br /&gt;
針對「對方提問的問題」及「對方真正該問的問題」都進行回答，&lt;br /&gt;
例如：  &lt;/p&gt;
&lt;p&gt;「如果你想要解決 X 的話，你可以試試看這個方法，但如果你想用這個方法解決 Y 的話，我建議你用另外一個方法，那個方法比較有效。」  &lt;/p&gt;
&lt;h3&gt;問對方「這樣有回答到你的問題嗎？」&lt;/h3&gt;
&lt;p&gt;我喜歡在自認為已經回答到對方的問題後，&lt;br /&gt;
額外向對方確認：「這樣有回答到你的問題嗎？還有更多想問的嗎？」  &lt;/p&gt;
&lt;p&gt;然後我會停下來等對方回答這個問題，&lt;br /&gt;
這樣做的好處是，人們總是需要個一兩分鐘確認自己是不是真的搞懂了。&lt;br /&gt;
我是在撰寫文件的時候才特別發現，&lt;br /&gt;
這句額外的「這樣有回答到你的問題嗎？」是很有用的，&lt;br /&gt;
我因為這點，&lt;br /&gt;
常常在為我已經熟知的事物撰寫文件時，&lt;br /&gt;
留下一些對他人而言重要的資訊而不自知。  &lt;/p&gt;
&lt;h3&gt;嘗試當面、視訊或語音通話來溝通，不要只用文字&lt;/h3&gt;
&lt;p&gt;我是一位遠端工作者，&lt;br /&gt;
所以我和同事絕大多數的對話都是用文字溝通，&lt;br /&gt;
對我來說，文字是預設的溝通方式。  &lt;/p&gt;
&lt;p&gt;現今，我們活在一個很容易進行視訊會議與分享螢幕畫面的世界。&lt;br /&gt;
工作時，我可以點個按鈕就開始和某人進行視訊會議，&lt;br /&gt;
並分享螢幕畫面給對方。&lt;br /&gt;
許多問題用講的會比用打字的更容易解決。  &lt;/p&gt;
&lt;p&gt;例如：&lt;br /&gt;
最近有人問我要如何規劃與設定服務自動擴充（autoscaling）的容量，&lt;br /&gt;
我腦中大概可以想出有哪些東西需要釐清，&lt;br /&gt;
但還不是非常確定真正的情況。&lt;br /&gt;
於是我們快速通了個視訊電話，&lt;br /&gt;
五分鐘之後，&lt;br /&gt;
就回答完他們提出的所有問題了。  &lt;/p&gt;
&lt;p&gt;我特別相信，如果有人對於某件事情不知道如何下手，&lt;br /&gt;
以結對程式設計（pair programming）的方式進行當面的溝通，&lt;br /&gt;
只要幾分鐘就會很有幫助，&lt;br /&gt;
比只用電子郵件或即時通訊軟體來溝通有效多了。  &lt;/p&gt;
&lt;h3&gt;回答問題時不要表現得很驚訝&lt;/h3&gt;
&lt;p&gt;這個原則出自於 &lt;a href="https://www.recurse.com/manual#no-feigned-surprise"&gt;Recurse Center 手冊的其中一條：別假裝很驚訝&lt;/a&gt;，&lt;br /&gt;
常見的情況：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小明：「什麼是 Linux kernel？」  &lt;/li&gt;
&lt;li&gt;小華：「蛤？你竟然沒有聽過 Linux kernel？真的假的啊？」  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;小華的反應（姑且先不論他到底是真的訝異還是假的訝異）一點幫助也沒有，&lt;br /&gt;
只會讓小明因為自己不知道 Linux kernel 是什麼而感到非常受傷。  &lt;/p&gt;
&lt;p&gt;即便我因為聽到對方不知道某個東西而真的感到有點訝異，&lt;br /&gt;
我反而會故作鎮定，能做到這點的話會是件很棒的事。  &lt;/p&gt;
&lt;h3&gt;能夠有效得回答問題是件非常棒的事&lt;/h3&gt;
&lt;p&gt;顯然的，以上這些方法並不是任何情況都適用，&lt;br /&gt;
但希望你至少可以從中找到幾個你覺得有用的方法。&lt;br /&gt;
我發現花時間回答問題與教導別人是非常有收穫的一件事。  &lt;/p&gt;
&lt;p&gt;非常感謝 Josh Triplett 為這篇文章給出許多建議和幫忙新增很多很棒的內容。&lt;br /&gt;
感謝 Harold Treen、Vaibhav Sagar、Peter Bhat Harkins、Wesley Aptekar-Cassels 和 Paul Gowder 花時間閱讀這篇文章並給予評論。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;更多譯註&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;這篇是目前在 Stripe 工作的 &lt;a href="https://jvns.ca/about/"&gt;Julia Evans&lt;/a&gt;，於今年 9 月 21 日發表在其部落格上的文章：&lt;a href="https://jvns.ca/blog/answer-questions-well/"&gt;How to answer questions in a helpful way - Julia Evans&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Julia Evans 是我去年開始在 Feedly 上追蹤的一名美國女性程式設計師  &lt;/li&gt;
&lt;li&gt;忘記當初是因為哪篇文章追蹤的了，但我很佩服她的一點是，她學新東西的時候都會寫文章紀錄下來，並把東西講得非常詳細。雖然篇幅會非常長，但我每次看她的文章都覺得講得很清楚。  &lt;/li&gt;
&lt;li&gt;她還有&lt;a href="https://jvns.ca/zines/"&gt;一系列把程式技術相關的名詞畫成簡單的漫畫來講解&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;內容包括：Linux, Kubernetes, ...等等。  &lt;/li&gt;
&lt;li&gt;有些小孩甚至會看這些漫畫學習這些新技術，我覺得很酷。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可能很多人都有看過 &lt;a href="http://www.catb.org/%7Eesr/faqs/smart-questions.html"&gt;Eric Steven Raymond 的 How To Ask Questions The Smart Way&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;中文翻譯為《提問的智慧》  &lt;/li&gt;
&lt;li&gt;最常被人拿出來說的就是 RTFM (Read The Fucking Manual）  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way"&gt;這裡有繁體中文版，沒看過的人建議一定要看一下&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;這篇文章非常強調問問題的人應該做好完整的功課，並且在詢問問題上要做到哪些事情，不要讓人不想回答你或是浪費回答你的人的時間。  &lt;/li&gt;
&lt;li&gt;但其實在這篇文章最後面有一節的名稱叫作 &lt;a href="http://www.catb.org/~esr/faqs/smart-questions.html#idm46060473965552"&gt;How to Answer Questions in a Helpful Way （中譯為《回答的智慧》）&lt;/a&gt;，但篇幅不多。  &lt;ul&gt;
&lt;li&gt;沒記錯的話其實早一點的版本沒有，好像是後來才加入這章節的。  &lt;/li&gt;
&lt;li&gt;而 Julia Evans 的這篇文章可以算是大大補足了這個章節的內容，也讓問答的雙方是比較平等一點的。  &lt;/li&gt;
&lt;li&gt;畢竟有時候還是會遇到準備問題的人準備得很充實，但得到的解答卻是隨隨便便的敷衍的那種狀況。  &lt;/li&gt;
&lt;li&gt;我想一個良好的問答品質需要雙方共同努力是一定的，這樣才能更有效率得教學相長。  &lt;/li&gt;
&lt;li&gt;其實如果按照原文標題 "How to answer questions in a helpful way" 來翻譯的話，應該翻成《如何更有效得回答問題》或《如何更好得回答問題》。  &lt;/li&gt;
&lt;li&gt;但因為 ESR 那篇文章被翻為《提問的智慧》，且裡頭同名的章節被翻譯成《回答的智慧》，所以我覺得這篇直接翻成《回答的智慧》會讓這兩篇文章更有連結性。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;心得&lt;/h2&gt;
&lt;p&gt;看完這篇文章的當下後想了一下，&lt;br /&gt;
發現自己之前回答同事的問題算是都有做到這篇文章提到的事情，&lt;br /&gt;
但我還有多做一件事：「告知對方下次可以怎樣問會更好。」&lt;br /&gt;
這篇也很適合三不五時回來看看並反省自己是否有做到。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;這篇是我的部落格第 1 篇翻譯文章，&lt;br /&gt;
也是第 300 篇發佈的文章。&lt;br /&gt;
如果覺得翻譯得不錯的話，&lt;br /&gt;
請不吝留言和幫我分享這篇文章，&lt;br /&gt;
如果覺得哪邊翻譯的不太好的話，&lt;br /&gt;
也麻煩留言跟我說，&lt;br /&gt;
有任何討論也都歡迎留言。  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Fri, 22 Dec 2017 22:51:26 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-12-21:posts/2017/12/21/how-to-answer-questions-in-a-helpful-way-zh-tw/</guid><category>Julia Evans</category><category>Programmer</category><category>Answer Questions</category><category>Collaboration</category><category>2018 iT 邦幫忙鐵人賽</category></item><item><title>Y2017W35</title><link>https://blog.m157q.tw/posts/2017/09/04/y2017w35/</link><description>&lt;h3&gt;ai&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.datacamp.com/community/tutorials/scikit-learn-python"&gt;Scikit-Learn 教學：Python 與機器學習 (Article)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Join over 500,000 other Data Science learners and start one of our interactive tutorials today!  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ictar/python-doc/blob/master/Science%20and%20Data%20Analysis/%E5%9C%A8Python%E4%B8%AD%E5%AE%9E%E7%8E%B0%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F.md"&gt;python-doc/在Python中实现你自己的推荐系统.md at master · ictar/python-doc&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;描述了如何使用 Python 來自己撰寫給自己用的推薦系統。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://superuser.com/questions/138331/using-ffmpeg-to-cut-up-video"&gt;command line - Using ffmpeg to cut up video - Super User&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;-ss&lt;/code&gt; part works fine but the &lt;code&gt;-t&lt;/code&gt; is ignored. It correctly removes the initial specified seconds specified with &lt;code&gt;-ss&lt;/code&gt; but then keeps going to the end of the input with the copy.  Is there a way to use ffmpeg to cut off the end of a video without recoding it?  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;devops&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ithome.com.tw/news/116435"&gt;3 種CTO要小心的架構技術債 | iThome&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;三種都有遇到呢，而且真的鞭辟入裡。  &lt;ol&gt;
&lt;li&gt;設計不良的架構，將衍生出後續架構債。  &lt;ul&gt;
&lt;li&gt;設計架構時，無外乎希望能同時滿足三個條件：節省成本、具有擴展性，以及能快速進入市場。然而，一旦沒有滿足其中的任一條件，都會衍生出後續三種架構債。  &lt;/li&gt;
&lt;li&gt;具備實戰經驗的技術團隊，沒有快速進入市場壓力下，通常偏好導入最新、最佳化的架構，因此，在此碰上過於架構過於早熟（Premature）的問題。  &lt;/li&gt;
&lt;li&gt;當開發團隊欠缺架構系統經驗時，系統就會發生缺乏延展性（Scalability）的痛點，導致程式碼不能重複使用，也很難導入高可用性架構或使用水平擴充，「在還清技術債前，只會債臺高築。」  &lt;/li&gt;
&lt;li&gt;起初推出良好商業模式的團隊，在不缺乏資金的情況下，導入品質良好的IT服務，像是使用AWS等基礎架構，執行基本的服務。曾義峰表示，只要營運狀況良好，並足夠支撐這些基礎架構的費用並非壞事，「而一旦後續募資沒有成功，只好裁員節省成本。」  &lt;/li&gt;
&lt;li&gt;導入最小可行性產品（Minimum viable product，MVP）的觀念也是一種解決方法。但是，「如果MVP沒有控制好，技術債會迅速成長」  &lt;/li&gt;
&lt;li&gt;由於每階段產品都面臨許多變更，老舊程式不容易清除，導致程式碼很難重複利用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;推動 MVP 時，必須設定技術債的上限值。  &lt;ul&gt;
&lt;li&gt;當開發團隊發現超過上限值時，得著手清除技術債。  &lt;/li&gt;
&lt;li&gt;當技術債太多，就得面臨系統重構或改寫的問題。  &lt;/li&gt;
&lt;li&gt;如果沒有解決本質的問題，未來新架構也會碰上一樣的問題。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;需求永遠不明確，因此系統架構得要具有彈性。  &lt;ul&gt;
&lt;li&gt;例如，需求方與開發方溝通不順，需求方並沒有提出足夠詳細的規格書，導致開發者無法實作部分功能，滿足該方需求。  &lt;/li&gt;
&lt;li&gt;開發者也得讓系統架構更有彈性，當需求改變，導致程式設計有改變時，「預想但是不過早優化，不該把每次的新需求都視作獨立需求。」  &lt;/li&gt;
&lt;li&gt;當需求方提出規格時，開發者不該只單線式思考，反之，「要使用抽象化思考的模式，仔細剖析該需求中，存在著哪一些變數。」  &lt;/li&gt;
&lt;li&gt;即使架構設計的再如何完善，終有一天必須被拋棄。即使必須捨棄現有架構，未必是一件失敗的事，重點在於清楚必須放棄的理由，以及新架構該如何執行、何時執行，「清楚明白打掉重練比較好，就勇敢執行吧！」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.travis-ci.com/2017-08-24-trigger-custom-build"&gt;The Travis CI Blog: Create custom builds from the web UI&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;終於可以在 Travis CI 抽筋的時候不用 close  reopen PR 或重 push code 了嗎  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rowkey.me/blog/2017/08/24/arch/"&gt;谈谈架构 - 后端技术杂谈 | 飒然Hang&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用投影片來呈現挺精簡的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2017/08/preventing-log-waste-with-Stackdriver-Logging.html"&gt;Google Cloud Platform Blog:  Preventing log waste with Stackdriver Logging&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以針對要收集哪些 log 做條件過濾了 看來離之前公告過但暫緩的收費日期不遠矣  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2017/08/introducing-Puppet-support-for-Google-Cloud-Platform24.html"&gt;Google Cloud Platform Blog: Introducing Puppet support for Google Cloud Platform&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GCP 支援 puppet 了啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2017/08/introducing-App-Engine-firewall-an-easy-way-to-control-access-to-your-app.html"&gt;Google Cloud Platform Blog: Introducing App Engine firewall, an easy way to control access to your app&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GAE 可以設定防火牆了啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://breezymove.blogspot.tw/2017/08/purism-librem-5.html"&gt;Purism 推出的安全、隱私手機— Librem 5 群眾募資計畫&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「Pursim 這間公司，正努力打造跑 GNU/Linux 不必煩惱的 Librem 電腦/平板/手機硬體產品。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;mysql&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/08/mysql-check-alive-ping-2017/amp/"&gt;MySQL CLI ping 驗證是否活著 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;mysqladmin ping&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;nginx&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gcos.me/2017-04-20_talk-about-nginx-accept-mutex.html"&gt;Nginx 的 accept_mutex 啟用或關閉？ | Ant's ATField&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;第一次聽到 Thundering herd problem  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/the-bayesian-trap/%E7%BF%BB%E8%AD%AF-%E9%A0%98%E5%B0%8E%E5%B0%88%E6%A1%88%E8%B5%B0%E5%90%91%E6%88%90%E5%8A%9F%E7%9A%84%E8%B3%87%E6%B7%B1%E5%B7%A5%E7%A8%8B%E5%B8%AB%E4%B9%8B%E8%B7%AF-d7992395277a"&gt;[翻譯] 領導專案走向成功的資深工程師之路 – The Bayesian Trap – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很棒的翻譯，是個可以拿來當作目標且隔一段時間後可以拿來自省的文章。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ofek/pypinfo"&gt;GitHub - ofek/pypinfo: Easily view PyPI download statistics via Google's BigQuery.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來 PyPI 有 Google Bigquery 的 public dataset 啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kennethreitz/setup.py"&gt;GitHub - kennethreitz/setup.py: 📦 A Human's Ultimate Guide to setup.py.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;setup.py&lt;/code&gt; 的優良範例  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.python-guide.org/en/latest/"&gt;The Hitchhiker’s Guide to Python! — The Hitchhiker's Guide to Python&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ictar/python-doc"&gt;GitHub - ictar/python-doc: translate python documents to Chinese for convenient reference 简而言之，这里用来存放那些Python文档君们，并且尽力将其翻译成中文~~&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;翻譯翻到有 8xx 顆星星好像有點厲害，收藏一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/uranusjr/the-python-you-dont-know"&gt;The Python You Don’t Know // Speaker Deck&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;介紹了一些 Python 比較鮮為人知的特性。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ofek/pypinfo"&gt;ofek/pypinfo: Easily view PyPI download statistics via Google's BigQuery.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This is relatively painless, I swear.  pypinfo accepts 0 or more options, followed by exactly 1 project, followed by 0 or more fields. By default only the last 30 days are queried. Let's take a look at some examples!  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;透過抓取 PyPI 在 Google Bigquery 上的 public dataset 的資料來顯示 PyPI 上的 package 的資訊，例如下載量等等。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/166506/finding-local-ip-addresses-using-pythons-stdlib/166520"&gt;networking - Finding local IP addresses using Python's stdlib - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;How can I find local IP addresses (i.e. 192.168.x.x or 10.0.x.x) in Python platform independently and using only the standard library?  This won't work always (returns 127.0.0.1 on machines having the hostname in /etc/hosts as 127.0.0.1), a paliative would be what gimel shows, use socket.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;import socket; socket.gethostbyname(socket.gethostname())&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/23292242/converting-to-not-from-ipython-notebook-format/35720002"&gt;python - Converting to (not from) ipython Notebook format - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;IPython Notebook comes with nbconvert, which can export notebooks to other formats.  But how do I convert text in the opposite direction? I ask because I already have materials, and a good workflow, in a different format, but I would like to take advantage of Notebook's interactive environment.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gooread.com/article/20120976319/"&gt;用 python 寫一個簡單的推薦系統 - GOOREAD&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://kate.io/blog/2017/08/22/weird-python-integers/"&gt;Weird Python Integers – Kate Murphy&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: all of this code was run on my machine using Python 3.6.1. Not everything will work the same if you test using Python 2.  That is suprising! It turns out that all “small integers” with the same value point to the same memory.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://szlin.me/2017/08/23/kernel_seccomp/"&gt;seccomp 學習筆記 – SZ Lin  &amp;amp; Embedded Linux&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!msg/digital-analytics-fundamentals/V9z4TVXQW_4/OgW6M9xJLqAJ"&gt;Google 網上論壇&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;不要再說啥 Google Analytics 的 code 擺哪裡都沒差了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hacks.mozilla.org/2017/08/life-after-flash-multimedia-for-the-open-web/"&gt;Life After Flash: Multimedia for the Open Web ★&lt;br /&gt;
        Mozilla Hacks – the Web developer blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;介紹了許多可以取代 Flash 的標準  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hacks.mozilla.org/2017/08/flash-in-memoriam/"&gt;Flash, In Memoriam ★&lt;br /&gt;
        Mozilla Hacks – the Web developer blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;紀錄了 Flash 從出生到將死的一些重大事件  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.acolyer.org/2017/08/24/a-cloud-based-content-gathering-network/"&gt;A cloud-based content gathering network | the morning paper&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;只聽過 CDN 第一次聽到 CGN  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/08/taiwan-first-mit-satellite-2017/amp/"&gt;台灣自製衛星「福爾摩沙衛星五號」升空 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇整理得更詳細了一些  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apan1121.github.io/powerInfo/"&gt;台灣電廠即時機組發電量&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這真的挺棒的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/AsiaTripper/comments/62e7h4/%E5%8F%A4%E5%9F%83%E5%8F%8A%E5%A4%A9%E7%84%B6%E8%BF%B7%E5%B9%BB%E8%97%A5%E8%97%8D%E7%9D%A1%E8%93%AE%E9%AB%94%E9%A9%97%E5%BF%83%E5%BE%97blue_lotus_trip_report/"&gt;古埃及天然迷幻藥「藍睡蓮」體驗心得（Blue Lotus Trip Report） : AsiaTripper&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;我的吃法是泡茶，粉狀的藍睡蓮要用煮沸的熱水去泡，就像真的在泡茶一樣  喝的時候意外沒有異味 反而還有一股淡淡茶香 聽說也可以搭配一般的其他茶葉或茶包喝  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@jhihsianwu/%E6%88%90%E7%94%B2-%E7%B2%BE%E6%BA%96%E5%AD%B8%E7%BF%92-%E6%91%98%E8%A6%81-82bd3dbe55f1?source=rss-e187bf7c71f------2"&gt;成甲《精準學習》| 摘要 – Jhih-Sian Wu – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「記錄的意義並不在於以後有人看。記錄過程本身就是意義。你做的所有事情的意義，不在於以後，就在於當下。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@jhihsianwu/%E9%97%9C%E6%96%BC%E8%BE%AD%E8%81%B7-%E8%BD%89%E8%A1%8C-%E6%80%9D%E8%80%83-%E6%96%87%E7%AB%A0%E5%88%86%E4%BA%AB-c8c26319d25b?source=rss-e187bf7c71f------2"&gt;關於辭職、轉行、思考｜文章分享 – Jhih-Sian Wu – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.zeroplex.tw/2017/08/coffee-highfive.html"&gt;尋找適合自己的工作場所 - Coffee Highfive - Zeroplex 生活隨筆&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;所以除了 cafe nomad 又有其他選擇了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.taiwannutrition.com/blog/bulletproof-coffee/"&gt;體重管理新趨勢：防彈咖啡和生酮飲食 - 台灣營養&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;無論你是不是正在減肥，大概都聽說過防彈咖啡（bulletproof coffee）這個新名詞。防彈咖啡堪稱是今年最夯的飲料，從歐美明星如《分歧者》女主角雪琳伍德莉（Shailene Woodley）、「1世代」成員哈利（Harry Styles），到台灣的健身部  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://udn.com/news/story/7016/2505160"&gt;防彈咖啡減肥法正流行 | 雜誌 | 聯合新聞網&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;最近國內外流行喝「防彈咖啡」減肥，這也是運動人士愛用的補充能量配方，可以提供滿滿活力。這種聽起來超級酷炫的咖啡，究竟是什麼？  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Thu, 19 Oct 2017 03:04:29 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-09-04:posts/2017/09/04/y2017w35/</guid><category>ai</category><category>cli</category><category>devops</category><category>gcp</category><category>life</category><category>linux</category><category>misc</category><category>mysql</category><category>nginx</category><category>programmer</category><category>python</category><category>security</category><category>taiwan</category><category>web</category></item><item><title>Y2017W33</title><link>https://blog.m157q.tw/posts/2017/08/22/y2017w33/</link><description>&lt;h3&gt;ai&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix"&gt;GitHub - junyanz/pytorch-CycleGAN-and-pix2pix: Image-to-image translation in PyTorch (e.g. horse2zebra, edges2cats, and more)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This is our ongoing PyTorch implementation for both unpaired and paired image-to-image translation. Check out the original CycleGAN Torch and pix2pix Torch if you would like to reproduce the exact same results in the paper.  The code was written by Jun-Yan Zhu and Taesung Park.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;又是一個 GAN 的應用，可以把一般的馬轉成斑馬，也可以把斑馬轉成一般的馬，還有很多 feature 可以互轉，因為可以互轉所以叫 CycleGAN。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/28488946"&gt;AI可能真的要代替插画师了…… - 知乎专栏&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://36kr.com/p/5088189.html?ktm_source=feed"&gt;学习周伯通左右手打架的 GANs，还有十大神奇应用_36 氪&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/tw_dsconf/ss-78795326"&gt;[系列活動] 一日搞懂生成式對抗網路&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/28495599?from=groupmessage&amp;amp;isappinstalled=0"&gt;在台湾参加前端大会是什么体验？ - 知乎专栏&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;又一篇  &lt;/li&gt;
&lt;li&gt;大家好好檢討檢討  &lt;/li&gt;
&lt;li&gt;為什麼前端大會沒人講網站後端跟架構  &lt;/li&gt;
&lt;li&gt;嗯  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mp.weixin.qq.com/s/GSBQA8To7u64OfaY6yGqZQ"&gt;台湾技术交流见闻与感想&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ffmpeg&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://askubuntu.com/questions/352920/fastest-way-to-convert-videos-batch-or-single"&gt;ffmpeg - Fastest way to convert videos (batch or single)? - Ask Ubuntu&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;graphql&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/graphql-python/graphene-django"&gt;graphql-python/graphene-django: Graphene Django integration&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.byvoid.com/zht/blog/googles-ideological-echo-chamber"&gt;Google的意識形態迴音室 - BYVoid&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看來這篇應該就是前陣子 Google 員工發的那篇鬧的沸沸揚揚的文章的中文翻譯版了吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rogerjin12/top-10-books-every-cto-should-read"&gt;Top 10 Books Every CTO Should Read&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;都是管理類的書籍呢  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.mz026.rocks/20170812/did-you-code-review-today"&gt;你今天 code review 了嗎？ – mz026's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是跟我自己目前在公司的經驗差不多  &lt;/li&gt;
&lt;li&gt;覺得最重要的還是把 PR 切得夠小這件事  &lt;/li&gt;
&lt;li&gt;不然真的會讓人很不想 review  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hellolynn.hpd.io/2017/08/03/%e5%bf%ab%e9%80%9f%e6%8e%92%e5%ba%8f-quick-sort/"&gt;快速排序 (Quick Sort) – 寫點科普，請給指教。&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;複習一下  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pymotw.com/3/statistics/"&gt;statistics — Statistical Calculations — PyMOTW 3&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來有這內建的函式庫  &lt;/li&gt;
&lt;li&gt;感覺大家應該都直接裝其他科學計算功能比較齊全的第三方函式庫了吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/tw_dsconf/python-78691041"&gt;[系列活動] Python 爬蟲實戰&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/tw_dsconf/python-78651480"&gt;[系列活動] Python 程式語言起步走&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1480386"&gt;Bug 1480386 – CVE-2017-1000117 git: Command injection via malicious ssh URLs&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;lag 了幾天 有個 PoC 有趣  &lt;/li&gt;
&lt;li&gt;https://t.co/milfQzPJPd  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://public-inbox.org/git/xmqqh8xf482j.fsf@gitster.mtv.corp.google.com/T/#u"&gt;[ANNOUNCE] Git v2.14.1, v2.13.5, and others&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.recurity-labs.com/2017-08-10/scm-vulns"&gt;Compromise On Checkout - Vulnerabilities in SCM Tools · The Recurity Lablog&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/greymd/CVE-2017-1000117"&gt;greymd/CVE-2017-1000117&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;selenium&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/32953498/how-can-i-remove-notifications-and-alerts-from-browser-selenium-python-2-7-7"&gt;how can i remove notifications and alerts from browser? selenium python 2.7.7 - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/casschin/1990245"&gt;Python webdriver api quick sheet&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://msdn.microsoft.com/en-us/library/ms256086(v=vs.110).aspx"&gt;XPath Examples&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mhperng.blogspot.tw/2017/08/blog-post_17.html"&gt;清大彭明輝的部落格: 媒體自律與民主政治的昏迷指數&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/08/news-methanol-alcoholism-wine-save-life-2017/amp/"&gt;新聞：陸男誤喝甲醇中毒 醫生繼續灌白酒來救命 - Tsung's Blog&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Tue, 17 Oct 2017 21:30:13 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-08-22:posts/2017/08/22/y2017w33/</guid><category>ai</category><category>blog</category><category>ffmpeg</category><category>graphql</category><category>life</category><category>programmer</category><category>programming</category><category>python</category><category>security</category><category>selenium</category><category>web</category></item><item><title>Y2017W31</title><link>https://blog.m157q.tw/posts/2017/08/07/y2017w31/</link><description>&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.heron.me/how-can-a-kid-prepare-for-the-future-e48394f24ba0?source=rss----d0ef0e7db3bd---4&amp;amp;gi=2e0d3b9ec672"&gt;How can a kid prepare for the future? – Heron’s Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;How would you succeed if you only do things that “others want”? 寫得好  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hellolynn.hpd.io/2017/07/28/%e6%ac%a1%e4%b8%96%e4%bb%a3%e9%80%9a%e8%a8%8a%e8%a6%8f%e6%a0%bc%e2%94%805g/"&gt;物聯網、VR、人工智慧，通通得仰賴的次世代通訊規格─5G – 寫點科普，請給指教。&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://data.leafwind.tw/build-software-engineering-and-data-culture-before-doing-ai-6e345986f872?gi=f8c26725a57f"&gt;先有軟體與數據文化，才有AI – all about data&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「沒有軟體工程文化、不重視數據，就沒有絲毫追趕 AI 的可能性」  &lt;/li&gt;
&lt;li&gt;這個副標題實在太中肯了  &lt;/li&gt;
&lt;li&gt;多少公司都是這樣妄想一步登天  &lt;/li&gt;
&lt;li&gt;唉  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@AlbertHuang314/%E5%AF%AB%E5%AF%A6%E9%A9%97%E7%B4%80%E9%8C%84%E6%88%96%E5%B7%A5%E4%BD%9C%E6%97%A5%E8%AA%8C%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7-eee6115760ef"&gt;寫實驗紀錄或工作日誌的重要性 – Albert Huang – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;每天花一點時間寫可以為自己之後省下不少時間呢，要查找一些相關資訊也會方便許多，之前的作法就是每天在相關的 issue 留下本日的進度，也方便自己隔天工作的時候可以快速進入狀況。  &lt;/li&gt;
&lt;li&gt;聽起來很簡單，但做起來不那麼簡單，每天要下班之前得花一段時間來整理並確認今天到底做了哪些事，一忙起來有時候就會無法做到。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/08/linux-find-limit-date-time-file-2017/amp/"&gt;Linux 使用 find 找出限定修改時間內的檔案 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;-mtime&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-mmin&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ctime&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-cmin&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-atime&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-amin&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ctf&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://maskray.me/blog/2017-08-01-defcon-25-ctf"&gt;DEFCON 25 CTF参赛记 | MaskRay&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來 cLEMENCy 不只 9-bit byte 還有 27-bit register width 和 middle-endian 真夠怪  &lt;/li&gt;
&lt;li&gt;HITCON 跟第三名差不少分 好猛啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;defcon&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/legitbs/cLEMENCy"&gt;GitHub - legitbs/cLEMENCy: cLEMENCy is the LEgitbs Middle ENdian Computer architecture developed by Lightning for DEF CON CTF 2017&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GitHub is home to over 20 million developers working together to host and review code, manage projects, and build software together.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://thylong.com/ci/2016/deploying-from-travis-to-gce/"&gt;Deploying from Travis-CI to Google Container Engine | blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Travis-ci is a great CI tool. In comparison to other solutions, it has the advantage of being free for Open Source projects and is well documented.  This is why I’ve been using it for a while and more recently with regexrace, a project hosted in Google Container Engine cluster.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/google-cloud/continuous-delivery-in-a-microservice-infrastructure-with-google-container-engine-docker-and-fb9772e81da7"&gt;Continuous Delivery in a microservice infrastructure with Google Container Engine, Docker and…&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Nowadays Continuous Integration (CI) has become a de facto standard for modern tech companies and startups. There are several options of how you can setup your perfect CI environment, from using your own Jenkins cluster to third-party services like Travis or CircleCI.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/campoy/go-tooling-workshop"&gt;GitHub - campoy/go-tooling-workshop: A workshop covering all the tools gophers use in their day to day life&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;k8s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/janetkuo/k8s-demos"&gt;janetkuo/k8s-demos: Demo scripts for Kubernetes built-in controllers&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kubernetes/contrib/tree/master/micro-demos"&gt;contrib/micro-demos at master · kubernetes/contrib&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/presentation/d/1fBnd7Z2yKpT25Ib2ThF7vHJi0AfVKHYnSrAYqvBSigg/edit?usp=embed_facebook&amp;amp;usp=embed_facebook&amp;amp;usp=embed_facebook&amp;amp;usp=embed_facebook"&gt;GCPUG.TW meetup #28 - GKE上運作您的K8S服務 - Google Slides&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/walterliu7/kubernetes-workshop-78554820"&gt;Kubernetes Workshop&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;mysql&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.eversql.com/faster-pagination-in-mysql-why-order-by-with-limit-and-offset-is-slow/"&gt;Why Order By With Limit and Offset is Slow - Faster Pagination in Mysql&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Queries with LIMITs and OFFSETs are common in application that require pagination and in some cases might work well for a while.   In many cases though, they become slow and painful once the OFFSET has a high value.  Well, in most cases, low offset queries are not slow.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://thinkgrowth.org/why-good-people-leave-large-tech-companies-af2b6fea4ee"&gt;Why Good People Leave Large Tech Companies – ThinkGrowth.org&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;I was visiting with an ex-student who’s now the CFO of a large public tech company. The company is still one of the hottest places to work in tech. They make hardware with a large part of their innovation in embedded software and services.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;後來還是覺得得先進這些大公司累積一些經驗後，才有本錢自己出去闖啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;GitHub - kamranahmedse/developer-roadmap: Roadmap to becoming a web developer in 2017&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.producthunt.com/@alison985/collections/hard-core-tech-books-that-interest-me"&gt;Hard Core Tech Books That Interest Me by alison985 - Product Hunt&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scotch.io/bar-talk/s-o-l-i-d-the-first-five-principles-of-object-oriented-design"&gt;S.O.L.I.D: The First 5 Principles of Object Oriented Design ― Scotch&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;These principles, when combined together, make it easy for a programmer to develop software that are easy to maintain and extend. They also make it easy for developers to avoid code smells, easily refactor code, and are also a part of the agile or adaptive software development.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;這篇很清楚的介紹了 OOP 裡頭會提到的 SOLID 各自代表什麼意思，也有給出實際程式碼的例子，排版也很乾淨舒服。  &lt;/li&gt;
&lt;li&gt;仔細想想大學修 OOP 的時候好像根本沒提到這個，只是在學 C++，修軟體工程的時候好像也只有提到 KISS。出來工作後也看到很多物件導向的程式碼沒照這個原則走，自己其實也沒有很嚴格遵守，現在看起來，如果都可以遵守的話，程式碼一定會好改不少吧，期許自己之後在寫物件導向有關的程式碼的時候可以謹記這 5 個原則。  &lt;/li&gt;
&lt;li&gt;SOLID  &lt;ul&gt;
&lt;li&gt;S - Single-responsiblity principle  &lt;ul&gt;
&lt;li&gt;A class should have one and only one reason to change, meaning that a class should have only one job.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;O - Open-closed principle  &lt;ul&gt;
&lt;li&gt;Objects or entities should be open for extension, but closed for modification  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;L - Liskov substitution principle  &lt;ul&gt;
&lt;li&gt;Let q(x) be a property provable about objects of x of type T. Then q(y) should be provable for objects y of type S where S is a subtype of T.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I - Interface segregation principle  &lt;ul&gt;
&lt;li&gt;A client should never be forced to implement an interface that it doesn't use or clients shouldn't be forced to depend on methods they do not use.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;D - Dependency Inversion Principle  &lt;ul&gt;
&lt;li&gt;Entities must depend on abstractions not on concretions. It states that the high level module must not depend on the low level module, but they should depend on abstractions.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/08/01/%e4%bd%a0%e6%89%80%e4%b8%8d%e7%9f%a5%e9%81%93%e7%9a%84-python-%e6%a8%99%e6%ba%96%e5%87%bd%e5%bc%8f%e5%ba%ab%e7%94%a8%e6%b3%95-06-concurrent-futures/"&gt;concurrent.futures — 創立非同步任務 — 你所不知道的 Python 標準函式庫用法 06 | louie_lu's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;還真沒印象有看過這個 lib 感覺比用 multiprocessing 或 threading 還好寫  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/07/28/%e4%bd%a0%e6%89%80%e4%b8%8d%e7%9f%a5%e9%81%93%e7%9a%84-python-%e6%a8%99%e6%ba%96%e5%87%bd%e5%bc%8f%e5%ba%ab%e7%94%a8%e6%b3%95-03-abc/"&gt;abc — 抽象類別 — 你所不知道的 Python 標準函式庫用法 03 | louie_lu's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;也是個有用過但一直沒有很懂的 Library 呢  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://logan.tw/posts/2016/01/02/python-new-style-class/"&gt;Python New Style Class | Logan's Note&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;雖然有看過了 但再複習一次 Class 的繼承在 Python 2 和 3 之間的差別吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/07/27/%e4%bd%a0%e6%89%80%e4%b8%8d%e7%9f%a5%e9%81%93%e7%9a%84-python-%e6%a8%99%e6%ba%96%e5%87%bd%e5%bc%8f%e5%ba%ab%e7%94%a8%e6%b3%95-02-random/"&gt;random — 你所不知道的 Python 標準函式庫用法 02 | louie_lu's blog&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html"&gt;Orange: How I Chained 4 vulnerabilities on GitHub Enterprise, From SSRF Execution Chain to RCE!&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;竟然可以串到變 RCE 真精彩  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hackaday.com/2017/07/30/find-instructions-hidden-in-your-cpu/"&gt;Find Instructions Hidden In Your CPU | Hackaday&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;There was a time when owning a computer meant you probably knew most or all of the instructions it could execute. Your modern PC, though, has a lot of instructions, many of them meant for specialized operating system, encryption, or digital signal processing features.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xoreaxeaxeax/sandsifter"&gt;xoreaxeaxeax/sandsifter: The x86 processor fuzzer&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The sandsifter audits x86 processors for hidden instructions and hardware bugs, by systematically generating machine code to search through a processor's instruction set, and monitoring execution for anomalies.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=E6BY7_Zpj0I&amp;amp;feature=youtu.be&amp;amp;t=1m21s"&gt;一青窈與平井堅XD - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;靠北 用 Audacity 試了一下發現這是真的說  &lt;/li&gt;
&lt;li&gt;一青窈的もらい泣き用改變音高的那種放慢 80% 就會變成平井堅的歌聲  &lt;/li&gt;
&lt;li&gt;以前聽這首歌完全不知道 太神奇了 XDDD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2017/07/working-poor.html"&gt;穷忙的人生 - 阮一峰的网络日志&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;真是貼切啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kocpc.com.tw/archives/157259"&gt;波音 787 超狂測試，一邊挑戰最長飛行距離一邊畫飛機 - 電腦王阿達&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作為客機製造公司，Boeing 波音可以說是這個領域的第一。最近該公司測試最新客機 波音 787 ，計畫要進行一場近18小時的長程飛行測試時，一般只要讓飛機在兩地之間來回繞行以達到里程，但該公司最後在美國領空，用飛行過  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cool3c.com/article/127439"&gt;史上最狂 AirDrop 飛行中的 747、777 機長對傳照片 #波音 (127439) - 癮科技&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;剛在Facebook粉絲專頁Jamaica Aviation Spotters貼出某位波音747-8型飛機的機長，碰到正在飛行的新加坡航空777型飛機，想傳圖片給對方機長，結果靠的竟然是iPhone的AirDrop，這大概是蘋果AirDrop的最好宣傳案例。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;youtube&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/LifeProTips/comments/247c2u/lpt_youtube_how_to_play_all_videos_from_a_channel/"&gt;LPT: Youtube: how to play all videos from a channel as a playlist : LifeProTips&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;隨便點一個影片在網址加上&lt;code&gt;&amp;amp;feature=mfu_in_order&amp;amp;list=UL&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Tue, 17 Oct 2017 21:09:27 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-08-07:posts/2017/08/07/y2017w31/</guid><category>blog</category><category>cli</category><category>ctf</category><category>defcon</category><category>gke</category><category>golang</category><category>k8s</category><category>life</category><category>misc</category><category>mysql</category><category>programmer</category><category>programming</category><category>python</category><category>security</category><category>trivia</category><category>youtube</category></item><item><title>Y2017W28</title><link>https://blog.m157q.tw/posts/2017/07/17/y2017w28/</link><description>&lt;h3&gt;cs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/07/10/ai-history"&gt;從人工智慧、機器學習到深度學習，你不容錯過的人工智慧簡史 - INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;複習一下人工智慧簡史  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AliasIO/Wappalyzer"&gt;GitHub - AliasIO/Wappalyzer: Cross-platform utility that uncovers the technologies used on websites.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Wappalyzer is a cross-platform utility that uncovers the technologies used on websites. It detects content management systems, eCommerce platforms, web servers, JavaScript frameworks, analytics tools and many more.  Refer to the wiki for screenshots, information on how to contribute and more.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jvns.ca/blog/2017/07/05/linux-tracing-systems/"&gt;Linux tracing systems &amp;amp; how they fit together - Julia Evans&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇介紹的工具也太多了吧...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://data.leafwind.tw/rules-of-machine-learning-traditional-chinese-da0afe0991d6"&gt;《機器學習法則》繁中版（一） – all about data&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://martin.zinkevich.org/rules_of_ml/rules_of_ml.pdf"&gt;rules_of_ml.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/21295010"&gt;机器学习系统丛林迷路指南 - 知乎专栏&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@kstseng/kkbox-data-game-17-06-1st-place-solution-2baa14aee5f4"&gt;KKBOX Data Game - 17.06 1st place Solution – KS Tseng – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.r2d3.us/%E5%9C%96%E8%A7%A3%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92%E7%AC%AC%E4%B8%80%E7%AB%A0/"&gt;圖解機器學習&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@honglong/codetengu-%E5%90%84%E6%9C%9F%E7%9A%84-title-4d4812cfad15"&gt;CodeTengu 各期的 title – Chris Yuan, 袁昇禾 – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://hellolynn.hpd.io/2017/06/09/%e5%a6%82%e4%bd%95%e5%af%ab%e5%87%ba%e4%b8%80%e7%af%87%e5%a5%bd%e6%87%82%e7%9a%84%e6%96%87%e7%ab%a0%e4%bb%a5%e5%88%a9%e6%ba%9d%e9%80%9a%ef%bc%9f%e5%85%ad%e5%a4%a7%e6%8a%80%e5%b7%a7%e5%88%86%e4%ba%ab/"&gt;如何寫出一篇好懂的文章以利溝通？六大技巧分享 – 寫點科普，請給指教。&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://data.leafwind.tw/engineering-culture-in-appier-21c6604f776a"&gt;Appier 的工程師文化 – all about data&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/07/09/7435/%e5%9c%a8%e7%a8%8b%e5%bc%8f%e7%ab%b6%e8%b3%bd%e5%be%97%e7%8d%8e%e8%b2%a0%e9%9d%a2%e7%9b%b8%e9%97%9c%e6%96%bc%e5%b7%a5%e4%bd%9c%e7%9a%84%e5%93%81%e8%b3%aa/"&gt;在程式競賽得獎負面相關於工作的品質 | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Quick but dirty.  &lt;/li&gt;
&lt;li&gt;Slow but clean.  &lt;/li&gt;
&lt;li&gt;Which one?  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/07/video-et3-chinese-input-tutorial-2017/amp/"&gt;影片：倚天中文系統 的宣傳教學影片 - Tsung's Blog&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://itaigi.tw/k/%E7%95%AA%E7%9F%B3%E6%A6%B4"&gt;iTaigi 愛台語&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://shell.twbbs.org/forums/forum/forum_posts.asp?TID=9654&amp;amp;PN=41&amp;amp;FID=6&amp;amp;PR=3"&gt;台灣貝類圖鑑討論區 (http://shells.tw/forums/forum): 「芭樂」一詞的由來&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;我們市場常見的「芭樂」品種很多, 原產地在南美洲, 後經由歐洲人傳至世界各地栽種, 數百年來又經人工配種選育, 種類已多不可數, 「芭樂」華語稱為番石榴, 取其像石榴之意, 但台語的「芭樂」一詞又是怎麼來的呢?  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Tue, 17 Oct 2017 06:51:23 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-07-17:posts/2017/07/17/y2017w28/</guid><category>cs</category><category>github</category><category>linux</category><category>machine learning</category><category>misc</category><category>programmer</category><category>programming</category><category>taiwan</category></item><item><title>Y2017W24</title><link>https://blog.m157q.tw/posts/2017/06/19/y2017w24/</link><description>&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/unix/comments/6gxduc/how_is_gnu_yes_so_fast/"&gt;How is GNU &lt;code&gt;yes&lt;/code&gt; so fast? : unix&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;etherum&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/taipei-ethereum-meetup/%E9%96%80%E5%A4%96%E6%BC%A2%E5%88%9D%E6%8E%A2%E4%BB%A5%E5%A4%AA%E5%9D%8A-ethereum-c425c1470151?source=rss-e187bf7c71f------2"&gt;新手初探以太坊（Ethereum） – Taipei Ethereum Meetup – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;整理挺多資訊的  &lt;/li&gt;
&lt;li&gt;加減看  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/5120038/is-it-possible-to-cherry-pick-a-commit-from-another-git-repository"&gt;Is it possible to cherry-pick a commit from another git repository? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/12320863/how-do-you-take-a-git-diff-file-and-apply-it-to-a-local-branch-that-is-a-copy-o"&gt;How do you take a git diff file, and apply it to a local branch that is a copy of the same repository? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/9507417"&gt;https://stackoverflow.com/a/9507417&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;git formatpatch&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;git am&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;productivity&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gitbook.com/book/jhargrave/mind-hacking/details"&gt;Mind Hacking · GitBook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;JOIN THE MIND HACKING MOVEMENT.  Mind Hacking teaches you how to reprogram your thinking -- like reprogramming a computer -- to give you increased mental efficiency and happiness. The entire book is available here for free:Click here to start reading Mind Hacking.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.blog/2017/06/15/developers-use-spaces-make-money-use-tabs/"&gt;Developers Who Use Spaces Make More Money Than Those Who Use Tabs - Stack Overflow Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Do you use tabs or spaces for code indentation?  This is a bit of a “holy war” among software developers; one that’s been the subject of many debates and in-jokes. I use spaces, but I never thought it was particularly important.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chairco.github.io/2017Talk-Django-crawler-monitor/#cover"&gt;用 Django 建立一個可以設定爬蟲排程任務與監控的網站 — 2017 PyConTW Talk&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;公司與工廠間再生產產品期間時需要經常即時的傳遞零組件資料，這些資料存在品牌公司的資訊系統。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ithome.com.tw/news/114953"&gt;資安一週[0610-0616]：Facebook申請專利技術，暗中監控用戶功能來強化臉書服務 | iThome&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Facebook早在2015年已經申請一項專利技術，利用行動裝置攝影機暗中捕捉用戶表情，強化發文功能。之後，2016、2017年也利用盜錄用戶鍵盤打字、滑鼠移動和觸碰螢幕紀錄，預測用戶情緒。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cbinsights.com/blog/facebook-emotion-patents-analysis/"&gt;Facebook’s Emotion Tech: Patent Filings Show New Ways To Monitor Your Feelings&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;真的是各種厲害到讓人有點害怕的手段呢  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/milipski/test-doubles---fakes-mocks-and-stubs"&gt;Test Doubles - Fakes, Mocks and Stubs.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很棒的一篇關於軟體測試裡頭這三種名詞差別的介紹文  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://facebook.tracking.exposed"&gt;facebook tracking exposed&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Ellaeon/status/875017007699173379"&gt;Pellaeon Lin on Twitter: "https://t.co/fIUCbf9H7q&lt;br /&gt;
這計劃太有趣啦！試圖透過瀏覽器插件收集 FB 使用者的牆上會看到的公開貼文，傳回中央伺服器，結合多人收集到的資料，試圖逆向出臉書的newsfeed演算法，看臉書如何決定使用者看到的資訊。&lt;br /&gt;
資料已經被拿來分析荷蘭和法國大選，太酷啦！"&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ventureharbour.com/improving-site-speed/"&gt;How to Improve Your Page Load Speed by 70.39% in 45 Minutes&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.thenewslens.com/article/70491"&gt;也請記得陳冠齊，一個熱愛土地、用鏡頭記錄台灣的25歲青年 - The News Lens 關鍵評論網&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.twreporter.org/a/software-microsoft-tw-government"&gt;自願被微軟綁架的台灣政府 - 報導者 The Reporter&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;對許多台灣人來說，文書軟體就等於Word，簡報軟體就等於PowerPoint，幾乎沒有微軟產品以外的想像。但事實上，除了微軟的產品以外，我們還有LibreOffice、OpenOffice等辦公軟體的選擇，但為何不論是人民或是政府，都  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@jhihsianwu/%E9%97%9C%E6%96%BC%E5%96%80%E4%BB%80%E7%B1%B3%E7%88%BE%E7%BE%8A%E6%AF%9B-a9af95a7c0df?source=rss-e187bf7c71f------2"&gt;關於喀什米爾羊毛 – Jhih-Sian Wu – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「山羊在天冷的時候身體自然長出用來抵禦寒冷，而天熱時慢慢退掉的絨叫做羊絨。」  &lt;/li&gt;
&lt;li&gt;「羊絨的保暖程度是羊毛的八倍，重量只有羊毛的五分之一。」  &lt;/li&gt;
&lt;li&gt;「羊絨只有山羊才有，綿羊沒有。」  &lt;/li&gt;
&lt;li&gt;長知識了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 28 Aug 2017 22:08:39 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-06-19:posts/2017/06/19/y2017w24/</guid><category>cli</category><category>etherum</category><category>git</category><category>life</category><category>productivity</category><category>programmer</category><category>python</category><category>security</category><category>taiwan</category><category>testing</category><category>web</category></item><item><title>Y2017W23</title><link>https://blog.m157q.tw/posts/2017/06/12/y2017w23/</link><description>&lt;h3&gt;ai&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blogs.nvidia.com.tw/2016/07/whats-difference-artificial-intelligence-machine-learning-deep-learning-ai/"&gt;人工智慧、機器學習與深度學習間有什麼區別? | NVIDIA 台灣官方部落格&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;此為資深科技圈記者 Michael Copeland 撰文介紹深度學習基礎系列文章的首篇。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@kailashahirwar/essential-cheat-sheets-for-machine-learning-and-deep-learning-researchers-efb6a8ebd2e5"&gt;Essential Cheat Sheets for Machine Learning and Deep Learning Engineers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Learning machine learning and deep learning is difficult for newbies. As well as deep learning libraries are difficult to understand. I am creating a repository on Github(cheatsheets-ai) with cheat sheets which I collected from different sources.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kailashahirwar/cheatsheets-ai"&gt;GitHub - kailashahirwar/cheatsheets-ai: Essential Cheat Sheets for deep learning and machine learning researchers&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/asiayo-engineering/%E5%9B%9B%E5%A4%A7-seo-%E5%85%A7%E5%8A%9F%E5%BF%83%E6%B3%95-%E8%AE%93%E6%88%91%E5%80%91%E7%9A%84-seo-%E6%B5%81%E9%87%8F%E7%88%86%E7%82%B8%E6%80%A7%E6%88%90%E9%95%B7-30-%E5%80%8D-c186f384f51a?source=rss-b909769294ad------2"&gt;四大 SEO 內功心法，讓我們的 SEO 流量爆炸性成長 30 倍 – AsiaYo Engineering – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;挺不錯的流量成長分享  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;database&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/tw/blogs/ai/tuning-your-dbms-automatically-with-machine-learning/"&gt;Tuning Your DBMS Automatically with Machine Learning | AWS AI Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a guest post by Dana Van Aken, Andy Pavlo, and Geoff Gordon of Carnegie Melon University. This project demonstrates how academic researchers can leverage our AWS Cloud Credits for Research Program to support their scientific breakthroughs.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;用機器學習自動調整 DBMS 的 config  &lt;/li&gt;
&lt;li&gt;而且效果跟人手動調的差不多  &lt;/li&gt;
&lt;li&gt;DBA 要失業了嗎...?  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://db.cs.cmu.edu/papers/2017/tuning-sigmod2017.pdf"&gt;tuning-sigmod2017.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmu-db/ottertune"&gt;cmu-db/ottertune: The automatic DBMS configuration tool&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;deep learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0"&gt;深度學習 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;深度學習（英語：deep learning）是機器學習領域中一系列試圖使用多重非線性變換對數據進行多層抽象的算法[1]。深度學習是機器學習中表征學習（英語：learning representation）方法的一類。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/tw_dsconf/ss-62245351"&gt;[DSC 2016] 系列活動：李宏毅 / 一天搞懂深度學習&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Koed00/django-q"&gt;Koed00/django-q: A multiprocessing distributed task queue for Django&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;PyCon TW 聽到的分享，好像不錯用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;k8s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hobby-kube/guide"&gt;hobby-kube/guide: Kubernetes clusters for the hobbyist.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This guide answers the question of how to setup and operate a fully functional, secure Kubernetes cluster on a cloud provider such as DigitalOcean or Scaleway.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;open source&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://opensourcesurvey.org/2017/"&gt;Open Source Survey&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;In collaboration with researchers from academia, industry, and the community, GitHub designed a survey to gather high quality and novel data on open source software development practices and communities.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotblogs.com.tw/hatelove/2017/06/07/agile-and-software-development-recommend-books"&gt;[推坑] 推薦敏捷開發、專案管理、程序員養成、軟體設計 經典書籍 30 本 | In 91 - 點部落&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;大概看過 1/3 而已 QQ  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pymotw.com/3/zipfile/"&gt;zipfile — ZIP Archive Access — PyMOTW 3&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.pipenv.org/en/latest/"&gt;Pipenv: Sacred Marriage of Pipfile, Pip, &amp;amp; Virtualenv — pipenv 5.1.1 documentation&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/toomore/grs"&gt;GitHub - toomore/grs: 📈 台灣上市上櫃股票價格擷取（Fetch Taiwan Stock Exchange data）含即時盤、台灣時間轉換、開休市判斷。&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;grs 台灣上市上櫃股票價格擷取 主要開發擷取台灣股市（TWSE）股價資料 資料來源 證券交易所網站 。 資料來源 證券櫃檯買賣中心 。  版本資訊 Authors: Toomore Chiang Version: 0.7.0 of 2016/09/11 Python Version: Python 2.7 Docs: http://grs-docs.toomore.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/8822335/what-do-the-python-file-extensions-pyc-pyd-pyo-stand-for"&gt;What do the python file extensions, .pyc .pyd .pyo stand for? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;What do these python file extensions mean?  What are the differences between them and how are they generated from a *.py file?  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kennethreitz/pipenv"&gt;kennethreitz/pipenv: Sacred Marriage of Pipfile, Pip, &amp;amp; Virtualenv.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Pipenv harnesses Pipfile, Pip, and Virtualenv together in unison to create a single, high-quality tool that is optimized for workflow efficiency and best practices.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pyvideo.org/pycon-us-2017/whats-new-in-python-36.html"&gt;PyVideo.org ‧ What's new in Python 3.6&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 3.6 has turned out to be quite the release! With 16 Python Enhancement Proposals incorporated into the version, Python 3.6 is only surpassed by Python 3.0 for having more PEPs included in a single release.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.instagram.com/web-service-efficiency-at-instagram-with-python-4976d078e366"&gt;Web Service Efficiency at Instagram with Python – Instagram Engineering&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Instagram currently features the world’s largest deployment of the Django web framework, which is written entirely in Python. We initially chose to use Python because of its reputation for simplicity and practicality, which aligns well with our philosophy of “do the simple thing first.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/python-modernize/python-modernize"&gt;GitHub - python-modernize/python-modernize: Modernizes Python code for eventual Python 3 migration. Built on top of 2to3.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This library is a very thin wrapper around lib2to3 to utilize it to make Python 2 code more modern with the intention of eventually porting it over to Python 3.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;"Speakers: Lisa Guo, Hui DingKeynoteSlides can be found at: https://speakerdeck.com/pycon2017 and https://github.com/PyCon/2017-slides"  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://python.jobbole.com/87814/"&gt;Python   Django 如何支撐了 7 億月活用戶的 Instagram？ - Python - 伯樂在線&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;雖然沒有太詳細的細節但仍然是很棒的介紹  &lt;/li&gt;
&lt;li&gt;從 Python 2 轉到 Python 3 效能果然提升了不少  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=66XoCk79kjM"&gt;Lisa Guo, Hui Ding Keynote PyCon 2017 - YouTube&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[Optimize Performance Under Varying Network Conditions  |  Web  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/augmented-traffic-control"&gt;GitHub - facebook/augmented-traffic-control: Augmented Traffic Control: A tool to simulate network conditions&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://facebook.github.io/augmented-traffic-control/"&gt;ATC - A tool to simulate network conditions&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;vim&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/1269603/to-switch-from-vertical-split-to-horizontal-split-fast-in-vim"&gt;To switch from vertical split to horizontal split fast in Vim - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2017/06/tcp-protocol.html"&gt;TCP 协议简介 - 阮一峰的网络日志&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/tools/chrome-devtools/network-performance/reference"&gt;Network Analysis Reference  |  Web  |  Google Developers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Discover new ways to analyze how your page loads in this comprehensive reference of Chrome DevTools network analysis features.  By default, DevTools records all network requests in the Network panel, so long as DevTools is open.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cmmedia.com.tw/home/articles/4128"&gt;「告別台灣」 王丹對台灣最後的臨別贈言&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;覺得挺中肯的，以下節錄：  &lt;ol&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;DPP vs. 太陽花  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;王丹認為，民進黨上台以來太自大了，它忘了之所以拿下政權，是太陽花運動起了很大的作用。他提醒民進黨，不要辜負太陽花世代，和他們爭取的價值。「至於國民黨，提都不用提。」他提醒，民進黨對青年世代應該要更謙卑。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;暴力政治vs.民主政治  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;王丹憂心，「台灣很危險的是暴民政治（或暴力政治），我說的是白狼、愛國同心會這類的暴力干預，為什麼政府不處理呢？我認為，至少警政系統有縱容。」他指出，如果大型理性的公共討論一直受暴力干預，對民主政治是非常大的傷害，也會影響整體的公民參與，是個「隱患」。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「台灣人太天真了，怎可以讓黑道治國。為什麼台灣人沒有上街頭去抗議黑道干預政治呢。不要忘了，中共和國民黨就是靠這個起來的！」王丹警惕。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;公民素質vs.民主制度  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;王丹觀察，台灣的公民素質沒有那麼高。而且，台灣人聽不得外人批評。他舉例，每次他在臉書批評，台灣人就留言辯解，甚至說，中國更爛，「我的天啊，你們是要比爛嗎？」他舉例，在大學上課時，有一位中國交換學生說，反對外國干涉中國內政，這時候，有位來自德國的學生站起來說：「我們歡迎世界各國來干涉我們德國內政啊，！這不是可以幫助德國更好嗎！」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;他指出，當台灣人批評中國的素質差，但是，他觀察，台灣的公民素質「也沒有高到沒有素質低的狀況」。他舉了數例，比如駕駛人或機車騎士常為一己之便而擅闖行人區或搶快，對他人毫不尊重。「交通問題可以體現台灣公民素質低，台灣真是欠缺。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;他重話提醒，「台灣未來政治如果反覆，絕對不是因為制度，而是公民素質的問題。而且，一遇到危機就想回到權威的懷抱，就是民主素養不夠。」他也舉出許多台灣人批評中國人沒有文明，但是自己卻常犯的行為，比如溜狗不撿狗屎、隨處尿尿，前人為後人推門，後人卻沒有說謝的習慣。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「台灣民主2.0，就是提高公民素質。」他直言。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;中國問題vs.兩岸關係  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;很少台灣人關心中國，香港問題。中國如果不民主化，對台灣絕非好事，一定會軍國主義，造成對周邊國家的擴張問題。「這對台灣怎麼會好呢？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;王丹更直言，「台灣政府只看兩岸關係卻不了解中國問題。這是很大的危險。國民黨只了解共產黨。但是，民進黨不只對中國共產黨不了解，對中國都不了解，這才會出現民進黨執政之後一直以為對中國釋放善意，但是中國卻不領情的局面。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;中國民主化vs.台灣  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;中國民主化對台灣的切身利益相關。但是，大多數台灣人卻覺得沒有相關，有著小朝廷的偏安理念。王丹說，這從他推動中國民主化，在台灣沒有籌到多少款可以窺見。他提醒，「台灣應該想辦法推動周邊國家的力量，一起讓中國民主化。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;儘管如此，王丹每年自辦中國沙龍，「台灣人應該去影響在台灣的中國學生，把他變成朋友，你一直罵他，不是多樹立一個敵人嗎？所以，影響在台灣的中國學生就是支持中國民主化。台灣只有放開，不能再那麼狹隘。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;教育是立國之本  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;台灣想再靠經濟再強是難了（意思是，臺灣不能再靠過去威權時代的利益分配來創造經濟奇蹟），即使歐洲國家也做不到。只有中國，美國才能靠經濟強盛。所以，台灣能靠什麼立足東亞？就是教育。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「台灣對教育的投入還不如中國。台灣從社會到政府都太忽視教育了。台灣要亡，會亡在教育。全世界最重要的就是人才，美國就是靠著給獎學金吸引優秀人才來讀，再讓他們讀完留下來工作而強大的。行政院應該拿4800億廣設獎學金，吸引外國人來念書。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;他舉例，香港的大學教師薪水是台灣的六倍多，外國學者到北京大學講學的薪水之高，在他看來，給高薪就能請到好的師資，但是，台灣的大學給兼課老師的薪水卻是「要飯的」－東部某大學的兼課教師一年只拿一萬多元－投入的心力與正職老師一樣。他舉例，台灣的某人能辦唐獎，花那麼多錢給國外學者，如果拿這些錢好好做教育，該有多好?他認為，台灣絕對不是沒有錢。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;觀念進步vs.文明社會  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;王丹說，台灣離觀念進步的文明社會還有一段距離。他以同婚爭議為例，「護家盟的人講話都是很奇怪的言論，這些對整個社會真的沒有影響嗎？」他認為，台灣雖然是亞洲第一個開放同婚的國家，但是卻是因大法官釋憲而來，總統卻不表態。他推測，這個社會反對同婚的比率恐怕很大，反映人民對公平、民主的觀念還有待加強。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「我認為反同婚就是反民主。同婚爭取的是同婚後面的平等的地位。台灣接下來很重要工作就是人權。讓每個個人都能被尊重。」王丹說。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;轉型正義的重點是歷史教學  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;王丹的博士論文研究台灣白色恐怖，他在大學教歷史，卻驚訝地發現，很多大學生對台灣歷史欠缺了解，學生都說，高中沒有教。「台灣史應該是通識課，台灣人應該了解台灣的歷史，但是，台灣有教中國史、外國史，卻從來沒有把台灣史或白色恐怖當作通識課。這不是很奇怪嗎？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「這也難怪，民進黨要做轉型正義，但是因為大家都不知道歷史，所以有些人就說民進黨是在報復，是在鬥爭。是這樣嗎？我看，要做轉型正義，等這些受難者都死了，也都沒有人記得了。台灣社會太缺乏歷史記憶了！這是需要靠歷史教學的！」王丹大聲疾呼。他舉例，才不過幾年，就已經沒有多少人知道康寧祥是誰了，怎麼會這樣呢？他喟嘆。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;願為獨立而戰，才可能獨立  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;王丹提醒，獨立不是只是在電視上喊獨立就可以成功的。他曾經看過一份民意調查，年輕人支持台灣獨立的比率很高，但是，願不願意為了獨立而打仗？卻只剩下20%(王丹已經在官網上貼出他引用的台獨民意調查https://www.dcard.tw/f/trending/p/218331327  。看起來，當天他的演講說只剩20%是口誤。願為獨立而戰的人數從2002年22%成長到2015年的32%)。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「世界各國自古以來獨立都是困難的，因為太難了，所以都是打仗解決的。台灣人要有付出代價的心理準備。自保的最好方式是攻擊，而不是防守。如果台灣人能表現出能打的氣勢，就能獨立了。」王丹說。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;立專法－吸引香港人來台工作  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;王丹觀察，中國對香港的民主愈來愈限縮，香港人一定會想辦法移民來台灣。他也觀察，香港的菁英人才的平均工作表現高於台灣人，台灣應該立專法，創設條件吸引香港菁英人才來工作。「台灣對外國人的防禦心理太強，應該要趁機廣納人才。」王丹建議。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 28 Aug 2017 22:01:17 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-06-12:posts/2017/06/12/y2017w23/</guid><category>ai</category><category>blog</category><category>database</category><category>deep learning</category><category>django</category><category>k8s</category><category>open source</category><category>programmer</category><category>python</category><category>taiwan</category><category>testing</category><category>vim</category><category>web</category></item><item><title>Y2017W21</title><link>https://blog.m157q.tw/posts/2017/05/29/y2017w21/</link><description>&lt;h3&gt;alpha go&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Z-HL5nppBnM"&gt;The Future of Go Summit, Match One: Ke Jie &amp;amp; AlphaGo - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;圖靈測試 （誒  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/05/25/analyzing-new-alphago"&gt;揭秘新版 AlphaGo，為什麼它能戰勝柯潔？ - INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;雖然只有 1/4 子，但前天 AlphaGo 在對戰柯潔時那種游刃有餘，穩扎穩打的作風已然顯示出其強大的實力。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2017/05/23/analyzing-alphago-versus-ke-jie-round-1"&gt;柯潔為何說「輸得沒脾氣」？8 個問題解讀人機大戰第一局 - INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;經過四個多小時的對弈，柯潔以四分之一子之差敗給了 AlphaGo。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;bitcoin&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitcoin.org/bitcoin.pdf"&gt;bitcoin.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@benzwjian/%E6%AF%94%E7%89%B9%E5%B9%A3%E8%83%8C%E5%BE%8C%E7%9A%84%E7%B6%93%E6%BF%9F%E5%93%B2%E5%AD%B8-440f4d74c074"&gt;比特幣背後的經濟哲學 – Ben Z.W. Jian – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bitcoin/bitcoin"&gt;bitcoin/bitcoin: Bitcoin Core integration/staging tree&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blockchain&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@benzwjian/%E5%8D%80%E5%A1%8A%E9%8F%88%E5%A6%82%E4%BD%95%E9%81%8B%E4%BD%9C-b7c8d4131a0e"&gt;區塊鏈如何運作? – Ben Z.W. Jian – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;這篇文翻譯自”How Does the Blockchain Work?”全文。作者Michele D'Aliessi用淺白易懂的文字闡述比特幣(Bitcoin)和區塊鏈(Blockchain)的運作原理，是一篇很棒的入門文章，因此我決定挑戰翻譯看看，讓更多人了解這個技術。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ethereum&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@twedusuck/%E6%AF%94%E7%89%B9%E5%B9%A3-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%9A%84%E4%B8%80%E4%BA%9B%E5%95%8F%E9%A1%8C%E4%BB%8B%E7%B4%B9-%E4%BA%8C-bc06a5e7f8fc"&gt;比特幣、以太坊的一些問題介紹(二) – NIC Lin – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;這個漏洞來自於比特幣的簽章機制：解鎖script（比特幣的script介紹可看這篇）因為包含簽名本身，所以不會成為被簽名的一部分（否則就會產生無窮迴圈：簽名包含script，script本身又包含簽名….  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@twedusuck/%E6%AF%94%E7%89%B9%E5%B9%A3-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%9A%84%E4%B8%80%E4%BA%9B%E5%95%8F%E9%A1%8C%E4%BB%8B%E7%B4%B9-%E4%B8%80-5f4e07b9ca71"&gt;比特幣、以太坊的一些問題介紹(一) – NIC Lin – Medium&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E4%BB%A5%E5%A4%AA%E5%9D%8A"&gt;以太坊 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lnishan.github.io/2017/j-1-visa-google-nctu/"&gt;Google Internship, J-1 Visa, NCTU&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;光看就覺得好麻煩啊..  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/asiayo-engineering/%E5%A6%82%E4%BD%95%E7%94%A8-google-tag-manager-%E6%89%93%E9%80%A0%E5%85%8D%E8%B2%BB%E7%9A%84-data-collection-x-streaming-data-%E6%9E%B6%E6%A7%8B-d4593b88ffea"&gt;如何用 Google Tag Manager 打造免費的 Data Collection x Streaming Data 架構&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;從剛進來的時候敝公司就是這樣做了，不過有沒有能力整理成這樣的文章，好像又是另外一回事哩  。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ctl.io/developers/blog/post/dockerfile-add-vs-copy/"&gt;Dockerfile: ADD vs COPY - CenturyLink Cloud Developer Center&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This blog post will help you understand the differences between two similar Dockerfile instructions – ADD and COPY – how they became what they are today, and our recommendation on which instruction you should use. (Hint: It's not ADD)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chubin/cheat.sh"&gt;GitHub - chubin/cheat.sh: the fastest way to find {command options|code pieces} you need&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kkdai/bookmark-makerserver"&gt;GitHub - kkdai/bookmark-makerserver: A IFTTT MakerServer to help you post your tweet to github issue as a bookmark&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;"Bookmark Maker Server" is a webhook service help you using IFTTT to forward your tweet to your github issue as a bookmark. Result on kkdai/bookmarks, feel free to take a loook.  Here is the step, how to use this without writing any code.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stretchr/testify"&gt;stretchr/testify: A sacred extension to the standard go testing package&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Go code (golang) set of packages that provide many tools for testifying that your code will behave as you intend.  The assert package provides some helpful methods that allow you to write better test code in Go.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ruby-china.org/topics/33036"&gt;量產型炮灰工程師 ‧ Ruby China&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;嗯，某神跑去中國開課之後，也開始被發現真面目啦，有種在台灣就看過的 Deja Vu。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/QQuick/Opy"&gt;QQuick/Opy: Obfuscator for Python&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;The famous Phaistos Disc from Crete, obfuscation unbroken after thousands of years.  Opy will obfuscate your extensive, real world, multi module Python source code for free! And YOU choose per project what to obfuscate and what not, by editing the config file:  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/liftoff/pyminifier"&gt;GitHub - liftoff/pyminifier: Pyminifier is a Python code minifier, obfuscator, and compressor.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;When you install pyminifier it should automatically add a 'pyminifier' executable to your $PATH. This executable has a number of command line arguments:  This reduced the size of tumult.py from 1358 bytes to 640 bytes. Not bad!  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://thehackernews.com/2017/05/samsung-galaxy-s8-iris-scanner.html"&gt;It's Insanely Easy to Bypass Samsung Galaxy S8 Iris Scanner with a Photo&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;德國 CCC 的傑作 LOL  &lt;/li&gt;
&lt;li&gt;給照片戴隱形眼鏡 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.checkpoint.com/2017/05/23/hacked-in-translation/"&gt;Hacked in Translation - from Subtitles to Complete Takeover | Check Point Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Check Point researchers revealed a new attack vector which threatens millions of users worldwide – attack by subtitles.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Medicean/VulApps"&gt;Medicean/VulApps: 快速搭建各种漏洞环境(Various vulnerability environment)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;收集各种漏洞环境，为方便使用，统一采用 Dockerfile 形式。同时也收集了安全工具环境。  需要查看相关环境的 tag 在Github具体的漏洞目录下查看 README 文件  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scarybeastsecurity.blogspot.tw/2017/05/bleed-continues-18-byte-file-14k-bounty.html"&gt;Security: *bleed continues: 18 byte file, $14k bounty, for leaking private Yahoo! Mail images&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;*bleed attacks are hot right now. Most notably, there's been Heartbleed and Cloudbleed. In both cases, out-of-bounds reads in server side code resulted in private server memory content being returned to clients.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/building-a-botnet-on-pypi-be1ad280b8d6"&gt;Building a botnet on PyPi – Hacker Noon&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;At a London python dojo in October last year, we discovered that PyPi allows packages to be registered with builtin module names.  So what? you might ask. Who would pip install a system package? Well the story goes something like this:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Botnet 真的是在各種地方都可以放  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ubuntu&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://serverfault.com/questions/643006/what-is-status-of-proc-and-how-do-i-call-it"&gt;debian wheezy - What is status_of_proc, and how do I call it? - Server Fault&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;This code runs just fine and sudo service nginx status outputs [ ok ] nginx is running. Yet status_of_proc is not defined in bash, neither in dash:  Yet inserting the same function call into an init script made by myself returned that the function was undefined.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;vim&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.wildsky.cc/posts/update-to-vim8/"&gt;Vim 上 8.0, Vundle 換 vim-plug | ws://wildsky.cc&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.blog/2017/05/23/stack-overflow-helping-one-million-developers-exit-vim/"&gt;Stack Overflow: Helping One Million Developers Exit Vim - Stack Overflow Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;You’re not alone, jclancy. In the five years since this question was asked, there have been over a million other developers who got stuck in Vim and couldn’t escape without a bit of help. Indeed, the difficulty of quitting the Vim editor is a common joke among developers.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appear.in/"&gt;appear.in – one click video conversations&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;xorg&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=108695"&gt;Error: cannot open display: :0.0 [SOLVED] / Applications &amp;amp; Desktop Environments / Arch Linux Forums&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4GsKWGHHigs"&gt;2017臺北世大運－TAIPEI IN MOTION - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這宣傳影片拍的超酷  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fugu.cafe/talks/14697"&gt;用 MSX 學寫 BASIC 的女高中生，與親切的陌生大叔們 - Fugu Café｜未來復古&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;網路真是個神奇的地方  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vodlocker.to/"&gt;VoDLocker API - a free web service to obtain video information&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;直接用 IMDB 番號(?) 就可以自動找到影片和字幕直接看  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://torrentfreak.com/now-anyone-can-embed-a-pirate-movie-in-a-website-170522/"&gt;Now Anyone Can Embed a Pirate Movie in a Website - TorrentFreak&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Vodlocker.to is offering an interesting service that not only provides streaming movies and TV shows in the browser but also allows them to be published anywhere on the web.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rotixblog.blogspot.com/2009/02/blog-post_6580.html"&gt;猴子都能懂的超簡單圍棋教學－入門篇 │ 畫越天際&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;不會圍棋，只好看一下教學。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://web.it.nctu.edu.tw/~hcsci/hospital/other/hivd.htm"&gt;椎間盤突出症及其相關手術&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;超過百分之八十的成年國人有下背疼痛的經驗，大多數是因姿勢不良或過度勞累造成 肌肉緊繃，或肌腱發炎，經過姿勢矯正、休養及藥物治療， 95% 左右的患者都可以獲得改善。然而也有一些患者卻有持續性的下背疼痛  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dcard.tw/f/trending/p/13215230"&gt;新詐騙手法，未顯示來電不要亂接，小心有詐！ - Dcard&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;【文長注意】   新詐騙手法，詐騙集團利用未顯示號碼撥打電話，如果手機被接聽就會用於做詐騙人頭的聯絡號碼。   未顯示來電不要亂接，到時候就等著接詐騙受害者的騷擾電話吧(尤其受害者如果比較不聰明，還會堅持  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/zhangzhesheng/posts/10152637307289531"&gt;張哲生 - Posts&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;原來接了之後就立刻掛斷的來電，是為了確認電話號碼是否利於推銷的「洗電話號碼」伎倆！ 據悉，「洗電話號碼」是使用電腦程式以流水號自動進行，因此就算是半夜也可能會打給你，只要一接通就立刻斷線以節省話費，而且即使來電有顯示號碼，你回撥該號碼也不會通。 一旦你接了「洗電話」的來電，對方便能確定你的電話號碼為有人使用的可騷擾對象，而且得知你是願意接不明來電的人，也就是說，打給你的接通率比較高。於是，過沒多久，你就會開始接到一通又一通的行銷電話了。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;不明來電就別接了吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 28 Aug 2017 13:10:37 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-05-29:posts/2017/05/29/y2017w21/</guid><category>alpha go</category><category>bitcoin</category><category>blockchain</category><category>blog</category><category>docker</category><category>ethereum</category><category>github</category><category>golang</category><category>life</category><category>misc</category><category>programmer</category><category>python</category><category>security</category><category>taiwan</category><category>ubuntu</category><category>vim</category><category>web</category><category>xorg</category><category>digital currency</category></item><item><title>Y2017W13</title><link>https://blog.m157q.tw/posts/2017/04/03/y2017w13/</link><description>&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2017/03/boundary.html"&gt;技术的边界 - 阮一峰的网络日志&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;挺有趣的反思  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotblogs.com.tw/hatelove/2017/03/26/why-engineers-should-keep-blogging"&gt;我為什麼鼓勵工程師寫 blog | In 91 - 點部落&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;覺得講這麼長一篇真的好累  &lt;/li&gt;
&lt;li&gt;像我這種拖延症患者看完大概就會覺得太麻煩而不做了  &lt;/li&gt;
&lt;li&gt;個人一直都抱持著寫給之後會忘記這件事情的自己看的想法在寫  &lt;/li&gt;
&lt;li&gt;因為我記不住這麼多東西  &lt;/li&gt;
&lt;li&gt;如果有人剛好因此而受益也很好  &lt;/li&gt;
&lt;li&gt;如果有好的回饋更好  &lt;/li&gt;
&lt;li&gt;僅此而已  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;facebook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.facebook.com/posts/1245186942201788/hardware-analytics-and-lifecycle-optimization-halo-at-facebook/"&gt;Hardware Analytics and Lifecycle Optimization (HALO) at Facebook | Engineering Blog | Facebook Code | Facebook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Facebook 的 blog 大概是我有追的裡頭最難懂的一個  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.gcping.com/"&gt;GCP ping&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;測試自己跟 GCP 不同 region 之間的 latency  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/03/21/%e5%a6%82%e4%bd%95%e5%af%ab%e4%b8%80%e5%80%8b-git-commit-message/"&gt;如何寫一個 Git Commit Message | louie_lu's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;2014 年的舊文了  &lt;/li&gt;
&lt;li&gt;但被這位翻成了繁體中文  &lt;/li&gt;
&lt;li&gt;所以還是推一下  &lt;/li&gt;
&lt;li&gt;很值得一看  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ad Blocker 與 Anti Ad Blocker 們  &lt;ul&gt;
&lt;li&gt;Ad Blocker  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gorhill/uBlock"&gt;GitHub - gorhill/uBlock: uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/reek/anti-adblock-killer"&gt;GitHub - reek/anti-adblock-killer: Anti-Adblock Killer helps you keep your Ad-Blocker active, when you visit a website and it asks you to disable.&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Anti Ad Blocker  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sitexw/BlockAdBlock"&gt;GitHub - sitexw/BlockAdBlock: Allows you to detect the extension AdBlock (and other)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sitexw/FuckAdBlock"&gt;sitexw/FuckAdBlock: Detects ad blockers (AdBlock, ...)&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fission/fission"&gt;fission/fission: Fast Serverless Functions for Kubernetes&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Fission is a fast serverless framework for Kubernetes with a focus on developer productivity and high performance.  Fission operates on just the code: Docker and Kubernetes are abstracted away under normal operation, though you can use both to extend Fission if you want to.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;GTG 聽到的介紹，可以拿來在 k8s 上做到 Function as a Service，不過目前還不夠成熟，還不太適合拿來用於 production  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hybridgroup/gobot"&gt;GitHub - hybridgroup/gobot: Golang framework for robotics, drones, and the Internet of Things (IoT)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Gobot (http://gobot.io/) is a framework using the Go programming language (http://golang.org/) for robotics, physical computing, and the Internet of Things.  It provides a simple, yet powerful way to create solutions that incorporate multiple, different hardware devices at the same time.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;一個提供快速打造 IoT device 的 Golang framework  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;google&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/"&gt;Google Open Source Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Google 開了一個網站，整理了 Google 和 Open Source 有關的東西。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://thecodist.com/article/the-biggest-difference-between-coding-today-and-when-i-started-in-the-80-s"&gt;The Codist: The Biggest Difference Between Coding Today and When I Started in the 80’s&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者出自於親身經驗描述了現在寫程式與三十年前寫程式的差別  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/03/disable-pylint-warning-check-2017/"&gt;關掉 Pylint 一些特定 Warning 的檢查 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有時候真的會想要關閉一些比較嚴格的檢查  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tzangms.com/dashboard-tool-metabase/"&gt;Dashboard 利器: Metabase&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;花了幾個小時玩 Metabase 就把這張漂亮的 Dashboard 拉了出來, 也沒什麼寫到 SQL, 就把 StreetVoice 的相關營運數據都給攤了出來, 真的是非常棒啊, 雖然內容得再多調整就是了, 這塊我得再多學習。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;好像真的挺不錯的，順便把它介紹給了同事。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/FENGJoy/status/847009349599870976"&gt;V Joy on Twitter: "三件套式可膨胀式植入假体，是男科用于重度ED的三线治疗手段。在伟哥问世前，三件套手术风靡欧美，号称植入幸福，植入自信，其手术切口隐蔽，创伤也比较小。以前医生尝试过植入肋骨、肋软骨、硬性材料，半硬性材料，最后进展到可膨胀性材料。不过需要祈祷术后不要遇到机械故障，导致开关无效，#科普 https://t.co/qngLfow95E"&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;三件套式可膨胀式植入假体，是男科用于重度ED的三线治疗手段。在伟哥问世前，三件套手术风靡欧美，号称植入幸福，植入自信，其手术切口隐蔽，创伤也比较小。以前医生尝试过植入肋骨、肋软骨、硬性材料，半硬性材  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;這是什麼恐怖的東西，光看起來就很痛。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/03/bank-deposit-method-different-2017/"&gt;銀行定存 零存整付、整存整付、存本取息 的差別 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;常常聽到這些名詞都搞不太懂，這篇總算有比較清楚的解釋。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ted.com/talks/emilie_wapnick_why_some_of_us_don_t_have_one_true_calling"&gt;Emilie Wapnick: Why some of us don't have one true calling | TED Talk | TED.com&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有些人並沒有對某一件事有天賦與絕對的興趣，每件事情做到一定的程度就會開始感到厭煩或無趣，進而開始學習其他事物，常常會被很多人認為是三分鐘熱度。  &lt;/li&gt;
&lt;li&gt;講者自己就是這樣的一個人，但強調這樣的人並不是壞事，因為他們對於未知的事物會比較樂於接受與學習，而且因為常常在學新東西，所以對於學習新東西的方法已經有一定的模式，所以會比別人快還上手，也知道學習的過程一定會遇到失敗，因此而不怕失敗。  &lt;/li&gt;
&lt;li&gt;在團隊合作的時候，這樣的人也可以提供團隊一些比較不一樣的觀點。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/25343518"&gt;用深度学习（DNN）构建推荐系统 - Deep Neural Networks for YouTube Recommendations论文精读 - 知乎专栏&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Youtube 用 DNN 打造推薦系統的論文  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 01 May 2017 20:04:26 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-04-03:posts/2017/04/03/y2017w13/</guid><category>blog</category><category>facebook</category><category>gcp</category><category>git</category><category>github</category><category>golang</category><category>google</category><category>life</category><category>misc</category><category>programmer</category><category>python</category><category>trivia</category><category>web</category></item><item><title>Y2017W11</title><link>https://blog.m157q.tw/posts/2017/03/20/y2017w11/</link><description>&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2017/03/crispr.html"&gt;高级人类的崛起 - 阮一峰的网络日志&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;CRISPR  &lt;/li&gt;
&lt;li&gt;人類要透過修改基因的技術自己創造出變種人了嗎？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://orson.tw/2017/02/26/%e8%aa%b0%e5%9f%b7%e6%94%bf%ef%bc%9f/"&gt;誰執政？ – 綠紅黃白黑&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好像是個有趣的八卦  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/2017/03/python-fire-command-line.html"&gt;Google Open Source Blog: Introducing Python Fire, a library for automatically generating command line interfaces&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看了一下範例好像很好用  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/python-fire"&gt;https://github.com/google/python-fire&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/03/02/7162/usrbin-%e4%b8%8b%e7%9a%84%e5%b7%a5%e5%85%b7%e4%bb%8b%e7%b4%b9/"&gt;/usr/bin 下的工具介紹 | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://ablagoev.github.io/linux/adventures/commands/2017/02/19/adventures-in-usr-bin.html"&gt;Adventures in /usr/bin and the likes - Dormammu's Blog&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gcp.expert/cloudendure-vm-migration/"&gt;用 CloudEndure 一鍵完成VM搬家完全免費！ | GCP 雲端服務頂級合作夥伴 LIVEhouse.in&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GCP 真的是一直努力在搶 AWS 的客戶耶 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;GitHub - kamranahmedse/developer-roadmap: Roadmap to becoming a web developer in 2017&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Web 工程師的技能樹  &lt;/li&gt;
&lt;li&gt;DevOps 真難當  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bcicen/ctop"&gt;bcicen/ctop: Top-like interface for container metrics&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Top-like interface for container metrics ctop provides a concise and condensed overview of real-time metrics for multiple containers:  as well as an expanded view for inspecting a specific container.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;google&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/03/17/7191/google-%e7%9a%84-guetzli%ef%bc%8c%e5%b0%8d-jpeg-%e7%9a%84%e5%a3%93%e7%b8%ae%e6%bc%94%e7%ae%97%e6%b3%95/"&gt;Google 的 Guetzli，對 JPEG 的壓縮演算法 | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/2017/03/guetzli-new-open-source-jpeg-encoder.html"&gt;Google Open Source Blog: Announcing Guetzli: A New Open Source JPEG Encoder&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;嗯 果然是用到了前陣子發布的 RNN-based 圖片壓縮演算法 RAISR  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;interview&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@KenjiChao/2016-17-%E7%BE%8E%E5%9C%8B%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E6%B1%82%E8%81%B7%E5%BF%83%E5%BE%97-a5c00427fa73#.dhyvp598r"&gt;2016/17 美國軟體工程師求職心得 – Kenji Chao – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;每次看到美國軟體工作的面試心得都覺得好強啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1489584667.A.6BC.html"&gt;Re: [請益] 非cs想走ai領域，投履歷沒公司理 - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是給了想碰 Machine Learning 的門外漢一個方向  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/poteto/hiring-without-whiteboards"&gt;GitHub - poteto/hiring-without-whiteboards: ⭐️  Companies that don't have a broken hiring process&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;A listing of companies (or teams within companies) that don't do typical, CS based "whiteboard" interviews. Using sites like HackerRank probably fall into that category and won't be accepted.  &lt;/li&gt;
&lt;li&gt;因為 Twitter 上有一群寫程式的大老說自己根本無法通過白板面試，所以就有人建了一個 repo 收集那些不用白板面試的公司名單。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.byvoid.com/zht/blog/micronesia-pohnpei-1"&gt;波納佩島意外之旅（一） - BYVoid&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;到哪都有中國人 XD  &lt;/li&gt;
&lt;li&gt;飛個太平洋小島飛機要停五次  &lt;/li&gt;
&lt;li&gt;作者應該是在環遊世界吧  &lt;/li&gt;
&lt;li&gt;而且都是去比較少人去的地方  &lt;/li&gt;
&lt;li&gt;前陣子才在東歐  &lt;/li&gt;
&lt;li&gt;看看挺有趣的  &lt;/li&gt;
&lt;li&gt;畢竟可能一輩子都不會去  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://szlin.me/2017/03/13/linux-kernel-delay-sleep-%e5%bb%b6%e9%81%b2%e5%87%bd%e5%bc%8f%e5%ad%b8%e7%bf%92%e7%ad%86%e8%a8%88/"&gt;Linux Kernel delay/ sleep 延遲函式學習筆記 – SZ Lin  &amp;amp; Embedded Linux&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;atomic 用 delay  &lt;/li&gt;
&lt;li&gt;non-atomic 用 sleep  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://venturebeat.com/2017/03/15/gitlab-acquires-software-chat-startup-gitter-will-open-source-the-code/"&gt;GitLab acquires software chat startup Gitter, will open-source the code | VentureBeat | Dev | by Jordan Novet&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;o2o&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;對 O2O 不熟，所以看了些介紹  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.inside.com.tw/2015/03/02/jump-in-with-everyone-else-or-jump-right"&gt;不知道這兩項，別說你懂 O2O！ – INSIDE 硬塞的網路趨勢觀察&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;O2O，全名為 Online to Offline，是指將實體商務與電子商務做結合，透過網路無遠弗屆的力量尋找消費者，再藉由行銷活動或購買行為將消費者帶至實體通路。簡單來說，消費者在網上購買服務，在線下取得服務。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.mbalib.com/zh-tw/O2O%E8%90%A5%E9%94%80%E6%A8%A1%E5%BC%8F"&gt;O2O營銷模式 - MBA智库百科&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;O2O營銷模式又稱離線商務模式，是指線上營銷線上購買帶動線下經營和線下消費。O2O通過打折、提供信息、服務預訂等方式，把線下商店的消息推送給互聯網用戶，從而將他們轉換為自己的線下客戶，這就特別適合必須到  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kkc.github.io/2017/02/19/reading-note-apprenticeship-patterns/"&gt;筆記：學徒模式，優秀軟體開發者的養成之路 | Kakashi's Notes&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;img alt="apprenticeship-patterns" src="/files/y2017w11/apprenticeship-patterns.png" /&gt;  &lt;/li&gt;
&lt;li&gt;期許自己也能做到  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.louie.lu/2017/02/18/pylivecap-%e6%93%b7%e5%8f%96-youtube-%e7%9b%b4%e6%92%ad%e5%bd%b1%e7%89%87-frame-%e4%b8%a6%e4%b8%94%e5%ad%98%e6%88%90%e5%9c%96%e7%89%87/"&gt;pylivecap - 擷取 YouTube 直播影片 frame 並且存成圖片 | louie_lu's blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pynayzr/livestream-frame-capture"&gt;https://github.com/pynayzr/livestream-frame-capture&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kb.hitcon.org/post/158546428972/%E5%8F%B0%E7%81%A3%E9%A7%AD%E5%AE%A2%E6%8C%91%E6%88%B0%E7%BE%8E%E5%9C%8Bcgc%E5%A4%A9%E7%B6%B2%E6%A9%9F%E5%99%A8%E4%BA%BA%E5%B0%88%E9%A1%8C%E7%B3%BB%E5%88%97%E5%A0%B1%E5%B0%8E%E5%8D%81%E4%B8%80%E8%BA%AB%E6%AD%B7%E5%85%B6%E5%A2%83cgc%E6%88%B0%E5%A0%B4%E5%B0%8E%E8%A6%BD"&gt;HITCON Knowledge Base - 台灣駭客挑戰美國CGC天網機器人專題系列報導(十一)：身歷其境，CGC戰場導覽&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;跟這系列的上一篇隔了半年  &lt;/li&gt;
&lt;li&gt;視覺化在資安比賽這塊也是挺重要的  &lt;/li&gt;
&lt;li&gt;不然旁人大概啥都看不懂  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2017/03/11/7171/%e9%80%8f%e9%81%8e%e6%89%8b%e6%a9%9f%e8%9e%a2%e5%b9%95%e4%b8%8a%e7%9a%84%e9%a4%98%e7%86%b1%e7%8c%9c%e6%b8%ac-pin-%e7%a2%bc/"&gt;透過手機螢幕上的餘熱猜測 PIN 碼 | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;在輸入完 PIN 碼的 30 秒內的準確度都還是很高 (80%)  &lt;/li&gt;
&lt;li&gt;這樣也行 真酷  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://exablue.de/blog/2017-03-15-github-enterprise-remote-code-execution.html"&gt;GitHub Enterprise Remote Code Execution&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Everyone uses GitHub. If you have huge amount of green paper or you are very paranoid about your code, you can run your own GitHub. For $2,500 USD per 10 user years you get GitHub Enterprise: A virtual machine containing a fully-featured GitHub instance.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://paragonie.com/blog/2017/03/jwt-json-web-tokens-is-bad-standard-that-everyone-should-avoid"&gt;JOSE (Javascript Object Signing and Encryption) is a Bad Standard That Everyone Should Avoid - Paragon Initiative Enterprises Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Note: This was originally written about JSON Web Tokens (JWT), but JWT is a subset of Javascript Object Signing and Encryption (JOSE) so these criticisms are more fairly focused at JOSE as a whole.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software_development&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://teddy-chen-tw.blogspot.tw/2017/03/vs.html"&gt;搞笑談軟工: 價值 VS 技術&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;現實 VS 理想  &lt;/li&gt;
&lt;li&gt;麵包 VS 愛情  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;ducky&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.duckychannel.net/download/user_manual/One_backlit.pdf"&gt;Ducky-one_DKON1508S-DKON1687S_manual_V18_20160114&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;忘記手上這支 Ducky One 80% 的自定義設定了，所以做個紀錄。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.medicalnewstoday.com/articles/157333.php"&gt;Menstrual Cramps (Period Pains): Causes and Treatments - Medical News Today&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;指的其實不是月經  &lt;/li&gt;
&lt;li&gt;而是經痛啊  &lt;/li&gt;
&lt;li&gt;其他別名有 dysmenorrhea 或 period pains  &lt;/li&gt;
&lt;li&gt;https://t.co/buKVIXdZ3E  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Sat, 22 Apr 2017 17:59:30 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-03-20:posts/2017/03/20/y2017w11/</guid><category>blog</category><category>cli</category><category>ducky</category><category>gcp</category><category>github</category><category>google</category><category>interview</category><category>job</category><category>life</category><category>linux</category><category>news</category><category>o2o</category><category>programmer</category><category>python</category><category>security</category><category>software_development</category><category>trivia</category></item><item><title>Y2017W10</title><link>https://blog.m157q.tw/posts/2017/03/13/y2017w10/</link><description>&lt;h3&gt;apache&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lucene.apache.org/"&gt;Apache Lucene - Welcome to Apache Lucene&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;2017/03/09 晚上 Booking.com 在台北的 FX Hotel 辦了個 meetup，講了他們內部搜尋引擎實作，裡頭提到其中一個用到的工具。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jacky.seezone.net/2017/03/09/8657/"&gt;&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@martinetlee/programming-k6-1-c89a349433a7#.j0gu2htsx"&gt;我如何帶國小生學程式（一） – Martinet Lee – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很棒的教學經驗談  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://breezymove.blogspot.tw/2017/02/pay-what-you-want.html"&gt;風吹草動: Pay what you want 隨心付&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;自由付款，自由軟體並非免費。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jacky.seezone.net/2017/02/10/8644/"&gt;開卷筆記—未來的犯罪&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;萬物皆可駭的時代呀  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2017/03/welcome-Kaggle-to-Google-Cloud.html"&gt;Google Cloud Platform Blog: Welcome Kaggle to Google Cloud&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;昨天才知道 Kaggle  &lt;/li&gt;
&lt;li&gt;原來社群也是可以被公司買下來的嗎  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2017/03/Google-Cloud-Container-Builder-a-fast-and-flexible-way-to-package-your-software.html"&gt;Google Cloud Platform Blog: Google Cloud Container Builder: a fast and flexible way to package your software&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;終於可以不用自己專門弄台 GCE 來當 Image builder 了嗎  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/blog/2318-announcing-open-source-guides"&gt;Announcing Open Source Guides · GitHub&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GitHub 開了個開源指南  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blog/2330-restrict-review-dismissals-with-protected-branches"&gt;Restrict review dismissals with protected branches · GitHub&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GitHub PR 管理的新功能  &lt;/li&gt;
&lt;li&gt;可以設定誰才能把 request change 轉成 comment  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fukuball/Trump-Driven-Development"&gt;GitHub - fukuball/Trump-Driven-Development: A curated list of Trump Driven Development&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;蒐集跟 Donal Trump 有關的 programming related list. LOL  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nolanlawson.com/2017/03/05/what-it-feels-like-to-be-an-open-source-maintainer/"&gt;What it feels like to be an open-source maintainer | Read the Tea Leaves&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;真的是超級累的啊，難怪很多人的小專案變成熱門的大專案以後有的就突然不維護了。  &lt;/li&gt;
&lt;li&gt;如何讓用的人轉換成一起貢獻的人這件事真的很重要。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jamesbvaughan.com/python-twilio-scraping/"&gt;Finding Free Food with Python&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 request 拿網頁  &lt;/li&gt;
&lt;li&gt;用 bs4 parse  &lt;/li&gt;
&lt;li&gt;用 re 找 free food  &lt;/li&gt;
&lt;li&gt;用 Twilo 送簡訊給自己  &lt;/li&gt;
&lt;li&gt;幾行的 script  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://doughellmann.com/blog/2017/03/06/pickle-object-serialization-pymotw-3/"&gt;pickle — Object Serialization — PyMOTW 3 – Doug Hellmann&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;要搭配 hmac 做驗證啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://medium.com/@maxbraun/this-machine-turns-trump-tweets-into-planned-parenthood-donations-4ece8301e722#.l7mkevq90"&gt;This Machine Turns Trump Tweets into Planned Parenthood Donations&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接 NLP 的 API 去分析 Trump 的 tweet，如果他讚揚某間公司，就可以買入該公司的股票，如果他貶低某間公司，就趕快賣掉那間公司的股票。  &lt;/li&gt;
&lt;li&gt;好酷喔 在往歐洲的飛機上完成雛型  &lt;/li&gt;
&lt;li&gt;But don't bet your life savings on it. Markets are unpredictable. Trump is unpredictable. XD  &lt;/li&gt;
&lt;li&gt;定時發 tweet 的 bot: &lt;a href="https://twitter.com/Trump2Cash"&gt;https://twitter.com/Trump2Cash&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;GitHub Repo: &lt;a href="https://github.com/maxbbraun/trump2cash/"&gt;https://github.com/maxbbraun/trump2cash/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.dailycold.tw/7401/%E7%82%BA%E4%BB%80%E9%BA%BC%E8%BC%B8%E7%90%83%E4%BA%86%E8%A6%81%E5%90%83%E9%8D%8B%E8%B2%BC%E5%91%A2%EF%BC%9F/"&gt;為什麼輸球了要吃鍋貼呢？ – 每日一冷 – 你的冷知識入口&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;你知道嗎？【為什麼輸球了要吃鍋貼呢？】 #本日冷知識1065 不知道最近每日一冷的讀者們是不是和吐司碟一樣，總是忍不住被世界12強棒球賽的賽事轉播給吸引的無法自拔呢？雖然我們無緣挺進八強，但是不管你是一日球迷  &lt;/li&gt;
&lt;li&gt;雖敗遊龍 LOL  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/permalink.php?story_fbid=1600114916669620&amp;amp;id=100000133808589"&gt;杜紫宸 - 台大電機研究所學生自製的實驗室門口對聯 ...&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;假論文假發票爾等造假  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;真本事真性情我輩認真  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;偉哉吾校  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/HolyMosquito/photos/a.1470258333251822.1073741828.1468466990097623/1876891482588503/?type=3&amp;amp;theater"&gt;小聖蚊的治國日記 - Timeline&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;雖然我來自英國，但是我來到美國，我就選擇做美國人，我的子孫也是美國人。這種叫作移民。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;雖然在台灣這個鬼島，但我永遠都是中國人，我的子孫也都要做堂堂正正的中國人。這種叫作殖民。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;movie&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/movie/M.1488729287.A.84F.html"&gt;[討論] 《異星入境》與相關的語言學迷思 (有雷) - 看板 movie - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇講 Arrival 的文章真的超專業的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;windows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hultbergs.org/defrag/"&gt;Windows 95 Defrag Simulator&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好懷念的磁碟重組畫面 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ptt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Boy-Girl/M.1489082550.A.E2A.html"&gt;Re: [求助] 女友發現我會自慰後以後哭了 - 看板 Boy-Girl - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;優質廢文  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 13 Mar 2017 11:29:54 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-03-13:posts/2017/03/13/y2017w10/</guid><category>apache</category><category>blog</category><category>gcp</category><category>github</category><category>movie</category><category>programmer</category><category>ptt</category><category>python</category><category>taiwan</category><category>web</category><category>windows</category></item><item><title>Y2017W09</title><link>https://blog.m157q.tw/posts/2017/03/06/y2017w09/</link><description>&lt;h3&gt;facebook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://messengerblog.com/platform-updates/messenger-platform-1-4-brings-even-more-tools-to-build-great-experiences/"&gt;Messenger Platform 1.4 Brings Even More Tools to Build Great Experiences – Messenger Platform&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Facebook Messenger Platform 1.4 版，最近剛好在碰 Messenger Bot 的部份，所以得追一下。  &lt;/li&gt;
&lt;li&gt;這版改最大的大概就是 Persistent Menu 的結構吧，從原本只能放 5 個最上層的按鈕，改成放 3 個最上層的按鈕，然後每個按鈕的下一層可以再放 5 個按鈕。  &lt;/li&gt;
&lt;li&gt;另外的則是 persistent Menu 加入了 locale 的設定，可以設定 default locale 要回的訊息，然後可以針對不同的 locale 做設定，比如英語系的國家就回英文的訊息，中文的則回中文等等。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;golang&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unixpickle/fbmsgr"&gt;unixpickle/fbmsgr: Reverse engineering Facebook Messenger&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有人自己用 Golang reverse 了一個 Facebook Messenger bot 出來...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://sky-dogod.blogspot.com/2008/10/wine.html"&gt;Doggy: WINE 解決中文亂碼&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近有用到 WINE，又遇到中文亂碼的問題，花了一些時間踩了些雷以後，發現主要有兩種問題：  &lt;ul&gt;
&lt;li&gt;第一種是字型問題，解法就照上面這篇寫的一樣，把字型複製到 &lt;code&gt;~/.wine/driver_c/windows/Fonts&lt;/code&gt; 之後，再用編輯器開個 &lt;code&gt;font.reg&lt;/code&gt; 寫入下方的內容後存檔  &lt;/li&gt;
&lt;li&gt;之後再打開 &lt;code&gt;~/.wine/driver_c/windows/regedit.exe&lt;/code&gt; or &lt;code&gt;$ wine regedit&lt;/code&gt;，選擇 import 剛剛儲存的 &lt;code&gt;font.reg&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;另外一種則是 locale 的問題，必須視執行軟體的情況修改 &lt;code&gt;LC_ALL&lt;/code&gt; 和 &lt;code&gt;LANG&lt;/code&gt; 這兩個環境變數  &lt;ul&gt;
&lt;li&gt;可能是 &lt;code&gt;$ export LC_ALL=zh_TW.UTF-8&lt;/code&gt;, &lt;code&gt;$ export LANG=zh_TW.UTF-8&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;也可能是 &lt;code&gt;$ export LC_ALL=zh_TW.Big5&lt;/code&gt;, &lt;code&gt;$ export LANG=zh_TW.Big5&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;我遇到的是這兩種問題都得一起解決才不會出現任何中文亂碼。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;REGEDIT4  

[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontSubstitutes]  
&amp;quot;Arial&amp;quot;=&amp;quot;Arial&amp;quot;  
&amp;quot;Arial CE,238&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Arial CYR,204&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Arial Greek,161&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Arial TUR,162&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Courier New&amp;quot;=&amp;quot;Courier New&amp;quot;  
&amp;quot;Courier New CE,238&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Courier New CYR,204&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Courier New Greek,161&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Courier New TUR,162&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;MingLiU&amp;quot;=&amp;quot;MingLiU&amp;quot;  
&amp;quot;PMingLiU&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;FixedSys&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Helv&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Helvetica&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;MS Sans Serif&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;MS Shell Dlg&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;MS Shell Dlg 2&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;System&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Tahoma&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Times&amp;quot;=&amp;quot;Times&amp;quot;  
&amp;quot;Times New Roman&amp;quot;=&amp;quot;Times New Roman&amp;quot;  
&amp;quot;Times New Roman CE,238&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Times New Roman CYR,204&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Times New Roman Greek,161&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Times New Roman TUR,162&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&amp;quot;Tms Rmn&amp;quot;=&amp;quot;PMingLiU&amp;quot;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cnet.com/news/icon-smart-condom-ring/"&gt;Smart condom ring i.Con is like a Fitbit for your man bits - CNET&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The i.Con Smart Condom, which markets itself as the "world's first smart condom," is actually a ring that fits over a boring, dumb condom and claims to track the exercise of your man bits, as well as detect chlamydia and syphilis.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;智慧型保險套，可以追蹤運動時間、射速、射出角度還可以分享到社群軟體...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mozilla.org/blog/2017/02/27/mozilla-acquires-pocket"&gt;Mozilla Acquires Pocket | The Mozilla Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Mozilla 竟然把 Pocket 買了，聽說 Firefox 跟 Pocket 的整合性也提高了，真好奇買了 Pocket 的用意是什麼？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/cyberomin/status/835888786462625792"&gt;Celestine Omin on Twitter: "I was just asked to balance a Binary Search Tree by JFK's airport immigration. Welcome to America."&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;I was just asked to balance a Binary Search Tree by JFK's airport immigration. Welcome to America.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;因為川普禁令，在入境的時候被美國海關考試，而且還不是只有考一題平衡二元搜尋樹而已，而是要他寫一份 A4 考卷...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.techug.com/post/good-programmer-good-habit.html"&gt;有前途的程序員的16個習慣，你擁有幾個？ | 程序師&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;大部份都還算認同，算是可以拿來提醒自己的文章吧。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/kylinfish/clean-code-72688451"&gt;無暇的程式碼 Clean Code 心得分享&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;挺棒的要點分享，Clean Code 真的是值得一看的好書啊，雖然是用 Java 當範例，不過其他程式語言的使用者來看也不會覺得落差很大就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.wu-boy.com/2017/02/caddy-setting-with-drone-ci-server/"&gt;Caddy 搭配 Drone 伺服器設定 | 小惡魔 - 電腦技術 - 工作筆記 - AppleBOY&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Caddy 直接就有 HTTPS 可用，因為會自動幫忙申請 Let's encrypt 憑證  &lt;/li&gt;
&lt;li&gt;之後有機會的話好像可以試試看，現在要弄支援 HTTPS 的 HTTP server 真的比以前簡單很多了啊j  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2017/02/tequila-wine-mixer-2017/"&gt;幾種簡單的 龍舌蘭 調酒 (雞尾酒) - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;比較知道的還是 Tequila Bomb 就是，其他的有機會的話也可以來試試看？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/gossiping/M.1488390813.A.E39.html"&gt;Re: [新聞] 央行去年每月賺188億元 - 看板 Gossiping - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇也算是個精彩好文呢，原來外匯存底高不是什麼好事啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Tue, 14 Mar 2017 11:15:00 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-03-06:posts/2017/03/06/y2017w09/</guid><category>facebook</category><category>golang</category><category>life</category><category>linux</category><category>news</category><category>programmer</category><category>programming</category><category>taiwan</category><category>web</category></item><item><title>Y2017W06</title><link>https://blog.m157q.tw/posts/2017/02/13/y2017w06/</link><description>&lt;h3&gt;app&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@zonble/our-mac-app-was-rejected-because-we-are-using-swift-3-9f574529945"&gt;Our Mac app was rejected because we are using Swift 3 – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 Swift 3 寫 Mac App 會過不了官方 App store 的審核而不能上架，原因是使用了 Private API，但作者確定自己沒有使用任何 Private API，結果作者去追了 source code 以後發現，是 Swift 3 的 library 裏面用到的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@rudychin/ph-d-admission-uiuc-cornell-cmu-347827b5af00#.112b14qkm"&gt;[Ph.D. Admission] UIUC / Cornell / CMU – 金廷武 – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;人生勝利組的大學同學發了篇美國名校資工博士申請的心得文  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django"&gt;Django Web Framework (Python) - Learn web development | MDN&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Mozilla 竟然有 Django 的 Tutorial XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;editor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hungys.xyz/why-i-switched-from-sublime-to-vscode/"&gt;為什麼我從 Sublime Text 跳槽 Visual Studio Code？&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;之前有試用過一下 VS code，覺得算是 GUI editor 裏面我目前用到覺得最好用的吧，光是內建整合 Git 以及 integrated terminal 對我來說就贏很多其他的 GUI editor 了。  &lt;/li&gt;
&lt;li&gt;看了這篇才知道原來 integrated terminal 的點子是台灣人去開 issue 的 XD。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gitlab&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://about.gitlab.com/2017/02/10/postmortem-of-database-outage-of-january-31/"&gt;Postmortem of database outage of January 31 | GitLab&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Gitlab 針對 2017/01/31 誤刪 production db 以及後續的處理和反省做了詳細的紀錄。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/google-cloud/using-single-docker-repository-with-multiple-gke-projects-1672689f780c"&gt;Using single Docker repository with multiple GKE projects&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;透過把另外一個 GCP project 的 GKE default service account 加入另外一個 GCP project 的 IAM 中，並給予相對應的權限，就能讓後者直接使用前者的 Docker repository，不用每開一個 GCP project 都要重新 build 一次。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;interview&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lnishan.github.io/2017/interview-preparation-101/"&gt;Interview Preparation 101&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;成功面試進入美國 Google Intern 的人的準備心得  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.techug.com/post/first-two-years-i-work-in-huawei.html"&gt;一位在华为工作2年员工的心路历程 | 程序师&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;華為有這麼操喔？上次在飛機上跟一個華為的工程師聊感覺沒這麼慘耶，還是是因為這篇是上海，但跟我聊天的沒記錯好像是北京？而且他才第1年就四處出差都公司出錢。還是學碩士差別？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hackaday.com/2016/09/04/convert-any-usb-keyboard-to-bluetooth/"&gt;Convert Any USB Keyboard to Bluetooth | Hackaday&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好酷啊，竟然可以自幹個把 USB 轉成 Bluetooth 的裝置，不過去看了教學影片以後其實還挺麻煩的就是了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/learning-new-stuff/machine-learning-in-a-year-cdb0b0ebd29c"&gt;Machine Learning in a Year – Learning New Stuff – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者花了一年的時間自學 Machine Learning。開頭就說不一定需要懂數學理論才能開始學。  &lt;/li&gt;
&lt;li&gt;簡體中文版：&lt;a href="http://www.techug.com/post/how-i-learn-machine-learning-in-a-year.html"&gt;我是如何花了一年時間來學機器學習的 | 程序師&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terryum/awesome-deep-learning-papers"&gt;terryum/awesome-deep-learning-papers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個收集跟 Deep Learning 相關論文的 Repo.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.wired.com/2017/02/programming-is-the-new-blue-collar-job/"&gt;The Next Big Blue-Collar Job Is Coding | WIRED&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;When I ask people to picture a coder, they usually imagine someone like Mark Zuckerberg: a hoodied college dropout who builds an app in a feverish 72-hour programming jag—with the goal of getting insanely rich and, as they say, “changing the world.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;寫程式的門檻愈降愈低，很多時候不用懂相關理論甚至只要複製貼上再修修改改就能夠寫出一個應用程式，等到人人都會寫程式，像現在勞力付出的藍領階級工作一樣普及的時候，那些純勞力付出的工作可能都已經被機器取代。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/python/cpython"&gt;python/cpython: The Python programming language&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;CPython 的 source code 丟到 GitHub 上哩  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/playpauseandstop/python-3-dot-6-and-performance-a-love-story"&gt;Python 3.6 &amp;amp; Performance. A Love Story&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;關於 Python 3.6 一些新特性的介紹，紀錄一些比較顯著的：  &lt;ul&gt;
&lt;li&gt;PEP 498: f-strings  &lt;/li&gt;
&lt;li&gt;PEP 525: Async generator  &lt;/li&gt;
&lt;li&gt;PEP 530: Async comprehension  &lt;/li&gt;
&lt;li&gt;PEP 526: Variable annotations  &lt;/li&gt;
&lt;li&gt;new &lt;code&gt;dict&lt;/code&gt; implementation  &lt;ul&gt;
&lt;li&gt;參考了 PyPy 的實作，為 dict 的 memory entry 加上 index  &lt;/li&gt;
&lt;li&gt;memory usage 20% ~ 25% smaller comparted to Python 3.5  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;以及比較了執行速度： Python 2.7 &amp;gt; Python 3.6 &amp;gt; Python 3.5，而 Python 3.7 會比 Python 3.6 再快些。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitheis/alog"&gt;keitheis/alog: Python logging for Humans.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Python logging for Humans. Your goto logging module without panic on context swtich.  Warning: No more logger = logging.getLogger(&lt;strong&gt;name&lt;/strong&gt;) in your every file.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;resume&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nickwarm.logdown.com/posts/1402232"&gt;撰寫履歷：如何吸引賞識你的人 « NickWarm's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇是以中文履歷為主  &lt;/li&gt;
&lt;li&gt;同一個人丟了兩種不同版本的履歷，一個收到感謝函，一個收到面試通知，足見履歷重要性。  &lt;/li&gt;
&lt;li&gt;除了照片、姓名解構、自傳以外我都算認同  &lt;/li&gt;
&lt;li&gt;CakeResume 感覺不錯用  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;p&gt;看了第一個 RAT 的工具以後，就把其他相關的也看了一下了。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nathanlopez/Stitch"&gt;nathanlopez/Stitch: Python Remote Administration Tool (RAT)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Stitch is for education/research purposes only. The author takes NO responsibility and/or liability for how you choose to use any of the tools/source code/any files provided.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sweetsoftware/Ares"&gt;sweetsoftware/Ares: Python botnet and backdoor&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Ares is a Python Remote Access Tool.  Warning: Only use this software according to your current legislation. Misuse of this software can raise legal and ethical issues which I don't support nor can be held responsible for.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ahhh/Reverse_DNS_Shell"&gt;GitHub - ahhh/Reverse_DNS_Shell: A python reverse shell that uses DNS as the c2 channel&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;DNShell v1.7 Description: A Python Reverse Shell that uses DNS as the C2 channel. Requires: dnslib dnspython pycrypto Gotchyas: don't forget to change your HOST don't forget to change your SECRET key run server first Moar Info: &lt;a href="http://lockboxx.blogspot.com/2015/01/python-reverse-dns-shell"&gt;http://lockboxx.blogspot.com/2015/01/python-reverse-dns-shell&lt;/a&gt;.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vesche/basicRAT"&gt;vesche/basicRAT: python remote access trojan&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a Python RAT (Remote Access Trojan), basicRAT was created to maintain a clean design full-featured Python RAT. Currently a work in progress and still being hacked on.  Disclaimer: This RAT is for research purposes only, and should only be used on authorized systems.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/n1nj4sec/pupy"&gt;GitHub - n1nj4sec/pupy: Pupy is an opensource, cross-platform (Windows, Linux, OSX, Android) remote administration and post-exploitation tool mainly written in python&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Pupy is an opensource, multi-platform (Windows, Linux, OSX, Android), multi function RAT (Remote Administration Tool) and post-exploitation tool mainly written in python. It features a all-in-memory execution guideline and leaves very low footprint.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software engineering&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://arxiv.org/abs/1702.01715"&gt;[1702.01715] Software Engineering at Google&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/pdf/1702.01715.pdf"&gt;1702.01715.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.bbc.com/zhongwen/trad/38859981"&gt;你知道英語可以寫成這樣嗎？ - BBC 中文網&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來英文有速記寫法，根本就是蝌蚪文 XD。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://disp.cc/b/163-9SEx"&gt;Re: [問卦] 那些說吻仔魚是各種魚類幼苗的人在想什麼 - Gossiping板 - Disp BBS&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;吻仔魚是沙丁魚魚苗，不好養殖，只能用補抓野生的，因為魚苗很小，所以要用網眼特別小的魚網，捕撈時會連同其他魚的魚苗也一起抓上來，也不可能每個魚苗慢慢挑，進而導致漁業資源枯竭。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ds3d2x8n3szkj73oe8n0.lh.pdis.nat.gov.tw/"&gt;2016/10 立院公聽會 | 電競政策產銷履歷 | hackfoldr&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來電競替代役從去年 10 月就開始計劃了啊  &lt;/li&gt;
&lt;li&gt;而且 hackfolder 竟然被引進政府裏面用了嗎？  &lt;/li&gt;
&lt;li&gt;真的是完全公開透明的會議記錄啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.storm.mg/lifestyle/220782"&gt;不考幹嘛念？偏鄉免費教程式多年，成大教授：4個錯觀念，害台灣一代比一代笨-教育｜台灣｜偏鄉教育｜教授｜學習｜做孩子的重要他人｜蘇文鈺｜成大資工系｜程式教育-風傳媒-蘇文鈺&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;只學「有用」的學問  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;不唸不會賺錢的科系  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;不培養無法測量的能力  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;考試至上，什麼都要打分數。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;製造相互排擠的世代  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;成績好的人不肯教成績不好的人，怕自己被超越。  &lt;/li&gt;
&lt;li&gt;芬蘭的教育則是從小就讓孩子學會互助合作。  &lt;/li&gt;
&lt;li&gt;成功是靠互助合作，而不是踩著別人的屍骨往上爬。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;教育不該為教育以外的目的服務  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;很多企業開的私立大學都是為了直接培養員工，不太教其他的事。  &lt;/li&gt;
&lt;li&gt;反而很多台灣家長覺得這樣很棒，一畢業就有工作。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Gosu"&gt;Gosu - Wikipedia&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Gosu (고수) is a Korean term used to refer to a highly skilled person. In computer gaming the term is usually used to refer to a person highly skilled in multiplayer games like StarCraft, Warcraft III (RTS/RPG - DotA), Diablo II (RPG), Counter-Strike (FPS) and others.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;原來 Gosu 在韓文是高手的意思...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 13 Feb 2017 01:40:56 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-02-13:posts/2017/02/13/y2017w06/</guid><category>app</category><category>blog</category><category>django</category><category>editor</category><category>gitlab</category><category>gke</category><category>interview</category><category>job</category><category>keyboard</category><category>machine learning</category><category>misc</category><category>programmer</category><category>pupy</category><category>python</category><category>resume</category><category>security</category><category>software engineering</category><category>taiwan</category><category>trivia</category></item><item><title>Y2017W05</title><link>https://blog.m157q.tw/posts/2017/02/06/y2017w05/</link><description>&lt;h3&gt;cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rg3/youtube-dl/tree/master/youtube_dl/extractor"&gt;youtube-dl/youtube_dl/extractor at master · rg3/youtube-dl · GitHub&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來 youtube-dl 支援 600 多種網站...  &lt;/li&gt;
&lt;li&gt;開源大法就是好！  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;GitHub - ggreer/the_silver_searcher: A code-searching tool similar to ack, but faster.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Do you know C? Want to improve ag? I invite you to pair with me.  Ag is quite stable now. Most changes are new features, minor bug fixes, or performance improvements. It's much faster than Ack in my benchmarks:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;一個效能還不錯的程式碼搜尋工具  &lt;/li&gt;
&lt;li&gt;實際上用起來是要使用 &lt;code&gt;ag&lt;/code&gt; 這個指令  &lt;/li&gt;
&lt;li&gt;參考自 &lt;code&gt;ack&lt;/code&gt; 這個工具，不過效能比它好，而且實際用過兩款之後，我也比較喜歡 &lt;code&gt;ag&lt;/code&gt; 顯示資訊的方式。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ithome.com.tw/news/111133"&gt;Google Cloud新增金鑰管理服務，美、日、台測試上線 | iThome&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;不知道好不好用就是，在 GCP 上用 IAM 開一堆金鑰的感覺就是開了一堆金鑰用到後來都不知道能不能刪掉，管理起來很雜亂。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/blog/2309-introducing-topics"&gt;Introducing Topics&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Discover networks of similar repositories in a completely new way with Topics. Topics are labels that create subject-based connections between GitHub repositories and let you explore projects by type, technology, and more.  Click on a topic that interests you to find related repositories.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;GitHub 的 repo 現在可以加上 hashtag 啦  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gitlab&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;應該是這週最多人分享的 IT 界新聞了吧，原本是要在 slave 機器上刪除東西，卻不小心在 master 機器上下了 &lt;code&gt;rm -rf&lt;/code&gt;，等到意識到的時候已經來不及了，5 種備份機制因為各種不同的原因都無法奏效，GitLab 還開實況直播搶救的過程。  &lt;/li&gt;
&lt;li&gt;也看到很多人又重新探討了資料備援的最佳實踐  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://about.gitlab.com/2017/02/01/gitlab-dot-com-database-incident/"&gt;GitLab.com Database Incident | GitLab&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/yftzeng.tw/posts/10206382658284710"&gt;《 檢查備份日：每年的 2 月 1 日 》... - Ant Yi-Feng Tzeng&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://wanqu.co/a/4622/2017-02-02-gitlab-com-database-incident.html"&gt;GitLab 员工误删数据库、永久性丢失6小时数据的总结与反省 | 湾区日报&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;多起事件环环相扣，致命一击：工程师晚上11点还在工作，有点疲劳了，删除数据文件夹1、2秒后猛然惊醒，删错机器了，那是 db1！试了5种不同备份恢复机制，没一个有效的；只好痛失6小时数据。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://coolshell.cn/articles/17680.html"&gt;从Gitlab误删除数据库想到的 | | 酷 壳 - CoolShell&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;opensource&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ro31337/libretaxi"&gt;GitHub - ro31337/libretaxi: LibreTaxi, free and open source Uber/Lyft alternative to connect passengers and drivers.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;LibreTaxi makes taxi affordable again by completely removing all layers in between. Passengers pay with cash and get connected with drivers directly, where LibreTaxi is a thin layer allowing to negotiate the price before order is confirmed. No registration/approval is required. Less regulations.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;類似 Uber 和 Lyft 的工具，但是不用透過任何公司，讓乘客和司機直接交易，不過目前似乎只有支援 Telegram 就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.daftcode.pl/hype-driven-development-3469fc2e9b22"&gt;Hype Driven Development&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Software development teams often make decisions about software architecture or technological stack based on inaccurate opinions, social media, and in general on what is considered to be “hot”, rather than solid research and any serious consideration of expected impact on their projects.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;這篇文章也很多人分享，主要就是在諷刺很多寫程式的人都是一窩蜂的使用什麼技術，或是去參加個 conference 或 meetup 看到人家說什麼好用就一股腦的用，也不想想到底適不適合，很開心的重造一堆輪子或是把原本好好的東西砍掉重練。  &lt;/li&gt;
&lt;li&gt;繁中翻譯版：&lt;a href="https://blog.chunfuchao.com/?p=656&amp;amp;variant=zh-tw"&gt;一窩蜂驅動開發 – Northern Wind&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;簡中翻譯版：&lt;a href="http://mp.weixin.qq.com/s/zHM9zgug_DpHv5KpR5zf3Q"&gt;哪個技術火就選哪個？切記知乎驅動的技術選型不靠譜！&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ascii-iicsa.blogspot.com/2017/02/blog-post.html"&gt;程序員筆記: 中階技術團隊管理的經驗分享&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;也是一篇很棒的管理階層經驗談，主要也是在談軟體工程師的工作態度就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wallabag.org/en"&gt;Save the web, freely | wallabag: a self hostable application for saving web pages&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;類似 pocket 的服務  &lt;/li&gt;
&lt;li&gt;差別是開源和 self-hosted  &lt;/li&gt;
&lt;li&gt;如果不想自己架要用官方架的要付費  &lt;/li&gt;
&lt;li&gt;有 Android / iOS App, Chrome, Firefox, Opera plugin  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wallabag/wallabag"&gt;GitHub - wallabag/wallabag: wallabag is a self hostable application for saving web pages.&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soimort/you-get"&gt;soimort/you-get: Dumb downloader that scrapes the web&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;聽說是個可以補足 &lt;code&gt;youtube-dl&lt;/code&gt; 不足的部份的工具。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;car&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/car/M.1397029480.A.A28.html"&gt;[整理] 百萬左右熱門新車主被動安全配備(SRS/ESP/VSC..)整理 - 看板 car - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇的整理真的很棒呀，鄉民蒐集資訊的功力真的不容小覷。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.xuite.net/hong.shengcar/blog/64416181"&gt;什麼是ABS、EBD、ASR、ESP？... @ blog :: 隨意窩 Xuite日誌&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;車子真的也是一堆縮寫啊，不查都不知道是什麼東西，所以就查了一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.digitaltrends.com/cars/whats-the-difference-between-four-wheel-drive-and-all-wheel-drive/"&gt;4WD vs. AWD | The Differences Explained | Digital Trends&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;傳統四輪傳動跟全時四輪傳動的差別  &lt;/li&gt;
&lt;li&gt;主要就是需不需要手動切換吧，AWD 是透過電腦去控制。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/kaobegroup/posts/1359117310818592"&gt;嘴炮出版社 - 朋友對著緊盯著電視瞧的孩子大罵： 「就只知道看電視，讀書都沒這麼認真過！」 我在一旁酸他：... | Facebook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「有趣的是，這些老了的賤人當初也是被上一代用著聖人的標準要求著，一代一代推算後發現，原來這樣的教育會讓小聖人都成了老賤人。」  &lt;/li&gt;
&lt;li&gt;最常得到的回應是「你再頂嘴？是不是皮在癢？」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zXsBSwJUDEo"&gt;書來面對 EP1《如何閱讀一本書》How to Read a Book - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個影片真的很棒呢，希望自己也能這樣閱讀啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://anthropologysediq.blogspot.tw/2014/02/29.html"&gt;喵比豹談人文: 「29暝」的秘密&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;這篇文章的發想來自一個小問題－不知道你有沒有想過？  今年農曆的最後一天是十二月三十日，也就是說，按照華語（Mandarin Chinese）的思維，農曆的「除夕夜」應該就是在三十號的晚上。可是呢，台語卻是把「除夕夜」叫做  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;原來是和地震有關啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E7%AD%9A%E7%AF%A5"&gt;篳篥 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;筚篥，也写做“觱篥”，名称可能是由突厥语或匈奴语直接音译过来。以竹或木做管，顶端有用芦苇或麦秸做的簧片，管身开洞，竖吹。声音高亢凄厉。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;篳ㄅㄧˋbì 篥ㄌㄧˋlì&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 06 Feb 2017 22:43:10 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-02-06:posts/2017/02/06/y2017w05/</guid><category>car</category><category>cli</category><category>gcp</category><category>github</category><category>gitlab</category><category>misc</category><category>opensource</category><category>programmer</category><category>taiwan</category><category>trivia</category><category>web</category></item><item><title>Y2017W01</title><link>https://blog.m157q.tw/posts/2017/01/09/y2017w01/</link><description>&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.fntsr.tw/articles/2016/12/21/generate-google-drive-dropbox-onedrive-directly-download-link/"&gt;獲取 Google Drive, Dropbox, OneDrive 中檔案直接下載的連結 - 深藏若虛&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「筆者現在工作場所連接影印機的電腦仍是 Windows XP 搭配 IE6，無法下載要影印的文件下來。」  &lt;/li&gt;
&lt;li&gt;感覺有了這篇文章的整理就可以寫個 script 解決這件事啦  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/ccckmit/ss-70707797"&gt;《計算機結構與作業系統裡》-- 資工系學生們經常搞錯的那些事兒！&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是釐清了一些自己沒懂的部份  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;javascript&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;GitHub - ryanmcdermott/clean-code-javascript: Clean Code concepts adapted for JavaScript&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;JavaScript 版本的 Clean Code  &lt;/li&gt;
&lt;li&gt;分享給寫 JavaScript 的同事之後，他說這篇真的還挺不錯的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/gossiping/M.1483435954.A.307.html"&gt;[新聞] 【獨家】翟本喬公司員工爆 年前大裁員 - 看板 Gossiping - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「員工透露，公司疑似因周轉不靈、錢進不來，幾乎要倒閉，所以才會在農曆年前突然大規模裁員，人數將近8成，全公司大約110至120人左右，裁員後，將只剩下2個核心小組成員。」  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/denny.ku1/posts/1226657567387696"&gt;Denny Ku - 最近新聞提到我之前任職的公司和沛科技年前裁員，網路上有各種說法都跑出來，... | Facebook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「落井下石很容易，但在這個時代失敗和成功都是暫時的。」  &lt;/li&gt;
&lt;li&gt;簡單來說就是跟酸民認真就輸了  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackshare.io/posts/top-developer-tools-2016"&gt;The Top 50 Developer Tools of 2016 | StackShare&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;總共分成五類，各取了前十名。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pythonlearn.com/index.php"&gt;Python for Everybody: Exploring Data in Python 3&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naftaliharris/placeholder"&gt;GitHub - naftaliharris/placeholder: Fork of Python 2.7 with new syntax, builtins, and libraries backported from Python 3.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;本來叫 Python 2.8 XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pypa/pipfile"&gt;GitHub - pypa/pipfile&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;a new (and much better!) replacement for the existing standard pip's requirements.txt file.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/grumpy"&gt;GitHub - google/grumpy: Grumpy is a Python to Go source code transcompiler and runtime.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Grumpy is a Python to Go source code transcompiler and runtime that is intended to be a near drop in replacement for CPython. The key difference is that it compiles Python source code to Go source code which is then compiled to native code, rather than to bytecode. This means that Grumpy has no VM.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;沒錯，就是字面上的意思，人只要寫 Python 再用 Grumpy 幫你轉成 golang，一切都是為了效能啊  &lt;/li&gt;
&lt;li&gt;不過目前仍然還沒有很成熟，加上有些限制。  &lt;ul&gt;
&lt;li&gt;不支援 &lt;code&gt;exec&lt;/code&gt;, &lt;code&gt;eval&lt;/code&gt;, &lt;code&gt;compile&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;不支援 C extension modules  &lt;/li&gt;
&lt;li&gt;還有許多預計會支援但目前還沒支援的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/2017/01/grumpy-go-running-python.html"&gt;Google Open Source Blog: Grumpy: Go running Python!&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Grumpy is an experimental Python runtime for Go. It translates Python code into Go programs, and those transpiled programs run seamlessly within the Go runtime.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bola.gov.taipei/ct.asp?xItem=94627869&amp;amp;ctNode=76327&amp;amp;mp=116003"&gt;臺北市政府勞動局 ─ 違反勞動基準法事業單位&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;台灣 Yahoo、台灣 Oracle、台灣大學、中央研究院上榜  OAO  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/photo.php?fbid=1720330024659355&amp;amp;set=a.150639711628402.36958.100000471228657&amp;amp;type=3&amp;amp;theater"&gt;葉丙成 - 【魂斗羅名字由來，你知否？】... | Facebook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「魂斗羅」三字的漢字日語發音是「コントラ」，也是它的英文名字 Contra 的日語發音。  &lt;/li&gt;
&lt;li&gt;Contras 是 1980 年代活躍於尼加拉瓜反桑定左翼政權的反革命游擊隊的稱呼。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5K7cNWJfxMY"&gt;亞當潑冷水：電動車並沒有比較環保 - College Humor - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「如果你不留意，這些公司會利用你想幫助地球的想法，來賣你更多傷害地球的東西。購買綠能產品並不能解決問題，因為購買本身就是個問題。我們要降低購買的數量，並重複使用現有的東西。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KsGiDrt5U2c"&gt;千禧世代在職場上到底出了什麼問題?  - Simon Sinek 賽門.西奈克 - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;身為千禧世代的一份子，我覺得這個訪談鞭辟入裡啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.mobile01.com/newsdetail/20372/ces-2017-honda-motorcycle-riding-assist-technology"&gt;[CES 2017快訊]重機會自己平衡了！Honda 本田發表全自體平衡技術 『Honda Riding Assist』 - Mobile01&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;哇賽 有點神  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 06 Feb 2017 03:14:33 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-01-09:posts/2017/01/09/y2017w01/</guid><category>blog</category><category>conf</category><category>cs</category><category>javascript</category><category>job</category><category>life</category><category>misc</category><category>programmer</category><category>python</category><category>taiwan</category><category>trivia</category></item><item><title>Y2016W52</title><link>https://blog.m157q.tw/posts/2017/01/02/y2016w52/</link><description>&lt;h3&gt;conf&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hackaday.com/2016/12/30/33c3-works-for-me/"&gt;33C3: Works for Me | Hackaday&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The Chaos Communication Congress (CCC) is the largest German hacker convention by a wide margin, and it’s now in its thirty-third year, hence 33C3. The Congress is a techno-utopian-anarchist-rave with a social conscience and a strong underpinning of straight-up hacking.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;一篇詳細介紹 33C3 的文章，真的是個很棒的 conference。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;opensource&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tonghuix.io/2016/12/diff-china-taiwan-osc/"&gt;两岸开源社群面面观（总结篇） – FOSS Geek | 爱开源魅影&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇也介紹的非常詳細，也很一針見血得點出了許多有關台灣開源社群可以改進和反省的部份，真的是篇值得一看的好文章。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA%3D%3D&amp;amp;mid=2650995135&amp;amp;idx=1&amp;amp;sn=758336ff3ecbfdc239d80a11a7122344&amp;amp;chksm=bdbf01ec8ac888fa1c24d310bb34ca257c4ba06e3d92a1d32d05803498e10624d0c525c1cc59&amp;amp;mpshare=1&amp;amp;scene=4&amp;amp;srcid=1229DBPu7JoSaH9bYLxIN3Ta#rd"&gt;左耳朵耗子：不灌鸡汤，说真的年龄渐长，技术人的发展之路该怎么走？&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;年底真的出現好多值得邊看邊自省的好文章啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jakevdp.github.io/blog/2014/05/09/why-python-is-slow/"&gt;Why Python is Slow: Looking Under the Hood&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;滿詳細介紹 Python 效能不好的一篇文章  &lt;/li&gt;
&lt;li&gt;但，沒有講到 GIL，沒錯，沒有講到 GIL，通常看到說 Python 效能差的文章，幾乎一定會講到 GIL，也可能是作者覺得這個已經講到爛掉了吧。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 06 Feb 2017 02:57:17 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-01-02:posts/2017/01/02/y2016w52/</guid><category>conf</category><category>opensource</category><category>programmer</category><category>python</category></item><item><title>《程序員修煉之道：專業程序員必知的 33 個技巧》</title><link>https://blog.m157q.tw/posts/2016/12/10/new-programmers-survival-manual-navigate-your-workplace-cube-farm-or-startup/</link><description>&lt;p&gt;&lt;img alt="front cover" src="/files/new-programmers-survival-manual-navigate-your-workplace-cube-farm-or-startup/front-cover.jpg" /&gt;&lt;br /&gt;
&lt;img alt="back cover" src="/files/new-programmers-survival-manual-navigate-your-workplace-cube-farm-or-startup/back-cover.jpg" /&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;其實這本書以前就讀過了，&lt;br /&gt;
不過當時還在唸大學，&lt;br /&gt;
看了其實沒有特別深的感觸。&lt;br /&gt;
再一個月就工作滿一年了，&lt;br /&gt;
於是又拿起了這本書翻了一下，&lt;br /&gt;
發現真的比較有感覺了。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;目錄就列出了 33 個技巧並將其分類：  &lt;/p&gt;
&lt;p&gt;&lt;img alt="index 1" src="/files/new-programmers-survival-manual-navigate-your-workplace-cube-farm-or-startup/index-1.jpg" /&gt;&lt;br /&gt;
&lt;img alt="index 2" src="/files/new-programmers-survival-manual-navigate-your-workplace-cube-farm-or-startup/index-2.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;節錄一些我覺得還不錯的部份  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「要是你正在用正確的方式構建正確的產品，而且企業其餘人按步就班把事情搞定，你得到你的滿足感，股東得到他們的錢，皆大歡喜。而要是企業無法運轉，很顯然，你還是能保住他們付給你的錢。你和股東一起轉移到下一份工作上。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「就像一開始提到的，到你發現這些業務層反模式中的任意一個時，可能已經太晚了，單憑程序員沒有辦法對它進行任何修復。因此，我教你一招：當你看到同事開始跳船時，問問他們『那個公司還有其他工作需要人手嗎？』」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「程序員悲觀厭世，熱衷於冷嘲熱諷。他們中絕大多數會告訴你 100 件他們認為很糟糕但實際並非如此的事情。一名程序員對一個產品的最高讚揚就是『它不算太差。』」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Not Bad.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「你已經有大量關於工作的東西要學，先關注那些近期要用的。但不要把磨練技能這件事拖延得太長—它們變鈍的速度遠超越你的想像。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「持續學習全靠自己。在上班時間學習、在業務時間學習或想盡一切辦法保持不過時。這其中部份目的是讓自己在不斷變化的行業裡有市場，但更重要的是保持你的學習能力。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「要是自覺對工作得心應手，不再跟新發展保持同步，你下一次找工作時可能就會遇到大麻煩。就算單純為了減少風險，而專門抽出時間去探索新技術也是值得的。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「寫程式就像彈吉他：要學會，就得練。練得愈多，彈得愈好。光讀不練，沒法讓自己的程式寫的更好。捷徑根本不存在，因此要是現在不愛寫程式，以後就沒辦法得心應手。」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;「理想情況下，你大多數時間都在寫程式。但要記得每年左右做一次反省：你對目前在公司擔任的角色感到快樂嗎？你覺得自己下一步該朝哪裡發展？有沒有現在著手實施便能幫助你實現目標的學習方式或是經驗？」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然後這本書的作者又推薦了兩本書：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Passionate Programmer: Creating a Remarkable Career in Software Development (我編程，我快樂：程序員職業規劃之道)  &lt;/li&gt;
&lt;li&gt;Land the Tech Job You Love (人人都有好工作：IT 行業求職面試必讀)  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Thoughts&lt;/h2&gt;
&lt;p&gt;只能說讀書的速度真的要快，&lt;br /&gt;
與其花很久時間慢慢讀一本書之後就將其束之高閣，&lt;br /&gt;
不如快速得閱讀一本書但每隔一段時間就再回來看一次，&lt;br /&gt;
反而會有不同的感想與收穫，&lt;br /&gt;
這本書算是讓我第一次有這種深刻的體悟。  &lt;/p&gt;
&lt;p&gt;同場加映：&lt;a href="https://www.gitbook.com/book/97-things-every-x-should-know/97-things-every-programmer-should-know/details"&gt;97 Things Every Programmer Should Know&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Related links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pragprog.com/book/jcdeg/new-programmer-s-survival-manual"&gt;New Programmer's Survival Manual: Navigate Your Workplace, Cube Farm, or Startup by Josh Carter |  The Pragmatic Bookshelf&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://m.sanmin.com.tw/product/index/003707424"&gt;三民網路書店&amp;gt;程序員修煉之道：專業程序員必知的33個技巧（簡體書）-(美)卡特&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Thu, 09 Feb 2017 05:41:51 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-12-10:posts/2016/12/10/new-programmers-survival-manual-navigate-your-workplace-cube-farm-or-startup/</guid><category>programmer</category></item><item><title>Y2016W47</title><link>https://blog.m157q.tw/posts/2016/11/28/y2016w47/</link><description>&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.s10g.tw/posts/2016/10/17/plugin-liquid-tags-graphviz/"&gt;Pelican 裝 ligquid tags plugin&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;為了之後要畫圖方便，加裝了 ligquid tags 的 plugin。方法很簡單只要加入 &lt;code&gt;PLUGIN_PATHS&lt;/code&gt; 與 &lt;code&gt;PLUGIN&lt;/code&gt; 即可。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;china&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/11/%e6%b7%98%e5%af%b6-%e5%a4%a9%e8%b2%93-1111%e9%9b%9911-%e5%85%89%e6%a3%8d%e7%af%80-2016%e5%b9%b4%e7%9a%84%e7%b4%80%e9%8c%84/"&gt;淘寶 / 天貓 1111(雙11) 光棍節 2016年的紀錄 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;2012 年：191 億元  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;2013 年：350 億元  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;2014 年：571 億元  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;2015 年：912 億元  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;2016 年：1207 億元  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/11/%e4%b8%ad%e5%9c%8b%e9%80%9a%e9%81%8e%e3%80%8c%e7%b6%b2%e8%b7%af%e5%ae%89%e5%85%a8%e6%b3%95%e3%80%8d%e8%8d%89%e6%a1%88-2016/"&gt;中國通過「網路安全法」 - 2016 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;新聞提到的「通過採取這種限制措施，中國冒下了風險，可能在技術上與世界其他國家隔絕」，是打算把對外網路切掉嗎？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;devops&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/11/tail-%e9%81%a0%e7%ab%af%e5%a4%9a%e5%8f%b0%e6%a9%9f%e5%99%a8-log-%e6%aa%94%e7%9a%84%e5%b7%a5%e5%85%b7/"&gt;tail 遠端多台機器 Log 檔的工具 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;tail -F log-file 只能針對本機，monkeytail (mtail) 可以針對遠端，而且可以自己設定 Group，一次搞定。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;第一次聽到 monkeytail 這個工具  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gcp.expert/gcp-saving-your-cost/"&gt;GCP 錦囊妙計：這五招告訴你如何節省時間與花費&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是都知道的事情。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jvns.ca/blog/2016/11/10/a-few-drawings-about-linux/"&gt;A few drawings about Linux - Julia Evans&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個作者自己畫了很多跟 Linux 有關的小漫畫。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/9229601/what-is-in-c-code"&gt;linux - What is ":-!!" in C code? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;What does :-!! do?  This is, in effect, a way to check whether the expression e can be evaluated to be 0, and if not, to fail the build.  &lt;/li&gt;
&lt;li&gt;這寫法真的挺神奇的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;mysql&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2016/11/13/6952/%e9%97%9c%e9%96%89-mysql-%e7%9a%84-query-cache/"&gt;關閉 MySQL 的 Query Cache | Gea-Suan Lin's BLOG&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「MySQL 的 Query Cache 是目前已知效能不好的主要因素之一 (global mutex lock 的緣故)」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.percona.com/blog/2015/01/02/the-mysql-query-cache-how-it-works-and-workload-impacts-both-good-and-bad/"&gt;The MySQL Query Cache: How it works and workload impacts&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;The MySQL query cache is one of the prominent features in MySQL and a vital part of query optimization. It is important to know how the MySQL query cache works, as it has the potential to cause significant performance improvements – or a slowdown – of your workload.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.percona.com/blog/2016/11/11/is-your-query-cache-really-disabled/"&gt;Is Your Query Cache Really Disabled? - Percona Database Performance Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This blog post was motivated by an internal discussion about how to fully disable query cache in MySQL.  According to the manual, we should be able to disable “Query Cache” on the fly by changing query_cache_type to 0, but as we will show this is not fully true.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.jobbole.com/100744/"&gt;看程序员是如何把自动化做到极致的！ - 文章 - 伯乐在线&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;除了很紅的&lt;a href="https://github.com/narkoz/hacker-scripts"&gt;那篇超過 90 秒就要自動化的&lt;/a&gt;以外還有些其他的  &lt;/li&gt;
&lt;li&gt;原文：&lt;a href="https://www.quora.com/As-a-programmer-what-tasks-have-you-automated-to-make-your-everyday-life-easier"&gt;As a programmer, what tasks have you automated to make your everyday life easier? - Quora&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pymotw.com/3/warnings/"&gt;warnings — Non-fatal Alerts — PyMOTW 3&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好像是個不錯用的 module  &lt;/li&gt;
&lt;li&gt;沒想到 warnings 自己也有一個專門的 module 可用  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jeffknupp.com/blog/2016/11/13/how-python-makes-working-with-data-more-difficult-in-the-long-run/"&gt;How Python Makes Working With Data More Difficult in the Long Run&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;嗯 Dynamic typing 是把雙面刃？ 值得思考一下  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://doughellmann.com/blog/2016/10/31/mailbox-manipulate-email-archives-pymotw-3/"&gt;mailbox — Manipulate Email Archives — PyMOTW 3 – Doug Hellmann&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Python 竟然有這個 module 可用，看來真的要有心的話，用 Python 自己寫個 mail server 應該是可行的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pymotw.com/3/imaplib/index.html"&gt;imaplib — IMAP4 Client Library — PyMOTW 3&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;imaplib implements a client for communicating with Internet Message Access Protocol (IMAP) version 4 servers. The IMAP protocol defines a set of commands sent to the server and the responses delivered back to the client.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;sql&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/10/alibaba-mysql-branch-open-source-alisql-2016/"&gt;阿里巴巴(淘寶) Open Source 的 MySQL：AliSQL&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;電子商務行業常常遇到搶購限量商品、搶票... 等等的事件，看來 AliSQL 對這件事有特別處理。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Gossiping/M.1479821040.A.671.html"&gt;Re: [問卦] 蔣光頭沒來台灣、台灣能有今天嗎 - 看板 Gossiping - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很多以前在歷史課本裡頭學到的近代台灣史完全不是課本裡頭說的這麼一回事呢  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;vim&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/11/vim-open-file-line-number-search-2016/"&gt;Vim 開檔自動到第幾行、搜尋位置的方法 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;範例  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;vim +30 filename # 直接到第30行&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;vim +/function-name filename # 直接到搜尋文字(functionname)的位置&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;原來有這種用法，受教了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ligershark/webdevchecklist.com"&gt;ligershark/webdevchecklist.com: Web Developer Checklist&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;給網站開發人員的檢查清單，感覺挺實用的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/11/fire-fighter-how-to-live-2016/"&gt;林金宏 講解 火災發生的「火場求生」注意事項 - Tsung's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個火場求生的演講真的好棒啊，平常真的有好多的錯誤觀念。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;批踢踢&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/movie/M.1480086802.A.81E.html"&gt;[討論] 《怪獸與牠們的產地》三刷筆記感想（雷） - 看板 movie - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「梅林的鬍子」用台式的說法個人覺得應該是「夭壽喔」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/WomenTalk/M.1479623370.A.40D.html"&gt;[閒聊] 8年級在職場的還好嗎 - 看板 WomenTalk - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;真的是看批踢踢找自尊  &lt;/li&gt;
&lt;li&gt;還是跟身邊的人比才會進步吧  &lt;/li&gt;
&lt;li&gt;是說比年薪比較準吧  &lt;/li&gt;
&lt;li&gt;竹科一堆底薪不高但分紅跟年終多的跟啥一樣  &lt;/li&gt;
&lt;li&gt;但這個有點酷  &lt;/li&gt;
&lt;li&gt;「81 / 60-70k / 營建業師傅 / 水泥工」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/StupidClown/M.1479772628.A.5E8.html"&gt;Re: [無言] 計程車上最狂的下午茶 - 看板 StupidClown - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;結果是業配文，這年頭的業配真的得花好多心思呀。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://chuansong.me/n/2365017"&gt;揭秘美国的自动化午餐公司-FORKABLE_NEXTMIND_传送门&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 Machine Learning 來幫你決定午餐要吃什麼  &lt;/li&gt;
&lt;li&gt;好像挺不錯的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www1.cgmh.org.tw/intr/intr5/c6210/thyroid%20cancer.html"&gt;甲狀腺癌 - 嘉義長庚一般外科&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;依據2013年衛生署國民健康局公布的2010年癌症登記資料顯示，甲狀腺癌佔2010年全部惡性腫瘤死亡人數的0.33%  &lt;/li&gt;
&lt;li&gt;跟在唸醫學系的高中同學吃飯才得知原來甲狀腺癌的痊癒率極高，而且罹癌十年後的死亡機率極低。  &lt;/li&gt;
&lt;li&gt;同學表示如果非得要選一個癌症得的話就是甲狀腺癌了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://zh.wikipedia.org/wiki/%E6%80%A7%E9%9D%A9%E5%91%BD"&gt;性革命 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;性革命是指歐美國家在性观念的革命性變化，發生於1960年代至1980年代間[1]，主要指人際關係及性行為對於傳統價值的衝擊，美國民主黨即常以相關訴求爭取選票。  &lt;/li&gt;
&lt;li&gt;台灣這邊比較常見的說法是「性解放」，但很多人還是沒有真正瞭解其意思，尤其是媒體會常常將其與濫交連結在一起，讓社會大眾認為性解放是不好的。  &lt;/li&gt;
&lt;li&gt;但其實性解放一開始起源是女權組織爭取墮胎權、避孕權以及性自主權，1990 年代以後，開始有非異性戀的 LGBT 爭取不被異性戀歧視的人權甚至是非異性戀的相愛者可以結婚的婚姻平權。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.hy31.net/?p=154&amp;amp;utm_content=bufferbf7aa&amp;amp;utm_medium=social&amp;amp;utm_source=twitter.com&amp;amp;utm_campaign=buffer#more-154"&gt;信用卡相關知識筆記 | Henry的筆記集散地&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;其中，我們可以透過信用卡的前 6 位數來辨識卡片的發卡組織、卡種、發卡銀行等相關資料，因為這前 6 位數其實是國際上用來區分發卡的數字所以拿到同一款卡片的人前六碼一定一樣。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Fri, 03 Feb 2017 14:42:49 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-11-28:posts/2016/11/28/y2016w47/</guid><category>blog</category><category>china</category><category>devops</category><category>gcp</category><category>life</category><category>linux</category><category>misc</category><category>mysql</category><category>programmer</category><category>python</category><category>sql</category><category>taiwan</category><category>trivia</category><category>vim</category><category>web</category><category>批踢踢</category></item><item><title>Y2016W45</title><link>https://blog.m157q.tw/posts/2016/11/14/y2016w45/</link><description>&lt;h3&gt;interview&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1478073114.A.177.html"&gt;[心得]研替(QNAP/群暉/HTC/Garmin/宇匯/appier) - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;啊 每次看別人的面試心得都覺得自己好廢啊 QQ  &lt;/li&gt;
&lt;li&gt;然後 Appier 真的找了好多厲害的人進去呀  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;javascript&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.wu-boy.com/2016/10/replcae-npm-with-yarn-package-management/"&gt;用 Yarn 取代 Npm 管理 JavaScript 套件版本&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;安裝速度真的比 npm 快好多啊  &lt;/li&gt;
&lt;li&gt;實際試用的效果的確如此，而且可以直接無痛從 &lt;code&gt;npm&lt;/code&gt; 改換 &lt;code&gt;yarn&lt;/code&gt;，一樣是使用 &lt;code&gt;package.json&lt;/code&gt;，覺得不錯。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;math&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/ccckmit/yong-shi-fen-zhong-kuai-su-zhang-wo-shu-xue-de-zheng-ti-jie-gou"&gt;用十分鐘快速掌握《數學的整體結構》 // Speaker Deck&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個十分鐘系列也很棒啊，雖然我還是因為對數學的掌握度不夠高，所以無法完全看懂，該多讀點書了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;opensource&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://breezymove.blogspot.com/2016/10/blog-post.html"&gt;邁向永續的臺灣桌面應用自由軟體在地發展&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;開源軟體的中文化逐漸式微 QQ  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vinta.ws/code/where-to-find-great-content-to-read.html"&gt;你都去哪裡看技術文章？ | I failed the Turing Test&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;雖然已經是一年前的文章了，但還是很值得參考，尤其是對於 Python, Web-backend developer 來說。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://verraes.net/2013/10/pre-merge-code-reviews/"&gt;Pre-merge Code Reviews&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;三年前的文章，但還是很值得閱讀。  &lt;/li&gt;
&lt;li&gt;主要在講述作者自己平常在團隊開發時，把某個 branch merge 到 master branch 之前的 code review 遵循的一些規則。  &lt;/li&gt;
&lt;li&gt;篇幅不長，條列式列出重點及其原因。  &lt;/li&gt;
&lt;li&gt;節錄一下最重要的規則部份：  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Never Push to Master  &lt;ul&gt;
&lt;li&gt;Always push to a separate branch per logical unit (story, feature, bug, optimisation, refactor, improvement). Branches are easy to make and easy to merge when you use git (and you apply some of tips further down in this post).  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Never Merge Your Own Branch  &lt;ul&gt;
&lt;li&gt;This helps to ensures that code is in fact reviewed. If you are caught merging into master, you will order pizza for the whole team.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Review Work in Progress First  &lt;ul&gt;
&lt;li&gt;When you are finished with a task, you notify the other team members that your work is ready for final review. Then you review existing branches. Before picking up a new task, you look at all open pull requests (including unfinished ones) and review the changes since the last time you checked.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Merge responsibly  &lt;ul&gt;
&lt;li&gt;Merging a pull request is the responsibility of the whole team. A pull request can not be merged when someone in the team does not understand the code or the reasoning, or does not agree with the solution.&lt;br /&gt;
(Note that these rules are starting points. Figure out what works in your team, adapt continuously.)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eli.thegreenplace.net/2012/01/24/distributed-computing-in-python-with-multiprocessing/"&gt;Distributed computing in Python with multiprocessing - Eli Bendersky's webs&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有個在史丹佛唸天文物理的高中同學問了這方面的問題，因為涉獵不多，所以就查了一下資料。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.longwin.com.tw/2016/10/httpstat-log-dns-lookup-to-download-time-2016/"&gt;httpstat 分析 從 DNS查詢 到 下載完成 各個階段的處理時間&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好像不錯用  &lt;/li&gt;
&lt;li&gt;裝來用以後真的還不錯耶，結果顯示是這樣的：  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ httpstat blog.m157q.tw/get  
Connected to &lt;span class="m"&gt;104&lt;/span&gt;.18.38.201:80 from &lt;span class="m"&gt;192&lt;/span&gt;.168.43.139:44650  

HTTP/1.1 &lt;span class="m"&gt;301&lt;/span&gt; Moved Permanently  
Date: Sat, &lt;span class="m"&gt;26&lt;/span&gt; Nov &lt;span class="m"&gt;2016&lt;/span&gt; &lt;span class="m"&gt;01&lt;/span&gt;:01:00 GMT  
Transfer-Encoding: chunked  
Connection: keep-alive  
Set-Cookie: &lt;span class="nv"&gt;__cfduid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;d090501284dc193137b69492e0e58d8801480122059&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;expires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Sun, &lt;span class="m"&gt;26&lt;/span&gt;-Nov-17 &lt;span class="m"&gt;01&lt;/span&gt;:00:59 GMT&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;.m157q.tw&lt;span class="p"&gt;;&lt;/span&gt; HttpOnly  
Location: https://blog.m157q.tw/get  
Server: cloudflare-nginx  
CF-RAY: 3079681ae007538a-LAX  

Body stored in: /tmp/tmpn6p4a94e  

  DNS Lookup   TCP Connection   Server Processing   Content Transfer  
&lt;span class="o"&gt;[&lt;/span&gt;    253ms   &lt;span class="p"&gt;|&lt;/span&gt;      365ms     &lt;span class="p"&gt;|&lt;/span&gt;       324ms       &lt;span class="p"&gt;|&lt;/span&gt;        0ms       &lt;span class="o"&gt;]&lt;/span&gt;  
             &lt;span class="p"&gt;|&lt;/span&gt;                &lt;span class="p"&gt;|&lt;/span&gt;                   &lt;span class="p"&gt;|&lt;/span&gt;                  &lt;span class="p"&gt;|&lt;/span&gt;  
    namelookup:253ms          &lt;span class="p"&gt;|&lt;/span&gt;                   &lt;span class="p"&gt;|&lt;/span&gt;                  &lt;span class="p"&gt;|&lt;/span&gt;  
                        connect:618ms             &lt;span class="p"&gt;|&lt;/span&gt;                  &lt;span class="p"&gt;|&lt;/span&gt;  
                                      starttransfer:942ms            &lt;span class="p"&gt;|&lt;/span&gt;  
                                                                 total:942ms  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="http://flake8.pycqa.org/en/latest/release-notes/3.0.0.html"&gt;3.0.0 – 2016-07-25 — flake8 3.1.0.dev0 documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;flake8 3.0.0 開始不再完全支援 Python 2.6, 3.2, 3.3  &lt;/li&gt;
&lt;li&gt;會遇到這個主要是送 &lt;a href="https://github.com/jmcarp/robobrowser/pull/56"&gt;robobrowser 的 PR&lt;/a&gt; 的時候遇到 CI testing failed 才去查的。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/pycqa/flake8/issues/187"&gt;flake8 fails to work as it used to be on python 2.6.9 (#187) ‧ Issues ‧ PyC&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/11754877/troubleshooting-related-field-has-invalid-lookup-icontains"&gt;exception - Troubleshooting "Related Field has invalid lookup: icontains" - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;寫 Django 時遇到的問題，要在 Django 的 &lt;code&gt;admin.ModelAdmin&lt;/code&gt; 使用 foreign key field 時，必須使用兩個 underscore。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sshwsfc/xadmin"&gt;GitHub - sshwsfc/xadmin: Drop-in replacement of Django admin comes with lots of goodies, fully extensible with plugin support, pretty UI based on Twitter Bootstrap.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;就一個幫你把 Django Admin 整合 Twitter Bootstrap 的 framework  &lt;/li&gt;
&lt;li&gt;公司的專案有用到，紀錄一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.exploit-db.com/exploits/40680/"&gt;PCMan FTP Server 2.0.7 - 'UMASK' Command Buffer Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來 PCMan 連 FTP server 都有寫...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;vim&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://joe-dev.blogspot.tw/2016/11/vim.html"&gt;閒聊：使用 Vim 編輯器的第五年&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;想想自己從高一第一次用 Vim 到現在，好像也過了 8 年了...  &lt;/li&gt;
&lt;li&gt;但其實一直沒有什麼時間去刻意提升自己使用 Vim 的效率，也沒寫過 Vim Plugin  &lt;/li&gt;
&lt;li&gt;從一開始抄 xatier 跟凍仁翔的 vimrc 來用  &lt;/li&gt;
&lt;li&gt;到大一下開始用 Vundle 裝了些 plugin 來用  &lt;/li&gt;
&lt;li&gt;到大學畢業後又重新整理一次自己真正需要用到的 Vim plugin 和一併整理 vimrc  &lt;/li&gt;
&lt;li&gt;很多更快捷的按法其實我都沒有真的拿來用  &lt;/li&gt;
&lt;li&gt;也許哪天會突然想卯起來研究一下吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/maps/d/u/0/viewer?mid=11yl4gOQPCqLQGVoHlwjy6zcOK70&amp;amp;ll=23.497499078229865%2C120.74966884140622&amp;amp;z=9"&gt;台灣文化資產失火、破壞列表&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;古跡自燃定律實證紀錄。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mhperng.blogspot.com/2016/10/4.html"&gt;「願景會社」（4）：白色力量的集結、獨立與傳承&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;嗯，有些沒想過的觀點，值得用不同的角度來思考一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;skating&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.xuite.net/kk915021/twblog/88227780-%E8%AA%8D%E8%AD%98%E5%9F%B9%E6%9E%97~~~"&gt;認識培林~~~ @ Cycling Life :: 隨意窩 Xuite日誌&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;今年的生日禮物是買個新台幣一千塊有找的交通板來玩玩，所以查了一些跟滑板相關的資料。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;news&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.twreporter.org/a/opinion-south-koreans-urge-president-to-resign"&gt;楊虔豪／見證首爾街頭的百萬大軍　南韓倒朴的關鍵時刻&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這真的可以直接下台了吧 感覺只會愈來愈難看而已 (?)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.twreporter.org/a/opinion-who-vote-for-trump"&gt;王茜穎／為什麼這麼多小鎮鎮民支持川普？──從城鄉差距看美國大選&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;美國的兩極化真的是挺嚴重的啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;joke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://clickme.net/37163"&gt;【專區】搞笑達人ARuFa文章總整理，讓你笑到腹筋狂抽筋！ | 點我一下 分享無價&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;ARuFa 的無厘頭總是能讓人歡笑  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.thenewslens.com/article/53004"&gt;台灣九成無法進食的病患會被放上鼻胃管，歐美卻大多拒絕，為什麼？ - The News Lens 關鍵評論網&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;醫師寫的文章，最後一段關於鼻胃管的迷思值得看一下。  &lt;/li&gt;
&lt;li&gt;覺得滿重要的，所以引述一下：  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;迷思一、一定是因為營養不好，沒有體力，病才不會好！  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;這是非常常見的觀念，然而，對於末期病人而言，他們體力的衰弱往往都來自於本身的疾病逐漸惡化，如癌症、糖尿病、腎衰竭等等。再多的營養進去，其實身體也無法吸收。甚至反而太多營養和水分會造成身體多餘的負擔，產生全身水腫、腹水等等，使得病患更不舒服。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;迷思二、沒有放鼻胃管，病人會因為沒有進食提早走掉  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;國外的研究已經有證實，有沒有放置鼻胃管和生命的長短其實沒有必然的關係，反而我們應該更注重的是病人自己的選擇和生活的品質。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;迷思三、鼻胃管是除了經口進食以外最好的營養給予方式  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;還有另一種更不會讓病患感到不舒服的方式：胃造口，也是在胃部置放一條管子直接灌食，這個方式不僅會比較舒適，同時在照顧上也比較方便，但是因為一般民眾仍覺得這樣的方法比較具侵入性，所以通常抱持著排斥的態度。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其實，鼻胃管是一個很棒的發明，讓暫時無法由口進食的病人（如外科病人）能夠短暫地借助管子持續得到營養。畢竟，由腸胃道吸收營養，依然是比較優先的選擇。只是很多時候，它可能被濫用了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Sat, 26 Nov 2016 09:38:32 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-11-14:posts/2016/11/14/y2016w45/</guid><category>django</category><category>interview</category><category>javascript</category><category>joke</category><category>math</category><category>misc</category><category>news</category><category>opensource</category><category>programmer</category><category>programming</category><category>python</category><category>security</category><category>skating</category><category>taiwan</category><category>vim</category></item><item><title>Y2016W41</title><link>https://blog.m157q.tw/posts/2016/10/17/y2016w41/</link><description>&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@fchern/%E9%97%9C%E6%96%BC%E8%AE%8A%E5%BC%B7%E9%80%99%E6%AA%94%E4%BA%8B-%E4%B8%83-3c80453eea2b#.61twki31m"&gt;關於變強這檔事（七）&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「我想微笑的地方，不是週末的小出遊，而是在世界的舞台上。」  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://djangopackages.org/"&gt;Django Packages&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這個網站把 Django Apps 分門別類的整理  &lt;/li&gt;
&lt;li&gt;好像有點猛啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpadilla/django-project-template/"&gt;jpadilla/django-project-template: Project template layout for Django 1.10 &lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近新開的一個 django 專案有用到這個，感覺還不錯用，最明顯的應該是 django 的 setting.py 裡頭的 secret key 不會洩漏啦，已經用 django-configuration 幫忙設定好了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hyper.sh/"&gt;Hyper.sh - Effortless Docker Hosting&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看了一下 demo 好像有點猛啊，三兩下就可以使用 remote 的 docker 了？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/esrlabs/git-repo"&gt;esrlabs/git-repo: repo - The multiple repository tool (also works on MS Win&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;忘了為什麼會看到這個東西了...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pre-commit/pre-commit"&gt;pre-commit/pre-commit: A framework for managing and maintaining multi-langu&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;git 的 pre-commit 的複雜程度已經到有人需要一個 framework 來管理的程度了  &lt;/li&gt;
&lt;li&gt;這 framework 還有些預設的 pre-commit hooks 可以用  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pre-commit/pre-commit-hooks/tree/master/pre_commit_hooks"&gt;pre-commit-hooks/pre_commit_hooks at master ‧ pre-commit/pre-commit-hooks&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Blazemeter/taurus"&gt;Automation-friendly framework for Continuous Testing by&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以寫個 &lt;code&gt;yaml&lt;/code&gt; 設定檔來跑測試  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tldr-pages/tldr"&gt;tldr-pages/tldr: Simplified and community-driven man pages&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;簡化版的 man page，有 web, cli 還有許多語言的版本，號稱涵蓋 UNIX / Linux / OSX / SunOS , 雖然我稍微看了一下是少了滿多東西就是了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;google&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://analytics.googleblog.com/2016/10/improvements-coming-to-google-analytics.html"&gt;Improvements coming to the Google Analytics desktop UI&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Google Analytics 的桌面版介面要改版了呀  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.inside.com.tw/2016/10/16/google-is-splitting-its-search-index-prioritizing-mobile-over-desktop"&gt;Google 搜尋重大調整：打造獨立行動搜尋索引，與桌機版分開運行&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;可以搜尋到 App 的內容再加上使用 deep link 也太歡樂了吧  &lt;/li&gt;
&lt;li&gt;感覺重點應該是之後可以拿來投放廣告  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;k8s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ithome.com.tw/news/108748"&gt;【大規模容器叢集實例】雷亞遊戲借助Kubernetes，3人搞定百萬玩家App底層維運&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;k8s 業配文 （誤  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.longwin.com.tw/2016/09/linux-tail-follow-file-rotate-2016/"&gt;Linux tail 遇到 file rotate 要如何持續追蹤讀取&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看來要從 &lt;code&gt;tail -f&lt;/code&gt; 改成用 &lt;code&gt;tail -F&lt;/code&gt; 啦  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://keras.io/"&gt;Keras Documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;幫忙把 Theano 跟 TensorFlow 包起來一起用的 framework  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://denny.qollie.com/2016/09/21/corp-gov-shit/"&gt;創業的第零步：公司設立&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;開公司真的很多有的沒的得注意啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.theearthawaits.com/"&gt;The Earth Awaits - Find Cities in Your Budget&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;幫你找邊旅遊邊工作的理想地點（？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2016/10/04/6901/%e6%8a%8a-csc-%e5%8d%a1%e7%89%87%e8%83%8c%e9%9d%a2%e7%9a%84%e4%b8%89%e7%a2%bc-%e8%ae%8a%e6%88%90-otp-%e5%8b%95%e6%85%8b%e5%af%86%e7%a2%bc/"&gt;把 CSC (卡片背面的三碼) 變成 OTP (動態密碼)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;感覺就是加入了 2FA 的信用卡跟金融卡  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.aaronsw.com/weblog/hatethenews"&gt;I Hate the News (Aaron Swartz's Raw Thought)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看新聞很浪費時間，因為看與不看都對我們的生活沒多大的影響，不如專注在自己真正該做的事。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@shemag8/fuck-you-startup-world-ab6cc72fad0e#.6crscnb5z"&gt;Fuck You Startup World&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;又是一篇怨念很深的文章  &lt;/li&gt;
&lt;li&gt;超時工作、吃垃圾食物、鋪張浪費的活動、追不完的科技新聞、各種縮寫、說看電視浪費時間但都在討論網飛  &lt;/li&gt;
&lt;li&gt;算是高等級的靠北工程師文章吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@c9s/%E8%AB%87%E6%9E%B6%E6%A7%8B%E4%B9%8B%E7%9C%BC%E9%AB%98%E6%89%8B%E4%BD%8E-2f4e0c65faee"&gt;談架構之必要 — Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一年後再看一次  &lt;/li&gt;
&lt;li&gt;自己好像就是那種眼高手低的工程師啊  &lt;/li&gt;
&lt;li&gt;引以為戒  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://outofmemory.cn/code-snippet/4092/python-json-charset-type"&gt;为程序员服务&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;json.dumps()&lt;/code&gt; 要顯示中文的話記得要加上 &lt;code&gt;ensure_ascii=False&lt;/code&gt; 這個 option。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/11093236/use-logging-print-the-output-of-pprint"&gt;python - Use logging print the output of pprint - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 &lt;code&gt;pprint.pformat&lt;/code&gt; 可以在 &lt;code&gt;logging&lt;/code&gt; 中達到一般 &lt;code&gt;pprint&lt;/code&gt; 的效果，讓 &lt;code&gt;logging&lt;/code&gt; 的輸出更好看。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sylnsfar/qrcode/"&gt;sylnsfar/qrcode: artistic QR Code in Python （Animated GIF qr code）- Python &lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;竟然可以用 Python 做出這麼酷的 QR Code  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.gslin.org/archives/2016/09/24/6865/%e7%94%a8-rust-%e5%af%ab%e7%9a%84-ripgrep/"&gt;用 Rust 寫的 ripgrep&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「ripgrep 是用 Rust 寫的強化版 grep 工具，也就是類似於 ag 或是 ack 的工具，但想辦法讓執行的速度更快，盡可能接近於原始 grep 的速度。」  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BurntSushi/ripgrep"&gt;BurntSushi/ripgrep: ripgrep combines the usability of The Silver Searcher w&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.burntsushi.net/ripgrep/"&gt;ripgrep is faster than {grep, ag, git grep, ucg, pt, sift} - Andrew Gallant&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/orangetw/My-CTF-Web-Challenges"&gt;orangetw/My-CTF-Web-Challenges: Collection of CTF Web challenges I made&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Orange 出過的題目  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2016/09/csp.html"&gt;Content Security Policy 入门教程&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;網頁如果要載入其他 domain 的資源，就需要注意一下這個東西。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2016/08/migrate-from-http-to-https.html"&gt;HTTPS 升级指南&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;就是個如何設定 HTTPS 的簡易教學  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wix.com/"&gt;It All Starts with Your Stunning Website&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一直看到 youtube 投這個廣告  &lt;/li&gt;
&lt;li&gt;好像可以很快做出很潮的網站  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rowkey.me/blog/2016/08/30/recommend-sys/"&gt;推荐系统杂谈&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近 messenger bot 和各種 bot 崛起，公司想弄個推薦商品的 bot 直接投給使用者，剛好看到這篇，可以參考一下。  &lt;/li&gt;
&lt;li&gt;裡頭提到基本上 80% 都還是使用最多人看的商品、最多人買的商品以及買了這個商品的人還買了哪些商品，這類的推薦最有用。  &lt;/li&gt;
&lt;li&gt;然後還有一些時事性質的活動必須由人工下去推薦，例如：金州勇士隊連勝的話，就可以推薦一下今州勇士隊球衣之類的。  &lt;/li&gt;
&lt;li&gt;而剩下 20% 則是用 Machine Learning，通常這類的效果沒那麼好，如果要達到夠好的程度必須要花非常多的時間去調整。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;work&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jvns.ca/blog/2016/08/16/how-do-you-work-on-something-important/"&gt;How do you decide what to work on?&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者講述自己如何決定要從事哪方面的工作  &lt;ul&gt;
&lt;li&gt;要清楚知道自己的目標  &lt;/li&gt;
&lt;li&gt;工作以後會有很多瑣事，能夠專心在某一件事情上的時間很難得也很可貴。  &lt;/li&gt;
&lt;li&gt;沒有所謂「一定得去做的事」  &lt;/li&gt;
&lt;li&gt;要相信自己想做的事是有可能達成的  &lt;/li&gt;
&lt;li&gt;還有很多事是無法確定或未知的，只有遇到了才能知曉，但可以先做好一些準備。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;javascript, npm&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yarnpkg/yarn"&gt;yarnpkg/yarn: ?? Fast, reliable, and secure dependency management for JavaS&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;新的 JavaScript package manager，由 Facebook, Google 等大公司聯手推出，強調比 npm 快、比 npm 安全，才短短三天，在 GitHub 上的 star 數量就超過了 npm，看來又要長江後浪推前浪啦。  &lt;/li&gt;
&lt;li&gt;簡直就是為上禮拜才出爐的 &lt;a href="https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f?gi=7a4f7274c1de"&gt;How it feels to learn Javascript in 2016&lt;/a&gt; 做了最好的例證。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ihower/status/786767972127809537"&gt;發現 yarn 的 github star 星星數比 npm 還多了&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.zhihu.com/question/33634376/answer/125936478"&gt;有哪些看起來很高端的技術其實原理很暴力很初級？ - windleavez 的回答 - 知乎&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來魔獸世界殺了這麼多隱形的兔子啊  &lt;/li&gt;
&lt;li&gt;原來隱形的兔子這麼好用啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;youtube&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=Rpco93LTOPk"&gt;這我一定吉！反思饒舌《獻給現代教育體制的訴狀》(中文字幕) - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;真的是很棒的一部影片啊，對現代教育體制批評得鞭辟入裡。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;批踢踢&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1475806271.A.4EE.html"&gt;[公司] 竹間智能科技工作心得 (轉錄) - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;直接列入黑名單啦，這間太誇張了。  &lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;5.老闆和你約開會的時間 經常都約晚上七八九點 或超過十點都有&lt;br /&gt;
而且老闆的行程常delay或更動 可能最後實際開會的時間已到十一點  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;6.據說有同事因為要求加班費 而被約談  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;7.有一次 老闆星期六在微信上說 我們的APP應該要能唱歌/播放歌曲&lt;br /&gt;
到了星期天 老闆說 為什麼還不能播歌 這功能 我今天就要看到一版上線  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;8.曾有同事 因為在假日的晚上十點半被老闆要求立刻實作新功能 本來他們組的PM想安撫&lt;br /&gt;
一下老闆 明天早上再做&lt;br /&gt;
結果老闆在群組裡說 "不是明天 是現在!!"&lt;br /&gt;
於是PM只好晚上11點找工程師來公司寫code 不知道寫到幾點&lt;br /&gt;
沒多久後那位工程師同事離職了」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;9.之前辦公室有一位做machine learning的同事&lt;br /&gt;
被老闆在微信要求 machine learning 正確率必須要做到 100%&lt;br /&gt;
後來那位同事也離職了  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Sat, 29 Oct 2016 01:18:18 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-10-17:posts/2016/10/17/y2016w41/</guid><category>blog</category><category>django</category><category>docker</category><category>gae</category><category>gcp</category><category>git</category><category>github</category><category>google</category><category>https</category><category>interview</category><category>k8s</category><category>linux</category><category>machine learning</category><category>misc</category><category>npm</category><category>programmer</category><category>programming</category><category>ptt</category><category>python</category><category>qrcode</category><category>rust</category><category>security</category><category>taiwan</category><category>trivia</category><category>web</category><category>work</category><category>javascript</category><category>youtube</category><category>批踢踢</category></item><item><title>Y2016W39</title><link>https://blog.m157q.tw/posts/2016/10/03/y2016w39/</link><description>&lt;h3&gt;gcp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2016/09/bringing-Pokemon-GO-to-life-on-Google-Cloud.html"&gt;Google Cloud Platform Blog: Bringing Pokémon GO to life on Google Cloud&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;不是技術文，算是有點推銷自家 GCP 的概念吧，就「你們玩的 Pokémon GO 背後用的可是我們家的服務喔」的感覺。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/blog/2243-rebase-and-merge-pull-requests"&gt;Rebase and merge pull requests&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GitHub 把 Rebase 這個選項加到 Merge Pull Request 裏面了  &lt;/li&gt;
&lt;li&gt;除了原本預設的 &lt;code&gt;--no-ff&lt;/code&gt; merge 之外，還多了個 squash and merge 跟 rebase and merge 的選項  &lt;/li&gt;
&lt;li&gt;算是給覺得 merge 一堆 branch 會把 base branch 的 graph 搞得很亂的而喜歡用 rebase 把 branch 扁平化的那派人有個選項吧  &lt;/li&gt;
&lt;li&gt;不過我個人覺得 rebase 會把 base branch 搞的很散亂，個人是習慣在 merge 到 base branch 之前，如果有需要的話，自己先 rebase 整理一下，發 PR merge 到 base branch 還是習慣用預設的 merge，比較容易一目了然這個 branch 到底做了哪些事，可能是因為我目前碰的 repo 的規模都不夠大吧？ branch 太多的話，這個方法應該是真的會看到很亂的一堆 branches  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/LCTT/TranslateProject"&gt;LCTT/TranslateProject: Linux 中國翻譯項目&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;中國一群人發起的專門翻譯跟 Linux 相關文章的小組  &lt;/li&gt;
&lt;li&gt;裏面蒐集了許多不錯的文章  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://linux.cn/"&gt;Linux.中国-开源社区&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最近在用的 Arch Linux 筆電遇到的問題  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/584636/kidle-inject-causing-very-high-load"&gt;14.10 - kidle_inject causing very high load - Ask Ubuntu&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/482307/kidle-inject-uses-cpu-power-without-apparent-reason"&gt;14.04 - kidle_inject uses cpu power without apparent reason - Ask Ubuntu&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看來是 &lt;code&gt;intel_powerclamp&lt;/code&gt; 這個 kernel module 的問題  &lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;sudo rmmod intel_powerclamp&lt;/code&gt; 把它暫時先拔掉有解決這問題  &lt;/li&gt;
&lt;li&gt;拿掉以後耗電也沒特別快，所以應該還行啦。  &lt;/li&gt;
&lt;li&gt;順便記一下 &lt;code&gt;intel_powerclamp&lt;/code&gt; 這個 driver 的文件網址，畢竟有稍微看了一下。  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kernel.org/doc/Documentation/thermal/intel_powerclamp.txt"&gt;https://www.kernel.org/doc/Documentation/thermal/intel_powerclamp.txt&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.longwin.com.tw/2016/09/linux-tail-follow-file-rotate-2016/"&gt;Linux tail 遇到 file rotate 要如何持續追蹤讀取&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來用 &lt;code&gt;tail -F&lt;/code&gt; 比 &lt;code&gt;tail -f&lt;/code&gt; 好呀  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail -F&lt;/code&gt; 在遇到 log file rotation 的時候仍然可以持續追蹤，但 &lt;code&gt;tail -f&lt;/code&gt; 就不會了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.agwa.name/blog/post/how_to_crash_systemd_in_one_tweet"&gt;How to Crash Systemd in One Tweet&lt;/a&gt;  &lt;blockquote&gt;
&lt;p&gt;The following command, when run as any user, will crash systemd:&lt;br /&gt;
&lt;code&gt;NOTIFY_SOCKET=/run/systemd/notify systemd-notify ""&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;這篇解釋文章解釋了為何會造成這樣的原因：  &lt;blockquote&gt;
&lt;p&gt;The bug is remarkably banal. The above systemd-notify command sends a zero-length message to the world-accessible UNIX domain socket located at /run/systemd/notify. PID 1 receives the message and fails an assertion that the message length is greater than zero. Despite the banality, the bug is serious, as it allows any local user to trivially perform a denial-of-service attack against a critical system component.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;mysql, gae&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/5664310/mysqldb-python-raw-query-and-customized-order-by"&gt;MySQLdb, Python raw query and customized ORDER BY - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;沒記錯的話是用 &lt;a href="https://pypi.python.org/pypi/MySQL-python/1.2.5"&gt;MySQL-python 1.2.5 : Python Package Index&lt;/a&gt; 遇到的問題  &lt;/li&gt;
&lt;li&gt;就是 &lt;code&gt;cursor.execute(comamnd, params)&lt;/code&gt; 在遇到 &lt;code&gt;ORDER BY&lt;/code&gt; 的時候，把參數放在 &lt;code&gt;params&lt;/code&gt; 會有問題。  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;cursor.execute()&lt;/code&gt; 的用法是這樣：  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;command = "SELECT * FROM table ORDER BY %s %s"&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;params = ['avg', 'DESC']&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;要直接把 &lt;code&gt;params&lt;/code&gt; 寫死在 &lt;code&gt;command&lt;/code&gt; 裏面，就沒問題。  &lt;ul&gt;
&lt;li&gt;像這樣 &lt;code&gt;command = "SELECT * FROM table ORDER BY %s %s" % ('avg', 'DESC')&lt;/code&gt;，然後 &lt;code&gt;params&lt;/code&gt; 直接留空。  &lt;/li&gt;
&lt;li&gt;也就是說 &lt;code&gt;execute()&lt;/code&gt; 在把 &lt;code&gt;params&lt;/code&gt; 代換到 &lt;code&gt;command&lt;/code&gt; 的時候是有問題的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;因為 Google App Engine Standard Environment 上，預設裝的 MySQLdb package (在 &lt;code&gt;app.yaml&lt;/code&gt; 的 &lt;code&gt;libraires:&lt;/code&gt; 設定的）就是這個已經在 2014 年就停止更新的 package.  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/MySQL-python"&gt;https://pypi.python.org/pypi/MySQL-python&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/farcepest/MySQLdb1"&gt;https://github.com/farcepest/MySQLdb1&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;然後這個 repo 只有支援 Python 2，而且又停止更新，所以後來就有人 fork 出來並加上了 Python 3 和 pypy 的 support.  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/mysqlclient"&gt;https://pypi.python.org/pypi/mysqlclient&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PyMySQL/mysqlclient-python"&gt;https://github.com/PyMySQL/mysqlclient-python&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;所以如果是用 Python 3 寫 Django 又用 MySQL db 的話，現在都會建議裝這個。  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install mysqlclient&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.storm.mg/lifestyle/159818"&gt;自學寫程式不到三年，24歲的他靠「求職天眼通」一戰成名-求職｜政大｜求職天眼通｜古宗禎｜資訊不對稱-風傳媒-數位時代&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來年紀跟我一樣啊... 看看人家再看看我自己 真的要好好加油了 QQ  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://eng.uber.com/pyflame/"&gt;Pyflame: Uber Engineering's Ptracing Profiler for Python - Uber Engineering&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/uber/pyflame"&gt;uber/pyflame: Python flame graph tool.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Uber 出的 Python Profiler，好像不錯，之後有機會可以拿來用用看。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://outofmemory.cn/code-snippet/4092/python-json-charset-type"&gt;为程序员服务&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;今天被這篇拯救了  &lt;/li&gt;
&lt;li&gt;要在 python 的 &lt;code&gt;json&lt;/code&gt; module 顯示中文的話，必須要開啟這個選項  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ensure_ascii=False&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;否則預設只會看到中文被轉成 unicode  &lt;/li&gt;
&lt;li&gt;Python 2 的中文問題對我來說始終是個難題  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Thu, 10 Nov 2016 11:35:08 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-10-03:posts/2016/10/03/y2016w39/</guid><category>gae</category><category>gcp</category><category>github</category><category>linux</category><category>mysql</category><category>programmer</category><category>python</category></item><item><title>Y2016W38</title><link>https://blog.m157q.tw/posts/2016/09/26/y2016w38/</link><description>&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://amir.rachum.com/blog/2013/07/13/django-querysets-fucking-awesome-yes/"&gt;Django QuerySets: Fucking Awesome? Yes&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;就最近接手了一個公司內的專案，裡頭大量使用了 Django 的 QuerySet。  &lt;/li&gt;
&lt;li&gt;找到這篇，覺得講的還不錯，所以存個檔（？）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.wu-boy.com/2016/09/docker-cache-on-travis/"&gt;在 Travis 實現 Docker Cache&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這好像可以用來解決之前用 Travis 自動上版到 GKE 的時候 build image 都要很久的問題  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/how2dock/docbook"&gt;how2dock/docbook: Sample code and Vagrant files for O'Reilly Docker cookbook&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;歐萊禮系列的《Docker 錦囊妙計》中的範例程式碼  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;firefox&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.servethehome.com/firefox-is-eating-your-ssd-here-is-how-to-fix-it/"&gt;Firefox is eating your SSD - here is how to fix it&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;預設每 15 秒就會把 session 存入硬碟，於是造成硬碟寫入的 loading 非常高，對 SSD 這種寫入次數有限的東西非常傷，文中有提供解法。  &lt;/li&gt;
&lt;li&gt;開啟 &lt;code&gt;about:config&lt;/code&gt; 頁面，把 &lt;code&gt;browser.sessionstore.interval&lt;/code&gt; 從預設的 &lt;code&gt;15000&lt;/code&gt; (15 秒) 改成 &lt;code&gt;1800000&lt;/code&gt; (30 分鐘) 後，硬碟寫入的 loading 明顯降低了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cli, htop&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://serverfault.com/questions/180711/what-exactly-do-the-colors-in-htop-status-bars-mean"&gt;linux - What exactly do the colors in htop status bars mean? - Server Fault&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;之前看 htop 都只有看數字而已，於是查了一下 CPU 跟 RAM 的 status bar 中不同顏色代表什麼意思，節錄一下。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Hitting &lt;code&gt;F1&lt;/code&gt; or &lt;code&gt;h&lt;/code&gt; will show you the key. But for reference, the default colors are:  &lt;/p&gt;
&lt;p&gt;CPU:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blue = Low priority threads  &lt;/li&gt;
&lt;li&gt;Green = Normal priority threads  &lt;/li&gt;
&lt;li&gt;Red = Kernel threads  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Memory:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Green = Used memory  &lt;/li&gt;
&lt;li&gt;Blue = Buffers  &lt;/li&gt;
&lt;li&gt;Yellow/Orange = Cache  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are a couple of different color-schemes available, you can see them through hitting &lt;code&gt;F2&lt;/code&gt;.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1474342684.A.3BA.html"&gt;[徵才] Opera TV: C   Developers with Linux - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來那個做瀏覽器的 Opera 在內湖有辦公室啊  &lt;/li&gt;
&lt;li&gt;月薪 100k 起跳還算不錯耶，雖然還是比國外的便宜就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.evanlin.com/developer-after-40/"&gt;[好文共賞] Being A Developer After 40 (如何在四十歲後繼續從事軟體開發)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;很棒的翻譯文章，一個國外的、具有 18 年開發經驗的開發者的分享，期許自己也能像他一樣，在寫程式這方面努力不懈。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/crazyguitar/pysheeet"&gt;Python Cheatsheet https://www.pythonsheets.com&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Python 小抄，整理的還不算少，無聊的時候可以看看。  &lt;ul&gt;
&lt;li&gt;網站的部份在這： &lt;a href="https://www.pythonsheets.com/"&gt;https://www.pythonsheets.com/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;順便整理幾個類似的文章在這邊備忘好了  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html"&gt;Code Like a Pythonista: Idiomatic Python&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeffknupp.com/blog/2012/10/04/writing-idiomatic-python/"&gt;Writing Idiomatic Python&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.python-guide.org/en/latest/"&gt;The Hitchhiker’s Guide to Python! — The Hitchhiker's Guide to Python&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dongwm.com/archives/liao-liao-pythonmian-shi-zhe-jian-shi-er/"&gt;聊聊 python 面試這件事兒 - 小明明 s à domicile&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;還滿不錯的一篇關於 Python 面試的文章，有作者自己的心得還有經驗分享，以及最後有分享一些 Python 面試題目的連結。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;第一次面試被電的部份  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;他们觉得我买了好多书, 想看想学的很多, 但是都没有深入. 建议我砍掉一半的兴趣, 把这些时间专注于做其中的几件  &lt;/li&gt;
&lt;li&gt;一个领域学习1，2个就好了. 比如web框架. 只要学好django或者flask, 理解原理. 用什么框架已经不重要了  &lt;/li&gt;
&lt;li&gt;好好学习一个编辑器. 驾驭好它, 让它提高你的工作效率.  &lt;/li&gt;
&lt;li&gt;python学的不够深入, 建议我在细节上一个一个的抠, 力争弄清楚每一个, 积少成多  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;後來做的努力  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;去某公司面试前, 或者立志要去该公司. 最好先了解公司用到的python相关的技术栈, 这样可以有针对的准备相关内容  &lt;/li&gt;
&lt;li&gt;针对性的准备想要做的职位的python技能需求. 比如面试运维开发, 多准备系统, 数据库, 配置管理相关的知识, 比如web框架(除非了解到该职位需要)  &lt;/li&gt;
&lt;li&gt;及时关注python技能最新用法, 或者推荐用法. 多了解python3的趋势, 有可能会被面试官问到.  &lt;/li&gt;
&lt;li&gt;有个github账号. 能把自己的想法实践出来的python项目, 这样就多了了解你的机会. 可能在面试中就会少问你对应的技术点  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;收錄一下面試題目的連結們  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://programmers.stackexchange.com/questions/21917/python-interview-questions"&gt;http://programmers.stackexchange.com/questions/21917/python-interview-questions&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/sigmavirus24/python-interview-questions"&gt;https://github.com/sigmavirus24/python-interview-questions&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://gist.github.com/xiangzhuyuan/7454001522d275021b2d"&gt;https://gist.github.com/xiangzhuyuan/7454001522d275021b2d&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/ContinuumIO/interview-questions"&gt;https://github.com/ContinuumIO/interview-questions&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/Flowerowl/python_articles"&gt;https://github.com/Flowerowl/python_articles&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://marselester.com/preparation-to-python-interview.html"&gt;http://marselester.com/preparation-to-python-interview.html&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/zachwill/cracking-the-coding-interview"&gt;https://github.com/zachwill/cracking-the-coding-interview&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://www.bogotobogo.com/python/python_interview_questions.php"&gt;http://www.bogotobogo.com/python/python_interview_questions.php&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://www.quora.com/What-are-good-Python-interview-questions"&gt;https://www.quora.com/What-are-good-Python-interview-questions&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://www.reddit.com/r/Python/comments/1knw7z/python_interview_questions"&gt;https://www.reddit.com/r/Python/comments/1knw7z/python_interview_questions&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/1st/interview/blob/master/python.md"&gt;https://github.com/1st/interview/blob/master/python.md&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;还有2个中文:  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/taizilongxu/interview_python"&gt;https://github.com/taizilongxu/interview_python&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://gist.github.com/prim/3e7f814187c715541ef2"&gt;https://gist.github.com/prim/3e7f814187c715541ef2&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;tool&lt;/h3&gt;
&lt;p&gt;就一些檢測中國網路連線狀況的工具，&lt;br /&gt;
最近工作上再處理一個把網站架在中國網路的大客戶，&lt;br /&gt;
所以一直遇到跟中國網路有關的問題，&lt;br /&gt;
之後有空應該會整理成一篇文章吧。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tools.cloudxns.net/"&gt;首頁 --CloudXNS 運維工具箱_智能 DNS 運維工具箱_最好用的 DNS 檢測工具_永久免費&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://ping.chinaz.com/"&gt;多个地点Ping服务器,网站测速 - 站长工具&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.zhihu.com/question/35239964"&gt;宇宙中有哪些超出常人想像的現象？ - 自然科學 - 知乎&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最多人按讚的那個算是滿易懂的有關黑洞的天文科普吧。  &lt;/li&gt;
&lt;li&gt;想起高中科展做的有關黑洞的專題啊...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.mobile01.com/topicdetail.php?f=177&amp;amp;t=83330"&gt;蘋果週邊綜合 - 大家的電腦桌周邊是如何～分享一下吧＠＠ - 蘋果討論區 - Mobile01&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;我的天啊... 十年前的電腦配置的照片，好懷念啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Baseball/M.1457362742.A.F5B.html"&gt;Re: [問題] 為何陳金鋒是神?&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;雖然沒有很常看棒球但淚推 QQ  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/cowbeiNTHU/posts/1087778498001953"&gt;靠北清大&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇好中肯啊，只好附個截圖了。  &lt;/li&gt;
&lt;li&gt;&lt;img alt="靠北清大38597" src="/files/y2016w38/cowbeiNTHU38597.png" /&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cool.ptt01.cc/post_1213"&gt;10 年過了！當年「宋岳庭」打敗方文山和周杰倫的『Life's A Struggle』終於聽懂這首歌它在說什麼！，回頭才知道他早已不在人世... | &lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;真的好好聽啊，聽了以後就停不下來了。  &lt;/li&gt;
&lt;li&gt;公視人生劇展短篇影集《他們在畢業前一天爆炸》有出現這首歌，以前看的時候完全沒有注意到，這個週末耍廢花了一個下午重看一次，才發現這首歌原來這麼猛。  &lt;/li&gt;
&lt;li&gt;第一次聽到這麼清楚的 Rap，而且歌詞不是亂罵一堆有的沒的髒話，是對這個社會的諷刺還有個人的反思，可惜天妒英才。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ptt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/gossiping/M.1474389994.A.56D.html"&gt;Re: [問卦] 交大讀四年，母豬賽貂蟬？ - 看板 Gossiping - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;交大唸了四年，完全沒聽過虎二... 只好節錄一下了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;講到虎二喔?  &lt;/p&gt;
&lt;p&gt;那就來講虎二掘起的八卦吧。  &lt;/p&gt;
&lt;p&gt;話說男生多的地方必定要尻尻，沒有色情圖片也要有色情小說。  &lt;/p&gt;
&lt;p&gt;在民國八十年那個蠻荒時代，交大獨步全台，做為施振榮的母校，&lt;br /&gt;
網路大管電腦多，在別的學校網路只拉到計算機中心的時代，&lt;br /&gt;
交大就把網路拉到學生宿舍，在別的學校一個學校建一個 BBS 的&lt;br /&gt;
時代，交大就已經進入了一間房間四個 BBS 的光榮時代。  &lt;/p&gt;
&lt;p&gt;網路元年大家只能登入學校工作站，按學號找人 Talk。  &lt;/p&gt;
&lt;p&gt;要練英文。  &lt;/p&gt;
&lt;p&gt;所以當年的網路文章充滿了  &lt;/p&gt;
&lt;p&gt;ji31vu042y941ulgji 15j/ 1jp61531s/61m/415k415j/31z; 1z831&lt;br /&gt;
(我現在要說中文只能用這種方法)(注音輸入法)  &lt;/p&gt;
&lt;p&gt;這種只有聰明人才看得懂的密碼。  &lt;/p&gt;
&lt;p&gt;進入網路二年，全交大的年輕人矢志中文化，不論是中文化 VTerm&lt;br /&gt;
還是中文化 XWindow, 總之，想盡辦法講中文。  &lt;/p&gt;
&lt;p&gt;而有了網路就有論壇，最早當然就是 Mail List 與 USENEWS，&lt;br /&gt;
交大資工的學生很早就都使用 TIN/CTIN 在看 News, 學校的論壇&lt;br /&gt;
不是用 Notes 就是用 News；當然，最可怕的就是交大總計中&lt;br /&gt;
的 Notes 系統上的 Anonymous 板，那可是集中所有反政府學生&lt;br /&gt;
討論如何對抗學校當局的言論中心。  &lt;/p&gt;
&lt;p&gt;然後，在民國八十二年四月就發生了  &lt;/p&gt;
&lt;p&gt;「拒吃二餐快餐部運動」  &lt;/p&gt;
&lt;p&gt;與  &lt;/p&gt;
&lt;p&gt;「在環校道路上散步運動」  &lt;/p&gt;
&lt;p&gt;前者是為了對抗難吃到要命的交大二餐快餐部，結果就是運動當天晚上&lt;br /&gt;
快餐部營業額是 0 (相對的我在自助餐當工讀生夾菜夾到手快要斷掉..)  &lt;/p&gt;
&lt;p&gt;後者則是針對交大特有的「睦鄰行為」: 允許園區上下班汽機車通過交大&lt;br /&gt;
校園通勤卻禁止交大學生在校內騎機車。  &lt;/p&gt;
&lt;p&gt;結果當天在交大行政大樓前聚集了大約三四百名學生，讓計中主任都出來&lt;br /&gt;
說話:「我們絕對不會關掉 Note」.....  &lt;/p&gt;
&lt;p&gt;(當天晚上 Notes 系統就變成唯讀禁止發言，所謂交大校方的說話與國民黨&lt;br /&gt;
 政府的保證一樣完全是放P。)  &lt;/p&gt;
&lt;p&gt;好，沒有了 Notes,  BBS 興起了。  &lt;/p&gt;
&lt;p&gt;民國八十一年中山大學建置了西子灣 BBS 站。坦白說我同學當初介紹我用&lt;br /&gt;
的時候我還覺得它的介面靠北難用(不過跟現在 PTT 一樣)。不過呢，&lt;br /&gt;
連中山那個鄉下學校都有了 BBS ，交大怎能沒有?  &lt;/p&gt;
&lt;p&gt;所以那年春天在計中關閉了 Notes 系統之後，交大各系如雨後狗尿苔一樣&lt;br /&gt;
建立了各式BBS..........BBS一多，逛 BBS 就很不方便，每次都要登入&lt;br /&gt;
各個 BBS 去看文章。  &lt;/p&gt;
&lt;p&gt;於是我們系上就開始想到利用 News Server 把各大 BBS 的文章統一轉載，&lt;br /&gt;
也就是民國八十年代所謂的  &lt;/p&gt;
&lt;p&gt;連線板  &lt;/p&gt;
&lt;p&gt;而在那個法律管不到的時代呢，自然 SEX 板上就開始有人講色情話題，久了&lt;br /&gt;
之後女性不堪其擾屢屢找我們網管靠北，還說我們不處理就讓校方來處理....  &lt;/p&gt;
&lt;p&gt;開玩笑，讓校方處理跟關站沒啥兩樣。  &lt;/p&gt;
&lt;p&gt;於是，SEX 板就分流出一個 SEXSTORY 板，專放色情小說，提供登徒子們滿足&lt;br /&gt;
性幻想的園地。  &lt;/p&gt;
&lt;p&gt;一時間，連線 SEXSTORY 板成了最紅的板面。  &lt;/p&gt;
&lt;p&gt;人紅是非多，板紅有人找碴，沒多久交大資工系接獲政府公文說有人利用&lt;br /&gt;
學術網路刊載色情資訊違反善良風俗等廢話五千言，限時刪除。  &lt;/p&gt;
&lt;p&gt;此時，網路傳奇名人 Tiger 2 學弟就跳出來說:  &lt;/p&gt;
&lt;p&gt;「這樣吧，我捐一台電腦來放這些資料....」  &lt;/p&gt;
&lt;p&gt;於是全台最著名的地下 BBS 站，需要有人介紹才能找到 IP 登入的 Tiger 2&lt;br /&gt;
站就此誕生。  &lt;/p&gt;
&lt;p&gt;爾後此站幾度易手，學長傳學弟，一路不知所終，而 Tiger 2 學弟也去澳洲&lt;br /&gt;
開公司放牧綿羊好不快活，喝的酒都比俺的薪水還多。  &lt;/p&gt;
&lt;p&gt;回首前塵不覺已二十數年矣....................  &lt;/p&gt;
&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Fri, 04 Nov 2016 02:15:26 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-09-26:posts/2016/09/26/y2016w38/</guid><category>django</category><category>docker</category><category>firefox</category><category>cli</category><category>htop</category><category>job</category><category>misc</category><category>programmer</category><category>ptt</category><category>python</category><category>taiwan</category><category>tol</category><category>tool</category><category>trivia</category></item><item><title>Y2016W36</title><link>https://blog.m157q.tw/posts/2016/09/11/y2016w36/</link><description>&lt;h3&gt;&lt;a href="http://www.arrc.tw/"&gt;ARRC (Advanced Rocket Research Center) （前瞻火箭計劃）&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://chinese.eurekalert.org/zh/pub_releases/2015-12/thkp-ppi121015.php"&gt;理大參與研發微型衛星平台及分離裝置&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來微型衛星跟普通衛星的重量可以差這麼多，一個是數公斤，一個是數百公斤。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scitechvista.nat.gov.tw/zh-tw/articles/c/0/9/10/1/1646.htm"&gt;發射屬於自己的衛星 - 科技大觀園 - 科技部&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7B9Up161sAI"&gt;台灣本土火箭 要讓太空旅行夢想成真 | 吳宗信 Jong-Shinn Wu | TEDxTaipei - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用台語加英文演講真的超酷的啊，二十分鐘一下就聽完了，堅持 100% Made In Taiwan 真的很熱血啊。  &lt;/li&gt;
&lt;li&gt;五月天還為這件事寫了一首歌：&lt;a href="https://www.youtube.com/watch?v=YKiMrg6rgYQ"&gt;Mayday五月天 [ 頑固Tough ] Official Music Video - YouTube&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://szlin.me/2016/08/15/%e8%87%aa%e7%94%b1%e9%96%8b%e6%ba%90%e8%bb%9f%e9%ab%94%e6%8e%88%e6%ac%8a%e5%8d%94%e8%ad%b0-open-source-license-%e5%80%8b%e4%ba%ba%e7%ad%86%e8%a8%98/"&gt;自由開源軟體授權協議 (Open source license) 個人筆記 – SZ Lin  &amp;amp; Embedded Linux&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;簡單的整理而已，沒有到很完整。我自己也一直沒有很熟悉各個授權之間的差異。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.s10g.tw/posts/2016/09/09/start-programming/"&gt;Solomon's Notebook – 如何轉換跑道去寫程式&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;遊戲真的讓好多人唸資工喔！做自己喜歡的事情真的是很棒的一件事啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cache&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dbanotes.net/arch/five-minute_rule.html"&gt;关于 I/O 的五分钟法则(Five-Minute Rule) | DBA Notes 闲思录&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;所以是五分鐘內會被重複存取的就存到 cache，不知道公司之前的 memcache rule 設定成每 5 分鐘就清一次是不是這個原因？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.csdn.net/pennyliang/article/details/5903181"&gt;五分钟法则(five minute rules) - pennyliang的专栏 - 博客频道 - CSDN.NET&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Curl&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/356705/how-to-send-a-header-using-a-http-request-through-a-curl-call"&gt;How to send a header using a HTTP request through a curl call? - Stack Overflow&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;最近在公司接手了一個 RESTful API 的 repo，測試的時候需要改 HTTP request HEADER，用 Hackbar 無法改，用 Tamper Data 又太麻煩，還是用 curl 方便，就 &lt;code&gt;--header&lt;/code&gt; 就好了，也很直覺。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Dropbox&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://applehelpwriter.com/2016/07/28/revealing-dropboxs-dirty-little-security-hack/"&gt;revealing Dropbox’s dirty little security hack |&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;非常嚴重的漏洞，看到有人是建議先刪除 Dropbox 桌面版，等升到 macOS 以後再裝回 Dropbox，因為 macOS 的設計可以把這部份擋掉。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Game&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jmechner/Prince-of-Persia-Apple-II"&gt;GitHub - jmechner/Prince-of-Persia-Apple-II: A running-jumping-swordfighting game I made on the Apple II from 1985-89&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Apple II 上風靡一時的波斯王子的原始碼，用 Assembly 寫的。重點是在於人物跑步的動作非常的流暢。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Interview&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rowkey.me/blog/2015/12/31/dev-job-talk/"&gt;研发招聘之殇 - 后端技术杂谈 | 飒然Hang&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是作者面試許多人後給出的意見，我覺得滿中肯的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Soft_Job/M.1473255742.A.ED5.html"&gt;[心得] 台北多家面試心得 - 看板 Soft_Job - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇好多聽過的公司，但 web front-end 的薪水看來普遍還是偏低啊？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://thecodist.com/article/phone-interviews-can-be-so-painful-to-do"&gt;The Codist: Phone Interviews Can Be So Painful To Do&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇怨念超深，作者目前是迪士尼公司的 Lead iOS engineer，抱怨一堆來面試的人連一些很基本的問題都答不出來。雖然我不是 iOS developer 但要引以為戒啊...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Joke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.zhihu.com/question/28976652/answer/42804737"&gt;GitHub 是怎样的一个存在？ - Deep Reader 的回答 - 知乎&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;那個改圖真的是神靠北...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;K8s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.infoworld.com/article/3118345/cloud-computing/why-kubernetes-is-winning-the-container-war.html"&gt;Why Kubernetes is winning the container war | InfoWorld&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://linuxtoy.org/archives/linux-kernel-development-report-2016.html"&gt;Linux Kernel 开发报告 25 周年版 · LinuxTOY&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一些有趣的總結。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linux.com/learn/elementary-os-loki-has-arrived"&gt;Elementary OS Loki Has Arrived | Linux.com | The source for Linux information&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有用過 Elementary OS 一陣子，雖然抄 Mac 抄的很明顯，不過真的算是 UI 比較 friendly 的 Linux distro 了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Open Source&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://breezymove.blogspot.tw/2016/08/blog-post.html"&gt;風吹草動: 世上沒有免費的軟體，自由軟體亦如是（上）&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gnu.org/philosophy/free-sw.en.html"&gt;You should think of 「free」 as in 「free speech,」 not as in 「free beer」&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Free Software 的 Free 是自由而不是免費。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Profiling&lt;/h3&gt;
&lt;p&gt;這邊都還沒仔細看過，覺得 Profiling 又是另外一個大坑，但是很重要的大坑。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zapier.com/engineering/profiling-python-boss/"&gt;Profiling Python Like a Boss - The Zapier Engineering Blog - Zapier&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://julien.danjou.info/blog/2015/guide-to-python-profiling-cprofile-concrete-case-carbonara"&gt;Profiling Python using cProfile: a concrete case | Julien Danjou&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.ionelmc.ro/2013/06/08/python-profiling-tools/"&gt;Python profiling tools | ionel's codelog&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3.5/library/profile.html"&gt;27.4. The Python Profilers — Python 3.5.2 documentation&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.huyng.com/posts/python-performance-analysis"&gt;A guide to analyzing Python performance « Huy Nguyen&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/582336/how-can-you-profile-a-python-script"&gt;performance - How can you profile a Python script? - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MzI0NzIwNDgzNg%3D%3D&amp;amp;mid=2649759701&amp;amp;idx=1&amp;amp;sn=c28214d95f6254ac2f1772aaa181f9f2&amp;amp;scene=2&amp;amp;srcid=0908TIsIeCZ7LjLXYIvnZMn2"&gt;谁说程序员不是潜力股？让这位世界前五名的天才程序员来颠覆你三观！&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;「世界上最大的程序员同性交友网站」GitHub  &lt;/li&gt;
&lt;li&gt;本週看到最勵志的文章。介紹的是一個知名的 Python developer，他最著名的 project 就是寫過 Python 應該都聽過的 &lt;a href="https://github.com/kennethreitz/requests"&gt;requests&lt;/a&gt;，沒想到他曾是個肥宅，真是太激勵人心了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://eev.ee/blog/2016/07/26/the-hardest-problem-in-computer-science/"&gt;The hardest problem in computer science / fuzzy notepad&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;巴別塔。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.wildsky.cc/posts/the-art-of-readable-code/"&gt;【筆記】易讀程式之美學 – 提升程式碼可讀性的簡單法則 (The Art of Readable Code) | Wildsky's wild sky&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;前陣子也有買這本，但還沒看。技術書大概是唯一一種最希望被其他人雷的書了吧。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pylint.readthedocs.io/en/latest/intro.html"&gt;Introduction — Pylint 2.0.0 documentation&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個幫忙檢查 Python code 的工具，包含 error 還有 coding style 等等。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PyCQA/pylint"&gt;GitHub - PyCQA/pylint: A Python source code analyzer which looks for programming errors, helps enforcing a coding standard and sniffs for some code smells&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bugs.python.org/issue27350"&gt;Issue 27350: Compact and ordered dict - Python tracker&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;似乎確定要在 Python 3.6 加入這個 compact ordered dict 了，詳細還不是很瞭解怎麼用。  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://morepypy.blogspot.tw/2015/01/faster-more-memory-efficient-and-more.html"&gt;PyPy Status Blog: Faster, more memory efficient and more ordered dictionaries on PyPy&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sylnsfar/qrcode"&gt;GitHub - sylnsfar/qrcode: artistic QR Code in Python （Animated GIF qr code）- Python 艺术二维码生成器 （GIF动态二维码、图片二维码）&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;誒 這好酷炫喔！之後有需要可能會拿來用用 XD  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install myqr&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Restful&lt;/h3&gt;
&lt;p&gt;最近要開發一個 RESTful API 出來，所以查了一些相關的資源。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/AmigoChan/restful-api-design"&gt;RESTful API Design&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.dj1020.net/%E7%9C%9F%E3%80%82%E6%B7%BA%E8%AB%87_RESTful_API_by_Triton_Ho/"&gt;真。淺談 RESTful API by Triton Ho | 閃亮亮大師之路&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html"&gt;RESTful API 设计指南 - 阮一峰的网络日志&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicolaiarocci/eve"&gt;GitHub - nicolaiarocci/eve: Simple REST APIs&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;based on flask 的 framework，感覺好像也還不錯，以後有機會可能可以用用看。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.miguelgrinberg.com/post/designing-a-restful-api-with-python-and-flask"&gt;Designing a RESTful API with Python and Flask - miguelgrinberg.com&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/RyanMorlok/restful-app-engine"&gt;Restful App Engine&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer"&gt;Representational state transfer - Wikipedia, the free encyclopedia&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Web&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rowkey.me/blog/2016/08/27/server-basic-tech-stack/"&gt;谈谈互联网后端基础设施 - 后端技术杂谈 | 飒然Hang&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇真的寫的很棒，作者把各個部份講的很詳細，看了一下他其他的文章也都覺得滿不錯，雖然是以 Java 為主，但之後有空應該會再看看他部落格的文章。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Work&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jvns.ca/blog/2016/08/16/how-do-you-work-on-something-important/"&gt;How do you decide what to work on? - Julia Evans&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇真的是寫程式開始工作以後會遇到的事，心有戚戚焉。老闆只會開一堆他想做的事情要你完成，至於評估可行性及如何完成完全就是自己要面對的事。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Ptt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/Japan_Travel/M.1386355632.A.851.html"&gt;[分享] 買廉價航空機票前你應該先知道的事 - 看板 Japan_Travel - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;沒搭過廉航，看這篇長知識。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/MuscleBeach/M.1473070754.A.646.html"&gt;[閒聊] 我要成為今年最狂的新娘！ - 看板 MuscleBeach - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這新娘的肌肉真的超壯...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ptt.cc/bbs/C_Chat/M.1473011847.A.083.html"&gt;[閒聊] EVA廚辦婚禮會是什麼樣子？(9/3宴客) - 看板 C_Chat - 批踢踢實業坊&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;真的是超級 Eva 迷 XDDD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Life&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cNTKoe3G9Qo&amp;amp;feature=youtu.be"&gt;papi酱 - 小学一年级到大四毕业 16年学生生涯经典语录120句 - YouTube&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;看來大學之前的生活內容跟臺灣差不多耶，感覺都一樣填鴨。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pansci.asia/archives/105418"&gt;粉刺處理全攻略！A 酸、杜鵑花酸、杏仁酸跟果酸你分得清楚嗎？ - PanSci 泛科學&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;長知識文，但原來粉刺用擠的或用拔的都不行嗎？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.dailycold.tw/11464/%E7%A4%A6%E6%B3%89%E6%B0%B4%E7%82%BA%E4%BB%80%E9%BA%BC%E6%9C%89%E4%BF%9D%E5%AD%98%E6%9C%9F%E9%99%90%EF%BC%9F/"&gt;礦泉水為什麼有保存期限？ – 每日一冷 – 你的冷知識入口&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;長知識，原來保存期限是因為容器而不是水啊。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Sun, 11 Sep 2016 23:18:35 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-09-11:posts/2016/09/11/y2016w36/</guid><category>Curl</category><category>Linux</category><category>Youtube</category><category>Life</category><category>Programming</category><category>Work</category><category>ARRC</category><category>Ptt</category><category>GitHub</category><category>Restful</category><category>Web</category><category>Dropbox</category><category>Profiling</category><category>Blog</category><category>Open Source</category><category>Python</category><category>Programmer</category><category>Interview</category><category>Cache</category><category>K8s</category><category>Trivia</category></item><item><title>Y2016W35</title><link>https://blog.m157q.tw/posts/2016/09/05/y2016w35/</link><description>&lt;hr /&gt;
&lt;p&gt;最近終於把收集連結給 weekly post 使用的程式改的算是堪用了些，&lt;br /&gt;
會把之前幾週漏掉的 weekly post 補上，&lt;br /&gt;
順便複習一下自己之前看了什麼。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Algorithm&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.twword.com/wiki/%E6%8B%9C%E5%8D%A0%E5%BA%AD%E5%B0%87%E8%BB%8D%E5%95%8F%E9%A1%8C"&gt;拜占庭將軍問題 - 台灣 Word&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用來處理點對點通訊的時候的容錯問題，在 COSCUP 2016 的 Docker 進階工作坊聽到的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB"&gt;模擬退火 - 維基百科，自由的百科全書&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用來解決 Travelling salesman problem (TSP) 的其中一種演算法  &lt;/li&gt;
&lt;li&gt;不知道是大學的時候修演算法的時候不認真還是怎樣，知道 TSP 但沒聽過這個演算法。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Compiler&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://slide.logan.tw/compiler-intro/#/2/15"&gt;Introduction to Compiler Development&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這份投影片真的很棒，個人覺得介紹的非常詳細且易懂，重覆看了好幾次。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;GAE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://googleappengine.blogspot.tw/2009/06/10-things-you-probably-didnt-know-about.html"&gt;Google App Engine Blog: 10 things you (probably) didn't know about App Engine&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;2009 年的文章了，雖然年代有點久遠，但這十個看起來現在都還是一樣適用。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/appengine/articles/deadlineexceedederrors"&gt;Dealing with DeadlineExceededErrors|App Engine Documentation|Google&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;公司的 GAE 很常出現這個錯誤訊息，所以查了一下。  &lt;/li&gt;
&lt;li&gt;基本上 &lt;code&gt;DeadlineExceededErrors&lt;/code&gt; 有三種 (Python)，以下直接複製貼上：  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;google.appengine.runtime.DeadlineExceededError&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;raised if the overall request times out, typically after 60 seconds, or 10 minutes for task queue requests.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;google.appengine.runtime.apiproxy_errors.DeadlineExceededError&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;raised if an RPC exceeded its deadline. This is typically 5 seconds, but it is settable for some APIs using the 'deadline' option.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;google.appengine.api.urlfetch_errors.DeadlineExceededError&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;raised if the URLFetch times out.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;這篇講的是第一種。  &lt;/li&gt;
&lt;li&gt;然後通常看到這個第一種錯誤通常都是 API 的效能寫爛了，或是 task queue 裡面的 job 寫爛了卡住。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2016/08/automate-deployments-and-traffic-splitting-with-the-App-Engine-Admin-API.html"&gt;Automate deployments and traffic splitting with the App Engine Admin API&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好像沒用過這個  &lt;/li&gt;
&lt;li&gt;要把 app.yaml 轉成 JSON 啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/appengine/docs/python/microservices-on-app-engine"&gt;Microservices Architecture on Google App Engine|App Engine standard environment&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是官方教你如何使用 GAE 打造 Microservices 的 tutorial，覺得寫的還算詳細。  &lt;/li&gt;
&lt;li&gt;主要是公司目前使用 GCP 最頻繁的服務就是 GAE 的 standard environment，所以想多瞭解一點。  &lt;/li&gt;
&lt;li&gt;底下的連結大都是這篇 tutorial 的額外參考連結  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/appengine/articles/scalability"&gt;Designing for Scale  |  App Engine Documentation  |  Google Cloud Platform&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;2013 年的文章，雖然3年了，但也都還算實用。  &lt;/li&gt;
&lt;li&gt;這篇主要在講使用 GAE 開發要注意哪些事情，否則可能會影響到未來的 scalability，有些的確是看了這篇才知道。  &lt;/li&gt;
&lt;li&gt;雖然看完以後我覺得主要影響的應該是 performance，GAE 畢竟是 PaaS，有些東西是綁死的，所以必須要瞭解一下，否則很容易踩雷。  &lt;/li&gt;
&lt;li&gt;以下直接複製各個要點，點連結看詳細的內容吧。  &lt;ul&gt;
&lt;li&gt;A single entity group in the Datastore should not be updated too rapidly  &lt;/li&gt;
&lt;li&gt;Avoid high write rates to Datastore keys that are lexicographically close  &lt;/li&gt;
&lt;li&gt;Do not set a spending limit that could be exceeded  &lt;/li&gt;
&lt;li&gt;Ensure that you will not hit quota limits on API calls  &lt;/li&gt;
&lt;li&gt;Shard task queues if high throughput is needed  &lt;/li&gt;
&lt;li&gt;Use the default performance settings unless you have tested the impact of changes  &lt;/li&gt;
&lt;li&gt;Use traffic splitting when switching to a new default version  &lt;/li&gt;
&lt;li&gt;Avoid Memcache hot keys  &lt;/li&gt;
&lt;li&gt;Test third-party dependencies  &lt;/li&gt;
&lt;li&gt;Implement backoff on retry  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最近感觸比較深的應該是 datastore 不要拿來做一些 relational 的 query 吧，因為效能真的不好，畢竟是 NoSQL 的東西，還是拿來存 key-value pair 才是比較好的做法。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!topic/google-appengine/DbWfCDmKj90"&gt;Frontend vs Backend Instances for Task/Crons processing - Google Groups&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;有人在論壇發問 Task queue 的 job 是 GAE 的 front-end instance 還是 back-end instance 在處理，底下有人給了解答。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/appengine/articles/best-practices-for-app-engine-memcache"&gt;Best Practices for App Engine Memcache For Thread Safety, Performance, and Code Migration&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;算是 GAE 開發上的一些建議，裏面也有一些討論，其實講的蠻詳細的。  &lt;/li&gt;
&lt;li&gt;看完後會有種，用 PaaS 快是快，但真的要處理效能或是用的順手的話真的要注意很多有的沒的問題。  &lt;/li&gt;
&lt;li&gt;畢竟也是其他人寫出來的產品，如果沒有照著其設計理念去使用的話，多少會遇到一些問題以及用不順手的地方。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudplatform.googleblog.com/2013/12/best-practices-for-app-engine-memcache.html"&gt;Google Cloud Platform Blog: Best practices for App Engine: memcache and eventual vs. strong consistency&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇算是比較艱深的文章  &lt;/li&gt;
&lt;li&gt;基本上在講述 memcache 和 datastore 比較底層的觀念  &lt;/li&gt;
&lt;li&gt;對於兩者的使用情境在效能方面做些說明  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/appengine/docs/python/how-requests-are-routed#routing_via_url"&gt;How Requests are Routed|App Engine standard environment for Python&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇是在講 GAE 的 default routing rules  &lt;/li&gt;
&lt;li&gt;基本上只要 GAE 使用不只一個 service (module) 且每個 service 也不只使用一個 version 都應該瞭解一下  &lt;/li&gt;
&lt;li&gt;和下面提到的 &lt;code&gt;dispatch.yaml&lt;/code&gt; 也有關係  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/appengine/docs/python/config/dispatchref"&gt;dispatch.yaml reference|App Engine standard environment for Python&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;GAE 可以透過設定 &lt;code&gt;dispatch.yaml&lt;/code&gt; 來設定簡單的 routing rule。  &lt;/li&gt;
&lt;li&gt;但有上限的限制  &lt;ul&gt;
&lt;li&gt;最多只能 20 個 rule。  &lt;/li&gt;
&lt;li&gt;指定 URL 路徑時，路徑不得超過 100 字元。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.manejandodatos.es/2014/12/work-front-end-back-end-google-app-engine/"&gt;How to work with Front-end and back-end in Google App Engine - Manejando da&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;介紹 GAE 的 front-end instance 跟 back-end instance  &lt;/li&gt;
&lt;li&gt;其實我用這麼一段時間了還是沒有很理解  &lt;/li&gt;
&lt;li&gt;只大概知道 Front-end instance 負責處理 static files 跟一分鐘內一定要 response，否則使用者會得到 500 Server Error。  &lt;/li&gt;
&lt;li&gt;Back-end instance 就可以拿來負責處理不需要那麼即時性的事務。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;GCP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/peihsinsu/raspberry-pi-fluentd-gcp-cloud-logging-big-query-iot"&gt;使用 Raspberry pi + fluentd + gcp cloud logging, big query 做iot 資料搜集與分析&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;嗯... 好像也沒那麼簡單  &lt;/li&gt;
&lt;li&gt;是說資料視覺化應該也可以接 datalab 吧？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/datalab/docs/quickstarts/quickstart-local"&gt;Run Cloud Datalab locally  |  Google Cloud Datalab  |  Google Cloud Platfor&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Datalab 現在可以在 Local 直接執行了，畢竟它本來就是拿 Jupyter Notebook 去改的，好像也不奇怪？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.jobbole.com/100737/"&gt;編程超過 30 年，我是如何避開倦怠期的？ - 文章 - 伯樂在線&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇是翻譯文，作者是 Andrew Wulf，目前是 Walt Disney 的 Lead iOS Engineer。  &lt;/li&gt;
&lt;li&gt;他的文章都還滿不錯的，&lt;a href="http://thecodist.com/article/phone-interviews-can-be-so-painful-to-do"&gt;有篇在講電話面試的&lt;/a&gt;怨念非常深，因為很多面試者根本啥都沒準備就來面試，讓他覺得根本是在浪費時間。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://waymoot.org/home/python_string/"&gt;Efficient String Concatenation in Python&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;效能最好的方法是使用 &lt;code&gt;''.join([list_comprehension_of_strings])&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;這篇文章已經非常古老，2004 年的文章，用 Python 3 的話差異可能不會這麼大就是。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;SEO&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/startup-grind/seo-is-not-hard-a-step-by-step-seo-tutorial-for-beginners-that-will-get-you-ranked-every-single-1b903b3ab6bb"&gt;SEO is Not Hard — A step-by-step SEO Tutorial for beginners that will get you ranked every single time&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;同事開會要報告 SEO 簡介，剛好就看到這篇，所以順便看一下。  &lt;/li&gt;
&lt;li&gt;文章長度偏長，但裡頭圖文並茂，而且敘述的算蠻有條裡的。  &lt;/li&gt;
&lt;li&gt;算是 SEO 101 的文章吧  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Wikipedia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Representational_state_transfer"&gt;Representational state transfer - Wikipedia, the free encyclopedia&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;縮寫就是 REST。  &lt;/li&gt;
&lt;li&gt;沒錯，就是那個 REST(ful) API 的 REST。  &lt;/li&gt;
&lt;li&gt;然後其實現在弄 API 也有非 Restful API 的選擇了，像是 gRPC, GraphQL 都是最近滿常聽到的選擇。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Wed, 12 Oct 2016 11:18:54 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-09-05:posts/2016/09/05/y2016w35/</guid><category>GCP</category><category>Compiler</category><category>SEO</category><category>Python</category><category>Datalab</category><category>Wikipedia</category><category>Programmer</category><category>Algorithm</category><category>GAE</category></item><item><title>《編程人生》(Coders at Work)</title><link>https://blog.m157q.tw/posts/2016/06/16/coders-at-work/</link><description>&lt;h1&gt;前言&lt;/h1&gt;
&lt;p&gt;其實這篇算重寫一次...&lt;br /&gt;
之前其實有寫好了，&lt;br /&gt;
而且當時已經拖了一個多月，&lt;br /&gt;
但是因為跟 git 還是不夠熟，&lt;br /&gt;
在為了新的 Makefile 做一些新的實驗時，&lt;br /&gt;
不小心把 git repo 搞炸了，&lt;br /&gt;
所以只好重新 clone...&lt;br /&gt;
然後就拖到了現在，&lt;br /&gt;
算起來離看完這本書過了三個月了，&lt;br /&gt;
只好憑印象寫一下心得，&lt;br /&gt;
剛好順便復習一下裡頭的內容。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;心得&lt;/h1&gt;
&lt;p&gt;原文是這本：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.codersatwork.com/"&gt;Coders at Work: Reflections on the Craft of Programming&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;於 2009/09/16 出版  &lt;/p&gt;
&lt;p&gt;但我看的是在若水堂買的簡中翻譯版，分成上下冊兩本：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.waterlike.com.tw/bookdata.asp?NO=TP3C153043"&gt;編程人生：15 位軟件先驅訪談錄 (上卷)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.waterlike.com.tw/bookdata.asp?NO=TP3C153044"&gt;編程人生：15 位軟件先驅訪談錄 (下卷)&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;於 2015/01 出版 （竟然隔了 5 年多才被翻譯，個人覺得有點罕見。）  &lt;/p&gt;
&lt;p&gt;作者總共訪談了 15 位在資訊界都有著極大貢獻的人物，&lt;br /&gt;
上冊的 8 位：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 篇 &lt;a href="http://www.codersatwork.com/jamie-zawinski.html"&gt;Jamie Zawinski&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Mozilla 計劃的先驅及主要貢獻者之一  &lt;/li&gt;
&lt;li&gt;XScreenSaver 的 Contributor  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 2 篇 &lt;a href="http://www.codersatwork.com/brad-fitzpatrick.html"&gt;Brad Fitzpatrick&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;LiveJournal, Memcached, OpenID 的 Owner  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 3 篇 &lt;a href="http://www.codersatwork.com/douglas-crockford.html"&gt;Douglas Crockford&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;"JavaScript: The Good Parts" 的作者  &lt;/li&gt;
&lt;li&gt;Yahoo! 資深 JavaScript 架構師  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 4 篇 &lt;a href="http://www.codersatwork.com/brendan-eich.html"&gt;Brendan Eich&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;JavaScript 之父  &lt;/li&gt;
&lt;li&gt;Mozilla 計劃的共同發起人，當過 Mozilla 的 CTO 和 CEO  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 5 篇 &lt;a href="http://www.codersatwork.com/joshua-bloch.html"&gt;Joshua Bloch&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;"Effective Java" 的作者  &lt;/li&gt;
&lt;li&gt;曾任職於 Sun 和 Google，在 Google 是擔任 Chief Java Architect  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 6 篇 &lt;a href="http://www.codersatwork.com/joe-armstrong.html"&gt;Joe Armstrong&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Erlang 之父  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 7 篇 &lt;a href="http://www.codersatwork.com/simon-peyton-jones.html"&gt;Simon Peyton Jones&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Haskell Contributor, Glasgow Haskell Compiler (GHC) 的主力開發者和架構師  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 8 篇 &lt;a href="http://www.codersatwork.com/peter-norvig.html"&gt;Peter Norvig&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Director of Research at Google  &lt;/li&gt;
&lt;li&gt;co-author, with Stuart Russell, of "Artificial Intelligence: A Modern Approach"  &lt;/li&gt;
&lt;li&gt;was head of the Computational Sciences Division (now the Intelligent Systems Division) at NASA Ames Research Center  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下冊的 7 位：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 篇 &lt;a href="http://www.codersatwork.com/guy-steele.html"&gt;Guy Steele&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Guy_L._Steele_Jr."&gt;https://en.wikipedia.org/wiki/Guy_L._Steele_Jr.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;寫過非常多種程式語言  &lt;/li&gt;
&lt;li&gt;參與過許多程式語言的制定過程，是 Common Lisp 和 Scheme 的作者之一，也參與了 Fortran, C, ECMAScript 的標準制定過程。  &lt;/li&gt;
&lt;li&gt;曾被 Bill Joy 邀請加入 Sun 幫忙訂定 Java 的標準。  &lt;/li&gt;
&lt;li&gt;ACM Grace Murray Hopper Award 1988 年得主。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 2 篇 &lt;a href="http://www.codersatwork.com/dan-ingalls.html"&gt;Dan Ingalls&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Daniel_Henry_Holmes_Ingalls,_Jr."&gt;https://en.wikipedia.org/wiki/Daniel_Henry_Holmes_Ingalls,_Jr.&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;物件導向先驅之一  &lt;/li&gt;
&lt;li&gt;對於 Smalltalk 程式語言貢獻極多，1976 年設計了 bytecoded virtual machine 使得 Smalltalk 得以實作。  &lt;/li&gt;
&lt;li&gt;ACM Grace Murray Hopper Award 1984 年得主。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 3 篇 &lt;a href="http://www.codersatwork.com/l-peter-deutsch.html"&gt;L Peter Deutsch&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/L_Peter_Deutsch"&gt;https://en.wikipedia.org/wiki/L_Peter_Deutsch&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;11 歲開始寫程式，過沒多久就開始在 MIT 閒晃，在 PDP-1 上實作 Lisp，和比自己年紀大了快兩倍的 MIT Hackers 一起寫程式。（有出現在&lt;a href="http://www.books.com.tw/products/0010548392"&gt;《黑客列傳：電腦革命俠客誌》（Hackers: Heroes of the Computer Revolution）&lt;/a&gt; 這本書裏面）  &lt;/li&gt;
&lt;li&gt;在 UC Berkeley 當大二生的時候，他參與了 Project Genie（最早的 minicomputer-based timesharing system 之一），他負責撰寫這個作業系統大部分的 kernel。  &lt;/li&gt;
&lt;li&gt;在 Project Genie 商業化失敗後，他到了 Xerox PARC 這間公司，負責 Interlisp system 和 Smalltalk virtual machine，協助 JIT compilation 技術的部份。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 4 篇 &lt;a href="http://www.codersatwork.com/ken-thompson.html"&gt;Ken Thompson&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Ken_Thompson"&gt;https://en.wikipedia.org/wiki/Ken_Thompson&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;MULTICS, UNIX, B programming language, Plan 9, UTF-8, golang  &lt;/li&gt;
&lt;li&gt;1983 年圖靈獎得主之一 （和 Dennis Ritchie 共同獲得）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 5 篇 &lt;a href="http://www.codersatwork.com/fran-allen.html"&gt;Fran Allen&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Frances_E._Allen"&gt;https://en.wikipedia.org/wiki/Frances_E._Allen&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;2006 年圖靈獎得主  &lt;/li&gt;
&lt;li&gt;在 IBM 待了 45 年，負責一系列的編譯器相關的專案。  &lt;/li&gt;
&lt;li&gt;似乎是這本書的受訪者裡頭唯一一位女性  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 6 篇 &lt;a href="http://www.codersatwork.com/bernie-cosell.html"&gt;Bernie Cosell&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;參與了 ARPANET 早期使用的 IMP (Interface Message Processors) 的實作。  &lt;/li&gt;
&lt;li&gt;在 BBN 待了 26 年，基本上裡面的專案都有碰，因其精湛的除錯技巧，而贏得了 Master debugger 跟 Fixer 的稱號。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第 7 篇 &lt;a href="http://www.codersatwork.com/donald-knuth.html"&gt;Donald Knuth&lt;/a&gt; （高德納）  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Donald_Knuth"&gt;https://en.wikipedia.org/wiki/Donald_Knuth&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;"The Art of Computer Programming" 一書的作者  &lt;/li&gt;
&lt;li&gt;TeX, METAFONT  &lt;/li&gt;
&lt;li&gt;1971 年 Grace Murray Hopper Award 得主、1974 年圖靈獎得主、1995 年 John von Neumann Medal 得主、...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因為作者 Peter Siebel 本身也是會寫程式的人，&lt;br /&gt;
然後對整個圈子的生態和歷史也很瞭解，&lt;br /&gt;
所以問的許多問題都還蠻犀利的，&lt;br /&gt;
除了問每一位受訪者共同的問題，像是：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「你對其他工程師推薦哪些書籍？」  &lt;/li&gt;
&lt;li&gt;「你有看完 The Art of Programming 嗎？你對這本書的想法是什麼？」  &lt;/li&gt;
&lt;li&gt;「你覺得自己應該算是下列哪一項：藝術家？工程師？建築師？專家？程式設計師？」  &lt;/li&gt;
&lt;li&gt;「你覺得數學對於寫程式有沒有幫助？是不是每一位寫程式的人都要會的？」  &lt;/li&gt;
&lt;li&gt;「在你寫程式的生涯中，遇到最棘手的 Bug 是哪類型的？你當時怎麼解決的？」  &lt;/li&gt;
&lt;li&gt;「如果讓你重選一次，你還會寫程式嗎？」（我記得應該有這問題，沒有的話就是我記錯了。）  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中也有針對受訪者詢問不同的軟體工程相關問題：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「你認為 Pair Programming 對於寫程式有沒有幫助？」  &lt;/li&gt;
&lt;li&gt;「你對 Agile Programming, Extreme Programming 和 Waterfall 有什麼看法？」  &lt;/li&gt;
&lt;li&gt;「你認為 unit testing 是不是必須的？」  &lt;/li&gt;
&lt;li&gt;「你對於 Marting Fowler 的《人月神話》和《沒有銀彈》有什麼看法？」  &lt;/li&gt;
&lt;li&gt;「你開發一個程式的時候是習慣 Top-down 還是 Bottom-up？」  &lt;/li&gt;
&lt;li&gt;「接手一個程式的時候你是傾向重寫它還是瞭解之前的人在寫什麼然後試圖修改它？」  &lt;/li&gt;
&lt;li&gt;「你有寫文件的習慣嗎？你覺得寫文件的重要性如何？」  &lt;/li&gt;
&lt;li&gt;「你對 Code Review 有什麼看法？你覺得對開發有幫助嗎？」  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也會針對受訪者問個別的問題：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jamin Zawinski  &lt;ul&gt;
&lt;li&gt;Netscape 和 Firefox 當時的狀況  &lt;/li&gt;
&lt;li&gt;Lisp  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Brad Fitzpatrick  &lt;ul&gt;
&lt;li&gt;LiveJournal, Memcached, OpenID, Go  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Douglas Crockford  &lt;ul&gt;
&lt;li&gt;JavaScript, JSON, JSLint, JSMin, FORTRAN  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Brendan Eich  &lt;ul&gt;
&lt;li&gt;JavaScript 的誕生、設計過程、優缺點以及未來有哪些計劃  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Joshua Bloch  &lt;ul&gt;
&lt;li&gt;Java 還有關於 SUN 和在 Google 的經驗  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Joe Armstrong  &lt;ul&gt;
&lt;li&gt;Erlang 的開發過程和未來的想法  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Simon Peyton Jones  &lt;ul&gt;
&lt;li&gt;Haskell 和開發 GHC 的經驗談  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Peter Norvig  &lt;ul&gt;
&lt;li&gt;NASA, AI, Google  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Guy Steele  &lt;ul&gt;
&lt;li&gt;（忘了）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dan Ingalls  &lt;ul&gt;
&lt;li&gt;（忘了）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;LPeter Deutsch  &lt;ul&gt;
&lt;li&gt;（忘了）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ken Thompson  &lt;ul&gt;
&lt;li&gt;針對 UNIX 的開發還有問一些 Denis Ritchie 的事  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fran Allen  &lt;ul&gt;
&lt;li&gt;（忘了）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bernie Cosell  &lt;ul&gt;
&lt;li&gt;（忘了）  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Donald Knuth  &lt;ul&gt;
&lt;li&gt;問 LaTeX 還有 The Art of Programming  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而且由於受訪者的領域和慣用語言不盡相同，&lt;br /&gt;
所以每個人的想法也都不太一樣，&lt;br /&gt;
但也沒有說誰對誰錯的問題，&lt;br /&gt;
每個人都因為自己的成長過程和人格特質而對寫程式這件事有不同的見解，&lt;br /&gt;
我想這也證明了這個圈子的多元性。  &lt;/p&gt;
&lt;p&gt;但其中也有一致認同的地方，&lt;br /&gt;
像是：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「數學雖然不是必須的，但對寫程式有一定程度以上的幫助。」  &lt;/li&gt;
&lt;li&gt;「寫程式是很花時間及講求經驗的」  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我覺得如果有個把作者問所有受訪者的共同問題和回答整合起來的筆記應該會很有趣。  &lt;/p&gt;
&lt;p&gt;整本書看下來讓我覺得就像是看著作者和受訪者在眼前對談，&lt;br /&gt;
甚至從文字中的描述我就能感受到每位受訪者不同的風格，&lt;br /&gt;
所以我選擇慢慢品嚐，然後就花了兩個月才看完。Orz&lt;br /&gt;
不知道為啥我看程式相關的書籍的速度都特別慢...&lt;br /&gt;
之後應該會選擇看快一點吧，&lt;br /&gt;
反正正常看也是會忘，&lt;br /&gt;
看太慢也是會忘，&lt;br /&gt;
那倒不如看快一點還有機會多看幾次。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.codersatwork.com/"&gt;Coders at Work: Reflections on the Craft of Programming&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Coders_at_work"&gt;Coders at work - Wikipedia, the free encyclopedia&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/PARC_(company)"&gt;PARC (company) - Wikipedia, the free encyclopedia&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ruanyf/status/743420600840912898"&gt;ruanyf on Twitter: "Erlang语言的发明者Armstrong回忆说：“刚进公司时，我喜欢帮别人Debug，同事会买杯啤酒感谢我。后来，我们就用啤酒表示bug的难度，这个是两杯啤酒bug，那个是三杯啤酒bug……” #书摘"&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Thu, 16 Jun 2016 20:54:00 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-06-16:posts/2016/06/16/coders-at-work/</guid><category>Programmer</category><category>Book</category></item></channel></rss>