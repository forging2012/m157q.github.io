<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Just for noting</title><link href="https://blog.m157q.tw/" rel="alternate"></link><link href="https://blog.m157q.tw/feeds/tag.iot.atom.xml" rel="self"></link><id>https://blog.m157q.tw/</id><updated>2017-03-14T22:31:17+08:00</updated><entry><title>Cat System Workshop #17 Full-Stack IoT Development 探索之旅</title><link href="https://blog.m157q.tw/posts/2017/03/14/cat-system-workshop-17-full-stack-iot-development-%E6%8E%A2%E7%B4%A2%E4%B9%8B%E6%97%85/" rel="alternate"></link><published>2017-03-14T22:31:17+08:00</published><updated>2017-03-14T22:31:17+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-03-14:posts/2017/03/14/cat-system-workshop-17-full-stack-iot-development-探索之旅/</id><summary type="html">&lt;p&gt;Speaker: &lt;a href="https://github.com/simenkid"&gt;Simen&lt;/a&gt;@&lt;a href="http://www.sivann.com.tw/"&gt;sivann&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前半段是 IoT Development 相關&lt;br /&gt;
後半段則是 JavaScript Web development 和 Node.js 開發大全  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h3&gt;Google Weave&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/weave/"&gt;https://developers.google.com/weave/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Android Things (Brillo)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://developer.android.com/things/hardware/index.html"&gt;https://developer.android.com/things/hardware/index.html&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;專為 IoT 設計的 OS  &lt;/li&gt;
&lt;li&gt;35 MB RAM  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Apple HomeKit&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;體系相對封閉  &lt;/li&gt;
&lt;li&gt;語音助手 (Siri)  &lt;/li&gt;
&lt;li&gt;認証: MFi  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;iOS (SDK)&lt;br /&gt;
HomeKit API&lt;br /&gt;
HomeKit Accessory Protocol (HAP)  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Eclipse IoT Working Group&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Open Source and Open Standards for IoT  &lt;ul&gt;
&lt;li&gt;New and Existing Devices  &lt;/li&gt;
&lt;li&gt;IoT Gateways  &lt;/li&gt;
&lt;li&gt;Network Carriers  &lt;/li&gt;
&lt;li&gt;Backend Systems  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IoT Suite  &lt;ul&gt;
&lt;li&gt;oneM2M: REST interface  &lt;/li&gt;
&lt;li&gt;OMA LWM2M Server - Leshan  &lt;/li&gt;
&lt;li&gt;Gateway stack - Kura  &lt;/li&gt;
&lt;li&gt;CoAP - Californium (Java)  &lt;/li&gt;
&lt;li&gt;MQTT - Mosquitto/Paho  &lt;ul&gt;
&lt;li&gt;Paho 提供了不同語言實作的 MQTT client  &lt;ul&gt;
&lt;li&gt;有 C++, Java, JavaScript ...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MQTTSN (Eclipse 自己設計的)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Kura - IoT Gateway Stack/ App Framework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Edge Nodes (clients, 連網的裝置)  &lt;ul&gt;
&lt;li&gt;Local Automation  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;M2M Integration Platform  &lt;/li&gt;
&lt;li&gt;Enterprise Interfaces  &lt;ul&gt;
&lt;li&gt;Business Applications (Mobile Apps, Web Apps, ...)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Web Of Things&lt;/h3&gt;
&lt;h4&gt;Google Physical Web&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Eddystone  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Eddystone_(Google)"&gt;https://en.wikipedia.org/wiki/Eddystone_(Google)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/eddystone"&gt;https://github.com/google/eddystone&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/beacons/"&gt;https://developers.google.com/beacons/&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MT7697  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;IoT Platform  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.aylanetworks.com/"&gt;Ayla&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://ubiworx.com/"&gt;ubiworx&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.smartthings.com/"&gt;SAMSUNG SmartThings&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Front-end and Back-end&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Web Front-end  &lt;ul&gt;
&lt;li&gt;Web 1.0  &lt;ul&gt;
&lt;li&gt;F5 刷新  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web 2.0+  &lt;ul&gt;
&lt;li&gt;HTML RSP  &lt;/li&gt;
&lt;li&gt;AJAX  &lt;/li&gt;
&lt;li&gt;HTML5  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://tools.ietf.org/html/rfc6455"&gt;WS (WebSocket)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/2011/WD-eventsource-20110208/"&gt;SSE (Server-Sent Events)&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MVP (Web 2.0+)  &lt;ul&gt;
&lt;li&gt;代表性的案例：jQuery  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MVVM (Framework)  &lt;ul&gt;
&lt;li&gt;V (user), VM (framework), M &amp;lt;---client-side-----------server-side---&amp;gt; M  &lt;/li&gt;
&lt;li&gt;server 一有資料更新就會 push 過來或是背後會一直去跟 server 要資料，所以使用者端會覺得資料是即時的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;React.js  &lt;ul&gt;
&lt;li&gt;使用 JavaScript (JSX) 撰寫 View (React)  &lt;/li&gt;
&lt;li&gt;Virtual DOM  &lt;/li&gt;
&lt;li&gt;Controller View = View + State Machine + Controller  &lt;/li&gt;
&lt;li&gt;單向數據流架構化 (Flux)  &lt;/li&gt;
&lt;li&gt;單一數據源、狀態大總管 (Redux)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web Back-end (JavaScript related)  &lt;ul&gt;
&lt;li&gt;Package Manager  &lt;/li&gt;
&lt;li&gt;Task Runner  &lt;ul&gt;
&lt;li&gt;grunt, gulp, npm, webpack  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pre-compiler Transpiler  &lt;/li&gt;
&lt;li&gt;Linter  &lt;/li&gt;
&lt;li&gt;Utils  &lt;/li&gt;
&lt;li&gt;Bundler  &lt;ul&gt;
&lt;li&gt;webpack, RequireJS (AMD), Browserify (CommonJS)  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dev Server  &lt;ul&gt;
&lt;li&gt;uglify, watchify  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Node.js&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Server-side, JS runtime  &lt;/li&gt;
&lt;li&gt;Async I/O - libuv  &lt;/li&gt;
&lt;li&gt;Concurrenty - Event Loop  &lt;ul&gt;
&lt;li&gt;timers  &lt;/li&gt;
&lt;li&gt;I/O callbacks  &lt;/li&gt;
&lt;li&gt;idle, prepare  &lt;/li&gt;
&lt;li&gt;poll  &lt;/li&gt;
&lt;li&gt;check  &lt;/li&gt;
&lt;li&gt;close callbacks  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://simeneer.blogspot.tw/2016/09/nodejs-eventemitter.html"&gt;https://simeneer.blogspot.tw/2016/09/nodejs-eventemitter.html&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;除錯工具  &lt;ul&gt;
&lt;li&gt;原生除錯工具  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;break;&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ node debug app.js  # c, n, s, o&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第三方工具  &lt;ul&gt;
&lt;li&gt;node-inspector  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ node-debug app.js&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;iron-node  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ iron-node app.js&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;devtool  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ devtool app.js&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IDE 內建的除錯模組  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;除錯訊息與日誌 (Logging)  &lt;ul&gt;
&lt;li&gt;stdout / stderr [+ pipe][+ redirect]  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;console.log();&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;console.error();&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第三方模組  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ npm install debug --save&lt;/code&gt;, &lt;code&gt;$ DEBUG=namespace node app.js&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ npm install winston --save&lt;/code&gt;, &lt;code&gt;$ node app.js&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ npm install bunyan --save&lt;/code&gt;, &lt;code&gt;$ node app.js | bunyan [opts]&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ npm install pino --save&lt;/code&gt;, &lt;code&gt;$ node app.js | pino-&amp;lt;xxx&amp;gt;&lt;/code&gt;  &lt;ul&gt;
&lt;li&gt;號稱 Node.js 的 logging module 裡頭速度最快的  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;intel, log4js, loggly, bole  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;測試框架/工具  &lt;ul&gt;
&lt;li&gt;Hosted CI Services  &lt;ul&gt;
&lt;li&gt;Travis CI, Circle CI, GitLab Ci, wercker, codeship  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Test Framework  &lt;ul&gt;
&lt;li&gt;mocha, jasmie-node, tape, tap  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Assertions  &lt;ul&gt;
&lt;li&gt;assert, should, expect, chai  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Test Double  &lt;ul&gt;
&lt;li&gt;sinon.js  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code Coverage  &lt;ul&gt;
&lt;li&gt;istanbul, JSCover, blanket.js  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;物聯網大亂鬥&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Network Topology  &lt;ul&gt;
&lt;li&gt;p2p  &lt;/li&gt;
&lt;li&gt;star  &lt;ul&gt;
&lt;li&gt;目前的藍芽  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;star-of-star  &lt;/li&gt;
&lt;li&gt;Mesh  &lt;ul&gt;
&lt;li&gt;有自我修復的功能  &lt;/li&gt;
&lt;li&gt;ZigBee  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/ZigBee"&gt;https://en.wikipedia.org/wiki/ZigBee&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;依區域範疇劃分  &lt;ul&gt;
&lt;li&gt;Near Field  &lt;ul&gt;
&lt;li&gt;&amp;lt; 10 cm  &lt;/li&gt;
&lt;li&gt;NFC Forum  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PAN  &lt;ul&gt;
&lt;li&gt;1m ~ 50m  &lt;/li&gt;
&lt;li&gt;Bluetooth, ZigBee, Thread, IEEE 802.15.4  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;LAN  &lt;ul&gt;
&lt;li&gt;50m ~ 1km  &lt;/li&gt;
&lt;li&gt;Wi-Fi, Ethernet  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(LP)WAN  &lt;ul&gt;
&lt;li&gt;1km ~ 50km  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Sigfox"&gt;SigFox&lt;/a&gt;, &lt;a href="http://www.semtech.com/wireless-rf/internet-of-things/what-is-lora/"&gt;LoRa&lt;/a&gt;, 5G, 4G, 3G, Internet  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常見 PAN/WAN 之特性  &lt;ul&gt;
&lt;li&gt;EnOcean  &lt;/li&gt;
&lt;li&gt;ZigBee  &lt;/li&gt;
&lt;li&gt;Thread  &lt;/li&gt;
&lt;li&gt;BLE  &lt;/li&gt;
&lt;li&gt;WiFi  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="IoT"></category><category term="Node.js"></category></entry></feed>