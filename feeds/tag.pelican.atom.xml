<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Just for noting</title><link href="https://blog.m157q.tw/" rel="alternate"></link><link href="https://blog.m157q.tw/feeds/tag.pelican.atom.xml" rel="self"></link><id>https://blog.m157q.tw/</id><updated>2016-05-08T13:00:07+08:00</updated><entry><title>用 Travis CI 自動化發佈 Pelican blog 到 GitHub Pages 上</title><link href="https://blog.m157q.tw/posts/2016/05/08/use-travis-ci-to-publish-pelican-blog-on-github-pages-automatically/" rel="alternate"></link><published>2016-05-08T13:00:07+08:00</published><updated>2016-05-08T13:00:07+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2016-05-08:posts/2016/05/08/use-travis-ci-to-publish-pelican-blog-on-github-pages-automatically/</id><summary type="html">&lt;h1&gt;前言&lt;/h1&gt;
&lt;p&gt;主要的設定都是參考這篇：&lt;a href="http://blog.mathieu-leplatre.info/publish-your-pelican-blog-on-github-pages-via-travis-ci.html"&gt;Publish your Pelican blog on Github pages via Travis-CI&lt;/a&gt;&lt;br /&gt;
不過因為這篇寫於 2014 年的 1 月，&lt;br /&gt;
有些內容已經有點過時了，跟我實際操作起來上有些差異，&lt;br /&gt;
我有在底下留言給作者了，我自己這邊也順便紀錄一下作法。  &lt;/p&gt;
&lt;p&gt;先把最終的設定檔放上來好了  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/m157q.github.io/blob/source/.travis.yml"&gt;.travis.yml&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/m157q.github.io/blob/source/requirements.txt"&gt;requirements.txt&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/m157q.github.io/blob/source/Makefile"&gt;Makefile&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;作法&lt;/h1&gt;
&lt;p&gt;先到 &lt;code&gt;https://travis-ci.org/profile/${your_github_username}&lt;/code&gt; switch on 該 repo  &lt;/p&gt;
&lt;h2&gt;設定 &lt;code&gt;.travis.yml&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;language&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;  
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2.7&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;# Pelican 已支援 Python 3，只是我用到一些 Plugins 仍然只能用 Python 2  &lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;branches&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;only&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  
  &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;source&lt;/span&gt;  &lt;span class="c1"&gt;# 我是把 Pelican 的原始文字檔放在 source 這個 branch  &lt;/span&gt;
            &lt;span class="c1"&gt;# 如果是一般的 project 應該就是用 master branch  &lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;install&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pip install -r requirements.txt&lt;/span&gt;  &lt;span class="c1"&gt;# 這邊其實可以直接寫死 pip install ${package}  &lt;/span&gt;
                                   &lt;span class="c1"&gt;# 使用 requirements.txt 純粹是我個人喜好  &lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;script&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;make travis&lt;/span&gt;  &lt;span class="c1"&gt;# 需要在 Makefile 新增 travis 的 label  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;扣掉空行也不過就 10 行  &lt;/p&gt;
&lt;h2&gt;設定 &lt;code&gt;requirements.txt&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican==3.6.3  
markdown==2.6.6       # 因為我用 Markdown 而不是 reStructuredText 寫 blog  
ghp-import==0.4.1     # 讓你 git add 某個資料夾的內容並將其 commit 到另外一個 branch  
beautifulsoup4==4.4.1 # 我用到的 plugin 需要  
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;設定 &lt;code&gt;Makefile&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;BASEDIR&lt;span class="k"&gt;)&lt;/span&gt;/output  
&lt;span class="nv"&gt;GITHUB_REPO_SLUG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;M157q/m157q.github.io  
&lt;span class="nv"&gt;GITHUB_REMOTE_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;origin  
&lt;span class="nv"&gt;GITHUB_PAGES_BRANCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;master  
&lt;span class="c"&gt;# 以上參數請根據需求自行替換  &lt;/span&gt;
&lt;span class="nv"&gt;GITHUB_COMMIT_MSG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;shell git --no-pager log --format&lt;span class="o"&gt;=&lt;/span&gt;%s -n &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;  

&lt;span class="nf"&gt;travis&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;  
&lt;span class="c"&gt;    # 為 Travis CI 設定 git 的 user.name 和 user.email  &lt;/span&gt;
&lt;span class="c"&gt;    # 沒設定 email 的話，GitHub 上面看到的 Author 會是 Unknown  &lt;/span&gt;
    git config --global user.name &lt;span class="s2"&gt;&amp;quot;M157q - Travis&amp;quot;&lt;/span&gt;  
    git config --global user.email M157q.tw@gmail.com  

&lt;span class="c"&gt;    # 將 Pelican output dir 的內容 commit 到 GitHub Pages 用的 branch，準備 push 上去  &lt;/span&gt;
&lt;span class="c"&gt;    # 因為我用的是 user site，所以 branch 是 master。如果是 project site 的話，branch 會是 gh-pages  &lt;/span&gt;
    ghp-import -n -r &lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_REMOTE_NAME&lt;span class="k"&gt;)&lt;/span&gt; -b &lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_PAGES_BRANCH&lt;span class="k"&gt;)&lt;/span&gt; -m &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_COMMIT_MSG&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt;  

&lt;span class="c"&gt;    # 將剛剛的 commit force push 到 GitHub 上相同的 branch  &lt;/span&gt;
&lt;span class="c"&gt;    # 不用 -f (force push) 的話一定會因為 conflict 而失敗  &lt;/span&gt;
&lt;span class="c"&gt;    # 因為每次 Travis CI build 只會有一個 commit  &lt;/span&gt;
&lt;span class="c"&gt;    # 而且該 branch 只會存一堆靜態檔案，每次變動都很大，沒有啥需要保存 commit log 的必要性。  &lt;/span&gt;
    @git push -fq https://&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GH_TOKEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;@github.com/&lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_REPO_SLUG&lt;span class="k"&gt;)&lt;/span&gt;.git &lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_PAGES_BRANCH&lt;span class="k"&gt;)&lt;/span&gt;:&lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_PAGES_BRANCH&lt;span class="k"&gt;)&lt;/span&gt; &amp;gt; /dev/null  
&lt;span class="c"&gt;    # 用 @ 可以讓 Travis CI 不要顯示這行在 log 上，這樣別人就不會看到你的 GitHub Personal Access Token 了，也就是這裡用的 ${GH_TOKEN}  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;設定 &lt;code&gt;GH_TOKEN&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;先到 &lt;a href="https://github.com/settings/tokens"&gt;https://github.com/settings/tokens&lt;/a&gt; 點選右上方的 &lt;code&gt;Generate new token&lt;/code&gt;&lt;br /&gt;
GitHub 可能會要求輸入密碼，確定現在是本人使用，然後進入 sudo mode。&lt;br /&gt;
填寫 Token description 描述一下這是 Travis CI 要拿來 build Pelican blog 用的，&lt;br /&gt;
主要是給自己看的，怕之後忘記。&lt;br /&gt;
然後 select scopes 就點選 repo 就夠了&lt;br /&gt;
直接移到底下點選 Generate token&lt;br /&gt;
之後就會有一組 GitHub Personal Access Token 可以複製了&lt;br /&gt;
然後我們要將這個 Token 的權限綁到 Travis CI 上，&lt;br /&gt;
讓 Travis CI 有權限將 commit push 到 repo&lt;br /&gt;
這邊有兩種作法，&lt;br /&gt;
一種是直接在 Travis CI 的 Web 介面上設定環境變數（比較簡單），&lt;br /&gt;
另一種是寫在 &lt;code&gt;.travis.yml&lt;/code&gt; 裡頭，但有先透過 travis 將 token 進行加密，&lt;br /&gt;
所以不會在 &lt;code&gt;.travis.yml&lt;/code&gt; 就洩漏 GitHub Personal Access Token（但要輸入一些指令，比較麻煩一點）&lt;br /&gt;
兩種擇一即可，我原本是用 CLI 設定，後來改用 Web Interface 設定。  &lt;/p&gt;
&lt;h3&gt;透過 Travis CI Web Interface 設定&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;到 &lt;code&gt;https://travis-ci.org/${user_name}/${repo_name}&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;移到右手邊的 more options 並點選 settings  &lt;/li&gt;
&lt;li&gt;底下有個 Environment Variables，有 Name 和 Value 兩個欄位  &lt;ul&gt;
&lt;li&gt;在 Name 欄位填上 &lt;code&gt;GH_TOKEN&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;在 Value 欄位貼上剛剛複製的 Token  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;然後點選 Add 即可  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;透過 Travis CI CLI 設定&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;首先必須確認有安裝 &lt;code&gt;travis&lt;/code&gt; 的 CLI tool  &lt;/li&gt;
&lt;li&gt;之後在 terminal 輸入 &lt;code&gt;travis encrypt GH_TOKEN=${your_token} --add&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;就會看到 &lt;code&gt;.travis.yml&lt;/code&gt; 裡頭多了一個 block 顯示類似下面的內容  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  
  &lt;span class="n"&gt;global&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  
    &lt;span class="n"&gt;secure&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;xxxxxxxxxx&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;這樣就行了，之後每次 Travis CI 在跑的時候都會把這串值拿去 decode 並解密成原本的 token。  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;讓 Travis CI 不要在有 PR 的時候重新產生 blog&lt;/h2&gt;
&lt;p&gt;到 &lt;code&gt;https://travis-ci.org/${user_name}/${repo_name}/settings&lt;/code&gt;，&lt;br /&gt;
把 &lt;code&gt;Build pull requests&lt;/code&gt; 那個 switch 切換成 off  &lt;/p&gt;
&lt;h2&gt;測試有沒有成功&lt;/h2&gt;
&lt;p&gt;都設定完的話，&lt;br /&gt;
之後只要把新的 commit push 到 GitHub 上，&lt;br /&gt;
Travis CI 就會自動 build blog 啦~  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.mathieu-leplatre.info/publish-your-pelican-blog-on-github-pages-via-travis-ci.html"&gt;Publish your Pelican blog on Github pages via Travis-CI&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="Travis CI"></category><category term="GitHub Pages"></category><category term="Blog"></category></entry><entry><title>pip install lxml fail in Mac</title><link href="https://blog.m157q.tw/posts/2015/02/04/pip-install-lxml-fail-in-mac/" rel="alternate"></link><published>2015-02-11T04:25:05+08:00</published><updated>2015-02-11T04:25:05+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2015-02-04:posts/2015/02/04/pip-install-lxml-fail-in-mac/</id><summary type="html">&lt;p&gt;While I built up the develope environment for &lt;code&gt;Pelican&lt;/code&gt; on my Mac OSX 10.9,&lt;br /&gt;
I encounterd this problem below:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;included&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lxml&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lxml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;etree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;239&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  

    &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;private&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;folders&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;v2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;td9_yf3x7lv6myk_9cy1_h640000gn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;UkRKm0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lxml&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lxml&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;includes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;  
&lt;span class="n"&gt;tree_defs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;h&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fatal&lt;/span&gt; &lt;span class="nl"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;libxml&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xmlversion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;  

    &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;libxml/xmlversion.h&amp;quot;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Solution&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install libxml2  
$ brew link libxml2 --force  
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;C_INCLUDE_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/Cellar/libxml2/2.9.2/include/libxml2:&lt;span class="nv"&gt;$C_INCLUDE_PATH&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/17857858/fail-to-install-lxml-in-macos-10-8-4"&gt;python - Fail to install lxml in MacOS 10.8.4 - Stack Overflow&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Python"></category><category term="pip"></category><category term="lxml"></category><category term="Mac"></category><category term="Pelican"></category></entry></feed>