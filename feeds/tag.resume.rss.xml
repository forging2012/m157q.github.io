<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Just for noting</title><link>https://blog.m157q.tw/</link><description></description><lastBuildDate>Thu, 18 Jan 2018 18:19:00 +0800</lastBuildDate><item><title>Y2017W06</title><link>https://blog.m157q.tw/posts/2017/02/13/y2017w06/</link><description>&lt;h3&gt;app&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@zonble/our-mac-app-was-rejected-because-we-are-using-swift-3-9f574529945"&gt;Our Mac app was rejected because we are using Swift 3 – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;用 Swift 3 寫 Mac App 會過不了官方 App store 的審核而不能上架，原因是使用了 Private API，但作者確定自己沒有使用任何 Private API，結果作者去追了 source code 以後發現，是 Swift 3 的 library 裏面用到的。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;blog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@rudychin/ph-d-admission-uiuc-cornell-cmu-347827b5af00#.112b14qkm"&gt;[Ph.D. Admission] UIUC / Cornell / CMU – 金廷武 – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;人生勝利組的大學同學發了篇美國名校資工博士申請的心得文  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;django&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django"&gt;Django Web Framework (Python) - Learn web development | MDN&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Mozilla 竟然有 Django 的 Tutorial XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;editor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hungys.xyz/why-i-switched-from-sublime-to-vscode/"&gt;為什麼我從 Sublime Text 跳槽 Visual Studio Code？&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;之前有試用過一下 VS code，覺得算是 GUI editor 裏面我目前用到覺得最好用的吧，光是內建整合 Git 以及 integrated terminal 對我來說就贏很多其他的 GUI editor 了。  &lt;/li&gt;
&lt;li&gt;看了這篇才知道原來 integrated terminal 的點子是台灣人去開 issue 的 XD。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gitlab&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://about.gitlab.com/2017/02/10/postmortem-of-database-outage-of-january-31/"&gt;Postmortem of database outage of January 31 | GitLab&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Gitlab 針對 2017/01/31 誤刪 production db 以及後續的處理和反省做了詳細的紀錄。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gke&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/google-cloud/using-single-docker-repository-with-multiple-gke-projects-1672689f780c"&gt;Using single Docker repository with multiple GKE projects&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;透過把另外一個 GCP project 的 GKE default service account 加入另外一個 GCP project 的 IAM 中，並給予相對應的權限，就能讓後者直接使用前者的 Docker repository，不用每開一個 GCP project 都要重新 build 一次。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;interview&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lnishan.github.io/2017/interview-preparation-101/"&gt;Interview Preparation 101&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;成功面試進入美國 Google Intern 的人的準備心得  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;job&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.techug.com/post/first-two-years-i-work-in-huawei.html"&gt;一位在华为工作2年员工的心路历程 | 程序师&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;華為有這麼操喔？上次在飛機上跟一個華為的工程師聊感覺沒這麼慘耶，還是是因為這篇是上海，但跟我聊天的沒記錯好像是北京？而且他才第1年就四處出差都公司出錢。還是學碩士差別？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hackaday.com/2016/09/04/convert-any-usb-keyboard-to-bluetooth/"&gt;Convert Any USB Keyboard to Bluetooth | Hackaday&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;好酷啊，竟然可以自幹個把 USB 轉成 Bluetooth 的裝置，不過去看了教學影片以後其實還挺麻煩的就是了。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/learning-new-stuff/machine-learning-in-a-year-cdb0b0ebd29c"&gt;Machine Learning in a Year – Learning New Stuff – Medium&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;作者花了一年的時間自學 Machine Learning。開頭就說不一定需要懂數學理論才能開始學。  &lt;/li&gt;
&lt;li&gt;簡體中文版：&lt;a href="http://www.techug.com/post/how-i-learn-machine-learning-in-a-year.html"&gt;我是如何花了一年時間來學機器學習的 | 程序師&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terryum/awesome-deep-learning-papers"&gt;terryum/awesome-deep-learning-papers&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;一個收集跟 Deep Learning 相關論文的 Repo.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;programmer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.wired.com/2017/02/programming-is-the-new-blue-collar-job/"&gt;The Next Big Blue-Collar Job Is Coding | WIRED&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;When I ask people to picture a coder, they usually imagine someone like Mark Zuckerberg: a hoodied college dropout who builds an app in a feverish 72-hour programming jag—with the goal of getting insanely rich and, as they say, “changing the world.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;寫程式的門檻愈降愈低，很多時候不用懂相關理論甚至只要複製貼上再修修改改就能夠寫出一個應用程式，等到人人都會寫程式，像現在勞力付出的藍領階級工作一樣普及的時候，那些純勞力付出的工作可能都已經被機器取代。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/python/cpython"&gt;python/cpython: The Python programming language&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;CPython 的 source code 丟到 GitHub 上哩  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/playpauseandstop/python-3-dot-6-and-performance-a-love-story"&gt;Python 3.6 &amp;amp; Performance. A Love Story&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;關於 Python 3.6 一些新特性的介紹，紀錄一些比較顯著的：  &lt;ul&gt;
&lt;li&gt;PEP 498: f-strings  &lt;/li&gt;
&lt;li&gt;PEP 525: Async generator  &lt;/li&gt;
&lt;li&gt;PEP 530: Async comprehension  &lt;/li&gt;
&lt;li&gt;PEP 526: Variable annotations  &lt;/li&gt;
&lt;li&gt;new &lt;code&gt;dict&lt;/code&gt; implementation  &lt;ul&gt;
&lt;li&gt;參考了 PyPy 的實作，為 dict 的 memory entry 加上 index  &lt;/li&gt;
&lt;li&gt;memory usage 20% ~ 25% smaller comparted to Python 3.5  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;以及比較了執行速度： Python 2.7 &amp;gt; Python 3.6 &amp;gt; Python 3.5，而 Python 3.7 會比 Python 3.6 再快些。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitheis/alog"&gt;keitheis/alog: Python logging for Humans.&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;Python logging for Humans. Your goto logging module without panic on context swtich.  Warning: No more logger = logging.getLogger(&lt;strong&gt;name&lt;/strong&gt;) in your every file.  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;resume&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nickwarm.logdown.com/posts/1402232"&gt;撰寫履歷：如何吸引賞識你的人 « NickWarm's Blog&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;這篇是以中文履歷為主  &lt;/li&gt;
&lt;li&gt;同一個人丟了兩種不同版本的履歷，一個收到感謝函，一個收到面試通知，足見履歷重要性。  &lt;/li&gt;
&lt;li&gt;除了照片、姓名解構、自傳以外我都算認同  &lt;/li&gt;
&lt;li&gt;CakeResume 感覺不錯用  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;security&lt;/h3&gt;
&lt;p&gt;看了第一個 RAT 的工具以後，就把其他相關的也看了一下了。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nathanlopez/Stitch"&gt;nathanlopez/Stitch: Python Remote Administration Tool (RAT)&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Stitch is for education/research purposes only. The author takes NO responsibility and/or liability for how you choose to use any of the tools/source code/any files provided.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sweetsoftware/Ares"&gt;sweetsoftware/Ares: Python botnet and backdoor&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Ares is a Python Remote Access Tool.  Warning: Only use this software according to your current legislation. Misuse of this software can raise legal and ethical issues which I don't support nor can be held responsible for.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ahhh/Reverse_DNS_Shell"&gt;GitHub - ahhh/Reverse_DNS_Shell: A python reverse shell that uses DNS as the c2 channel&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;DNShell v1.7 Description: A Python Reverse Shell that uses DNS as the C2 channel. Requires: dnslib dnspython pycrypto Gotchyas: don't forget to change your HOST don't forget to change your SECRET key run server first Moar Info: &lt;a href="http://lockboxx.blogspot.com/2015/01/python-reverse-dns-shell"&gt;http://lockboxx.blogspot.com/2015/01/python-reverse-dns-shell&lt;/a&gt;.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vesche/basicRAT"&gt;vesche/basicRAT: python remote access trojan&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a Python RAT (Remote Access Trojan), basicRAT was created to maintain a clean design full-featured Python RAT. Currently a work in progress and still being hacked on.  Disclaimer: This RAT is for research purposes only, and should only be used on authorized systems.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/n1nj4sec/pupy"&gt;GitHub - n1nj4sec/pupy: Pupy is an opensource, cross-platform (Windows, Linux, OSX, Android) remote administration and post-exploitation tool mainly written in python&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Pupy is an opensource, multi-platform (Windows, Linux, OSX, Android), multi function RAT (Remote Administration Tool) and post-exploitation tool mainly written in python. It features a all-in-memory execution guideline and leaves very low footprint.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;software engineering&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://arxiv.org/abs/1702.01715"&gt;[1702.01715] Software Engineering at Google&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/pdf/1702.01715.pdf"&gt;1702.01715.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;trivia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.bbc.com/zhongwen/trad/38859981"&gt;你知道英語可以寫成這樣嗎？ - BBC 中文網&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來英文有速記寫法，根本就是蝌蚪文 XD。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;taiwan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://disp.cc/b/163-9SEx"&gt;Re: [問卦] 那些說吻仔魚是各種魚類幼苗的人在想什麼 - Gossiping板 - Disp BBS&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;吻仔魚是沙丁魚魚苗，不好養殖，只能用補抓野生的，因為魚苗很小，所以要用網眼特別小的魚網，捕撈時會連同其他魚的魚苗也一起抓上來，也不可能每個魚苗慢慢挑，進而導致漁業資源枯竭。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ds3d2x8n3szkj73oe8n0.lh.pdis.nat.gov.tw/"&gt;2016/10 立院公聽會 | 電競政策產銷履歷 | hackfoldr&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;原來電競替代役從去年 10 月就開始計劃了啊  &lt;/li&gt;
&lt;li&gt;而且 hackfolder 竟然被引進政府裏面用了嗎？  &lt;/li&gt;
&lt;li&gt;真的是完全公開透明的會議記錄啊  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.storm.mg/lifestyle/220782"&gt;不考幹嘛念？偏鄉免費教程式多年，成大教授：4個錯觀念，害台灣一代比一代笨-教育｜台灣｜偏鄉教育｜教授｜學習｜做孩子的重要他人｜蘇文鈺｜成大資工系｜程式教育-風傳媒-蘇文鈺&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;只學「有用」的學問  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;不唸不會賺錢的科系  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;不培養無法測量的能力  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;考試至上，什麼都要打分數。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;製造相互排擠的世代  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;成績好的人不肯教成績不好的人，怕自己被超越。  &lt;/li&gt;
&lt;li&gt;芬蘭的教育則是從小就讓孩子學會互助合作。  &lt;/li&gt;
&lt;li&gt;成功是靠互助合作，而不是踩著別人的屍骨往上爬。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;教育不該為教育以外的目的服務  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;很多企業開的私立大學都是為了直接培養員工，不太教其他的事。  &lt;/li&gt;
&lt;li&gt;反而很多台灣家長覺得這樣很棒，一畢業就有工作。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Gosu"&gt;Gosu - Wikipedia&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;Gosu (고수) is a Korean term used to refer to a highly skilled person. In computer gaming the term is usually used to refer to a person highly skilled in multiplayer games like StarCraft, Warcraft III (RTS/RPG - DotA), Diablo II (RPG), Counter-Strike (FPS) and others.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;原來 Gosu 在韓文是高手的意思...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">M157q</dc:creator><pubDate>Mon, 13 Feb 2017 01:40:56 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2017-02-13:posts/2017/02/13/y2017w06/</guid><category>app</category><category>blog</category><category>django</category><category>editor</category><category>gitlab</category><category>gke</category><category>interview</category><category>job</category><category>keyboard</category><category>machine learning</category><category>misc</category><category>programmer</category><category>pupy</category><category>python</category><category>resume</category><category>security</category><category>software engineering</category><category>taiwan</category><category>trivia</category></item><item><title>我的新鮮人面試紀錄</title><link>https://blog.m157q.tw/posts/2016/02/12/first-job-interviews/</link><description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;從去年 11/13 開始寫完我的 LinkedIn profile 後，算是開始找工作的起點。&lt;br /&gt;
但過沒多久就發現，LinkedIn 充其量只能當作參考，也不是必要的，最重要的還是 resume。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;LinkedIn 好難用，所以寫了個程式。&lt;/h3&gt;
&lt;p&gt;當時因為覺得 LinkedIn 很難用，&lt;br /&gt;
再加上花了不少時間寫 LinkedIn profile，懶的重寫一份 resume。&lt;br /&gt;
於是異想天開的寫了一個把 LinkedIn profile 轉成 markdown format 的工具:&lt;br /&gt;
&lt;a href="https://github.com/M157q/linkedin2md"&gt;linkedin2md&lt;/a&gt;&lt;br /&gt;
（2017/09/22: 這個 project 因為&lt;a href="https://github.com/M157q/linkedin2md/commit/297f1c3ca0c2d40add957fd735b8bf825268a38b"&gt;一些原因&lt;/a&gt;所以我不再維護了，程式已經不會動了。）&lt;br /&gt;
這樣我就可以偷懶直接用 LinkedIn 生一份 resume 出來。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;公司要的是 Resume，不是 CV。&lt;/h3&gt;
&lt;p&gt;結果當然是個悲劇，&lt;br /&gt;
因為 LinkedIn 上的形式比較像是 CV，紀錄你所有做過的事，&lt;br /&gt;
這對一份 resume 來說實在是太過於雜亂無章且毫無重點可言，&lt;br /&gt;
雖然跟我的經歷也有點關係就是，&lt;br /&gt;
因為一直就是有興趣的東西我就會去碰，所以容易給人一種鼯鼠五技而窮的感覺。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;覺得整理想去的公司好麻煩，乾脆整理在 GitHub 上&lt;/h3&gt;
&lt;p&gt;於是過了一個月，到了十二月中旬，&lt;br /&gt;
才把&lt;a href="https://github.com/M157q/resume/blob/8a70dabbea604ec780c247baa683b1df46d612d4/archives/version-1/resume.pdf"&gt;第一版英文履歷&lt;/a&gt;生了出來。&lt;br /&gt;
之後大概就是往 Web Backend 跟 DevOps 這兩個職位去找，&lt;br /&gt;
並把想投的公司及狀況紀錄在 &lt;a href="https://github.com/M157q/resume/issues"&gt;Issues · M157q/resume · GitHub&lt;/a&gt;。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;透過獵人頭找工作&lt;/h3&gt;
&lt;p&gt;然後又想到之前參加某個 Open Source 的 conf 時，&lt;br /&gt;
看到臺灣有家叫 &lt;a href="https://sudo.com.tw"&gt;sudo&lt;/a&gt; 的新公司，&lt;br /&gt;
專門在幫軟體工程師找工作，&lt;br /&gt;
基本上就是獵人頭這樣。&lt;br /&gt;
於是就到他們網站上用 GitHub 帳號登入，&lt;br /&gt;
把相關資料填一填跟履歷上傳後，&lt;br /&gt;
申請該平台上面的職缺。&lt;br /&gt;
（必須說這平台比 LinkedIn 簡單好用多了，雖然因為是新平台還有蠻多 bug 就是，&lt;br /&gt;
但我有反應的 bug 跟意見他們的工作人員都還蠻快就回覆然後請工程師解決。&lt;br /&gt;
而且 sudo 上的履歷支援 markdown 語法，光是這點我就覺得比 LinkedIn 好用了。&lt;br /&gt;
我一直覺得 LinkedIn 自訂的 description 不能用超連結，只能用純文字 URL 是件很扯的事。）  &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;履歷寫的太爛，被慘電。&lt;/h3&gt;
&lt;p&gt;之後在去年十二月底收到第一個面試通知，&lt;br /&gt;
期間也一直在修改我的履歷，&lt;br /&gt;
尤其是在收到第一個面試通知之前，&lt;br /&gt;
跑去成大當面給 Jserv review 我的第一份 resume 被慘電 3 個小時，&lt;br /&gt;
著實獲益良多。&lt;br /&gt;
詳細內容則紀錄在 &lt;a href="/posts/2016/01/22/how-to-write-a-resume-for-programming-jobs/"&gt;程式設計師的履歷撰寫要點&lt;/a&gt;&lt;br /&gt;
&lt;a href="https://github.com/M157q/resume/blob/8a70dabbea604ec780c247baa683b1df46d612d4/resume.pdf"&gt;最終版本的履歷在此&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;面試紀錄&lt;/h2&gt;
&lt;h3&gt;Tagtoo - 塔圖科技&lt;/h3&gt;
&lt;p&gt;這間是我在 sudo 上自己主動投的，&lt;br /&gt;
主要是之前參加 PyCon 知道這間的 CTO 是 PyCon 的 Staff 之一，&lt;br /&gt;
感覺進去應該可以很開心的寫 Python，&lt;br /&gt;
不過沒想到面試的時候才知道 CTO 已經把整個 team 都帶到另外一間新公司了。&lt;br /&gt;
（這又是另外一個故事了w）  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;應徵職位：Web Backend (Python) Engineer  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/resume/issues/10"&gt;https://github.com/M157q/resume/issues/10&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試時間：2015/12/30 16:00  &lt;/li&gt;
&lt;li&gt;面試地點：台北市光復南路 612 號 5 樓  &lt;/li&gt;
&lt;li&gt;面試官：Teddy (CEO)  &lt;/li&gt;
&lt;li&gt;面試過程  &lt;ul&gt;
&lt;li&gt;Teddy 跟我介紹 Tagtoo 的 Server 架構，說明公司內部會需要用到哪些東西，主要就網站後端用 Python, 前端基本的 JavaScript, HTML, CSS 可能會需要支援，但主要是後端開發。然後 CI 用 Travis, CD 用 Google Cloud Platform。大致介紹完後跟我說明 2016 年的目標是進軍東南亞的廣告市場，因為台灣的市場開發的差不多了，所以會有新的挑戰可以做。過程中都可以隨時提問，我對 server 的架構問了些問題。  &lt;/li&gt;
&lt;li&gt;之後問了我的兵役狀況，就把從常備役變免役的事敘述一遍。然後又問我為什麼沒繼續唸碩士，就把我看到很多學長姊進了 Lab 也沒辦法做自己有興趣的 Project，大部份都是接 Lab 裡的學長姊留下來的論文計劃，或是教授新接的計劃，甚至有些人連為什麼要唸碩士都沒有個明確的目標，就覺得大家都繼續唸上去，就跟著申請跟考試，有了就去唸，當然也有人是因為不想當兵想當研發替代役而唸。我坦白說我現階段對於唸碩士沒有什麼強烈的動機和意願，想先出來工作瞭解業界的情況和會用到的東西，再來看需要學什麼理論，一邊準備托福，之後考慮到美國發展。  &lt;/li&gt;
&lt;li&gt;然後提到了履歷，Teddy 說有先看過我的 GitHub (這點讓我當下小開心了一下) ，然後問我的履歷中印象最深刻及收穫最多的是哪一項，並描述這項事情的內容。我就選了大學時弄的專題，把專題的架構以及各個部份是在負責什麼功能，以及大致上是如何去實作的過程都講了。得到的回應是覺得我還不錯，因為面試過許多工程師都無法清楚描述自己做過的專案。  &lt;/li&gt;
&lt;li&gt;被問到「在做過的事情中，跟專業技能無關的部份遇到的最大困難是什麼？」。就提了大學專題在做上台報告的時候，因為做的東西是比較偏分析類，不像其他組有的做遊戲、有的做嵌入式等等，有成品可以 Demo，所以我這組在報告的時候就顯得頗枯燥乏味，於是深深體會到將專業技術清楚得表達是很重要的一件事。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結果  &lt;ul&gt;
&lt;li&gt;Offer Got  &lt;/li&gt;
&lt;li&gt;60 K * 13  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;17 Media (就做 17 App 的那家)&lt;/h3&gt;
&lt;p&gt;這間是 sudo 那邊把我的履歷投給他們看之後，&lt;br /&gt;
他們覺得有興趣，然後找我去面試的。&lt;br /&gt;
聽到是麻吉大哥的那間 17 App 我也蠻有興趣去面試的，&lt;br /&gt;
原本在他還沒聯絡我的時候我就有在 sudo 上看到，&lt;br /&gt;
但當時看到要寫 Node.js 我就沒打算投了。&lt;br /&gt;
畢竟我 Node.js 只有大學專題的時候自己寫一寫而已。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;應徵職位：API Backend Developer / Cloud System Admin （透過 sudo 投遞）  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/resume/issues/21"&gt;https://github.com/M157q/resume/issues/21&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試時間：2016/01/08 11:30  &lt;/li&gt;
&lt;li&gt;面試地點：台北市信義區信義路五段 2 號 6 F (震旦大樓)  &lt;/li&gt;
&lt;li&gt;面試官：Popo (CEO)  &lt;/li&gt;
&lt;li&gt;面試過程  &lt;ul&gt;
&lt;li&gt;早到五分鐘，不過會議桌好像有人在談生意，所以我就在沙發上稍微等了一下，順便觀察公司環境。環境蠻寬敞明亮的，員工彼此都是坐在好幾張大桌子上，沒有隔版。有大冰箱、一整櫃零食櫃還有咖啡機，放著員工自己想聽的音樂，基本上就是我喜歡的那種新創環境。  &lt;/li&gt;
&lt;li&gt;一開始 Popo 要我自我介紹，我就照履歷上列出來的事情每件稍微講了一下，我邊講他才邊點開連結看，感覺應該沒有事先看過。  &lt;/li&gt;
&lt;li&gt;之後問了我對 Node.js 的熟悉程度，就跟他說大學專題的時候我有自己稍微寫一下，但沒有到很熟。之後聊一聊就說如果之後進去的話，應該就是負責撰寫 API doc 跟調整 Node.js 的部份。  &lt;/li&gt;
&lt;li&gt;之後大致上就是一些閒聊，我也記得不太熟了，就有問他對於 17 App 前陣子染黃有什麼看法和應對，聽到一個我覺得還蠻有趣的答案。在新聞大幅報導過後，他們現在對於色情是完全禁止的，檢查的方法是透過程式定時去擷取實況用戶的畫面，再丟給 Machine Learning 去判斷是否有色情的成份，如果有的話會先暫時停止播放，再經由人工確認，如果確定是色情的話就會直接 ban 掉帳號。  &lt;/li&gt;
&lt;li&gt;然後聊一聊，聊到程序員鼓勵師，還聊到學到了一個新單字，聖人模式的英文叫 "Moment of Clarity"，不要問我為什麼會聊到這個www。走的時候還很讓我到冰箱挑了一瓶飲料，還不錯XD  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結果  &lt;ul&gt;
&lt;li&gt;無聲卡  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Akatsuki - 曉數碼&lt;/h3&gt;
&lt;p&gt;這間也是 sudo 幫我找的，是間日商，在台灣開辦公室。&lt;br /&gt;
真的要特別講一下這間，明明是間外商，也說不要求日文能力，&lt;br /&gt;
可是我交英文履歷過去後，sudo 那邊就跟我說這間的人資需要我交一份中文履歷。&lt;br /&gt;
當下聽到有點傻眼，想說中文履歷大概就這家會要而已，&lt;br /&gt;
而且光寫那份英文履歷就花了我好久的時間，要寫中文的話等於是要重寫，所以我就拒絕。&lt;br /&gt;
之後去面試我有當場確認，的確是這麼一回事，&lt;br /&gt;
人資表示如果確定進入二面的話，就一定得交中文履歷。&lt;br /&gt;
我有當場問原因，人資表示雖然是外商公司，但也不是每位員工都有辦法懂履歷上的英文。&lt;br /&gt;
（其實聽到這裡有點傻眼XDDD）  &lt;/p&gt;
&lt;h4&gt;第一階段&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;應徵職位：Application Engineer / Backend Server Engineer （透過 sudo 投遞）  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/resume/issues/22"&gt;https://github.com/M157q/resume/issues/22&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試時間：2016/01/11 14:00  &lt;/li&gt;
&lt;li&gt;面試地點：松山區南京東路四段16號7樓B  &lt;/li&gt;
&lt;li&gt;面試官：Kana (HR Manager, Eng), ??? (HR, 中文)  &lt;/li&gt;
&lt;li&gt;面試過程  &lt;ul&gt;
&lt;li&gt;兩位人資，一位負責英文面試，另外一位負責中文面試，但不是分開的，兩位會一起面試，所以是一對二這樣。不過老實說我好像是當天才知道要英文面試，忘記當時在忙什麼了，總之當天 sudo 的獵人頭 Jane 告知我面試是英文的，然後我也在當天查到 ptt 上有一位來面試過有發心得，說是要英文面試。不過我大概只有一點點小緊張，對自己的英文口說還算是有點自信，平常有在看美劇，通常只看英文字幕，偶爾有空會練練不看字幕，然後跟著學聽到的口語，雖然有點久沒講就是。（事後證明還是有點生疏XD）  &lt;/li&gt;
&lt;li&gt;英文面試的過程就先要求兩分鐘自我介紹，然後講自己履歷上的事情，然後提到自己的社團平常在做的事，討論課外和資工相關的話題，開社課推廣資訊教育。會去參加開源社群的聚會，認識業界的人士，瞭解開源界的一些最新議題。然後問我說有沒有玩過他們家的遊戲，還有平常有沒有玩手機遊戲或電玩的習慣。然後被問到自己最近 3 年的規劃，就講了下自己打算先工作，瞭解自己的能力與業界的狀況，然後一邊準備托福等等英文考試，之後打算有機會的話往國外發展，主要應該會是美國，但歐洲也有在考慮。之後又被問之後 10 年的計劃，其實也沒有很明確，就講說自己想透過工作確立自己想鑽研的領域，之後繼續不斷學習新的技術和吸收新的理論。  &lt;/li&gt;
&lt;li&gt;英文面試結束後是中文面試，問的內容其實差不多。（其實我不確定是不是中文面試的人資不太懂英文所以需要再問一次，但我也不好意思問。）有多問覺得自己的優缺點是什麼，我就回答自己是屬於那種可以自行摸索並研究實作方法的人，不像大多數同儕屬於被動式的學習。缺點的話就是在對話的當下有時候有些問題不會馬上發問，因為無法確定自己的問題是不是早就已經有答案但只是自己還沒找過。還有自己的個性有點木訥，跟人比較難熟，在團隊合作可能會有一些磨合期。（結果我一說到這裡兩位人資都笑說他們覺得我不像是這種人。是說用英文面試的那位人資經理是日本人，然後也懂中文，真的蠻厲害的。）  &lt;/li&gt;
&lt;li&gt;之後就問我有沒有什麼其他問題要問，我對於人資方面其實沒啥問題問，薪資、福利、工作環境、進修機會這些我其實沒有看的很重，我找的每間公司大概都不會差到哪去，也都是我可接受的範圍。主要還是想看看公司在做的事情我有沒有興趣，然後之後可以學到新的東西或接觸到新的事物的機會多不多。主要想問的還是偏技術和未來發展居多，不過人資就說這方面的問題他們比較無法回答。然後就問了他們覺得跟雷亞遊戲比起來的優缺點還有之後到日本出差或是工作的機會多不多這樣。  &lt;/li&gt;
&lt;li&gt;要離開之前我特地再確認了一次，如果要進入二面的話是不是一定得交中文履歷。人資跟我說「是的」，然後我就走出門了。話說辦公室真的蠻大的，在小巨蛋旁的金融大樓的其中一層，不過缺點就是金融業的抽煙人口真的超多，進出門口就全部都是二手菸，我完全無法忍受。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結果  &lt;ul&gt;
&lt;li&gt;不進入二階面試。原因是覺得我的技能樹跟他們公司的需求不符，還有覺得我稍嫌自信，未來如果進入公司可能在團隊合作上會有問題。  &lt;ul&gt;
&lt;li&gt;技能樹不太 match 的確是事實，不過稍嫌自信我當下怎麼想都想不透，後來覺得是中文履歷的問題，大概是因為我死都不肯寫個中文履歷，覺得之後公司有什麼要求我可能也會據理力爭的不照辦一些事情，會讓他們覺得很麻煩吧？  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;但也是很感謝兩位人資花時間面試我，畢竟這是我人生第一個英文面試。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;VMFive&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;應徵職位：Cloud Engineer in Operation （透過 Referral）  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/resume/issues/14"&gt;https://github.com/M157q/resume/issues/14&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試時間： 2016/01/12 16:00  &lt;/li&gt;
&lt;li&gt;面試地點： 台北市大安區敦化南路二段 105 號 19 樓 B 室  &lt;ul&gt;
&lt;li&gt;這位置超尷尬的，在 4 個捷運站中間  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試官： HR, Patrick, Michael, ?  &lt;/li&gt;
&lt;li&gt;面試過程  &lt;ul&gt;
&lt;li&gt;人資面試  &lt;ul&gt;
&lt;li&gt;就一樣基本的自我介紹，然後人資請我舉出自己的優缺點各 3 個。  &lt;/li&gt;
&lt;li&gt;優點  &lt;ol&gt;
&lt;li&gt;自己有當過 mentor 的經驗  &lt;/li&gt;
&lt;li&gt;有給過演講的經驗而且評價還算不錯，算是能夠清楚的表達技術  &lt;/li&gt;
&lt;li&gt;對於有興趣的東西能夠自己花時間研究並找出實作方法。  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;缺點  &lt;ol&gt;
&lt;li&gt;當下有疑慮的時候不一定會馬上提問，可能會先思考後事後才會提問  &lt;/li&gt;
&lt;li&gt;學習東西的時候常常得瞭解來龍去脈並有一個明確的動機才會的卯起勁去學，否則就會覺得不太有興趣而不想投入時間  &lt;/li&gt;
&lt;li&gt;和人相處比較慢熟，而且不太擅長將事務交代給他人去做。  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;三位 Engineer 面試  &lt;ul&gt;
&lt;li&gt;這應該是我這些面試中最硬的一個面試，問的問題也是最精闢的。  &lt;/li&gt;
&lt;li&gt;一開始就問問我之前在系計中管系上 server 的相關經驗，但對他們公司來說應該不是個很有說服力的經驗，畢竟系上 server 的規模實在太小，而且管 server 的模式是一對一，實在跟真正外面公司在玩的一個人管多個 server 是不一樣的世界。  &lt;/li&gt;
&lt;li&gt;被問到一些問題紀錄一下  &lt;ol&gt;
&lt;li&gt;「如果今天要你一個人管 200 台 server 的話，你會怎麼管？」  &lt;/li&gt;
&lt;li&gt;「如果今天要做到根據流量即時增減 server ，而且無法知道新增加的 server 的 IP 的話，你會如何做到自動化佈署？」  &lt;/li&gt;
&lt;li&gt;「除了用預先設定好的 image 以外，有沒有其他更好的作法？」（因為我上一題回答直接佈署預先設定好的 image，直接跟 central node 溝通就好。）  &lt;/li&gt;
&lt;li&gt;「你對維運比較有興趣？還是開發新功能比較有興趣？」（主要是因為我在面試過程中回答的比較偏向 R&amp;amp;D 而不是 OP，但老實說我的確是對 R&amp;amp;D 要做的事比較有興趣。）  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;結果  &lt;ul&gt;
&lt;li&gt;被出了個後試，就是上面的第 3 題，但自己回去考慮了一陣子後覺得之後不太想做純維運的工作，就回信感謝面試官花時間面試這樣。  &lt;/li&gt;
&lt;li&gt;這間是我面試的公司裏面，我覺得面試的最認真的一間公司，3 個 Engineer 不說，其中一位還是該 Team 的主管，而且問的問題我覺得都蠻有深度的，有些我真的不太熟，答不上來。他們很謹慎的選擇應徵者的能力，還有必須確認應徵者之後真的是想跟他們一起衝的，如果對自己的能力有信心而且對這間公司在做的事情有興趣的話，可以去應徵看看。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;CHOCOLABS - 歐酷網路&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;應徵職位：Cloud Engineer in Operation （透過 Referral）  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/M157q/resume/issues/23"&gt;https://github.com/M157q/resume/issues/23&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試時間： 2016/01/13  &lt;/li&gt;
&lt;li&gt;面試地點： 台北市民權東路三段 142 號 17 樓  &lt;ul&gt;
&lt;li&gt;新辦公室，我面試的時候才剛搬一個禮拜，裝潢都還沒好，印象最深刻的是有一整片的透明玻璃就面對著松山機場，有一排座位和桌子，可以讓你看著飛機起降 coding。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面試官： Darren, Henry, Jerry （三位分開面試）  &lt;/li&gt;
&lt;li&gt;面試過程  &lt;ul&gt;
&lt;li&gt;專案總監 Darren 先跟我聊他們公司目前的狀況、裏面 App 的產品分類以及未來這年的目標。聊完後覺得是我面試中遇到對公司未來的藍圖最有想法的一位，對於公司裏面目前現有 App 的狀況以及之後的發展走向都蠻具體的。  &lt;/li&gt;
&lt;li&gt;首席架構師 Henry 則是問了一些技術相關的問題，大部份都蠻簡單的，例如：「git 有用過 checkout 和開過新的 branch 嗎？」、「你修過軟體工程，那有聽過瀑布開發或其他的開發方式嗎？」不過我在一些比較深入的研究所相關的課程比較吃虧，像被問到有沒有修過「分散式計算」、「機器學習」、「雲端系統」，我就只能摸摸鼻子說沒修過，但有在關注相關的技術。  &lt;/li&gt;
&lt;li&gt;CTO &amp;amp; co-founder Jerry 則是和我聊我如果進去他們公司的話會想要負責哪些部份、薪水、還有問我有沒有其他問題這樣。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;結果  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Offer got 最高給 50 K，但婉拒了。  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;當下是跟對方說回去考慮考慮，然後會再回信告知，後來就寄信婉拒了。雖然上班環境真的蠻棒的，而且因為是 App 團隊的關係，性別比例看起來頗均衡的，但主要是因為是寫 Node.js 我沒有特別喜歡也沒有到很熟，還有因為他們做了很多 App 的關係，讓我覺得之後可能會常常做一些重複性的事情（比如這支 App 寫完要寫下支 App 這樣，後端來講可能差別都不太大，比較有差的大概是前端設計的部份吧？），再加上 pay 略低於我自己的期望，所以就婉拒了這樣。  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;心得&lt;/h2&gt;
&lt;p&gt;人生第一次的面試，&lt;br /&gt;
感覺跟想像中的不太一樣，&lt;br /&gt;
原本腦海中想像的都是大公司那樣的面試，&lt;br /&gt;
必須要準備很多演算法跟資料結構相關的內容，&lt;br /&gt;
然後要過好幾關。  &lt;/p&gt;
&lt;p&gt;我想大概是因為我選的大多是新創的小公司關係吧，&lt;br /&gt;
主要是因為我自己也比較喜歡新創公司的氣氛，&lt;br /&gt;
聽過許多同學朋友在大公司實習或工作的狀況，&lt;br /&gt;
覺得實在沒有很喜歡。&lt;br /&gt;
雖然福利跟薪資就真的都比新創公司來的好，&lt;br /&gt;
自己對大公司的面試雖然沒有到很有把握，&lt;br /&gt;
但也不覺得自己的能力會輸同屆的，&lt;br /&gt;
但就真的不是很喜歡被當小螺絲和被限制要做什麼事情的感覺，&lt;br /&gt;
所以就在選面試公司的時候就挑工作內容自己有興趣的，&lt;br /&gt;
和覺得可以學到東西比較有發展性的新創公司。&lt;br /&gt;
主要是也比較喜歡新創公司自由的風氣啦，&lt;br /&gt;
無論是上下班時間或是請假制度等等。  &lt;/p&gt;
&lt;p&gt;覺得面試比自己想像中的順利很多，&lt;br /&gt;
也意識到自己有許多東西真的學的不夠扎實，&lt;br /&gt;
我想就是透過之後工作的時候邊做邊學吧，&lt;br /&gt;
沒學好的也要花時間來為自己補習一下。  &lt;/p&gt;
&lt;p&gt;不過面試的結果自己覺得倒沒有很好，&lt;br /&gt;
感覺台灣用 Python 的公司真的沒到很多，&lt;br /&gt;
網路業大概就還是 Node.js, PHP 和 Java 居多。&lt;br /&gt;
然後也沒辦法像 Soft_job 版的神人面試二十幾家公司，&lt;br /&gt;
覺得這樣實在是太累了，&lt;br /&gt;
正常來說應該還是挑大概三到五間自己真的有興趣的公司去面試，&lt;br /&gt;
我覺得比較適合，不會太累，找工作的時間也不會拖到太長。  &lt;/p&gt;
&lt;p&gt;是說有個獵人頭幫忙安排面試真的覺得比較輕鬆一點，&lt;br /&gt;
幾乎都不用自己去接洽 HR，&lt;br /&gt;
只要給自己有空的時間請獵人頭幫忙安排就行。&lt;br /&gt;
不過缺點大概就是會被推薦一些自己不是那麼想要的職缺，&lt;br /&gt;
但可以透過跟獵人頭的溝通解決這個問題就是，&lt;br /&gt;
也有可能意外發現自己沒注意到的好職缺也不一定，&lt;br /&gt;
雖然機率可能不高啦？&lt;br /&gt;
我是想說自己身為一個新鮮人，&lt;br /&gt;
多去累積一些不同公司的面試經驗也不錯，&lt;br /&gt;
所以聽聽職缺和在做的事後，&lt;br /&gt;
雖然自己可能覺得不是很 match 該公司的要求也會想去面試看看。&lt;br /&gt;
可能之後找下一份工作的時候就會比較 focus 在特定的範圍，&lt;br /&gt;
然後不透過獵人頭找工作也不一定。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;後記 (2016/05/16)&lt;/h2&gt;
&lt;p&gt;距離這篇文章發佈約莫過了 3 個月，&lt;br /&gt;
比較讓我訝異的是這篇跟我其他的文章比起來好像被頗多人看到的，&lt;br /&gt;
(Jane 跟我說她的同事丟了這篇文章給她看的當下我有點嚇到）&lt;br /&gt;
Google Analytics 看了一下，&lt;br /&gt;
總共 1,452 (565 unique) page views，&lt;br /&gt;
其中有 1,052 (395 unique) 是透過搜尋找到的，&lt;br /&gt;
當初寫這篇文章的時候比較著重在紀錄資訊給以後的自己看，&lt;br /&gt;
其實從大學以來寫 blog 一直都是給自己備忘用的，&lt;br /&gt;
並沒有想要專門寫給別人看，&lt;br /&gt;
但如果剛好能幫助到人也不錯。  &lt;/p&gt;
&lt;p&gt;原本以為這種短短幾個月就有點流量的應該是有人在社群網站 share 之類的，&lt;br /&gt;
但這篇我記得我並沒有 share 到我的 Facebook。&lt;br /&gt;
（我很少 share 自己的文章到自己的 Facebook，&lt;br /&gt;
雖然之前 share 過的幾次的確會讓我這平常沒啥人看的 blog 流量上升不少，&lt;br /&gt;
但其實上面也說了，這不太符合我寫 blog 的本意。）&lt;br /&gt;
沒想到竟然是透過搜尋而找到的佔了 2/3，&lt;br /&gt;
試著自己拿關鍵字去 Google 一下，&lt;br /&gt;
發現根本找不到啊 XDDD&lt;br /&gt;
到底是怎麼搜尋到這篇的？&lt;br /&gt;
是搜到出現有在文章裡面的公司名稱然後加上"面試"的關鍵字嗎？  &lt;/p&gt;
&lt;p&gt;總之，&lt;br /&gt;
能夠寫這麼長的一篇文得謝謝很多人：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;謝謝爸媽讓我在家裡當了快半年的啃老族。  &lt;/li&gt;
&lt;li&gt;謝謝 Jserv 花了一個下午跟我講了很多關於履歷撰寫、面試經驗以及出社會工作應該要具備的心態。  &lt;/li&gt;
&lt;li&gt;謝謝愚笨讓我下去台南找 Jserv 的時候有免費的地方可住。  &lt;/li&gt;
&lt;li&gt;謝謝 Sudo_ 的 Jane，幫了我很多忙，提供給我不少資訊，每個面試前也會打電話提醒我時間，面試後也會打電話來問我狀況如何。  &lt;/li&gt;
&lt;li&gt;謝謝 Tagtoo 的 Teddy 讓我在第一次面試就拿到 Offer 後，還願意等我等了將近一個月，讓我有機會可以多去不同間公司面試。  &lt;/li&gt;
&lt;li&gt;謝謝 Apua 讓我在剛上來台北市工作沒地方住的時候讓我借住了整整一個月，一分錢都沒跟我收。  &lt;/li&gt;
&lt;li&gt;謝謝大慶的 VMFive referral，花時間看了我的履歷，也讓我問了不少問題。  &lt;/li&gt;
&lt;li&gt;謝謝所有願意花時間面試我的人，每一次的面試對我來說都是寶貴的經驗。  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;後記 (2016/11/26)&lt;/h2&gt;
&lt;p&gt;Sudo_ 於 2016/11/20 吹熄燈號了。&lt;br /&gt;
沒想到才過不到一年，&lt;br /&gt;
變化竟然這麼大。&lt;br /&gt;
不禁也想問一下自己，&lt;br /&gt;
工作十個月了，&lt;br /&gt;
自己的能力增長幅度夠大嗎？  &lt;/p&gt;
&lt;p&gt;總之，&lt;br /&gt;
看來下次找工作得自己找了，&lt;br /&gt;
畢竟 LinkedIn 上遇到的 Head Hunter 感覺都普普，&lt;br /&gt;
有種亂槍打鳥的感覺。&lt;br /&gt;
然後我也不會想用傳統人力銀行的服務。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;後記 (2017/09/22)&lt;/h2&gt;
&lt;p&gt;因為以下幾個原因，&lt;br /&gt;
所以我停止維護 &lt;a href="https://github.com/M157q/linkedin2md"&gt;linkedin2md&lt;/a&gt; 這個小程式了。  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;LinkedIn 開始阻擋未登入的連線拿到公開的個人頁面資料  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://news.ycombinator.com/item?id=14891301"&gt;LinkedIn 聲稱未經許可蒐集該網站上個人資料視為違法行為&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;LinkedIn 的網頁格式已經改版許多  &lt;/li&gt;
&lt;li&gt;上面有提到這個小程式其實效用不是那麼大，因為產生出來的 CV 其實也不能直接拿來當作履歷投遞，所以我覺得不值得花時間繼續維護它。  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;就拿這個 &lt;a href="https://github.com/M157q/linkedin2md/commit/297f1c3ca0c2d40add957fd735b8bf825268a38b"&gt;commit&lt;/a&gt; 幫這個小程式畫下句點吧。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;後記 (2018/01/18)&lt;/h2&gt;
&lt;p&gt;在 2017 年 11 月底算是正式從自己的第一份工作離職了，&lt;br /&gt;
離職的心得紀錄在這篇：&lt;a href="/posts/2017/12/26/i-left-my-first-full-time-job/"&gt;我的新鮮人離職紀錄&lt;/a&gt;，&lt;br /&gt;
標題算是與這篇文章的標題呼應吧。  &lt;/p&gt;
&lt;p&gt;其實後來才知道前公司很多比我晚到職的同事都看過這篇文章，&lt;br /&gt;
其實每個人跟我講的當下我都滿開心的，&lt;br /&gt;
雖然我可能沒有喜形於色就是。&lt;br /&gt;
甚至有前同事跟我說「看到這篇文章，覺得這個人好像滿有趣的，如果可以共事應該不錯。」&lt;br /&gt;
總之，如果是要一起當同事的話，&lt;br /&gt;
請敬請期待下一篇面試文章囉，&lt;br /&gt;
最近開始在找工作了。&lt;br /&gt;
之後這篇應該就不會有新的後記了吧 XD  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Thu, 18 Jan 2018 18:19:00 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-02-12:posts/2016/02/12/first-job-interviews/</guid><category>interview</category><category>resume</category><category>job</category></item><item><title>程式設計師的履歷撰寫要點</title><link>https://blog.m157q.tw/posts/2016/01/22/how-to-write-a-resume-for-programming-jobs/</link><description>&lt;p&gt;我覺得這篇可能比較適用於像我這種人：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;對於資工領域的確有熱情  &lt;/li&gt;
&lt;li&gt;會自己去研究和實作有興趣的東西  &lt;/li&gt;
&lt;li&gt;會主動參加 Conferences, meetup, community 聚會  &lt;/li&gt;
&lt;li&gt;覺得每天沒有看到程式碼或是資工相關領域資訊就會覺得不太舒服  &lt;/li&gt;
&lt;li&gt;成績不是書卷獎（對有興趣的主科就會拿很高分，但沒興趣的主科就很低分）  &lt;ul&gt;
&lt;li&gt;對科目的興趣跟成績成強烈的正比  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;競賽表現沒特別突出  &lt;/li&gt;
&lt;li&gt;非常需要在履歷上強調自己除了成績以外的獨特性  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至於不要有錯字、文法要正確、不欺騙等等最基本的原則就不多提了。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;履歷很可能會被印成紙本&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Jserv：「&lt;br /&gt;
有公司會把履歷印成紙本給面試官，&lt;br /&gt;
而不是直接用電子檔。&lt;br /&gt;
不要問我為什麼，&lt;br /&gt;
就是有。&lt;br /&gt;
」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;為了因應這類情況，必須注意下列幾點：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;超連結拿掉底線，避免底線影響閱讀，導致無法辨認連結。  &lt;/li&gt;
&lt;li&gt;超連結的字型請選用可以清楚辨別 0/O, 1/l, ... 的字型。  &lt;/li&gt;
&lt;li&gt;超連結的部份還是得用個藍色，讓人家知道那是個超連結。  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;需要有個 Summary&lt;/h2&gt;
&lt;p&gt;簡述自己在資工方面的專業特質，&lt;br /&gt;
讓看履歷的人能夠很快瞭解你跟其他應徵者的差異，&lt;br /&gt;
並能夠很快被說服為什麼你適合這個職缺。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;在說自己的經歷或自己會哪些東西的時候，請舉實際的例子&lt;/h2&gt;
&lt;p&gt;只說自己用過什麼東西是不夠的。&lt;br /&gt;
請重點描述自己究竟做了什麼事。&lt;br /&gt;
例如修改或改善過哪個開源專案中哪個部份的程式碼，&lt;br /&gt;
描述你解決了什麼 bug，能夠附上 accepted PR 的連結的話更好。&lt;br /&gt;
只寫改善效能是不夠的，快了幾秒，使用者上限增加了多少，請給出數字。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;用數字和實例強調自己的特質&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Jserv：「&lt;br /&gt;
能夠為了工作需求並快速學新技能這個就別寫了，&lt;br /&gt;
如果你這年輕人還辦不到這件事的話，&lt;br /&gt;
那乾脆別找工作了。&lt;br /&gt;
」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你一定有跟別人不同的地方，在履歷上要讓人家看到。&lt;br /&gt;
如果真的沒有到跟所有人都不同，那就把標準放到跟同屆同儕相比，一定有自己的特質。&lt;br /&gt;
如果真的沒有的，那就是悲劇了。  &lt;/p&gt;
&lt;p&gt;切忌在技能與工作內容的描述上只空泛的描述職位做哪些事，例如：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;網頁前端設計  &lt;/li&gt;
&lt;li&gt;撰寫網站後端新功能  &lt;/li&gt;
&lt;li&gt;Linux 伺服器維運  &lt;/li&gt;
&lt;li&gt;演算法及資料結構優化  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;請詳細並取重點的描述工作內容，有數字佐證最好，例如：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改進網頁前端設計，幫助前公司提升了 157 萬的瀏覽人次。  &lt;/li&gt;
&lt;li&gt;網站後端的新功能讓公司的業務操作更加方便，提升了 381 萬的營收。  &lt;/li&gt;
&lt;li&gt;同時維護 689 台 Linux Server 且上線率達到 99%，上好上滿。  &lt;/li&gt;
&lt;li&gt;對程式某部份的的演算法進行優化，原本採用 XX 演算法，觀察並分析使用情境後，改用 YY 演算法，縮短了 50% 的執行時間。  &lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Jserv：「&lt;br /&gt;
你履歷上只寫管 Linux server，隨便一個鳥哥的學生都可以說自己會管 Linux server 啊，&lt;br /&gt;
我從履歷上看不出來你跟那些學生差在哪裡。問題在於你做的多深入，&lt;br /&gt;
你有沒有為了 server 的效能問題去 trace 過 Linux 的 kernel code?&lt;br /&gt;
你有沒有去比較過不同 File System 的差異？甚至改過 File System 的程式碼？&lt;br /&gt;
你管過的 server 規模多大？自己在宿舍架一台桌機也可以叫管 Server，同時管 100 台 server 也叫管 server，但差別很大啊。&lt;br /&gt;
有的話就把他寫上去，而不是只寫管 Server，寫重點才能吸引看你履歷的人，而不是一些很空泛粗淺的敘述。&lt;br /&gt;
」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再從自己的特質去延伸，說明自己的特質可以為這間公司帶來什麼樣的價值。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有帶過人當過 mentor 而且帶的不錯的經驗可以寫出來，因為你應徵的公司非常有可能需要這樣的人。  &lt;/li&gt;
&lt;li&gt;有和其他非技術人員的 Team 良好的溝通經驗也可以寫，尤其如果你對新創公司比較有興趣的話，新創公司非常需要這樣的人。  &lt;ul&gt;
&lt;li&gt;大公司其實也會需要，因為在寫程式的各個過程往往會需要很頻繁的溝通彼此的想法。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有在有點知名度的 conferenece 給過技術型演講的經驗且聽眾反應不錯的話可以寫出來，代表你有辦法好好的表達技術如何實作。  &lt;/li&gt;
&lt;li&gt;有對應徵的職位需要用到或是相關的專案有貢獻的要寫出來，代表你具有修改程式碼的實力，而不是只是嘴炮而已。  &lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Jserv：「&lt;br /&gt;
&lt;a href="https://twitter.com/jserv/status/681429579286761472"&gt;準備個人簡歷不難。對於交大資工的畢業生，只要指出「我不只是個肥宅」，對於成大資訊系的畢業生，只要指出「我為何遠比同學們強」即可。&lt;/a&gt;&lt;br /&gt;
」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;超連結一律放在 references，就像論文的寫法那樣。&lt;/h2&gt;
&lt;p&gt;避免看你的履歷的人看到連結點進去看後，可能就回不來了。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Jserv：「&lt;br /&gt;
誰規定履歷只能一頁的？&lt;br /&gt;
你可以多個一頁 references 放連結啊，&lt;br /&gt;
如果我看完一頁履歷還對你有興趣的話，&lt;br /&gt;
我就會去點 references 裡頭的東西來看看。&lt;br /&gt;
」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;版面大的地方會吸引人的目光&lt;/h2&gt;
&lt;p&gt;如果履歷中有某個 section 的版面佔的比較多的話，&lt;br /&gt;
請確保那部份的內容夠精彩，&lt;br /&gt;
因為在視覺閱讀上來說，&lt;br /&gt;
版面篇幅最大的地方容易讓人最先注意到。&lt;br /&gt;
如果看你履歷的人第一眼看到那部份，&lt;br /&gt;
卻發現用了很多篇幅在講很空泛的描述，&lt;br /&gt;
大概就不會想看下去了，&lt;br /&gt;
所以用字請儘量精簡，&lt;br /&gt;
並確保篇幅佔比較多的內容是有料且吸引人的。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;學生社團的社長不叫 CEO&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Jserv：「&lt;br /&gt;
這年頭，我都會被學生拿出來的名片嚇到。&lt;br /&gt;
社長就叫 CEO、副社長就叫 COO、課程長就叫 CTO、總務就叫 CFO。&lt;br /&gt;
學生社團的 title 不是這樣玩的啦。&lt;br /&gt;
」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你在經歷上寫擔任過社團幹部，稱謂請不要亂用。&lt;br /&gt;
最好還要加上一句話敘述自己在社團做的事跟要應徵的工作有關聯性。&lt;br /&gt;
如果你今天是要應徵軟體工程師，結果你寫自己當過熱舞社社長，跳舞跳的很棒，那不是很怪嗎？  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;面試官尖銳的問題是危機也是轉機&lt;/h2&gt;
&lt;p&gt;面試官可能會針對弱點進行尖銳的詢問，&lt;br /&gt;
要有自己的一套說詞，&lt;br /&gt;
但切忌不可撒謊。  &lt;/p&gt;
&lt;p&gt;履歷跟面試就是在推銷自己，&lt;br /&gt;
人總是會有弱點，&lt;br /&gt;
你可以有自己的一套說詞，&lt;br /&gt;
來巧妙的解釋自己的弱點。  &lt;/p&gt;
&lt;p&gt;比如說：&lt;br /&gt;
面試官問：「為什麼你的這科成績這麼差？」&lt;br /&gt;
回答可能是當時在忙著寫哪些程式，&lt;br /&gt;
或是對同時在學習的其他科目比較有興趣，&lt;br /&gt;
進而壓縮到分配給該科的時間，&lt;br /&gt;
然後舉出花了時間的那方面做了什麼突出的事，&lt;br /&gt;
如果跟應徵的職位有關最好，&lt;br /&gt;
（一般來說應該會跟應徵的職位有關才是，畢竟都已經是根據自己的興趣找工作了，如果不是的話，這篇可能不適用。）&lt;br /&gt;
一方面是轉移注意力，一方面是強調自己所學跟職位 Match，而且可能是學校不教的東西。  &lt;/p&gt;
&lt;p&gt;又可能問：「為什麼你畢業後沒有馬上找工作？」&lt;br /&gt;
可能就可以提在畢業後到找工作這段期間做了什麼跟找工作有關的準備，&lt;br /&gt;
例如：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可能複習了資料結構跟演算法，如果面試官現場考了又能夠回答的很快，就很有說服力。  &lt;/li&gt;
&lt;li&gt;可能貢獻了某個知名的 Open Source project，可以跟面試官分享詳細的心得，如果剛好跟應徵的職位 match 就很好。  &lt;/li&gt;
&lt;li&gt;可能自己寫了什麼 side project，而且的確解決了什麼迫切的問題，也可以在這時候分享。  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;當然如果是把時間花在跟寫程式沾不上邊的，就無法了，&lt;br /&gt;
直接坦承自己沒認真比較好，總之切忌說謊。  &lt;/p&gt;
&lt;p&gt;尖銳的問題是雙面刃，回答的好加上展現實力的話會大大加分和加深面試官對你的印象。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;真正強的人只要一句話&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Jserv：「&lt;br /&gt;
真正強的人只要在面試的時候跟面試官講他有自信為這間公司帶來多少營收，&lt;br /&gt;
面試官問的問題能夠解答，甚至提出進一步的問題反問面試官，&lt;br /&gt;
問到連面試官都答不出來的時候，對面試官說出一句：&lt;br /&gt;
『我可以解決這問題，可以透過 ... 達成，而這就是為什麼貴公司需要錄用我的原因。』&lt;br /&gt;
」  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;後記&lt;/h2&gt;
&lt;p&gt;大概在找完 Jserv 的一個禮拜後，&lt;br /&gt;
在網路上看到了 Skymizer 的這篇文章 &lt;a href="https://blog.skymizer.com/resume2015/"&gt;應徵大作戰，投出你的面試門票！（履歷篇）&lt;/a&gt;&lt;br /&gt;
應該是截至目前為止我看到最接近 Jserv 給我的意見的文章，&lt;br /&gt;
紀錄一下，非常值得閱讀。  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">m157q</dc:creator><pubDate>Tue, 03 Jan 2017 23:12:00 +0800</pubDate><guid isPermaLink="false">tag:blog.m157q.tw,2016-01-22:posts/2016/01/22/how-to-write-a-resume-for-programming-jobs/</guid><category>Resume</category></item></channel></rss>